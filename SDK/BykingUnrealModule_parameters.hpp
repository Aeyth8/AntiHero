#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BykingUnrealModule

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BykingUnrealModule_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "MasterDataModule_structs.hpp"


namespace SDK::Params
{

// Function BykingUnrealModule.ActionBase.BP_ActionDelay
// 0x0020 (0x0020 - 0x0000)
struct ActionBase_BP_ActionDelay final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ActionBase_BP_ActionDelay) == 0x000008, "Wrong alignment on ActionBase_BP_ActionDelay");
static_assert(sizeof(ActionBase_BP_ActionDelay) == 0x000020, "Wrong size on ActionBase_BP_ActionDelay");
static_assert(offsetof(ActionBase_BP_ActionDelay, Duration) == 0x000000, "Member 'ActionBase_BP_ActionDelay::Duration' has a wrong offset!");
static_assert(offsetof(ActionBase_BP_ActionDelay, LatentInfo) == 0x000008, "Member 'ActionBase_BP_ActionDelay::LatentInfo' has a wrong offset!");

// Function BykingUnrealModule.ActionBase.BP_OnAnimNotify
// 0x0010 (0x0010 - 0x0000)
struct ActionBase_BP_OnAnimNotify final
{
public:
	class FName                                   Type;                                              // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Event;                                             // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ActionBase_BP_OnAnimNotify) == 0x000004, "Wrong alignment on ActionBase_BP_OnAnimNotify");
static_assert(sizeof(ActionBase_BP_OnAnimNotify) == 0x000010, "Wrong size on ActionBase_BP_OnAnimNotify");
static_assert(offsetof(ActionBase_BP_OnAnimNotify, Type) == 0x000000, "Member 'ActionBase_BP_OnAnimNotify::Type' has a wrong offset!");
static_assert(offsetof(ActionBase_BP_OnAnimNotify, Event) == 0x000008, "Member 'ActionBase_BP_OnAnimNotify::Event' has a wrong offset!");

// Function BykingUnrealModule.ActionBase.BP_OnBeginAction
// 0x0008 (0x0008 - 0x0000)
struct ActionBase_BP_OnBeginAction final
{
public:
	class FName                                   PrevAction;                                        // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ActionBase_BP_OnBeginAction) == 0x000004, "Wrong alignment on ActionBase_BP_OnBeginAction");
static_assert(sizeof(ActionBase_BP_OnBeginAction) == 0x000008, "Wrong size on ActionBase_BP_OnBeginAction");
static_assert(offsetof(ActionBase_BP_OnBeginAction, PrevAction) == 0x000000, "Member 'ActionBase_BP_OnBeginAction::PrevAction' has a wrong offset!");

// Function BykingUnrealModule.ActionBase.BP_OnEndAction
// 0x0008 (0x0008 - 0x0000)
struct ActionBase_BP_OnEndAction final
{
public:
	class FName                                   NextAction;                                        // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ActionBase_BP_OnEndAction) == 0x000004, "Wrong alignment on ActionBase_BP_OnEndAction");
static_assert(sizeof(ActionBase_BP_OnEndAction) == 0x000008, "Wrong size on ActionBase_BP_OnEndAction");
static_assert(offsetof(ActionBase_BP_OnEndAction, NextAction) == 0x000000, "Member 'ActionBase_BP_OnEndAction::NextAction' has a wrong offset!");

// Function BykingUnrealModule.ActionBase.BP_GetActionName
// 0x0008 (0x0008 - 0x0000)
struct ActionBase_BP_GetActionName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ActionBase_BP_GetActionName) == 0x000004, "Wrong alignment on ActionBase_BP_GetActionName");
static_assert(sizeof(ActionBase_BP_GetActionName) == 0x000008, "Wrong size on ActionBase_BP_GetActionName");
static_assert(offsetof(ActionBase_BP_GetActionName, ReturnValue) == 0x000000, "Member 'ActionBase_BP_GetActionName::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.ActionBase.BP_GetDeltaSeconds
// 0x0004 (0x0004 - 0x0000)
struct ActionBase_BP_GetDeltaSeconds final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ActionBase_BP_GetDeltaSeconds) == 0x000004, "Wrong alignment on ActionBase_BP_GetDeltaSeconds");
static_assert(sizeof(ActionBase_BP_GetDeltaSeconds) == 0x000004, "Wrong size on ActionBase_BP_GetDeltaSeconds");
static_assert(offsetof(ActionBase_BP_GetDeltaSeconds, ReturnValue) == 0x000000, "Member 'ActionBase_BP_GetDeltaSeconds::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.ActionBase.BP_GetOwnerCharacter
// 0x0008 (0x0008 - 0x0000)
struct ActionBase_BP_GetOwnerCharacter final
{
public:
	class ACharacterBase*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ActionBase_BP_GetOwnerCharacter) == 0x000008, "Wrong alignment on ActionBase_BP_GetOwnerCharacter");
static_assert(sizeof(ActionBase_BP_GetOwnerCharacter) == 0x000008, "Wrong size on ActionBase_BP_GetOwnerCharacter");
static_assert(offsetof(ActionBase_BP_GetOwnerCharacter, ReturnValue) == 0x000000, "Member 'ActionBase_BP_GetOwnerCharacter::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.ActionBase.BP_GetSerialNo
// 0x0004 (0x0004 - 0x0000)
struct ActionBase_BP_GetSerialNo final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ActionBase_BP_GetSerialNo) == 0x000004, "Wrong alignment on ActionBase_BP_GetSerialNo");
static_assert(sizeof(ActionBase_BP_GetSerialNo) == 0x000004, "Wrong size on ActionBase_BP_GetSerialNo");
static_assert(offsetof(ActionBase_BP_GetSerialNo, ReturnValue) == 0x000000, "Member 'ActionBase_BP_GetSerialNo::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.ActionBase.BP_IsActive
// 0x0001 (0x0001 - 0x0000)
struct ActionBase_BP_IsActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ActionBase_BP_IsActive) == 0x000001, "Wrong alignment on ActionBase_BP_IsActive");
static_assert(sizeof(ActionBase_BP_IsActive) == 0x000001, "Wrong size on ActionBase_BP_IsActive");
static_assert(offsetof(ActionBase_BP_IsActive, ReturnValue) == 0x000000, "Member 'ActionBase_BP_IsActive::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.ActionBase.BP_IsBootLayer
// 0x0001 (0x0001 - 0x0000)
struct ActionBase_BP_IsBootLayer final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ActionBase_BP_IsBootLayer) == 0x000001, "Wrong alignment on ActionBase_BP_IsBootLayer");
static_assert(sizeof(ActionBase_BP_IsBootLayer) == 0x000001, "Wrong size on ActionBase_BP_IsBootLayer");
static_assert(offsetof(ActionBase_BP_IsBootLayer, ReturnValue) == 0x000000, "Member 'ActionBase_BP_IsBootLayer::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.CharacterBase.HasCharacterStarted
// 0x0001 (0x0001 - 0x0000)
struct CharacterBase_HasCharacterStarted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterBase_HasCharacterStarted) == 0x000001, "Wrong alignment on CharacterBase_HasCharacterStarted");
static_assert(sizeof(CharacterBase_HasCharacterStarted) == 0x000001, "Wrong size on CharacterBase_HasCharacterStarted");
static_assert(offsetof(CharacterBase_HasCharacterStarted, ReturnValue) == 0x000000, "Member 'CharacterBase_HasCharacterStarted::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.OutlineSkeletalMeshComponent.SetBpOutlineType
// 0x0001 (0x0001 - 0x0000)
struct OutlineSkeletalMeshComponent_SetBpOutlineType final
{
public:
	EMeshOutlineType                              Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OutlineSkeletalMeshComponent_SetBpOutlineType) == 0x000001, "Wrong alignment on OutlineSkeletalMeshComponent_SetBpOutlineType");
static_assert(sizeof(OutlineSkeletalMeshComponent_SetBpOutlineType) == 0x000001, "Wrong size on OutlineSkeletalMeshComponent_SetBpOutlineType");
static_assert(offsetof(OutlineSkeletalMeshComponent_SetBpOutlineType, Type) == 0x000000, "Member 'OutlineSkeletalMeshComponent_SetBpOutlineType::Type' has a wrong offset!");

// Function BykingUnrealModule.OutlineSkeletalMeshComponent.SetIsEnableOutline
// 0x0001 (0x0001 - 0x0000)
struct OutlineSkeletalMeshComponent_SetIsEnableOutline final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OutlineSkeletalMeshComponent_SetIsEnableOutline) == 0x000001, "Wrong alignment on OutlineSkeletalMeshComponent_SetIsEnableOutline");
static_assert(sizeof(OutlineSkeletalMeshComponent_SetIsEnableOutline) == 0x000001, "Wrong size on OutlineSkeletalMeshComponent_SetIsEnableOutline");
static_assert(offsetof(OutlineSkeletalMeshComponent_SetIsEnableOutline, bEnable) == 0x000000, "Member 'OutlineSkeletalMeshComponent_SetIsEnableOutline::bEnable' has a wrong offset!");

// Function BykingUnrealModule.OutlineSkeletalMeshComponent.SetOutlineType
// 0x0001 (0x0001 - 0x0000)
struct OutlineSkeletalMeshComponent_SetOutlineType final
{
public:
	EMeshOutlineType                              Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OutlineSkeletalMeshComponent_SetOutlineType) == 0x000001, "Wrong alignment on OutlineSkeletalMeshComponent_SetOutlineType");
static_assert(sizeof(OutlineSkeletalMeshComponent_SetOutlineType) == 0x000001, "Wrong size on OutlineSkeletalMeshComponent_SetOutlineType");
static_assert(offsetof(OutlineSkeletalMeshComponent_SetOutlineType, Type) == 0x000000, "Member 'OutlineSkeletalMeshComponent_SetOutlineType::Type' has a wrong offset!");

// Function BykingUnrealModule.OutlineSkeletalMeshComponent.GetBpOutlineType
// 0x0001 (0x0001 - 0x0000)
struct OutlineSkeletalMeshComponent_GetBpOutlineType final
{
public:
	EMeshOutlineType                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OutlineSkeletalMeshComponent_GetBpOutlineType) == 0x000001, "Wrong alignment on OutlineSkeletalMeshComponent_GetBpOutlineType");
static_assert(sizeof(OutlineSkeletalMeshComponent_GetBpOutlineType) == 0x000001, "Wrong size on OutlineSkeletalMeshComponent_GetBpOutlineType");
static_assert(offsetof(OutlineSkeletalMeshComponent_GetBpOutlineType, ReturnValue) == 0x000000, "Member 'OutlineSkeletalMeshComponent_GetBpOutlineType::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.OutlineSkeletalMeshComponent.GetOutlineType
// 0x0001 (0x0001 - 0x0000)
struct OutlineSkeletalMeshComponent_GetOutlineType final
{
public:
	EMeshOutlineType                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OutlineSkeletalMeshComponent_GetOutlineType) == 0x000001, "Wrong alignment on OutlineSkeletalMeshComponent_GetOutlineType");
static_assert(sizeof(OutlineSkeletalMeshComponent_GetOutlineType) == 0x000001, "Wrong size on OutlineSkeletalMeshComponent_GetOutlineType");
static_assert(offsetof(OutlineSkeletalMeshComponent_GetOutlineType, ReturnValue) == 0x000000, "Member 'OutlineSkeletalMeshComponent_GetOutlineType::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.OutlineSkeletalMeshComponent.IsEnableOutline
// 0x0001 (0x0001 - 0x0000)
struct OutlineSkeletalMeshComponent_IsEnableOutline final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OutlineSkeletalMeshComponent_IsEnableOutline) == 0x000001, "Wrong alignment on OutlineSkeletalMeshComponent_IsEnableOutline");
static_assert(sizeof(OutlineSkeletalMeshComponent_IsEnableOutline) == 0x000001, "Wrong size on OutlineSkeletalMeshComponent_IsEnableOutline");
static_assert(offsetof(OutlineSkeletalMeshComponent_IsEnableOutline, ReturnValue) == 0x000000, "Member 'OutlineSkeletalMeshComponent_IsEnableOutline::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.EnhancedSkeletalMeshComponent.FreezeBone
// 0x000C (0x000C - 0x0000)
struct EnhancedSkeletalMeshComponent_FreezeBone final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFreeze;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EnhancedSkeletalMeshComponent_FreezeBone) == 0x000004, "Wrong alignment on EnhancedSkeletalMeshComponent_FreezeBone");
static_assert(sizeof(EnhancedSkeletalMeshComponent_FreezeBone) == 0x00000C, "Wrong size on EnhancedSkeletalMeshComponent_FreezeBone");
static_assert(offsetof(EnhancedSkeletalMeshComponent_FreezeBone, BoneName) == 0x000000, "Member 'EnhancedSkeletalMeshComponent_FreezeBone::BoneName' has a wrong offset!");
static_assert(offsetof(EnhancedSkeletalMeshComponent_FreezeBone, bFreeze) == 0x000008, "Member 'EnhancedSkeletalMeshComponent_FreezeBone::bFreeze' has a wrong offset!");

// Function BykingUnrealModule.HttpChunkBPFunctionLibrary.GetBundleAssets
// 0x0028 (0x0028 - 0x0000)
struct HttpChunkBPFunctionLibrary_GetBundleAssets final
{
public:
	struct FPrimaryAssetId                        BundleScope;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BundleName;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSoftObjectPath>                ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpChunkBPFunctionLibrary_GetBundleAssets) == 0x000008, "Wrong alignment on HttpChunkBPFunctionLibrary_GetBundleAssets");
static_assert(sizeof(HttpChunkBPFunctionLibrary_GetBundleAssets) == 0x000028, "Wrong size on HttpChunkBPFunctionLibrary_GetBundleAssets");
static_assert(offsetof(HttpChunkBPFunctionLibrary_GetBundleAssets, BundleScope) == 0x000000, "Member 'HttpChunkBPFunctionLibrary_GetBundleAssets::BundleScope' has a wrong offset!");
static_assert(offsetof(HttpChunkBPFunctionLibrary_GetBundleAssets, BundleName) == 0x000010, "Member 'HttpChunkBPFunctionLibrary_GetBundleAssets::BundleName' has a wrong offset!");
static_assert(offsetof(HttpChunkBPFunctionLibrary_GetBundleAssets, ReturnValue) == 0x000018, "Member 'HttpChunkBPFunctionLibrary_GetBundleAssets::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.HttpChunkBPFunctionLibrary.GetChunkLocation
// 0x0018 (0x0018 - 0x0000)
struct HttpChunkBPFunctionLibrary_GetChunkLocation final
{
public:
	int32                                         ChunkId;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpChunkBPFunctionLibrary_GetChunkLocation) == 0x000008, "Wrong alignment on HttpChunkBPFunctionLibrary_GetChunkLocation");
static_assert(sizeof(HttpChunkBPFunctionLibrary_GetChunkLocation) == 0x000018, "Wrong size on HttpChunkBPFunctionLibrary_GetChunkLocation");
static_assert(offsetof(HttpChunkBPFunctionLibrary_GetChunkLocation, ChunkId) == 0x000000, "Member 'HttpChunkBPFunctionLibrary_GetChunkLocation::ChunkId' has a wrong offset!");
static_assert(offsetof(HttpChunkBPFunctionLibrary_GetChunkLocation, ReturnValue) == 0x000008, "Member 'HttpChunkBPFunctionLibrary_GetChunkLocation::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.HttpChunkBPFunctionLibrary.GetChunkProgress
// 0x000C (0x000C - 0x0000)
struct HttpChunkBPFunctionLibrary_GetChunkProgress final
{
public:
	int32                                         ChunkId;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsETA;                                             // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpChunkBPFunctionLibrary_GetChunkProgress) == 0x000004, "Wrong alignment on HttpChunkBPFunctionLibrary_GetChunkProgress");
static_assert(sizeof(HttpChunkBPFunctionLibrary_GetChunkProgress) == 0x00000C, "Wrong size on HttpChunkBPFunctionLibrary_GetChunkProgress");
static_assert(offsetof(HttpChunkBPFunctionLibrary_GetChunkProgress, ChunkId) == 0x000000, "Member 'HttpChunkBPFunctionLibrary_GetChunkProgress::ChunkId' has a wrong offset!");
static_assert(offsetof(HttpChunkBPFunctionLibrary_GetChunkProgress, IsETA) == 0x000004, "Member 'HttpChunkBPFunctionLibrary_GetChunkProgress::IsETA' has a wrong offset!");
static_assert(offsetof(HttpChunkBPFunctionLibrary_GetChunkProgress, ReturnValue) == 0x000008, "Member 'HttpChunkBPFunctionLibrary_GetChunkProgress::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.HttpChunkBPFunctionLibrary.GetInstallSpeed
// 0x0010 (0x0010 - 0x0000)
struct HttpChunkBPFunctionLibrary_GetInstallSpeed final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HttpChunkBPFunctionLibrary_GetInstallSpeed) == 0x000008, "Wrong alignment on HttpChunkBPFunctionLibrary_GetInstallSpeed");
static_assert(sizeof(HttpChunkBPFunctionLibrary_GetInstallSpeed) == 0x000010, "Wrong size on HttpChunkBPFunctionLibrary_GetInstallSpeed");
static_assert(offsetof(HttpChunkBPFunctionLibrary_GetInstallSpeed, ReturnValue) == 0x000000, "Member 'HttpChunkBPFunctionLibrary_GetInstallSpeed::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.HttpChunkBPFunctionLibrary.PrioritizeChunk
// 0x0008 (0x0008 - 0x0000)
struct HttpChunkBPFunctionLibrary_PrioritizeChunk final
{
public:
	int32                                         ChunkId;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpChunkBPFunctionLibrary_PrioritizeChunk) == 0x000004, "Wrong alignment on HttpChunkBPFunctionLibrary_PrioritizeChunk");
static_assert(sizeof(HttpChunkBPFunctionLibrary_PrioritizeChunk) == 0x000008, "Wrong size on HttpChunkBPFunctionLibrary_PrioritizeChunk");
static_assert(offsetof(HttpChunkBPFunctionLibrary_PrioritizeChunk, ChunkId) == 0x000000, "Member 'HttpChunkBPFunctionLibrary_PrioritizeChunk::ChunkId' has a wrong offset!");
static_assert(offsetof(HttpChunkBPFunctionLibrary_PrioritizeChunk, ReturnValue) == 0x000004, "Member 'HttpChunkBPFunctionLibrary_PrioritizeChunk::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.HttpChunkBPFunctionLibrary.SetInstallSpeed
// 0x0008 (0x0008 - 0x0000)
struct HttpChunkBPFunctionLibrary_SetInstallSpeed final
{
public:
	int32                                         Type;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HttpChunkBPFunctionLibrary_SetInstallSpeed) == 0x000004, "Wrong alignment on HttpChunkBPFunctionLibrary_SetInstallSpeed");
static_assert(sizeof(HttpChunkBPFunctionLibrary_SetInstallSpeed) == 0x000008, "Wrong size on HttpChunkBPFunctionLibrary_SetInstallSpeed");
static_assert(offsetof(HttpChunkBPFunctionLibrary_SetInstallSpeed, Type) == 0x000000, "Member 'HttpChunkBPFunctionLibrary_SetInstallSpeed::Type' has a wrong offset!");
static_assert(offsetof(HttpChunkBPFunctionLibrary_SetInstallSpeed, ReturnValue) == 0x000004, "Member 'HttpChunkBPFunctionLibrary_SetInstallSpeed::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.MathStatics.BP_CheckNearlyZeroVector
// 0x0010 (0x0010 - 0x0000)
struct MathStatics_BP_CheckNearlyZeroVector final
{
public:
	struct FVector                                InVector;                                          // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MathStatics_BP_CheckNearlyZeroVector) == 0x000004, "Wrong alignment on MathStatics_BP_CheckNearlyZeroVector");
static_assert(sizeof(MathStatics_BP_CheckNearlyZeroVector) == 0x000010, "Wrong size on MathStatics_BP_CheckNearlyZeroVector");
static_assert(offsetof(MathStatics_BP_CheckNearlyZeroVector, InVector) == 0x000000, "Member 'MathStatics_BP_CheckNearlyZeroVector::InVector' has a wrong offset!");
static_assert(offsetof(MathStatics_BP_CheckNearlyZeroVector, ReturnValue) == 0x00000C, "Member 'MathStatics_BP_CheckNearlyZeroVector::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.MathStatics.BP_CheckZeroVector
// 0x0010 (0x0010 - 0x0000)
struct MathStatics_BP_CheckZeroVector final
{
public:
	struct FVector                                InVector;                                          // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MathStatics_BP_CheckZeroVector) == 0x000004, "Wrong alignment on MathStatics_BP_CheckZeroVector");
static_assert(sizeof(MathStatics_BP_CheckZeroVector) == 0x000010, "Wrong size on MathStatics_BP_CheckZeroVector");
static_assert(offsetof(MathStatics_BP_CheckZeroVector, InVector) == 0x000000, "Member 'MathStatics_BP_CheckZeroVector::InVector' has a wrong offset!");
static_assert(offsetof(MathStatics_BP_CheckZeroVector, ReturnValue) == 0x00000C, "Member 'MathStatics_BP_CheckZeroVector::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.MyBlueprintFunctionLibrary.IsEditor
// 0x0001 (0x0001 - 0x0000)
struct MyBlueprintFunctionLibrary_IsEditor final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MyBlueprintFunctionLibrary_IsEditor) == 0x000001, "Wrong alignment on MyBlueprintFunctionLibrary_IsEditor");
static_assert(sizeof(MyBlueprintFunctionLibrary_IsEditor) == 0x000001, "Wrong size on MyBlueprintFunctionLibrary_IsEditor");
static_assert(offsetof(MyBlueprintFunctionLibrary_IsEditor, ReturnValue) == 0x000000, "Member 'MyBlueprintFunctionLibrary_IsEditor::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.MyBlueprintFunctionLibrary.IsGameLocalizationPreviewEnabled
// 0x0001 (0x0001 - 0x0000)
struct MyBlueprintFunctionLibrary_IsGameLocalizationPreviewEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MyBlueprintFunctionLibrary_IsGameLocalizationPreviewEnabled) == 0x000001, "Wrong alignment on MyBlueprintFunctionLibrary_IsGameLocalizationPreviewEnabled");
static_assert(sizeof(MyBlueprintFunctionLibrary_IsGameLocalizationPreviewEnabled) == 0x000001, "Wrong size on MyBlueprintFunctionLibrary_IsGameLocalizationPreviewEnabled");
static_assert(offsetof(MyBlueprintFunctionLibrary_IsGameLocalizationPreviewEnabled, ReturnValue) == 0x000000, "Member 'MyBlueprintFunctionLibrary_IsGameLocalizationPreviewEnabled::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.MyBlueprintFunctionLibrary.SetLocalizationPreviewLanguage
// 0x0010 (0x0010 - 0x0000)
struct MyBlueprintFunctionLibrary_SetLocalizationPreviewLanguage final
{
public:
	class FString                                 InCulture;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MyBlueprintFunctionLibrary_SetLocalizationPreviewLanguage) == 0x000008, "Wrong alignment on MyBlueprintFunctionLibrary_SetLocalizationPreviewLanguage");
static_assert(sizeof(MyBlueprintFunctionLibrary_SetLocalizationPreviewLanguage) == 0x000010, "Wrong size on MyBlueprintFunctionLibrary_SetLocalizationPreviewLanguage");
static_assert(offsetof(MyBlueprintFunctionLibrary_SetLocalizationPreviewLanguage, InCulture) == 0x000000, "Member 'MyBlueprintFunctionLibrary_SetLocalizationPreviewLanguage::InCulture' has a wrong offset!");

// Function BykingUnrealModule.MyBlueprintFunctionLibrary.StringArraySort
// 0x0018 (0x0018 - 0x0000)
struct MyBlueprintFunctionLibrary_StringArraySort final
{
public:
	TArray<class FString>                         In;                                                // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bReverse;                                          // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MyBlueprintFunctionLibrary_StringArraySort) == 0x000008, "Wrong alignment on MyBlueprintFunctionLibrary_StringArraySort");
static_assert(sizeof(MyBlueprintFunctionLibrary_StringArraySort) == 0x000018, "Wrong size on MyBlueprintFunctionLibrary_StringArraySort");
static_assert(offsetof(MyBlueprintFunctionLibrary_StringArraySort, In) == 0x000000, "Member 'MyBlueprintFunctionLibrary_StringArraySort::In' has a wrong offset!");
static_assert(offsetof(MyBlueprintFunctionLibrary_StringArraySort, bReverse) == 0x000010, "Member 'MyBlueprintFunctionLibrary_StringArraySort::bReverse' has a wrong offset!");

// Function BykingUnrealModule.PlatformSubsystem.GetPlatform
// 0x0001 (0x0001 - 0x0000)
struct PlatformSubsystem_GetPlatform final
{
public:
	EPlatform                                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlatformSubsystem_GetPlatform) == 0x000001, "Wrong alignment on PlatformSubsystem_GetPlatform");
static_assert(sizeof(PlatformSubsystem_GetPlatform) == 0x000001, "Wrong size on PlatformSubsystem_GetPlatform");
static_assert(offsetof(PlatformSubsystem_GetPlatform, ReturnValue) == 0x000000, "Member 'PlatformSubsystem_GetPlatform::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.PlatformSubsystem.GetPlatformInputController
// 0x0002 (0x0002 - 0x0000)
struct PlatformSubsystem_GetPlatformInputController final
{
public:
	bool                                          OutLog;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPlatform                                     ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlatformSubsystem_GetPlatformInputController) == 0x000001, "Wrong alignment on PlatformSubsystem_GetPlatformInputController");
static_assert(sizeof(PlatformSubsystem_GetPlatformInputController) == 0x000002, "Wrong size on PlatformSubsystem_GetPlatformInputController");
static_assert(offsetof(PlatformSubsystem_GetPlatformInputController, OutLog) == 0x000000, "Member 'PlatformSubsystem_GetPlatformInputController::OutLog' has a wrong offset!");
static_assert(offsetof(PlatformSubsystem_GetPlatformInputController, ReturnValue) == 0x000001, "Member 'PlatformSubsystem_GetPlatformInputController::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.PlatformSubsystem.SetFlagFloatingGamePadTextInputCmd
// 0x0010 (0x0010 - 0x0000)
struct PlatformSubsystem_SetFlagFloatingGamePadTextInputCmd final
{
public:
	TArray<class FString>                         Args;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlatformSubsystem_SetFlagFloatingGamePadTextInputCmd) == 0x000008, "Wrong alignment on PlatformSubsystem_SetFlagFloatingGamePadTextInputCmd");
static_assert(sizeof(PlatformSubsystem_SetFlagFloatingGamePadTextInputCmd) == 0x000010, "Wrong size on PlatformSubsystem_SetFlagFloatingGamePadTextInputCmd");
static_assert(offsetof(PlatformSubsystem_SetFlagFloatingGamePadTextInputCmd, Args) == 0x000000, "Member 'PlatformSubsystem_SetFlagFloatingGamePadTextInputCmd::Args' has a wrong offset!");

// Function BykingUnrealModule.PlatformSubsystem.SetFlagOverrideTextInputCmd
// 0x0010 (0x0010 - 0x0000)
struct PlatformSubsystem_SetFlagOverrideTextInputCmd final
{
public:
	TArray<class FString>                         Args;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlatformSubsystem_SetFlagOverrideTextInputCmd) == 0x000008, "Wrong alignment on PlatformSubsystem_SetFlagOverrideTextInputCmd");
static_assert(sizeof(PlatformSubsystem_SetFlagOverrideTextInputCmd) == 0x000010, "Wrong size on PlatformSubsystem_SetFlagOverrideTextInputCmd");
static_assert(offsetof(PlatformSubsystem_SetFlagOverrideTextInputCmd, Args) == 0x000000, "Member 'PlatformSubsystem_SetFlagOverrideTextInputCmd::Args' has a wrong offset!");

// Function BykingUnrealModule.PlatformSubsystem.SetTextFieldHeightCmd
// 0x0010 (0x0010 - 0x0000)
struct PlatformSubsystem_SetTextFieldHeightCmd final
{
public:
	TArray<class FString>                         Args;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlatformSubsystem_SetTextFieldHeightCmd) == 0x000008, "Wrong alignment on PlatformSubsystem_SetTextFieldHeightCmd");
static_assert(sizeof(PlatformSubsystem_SetTextFieldHeightCmd) == 0x000010, "Wrong size on PlatformSubsystem_SetTextFieldHeightCmd");
static_assert(offsetof(PlatformSubsystem_SetTextFieldHeightCmd, Args) == 0x000000, "Member 'PlatformSubsystem_SetTextFieldHeightCmd::Args' has a wrong offset!");

// Function BykingUnrealModule.PlatformSubsystem.SetTextFieldWidthCmd
// 0x0010 (0x0010 - 0x0000)
struct PlatformSubsystem_SetTextFieldWidthCmd final
{
public:
	TArray<class FString>                         Args;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlatformSubsystem_SetTextFieldWidthCmd) == 0x000008, "Wrong alignment on PlatformSubsystem_SetTextFieldWidthCmd");
static_assert(sizeof(PlatformSubsystem_SetTextFieldWidthCmd) == 0x000010, "Wrong size on PlatformSubsystem_SetTextFieldWidthCmd");
static_assert(offsetof(PlatformSubsystem_SetTextFieldWidthCmd, Args) == 0x000000, "Member 'PlatformSubsystem_SetTextFieldWidthCmd::Args' has a wrong offset!");

// Function BykingUnrealModule.PlatformSubsystem.SetTextFieldXPositionCmd
// 0x0010 (0x0010 - 0x0000)
struct PlatformSubsystem_SetTextFieldXPositionCmd final
{
public:
	TArray<class FString>                         Args;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlatformSubsystem_SetTextFieldXPositionCmd) == 0x000008, "Wrong alignment on PlatformSubsystem_SetTextFieldXPositionCmd");
static_assert(sizeof(PlatformSubsystem_SetTextFieldXPositionCmd) == 0x000010, "Wrong size on PlatformSubsystem_SetTextFieldXPositionCmd");
static_assert(offsetof(PlatformSubsystem_SetTextFieldXPositionCmd, Args) == 0x000000, "Member 'PlatformSubsystem_SetTextFieldXPositionCmd::Args' has a wrong offset!");

// Function BykingUnrealModule.PlatformSubsystem.SetTextFieldYPositionCmd
// 0x0010 (0x0010 - 0x0000)
struct PlatformSubsystem_SetTextFieldYPositionCmd final
{
public:
	TArray<class FString>                         Args;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlatformSubsystem_SetTextFieldYPositionCmd) == 0x000008, "Wrong alignment on PlatformSubsystem_SetTextFieldYPositionCmd");
static_assert(sizeof(PlatformSubsystem_SetTextFieldYPositionCmd) == 0x000010, "Wrong size on PlatformSubsystem_SetTextFieldYPositionCmd");
static_assert(offsetof(PlatformSubsystem_SetTextFieldYPositionCmd, Args) == 0x000000, "Member 'PlatformSubsystem_SetTextFieldYPositionCmd::Args' has a wrong offset!");

// Function BykingUnrealModule.PlatformSubsystem.ShowSteamGamePadTextInput
// 0x0048 (0x0048 - 0x0000)
struct PlatformSubsystem_ShowSteamGamePadTextInput final
{
public:
	struct FOnGamePadTextInputDismissed           OnEvent;                                           // 0x0000(0x0010)(Parm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FText                                   InDescriptionText;                                 // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   InExistingText;                                    // 0x0028(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         LimitTextNum;                                      // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0044(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlatformSubsystem_ShowSteamGamePadTextInput) == 0x000008, "Wrong alignment on PlatformSubsystem_ShowSteamGamePadTextInput");
static_assert(sizeof(PlatformSubsystem_ShowSteamGamePadTextInput) == 0x000048, "Wrong size on PlatformSubsystem_ShowSteamGamePadTextInput");
static_assert(offsetof(PlatformSubsystem_ShowSteamGamePadTextInput, OnEvent) == 0x000000, "Member 'PlatformSubsystem_ShowSteamGamePadTextInput::OnEvent' has a wrong offset!");
static_assert(offsetof(PlatformSubsystem_ShowSteamGamePadTextInput, InDescriptionText) == 0x000010, "Member 'PlatformSubsystem_ShowSteamGamePadTextInput::InDescriptionText' has a wrong offset!");
static_assert(offsetof(PlatformSubsystem_ShowSteamGamePadTextInput, InExistingText) == 0x000028, "Member 'PlatformSubsystem_ShowSteamGamePadTextInput::InExistingText' has a wrong offset!");
static_assert(offsetof(PlatformSubsystem_ShowSteamGamePadTextInput, LimitTextNum) == 0x000040, "Member 'PlatformSubsystem_ShowSteamGamePadTextInput::LimitTextNum' has a wrong offset!");
static_assert(offsetof(PlatformSubsystem_ShowSteamGamePadTextInput, ReturnValue) == 0x000044, "Member 'PlatformSubsystem_ShowSteamGamePadTextInput::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.PlatformSubsystem.GetSteamGamePadInputText
// 0x0018 (0x0018 - 0x0000)
struct PlatformSubsystem_GetSteamGamePadInputText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlatformSubsystem_GetSteamGamePadInputText) == 0x000008, "Wrong alignment on PlatformSubsystem_GetSteamGamePadInputText");
static_assert(sizeof(PlatformSubsystem_GetSteamGamePadInputText) == 0x000018, "Wrong size on PlatformSubsystem_GetSteamGamePadInputText");
static_assert(offsetof(PlatformSubsystem_GetSteamGamePadInputText, ReturnValue) == 0x000000, "Member 'PlatformSubsystem_GetSteamGamePadInputText::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.SystemUtility.BytesArrayToString
// 0x0020 (0x0020 - 0x0000)
struct SystemUtility_BytesArrayToString final
{
public:
	TArray<uint8>                                 Data;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SystemUtility_BytesArrayToString) == 0x000008, "Wrong alignment on SystemUtility_BytesArrayToString");
static_assert(sizeof(SystemUtility_BytesArrayToString) == 0x000020, "Wrong size on SystemUtility_BytesArrayToString");
static_assert(offsetof(SystemUtility_BytesArrayToString, Data) == 0x000000, "Member 'SystemUtility_BytesArrayToString::Data' has a wrong offset!");
static_assert(offsetof(SystemUtility_BytesArrayToString, ReturnValue) == 0x000010, "Member 'SystemUtility_BytesArrayToString::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.SystemUtility.GetMdLocale
// 0x0001 (0x0001 - 0x0000)
struct SystemUtility_GetMdLocale final
{
public:
	EMdLocalization                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SystemUtility_GetMdLocale) == 0x000001, "Wrong alignment on SystemUtility_GetMdLocale");
static_assert(sizeof(SystemUtility_GetMdLocale) == 0x000001, "Wrong size on SystemUtility_GetMdLocale");
static_assert(offsetof(SystemUtility_GetMdLocale, ReturnValue) == 0x000000, "Member 'SystemUtility_GetMdLocale::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.SystemUtility.AnsiToUTF8
// 0x0020 (0x0020 - 0x0000)
struct SystemUtility_AnsiToUTF8 final
{
public:
	TArray<uint8>                                 Ansichar;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SystemUtility_AnsiToUTF8) == 0x000008, "Wrong alignment on SystemUtility_AnsiToUTF8");
static_assert(sizeof(SystemUtility_AnsiToUTF8) == 0x000020, "Wrong size on SystemUtility_AnsiToUTF8");
static_assert(offsetof(SystemUtility_AnsiToUTF8, Ansichar) == 0x000000, "Member 'SystemUtility_AnsiToUTF8::Ansichar' has a wrong offset!");
static_assert(offsetof(SystemUtility_AnsiToUTF8, ReturnValue) == 0x000010, "Member 'SystemUtility_AnsiToUTF8::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.SystemUtility.FindActorWorld
// 0x0020 (0x0020 - 0x0000)
struct SystemUtility_FindActorWorld final
{
public:
	const class UWorld*                           World;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ActorName;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SystemUtility_FindActorWorld) == 0x000008, "Wrong alignment on SystemUtility_FindActorWorld");
static_assert(sizeof(SystemUtility_FindActorWorld) == 0x000020, "Wrong size on SystemUtility_FindActorWorld");
static_assert(offsetof(SystemUtility_FindActorWorld, World) == 0x000000, "Member 'SystemUtility_FindActorWorld::World' has a wrong offset!");
static_assert(offsetof(SystemUtility_FindActorWorld, ActorName) == 0x000008, "Member 'SystemUtility_FindActorWorld::ActorName' has a wrong offset!");
static_assert(offsetof(SystemUtility_FindActorWorld, ReturnValue) == 0x000018, "Member 'SystemUtility_FindActorWorld::ReturnValue' has a wrong offset!");

// Function BykingUnrealModule.SystemUtility.IsDigitFString
// 0x0018 (0x0018 - 0x0000)
struct SystemUtility_IsDigitFString final
{
public:
	class FString                                 Str;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SystemUtility_IsDigitFString) == 0x000008, "Wrong alignment on SystemUtility_IsDigitFString");
static_assert(sizeof(SystemUtility_IsDigitFString) == 0x000018, "Wrong size on SystemUtility_IsDigitFString");
static_assert(offsetof(SystemUtility_IsDigitFString, Str) == 0x000000, "Member 'SystemUtility_IsDigitFString::Str' has a wrong offset!");
static_assert(offsetof(SystemUtility_IsDigitFString, ReturnValue) == 0x000010, "Member 'SystemUtility_IsDigitFString::ReturnValue' has a wrong offset!");

}

