#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActionRecoverCitizen

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameModule_structs.hpp"
#include "CommonModule_structs.hpp"


namespace SDK::Params
{

// Function BP_ActionRecoverCitizen.BP_ActionRecoverCitizen_C.ExecuteUbergraph_BP_ActionRecoverCitizen
// 0x0038 (0x0038 - 0x0000)
struct BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_prevAction;                           // 0x0004(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_nextAction;                           // 0x000C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Turning_TurnSpan;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BP_GetActionTargetActor_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BP_GetActionTargetActor_ReturnValue_1;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BP_GetRequiredRecoverTime_ReturnValue;    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen) == 0x000008, "Wrong alignment on BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen");
static_assert(sizeof(BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen) == 0x000038, "Wrong size on BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen");
static_assert(offsetof(BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen, EntryPoint) == 0x000000, "Member 'BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen, K2Node_Event_prevAction) == 0x000004, "Member 'BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen::K2Node_Event_prevAction' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen, K2Node_Event_nextAction) == 0x00000C, "Member 'BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen::K2Node_Event_nextAction' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen, CallFunc_Turning_TurnSpan) == 0x000014, "Member 'BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen::CallFunc_Turning_TurnSpan' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen, CallFunc_BP_GetActionTargetActor_ReturnValue) == 0x000018, "Member 'BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen::CallFunc_BP_GetActionTargetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen, CallFunc_BP_GetActionTargetActor_ReturnValue_1) == 0x000020, "Member 'BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen::CallFunc_BP_GetActionTargetActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen, CallFunc_BP_GetRequiredRecoverTime_ReturnValue) == 0x00002C, "Member 'BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen::CallFunc_BP_GetRequiredRecoverTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen, CallFunc_BP_GetAnimation_ReturnValue) == 0x000030, "Member 'BP_ActionRecoverCitizen_C_ExecuteUbergraph_BP_ActionRecoverCitizen::CallFunc_BP_GetAnimation_ReturnValue' has a wrong offset!");

// Function BP_ActionRecoverCitizen.BP_ActionRecoverCitizen_C.BP_OnEndAction
// 0x0008 (0x0008 - 0x0000)
struct BP_ActionRecoverCitizen_C_BP_OnEndAction final
{
public:
	class FName                                   NextAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRecoverCitizen_C_BP_OnEndAction) == 0x000004, "Wrong alignment on BP_ActionRecoverCitizen_C_BP_OnEndAction");
static_assert(sizeof(BP_ActionRecoverCitizen_C_BP_OnEndAction) == 0x000008, "Wrong size on BP_ActionRecoverCitizen_C_BP_OnEndAction");
static_assert(offsetof(BP_ActionRecoverCitizen_C_BP_OnEndAction, NextAction) == 0x000000, "Member 'BP_ActionRecoverCitizen_C_BP_OnEndAction::NextAction' has a wrong offset!");

// Function BP_ActionRecoverCitizen.BP_ActionRecoverCitizen_C.BP_OnBeginAction
// 0x0008 (0x0008 - 0x0000)
struct BP_ActionRecoverCitizen_C_BP_OnBeginAction final
{
public:
	class FName                                   PrevAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRecoverCitizen_C_BP_OnBeginAction) == 0x000004, "Wrong alignment on BP_ActionRecoverCitizen_C_BP_OnBeginAction");
static_assert(sizeof(BP_ActionRecoverCitizen_C_BP_OnBeginAction) == 0x000008, "Wrong size on BP_ActionRecoverCitizen_C_BP_OnBeginAction");
static_assert(offsetof(BP_ActionRecoverCitizen_C_BP_OnBeginAction, PrevAction) == 0x000000, "Member 'BP_ActionRecoverCitizen_C_BP_OnBeginAction::PrevAction' has a wrong offset!");

// Function BP_ActionRecoverCitizen.BP_ActionRecoverCitizen_C.Initialize
// 0x0038 (0x0038 - 0x0000)
struct BP_ActionRecoverCitizen_C_Initialize final
{
public:
	class FName                                   PrevAction;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAnimationMoveType                            Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationMoveType                            Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationMoveType                            K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterState*                        CallFunc_BP_GetOwnerState_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue_1;  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRecoverCitizen_C_Initialize) == 0x000008, "Wrong alignment on BP_ActionRecoverCitizen_C_Initialize");
static_assert(sizeof(BP_ActionRecoverCitizen_C_Initialize) == 0x000038, "Wrong size on BP_ActionRecoverCitizen_C_Initialize");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Initialize, PrevAction) == 0x000000, "Member 'BP_ActionRecoverCitizen_C_Initialize::PrevAction' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Initialize, Temp_bool_Variable) == 0x000008, "Member 'BP_ActionRecoverCitizen_C_Initialize::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Initialize, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000009, "Member 'BP_ActionRecoverCitizen_C_Initialize::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Initialize, Temp_byte_Variable) == 0x00000A, "Member 'BP_ActionRecoverCitizen_C_Initialize::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Initialize, Temp_byte_Variable_1) == 0x00000B, "Member 'BP_ActionRecoverCitizen_C_Initialize::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Initialize, CallFunc_BP_GetAnimation_ReturnValue) == 0x000010, "Member 'BP_ActionRecoverCitizen_C_Initialize::CallFunc_BP_GetAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Initialize, K2Node_Select_Default) == 0x000018, "Member 'BP_ActionRecoverCitizen_C_Initialize::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Initialize, CallFunc_BP_GetOwnerState_ReturnValue) == 0x000020, "Member 'BP_ActionRecoverCitizen_C_Initialize::CallFunc_BP_GetOwnerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Initialize, CallFunc_BP_GetOwnerMovementBattle_ReturnValue) == 0x000028, "Member 'BP_ActionRecoverCitizen_C_Initialize::CallFunc_BP_GetOwnerMovementBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Initialize, CallFunc_BP_GetOwnerMovementBattle_ReturnValue_1) == 0x000030, "Member 'BP_ActionRecoverCitizen_C_Initialize::CallFunc_BP_GetOwnerMovementBattle_ReturnValue_1' has a wrong offset!");

// Function BP_ActionRecoverCitizen.BP_ActionRecoverCitizen_C.Turning
// 0x0090 (0x0090 - 0x0000)
struct BP_ActionRecoverCitizen_C_Turning final
{
public:
	float                                         TurnSpan;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterParam*                        CallFunc_BP_GetParam_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BP_GetActionTargetActor_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterDummy*                        K2Node_DynamicCast_AsCharacter_Dummy;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterBattle*                       CallFunc_BP_GetOwnerCharacterBattle_ReturnValue;   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue;    // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRecoverCitizen_C_Turning) == 0x000008, "Wrong alignment on BP_ActionRecoverCitizen_C_Turning");
static_assert(sizeof(BP_ActionRecoverCitizen_C_Turning) == 0x000090, "Wrong size on BP_ActionRecoverCitizen_C_Turning");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Turning, TurnSpan) == 0x000000, "Member 'BP_ActionRecoverCitizen_C_Turning::TurnSpan' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Turning, TargetLocation) == 0x000004, "Member 'BP_ActionRecoverCitizen_C_Turning::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Turning, CallFunc_BP_GetParam_ReturnValue) == 0x000010, "Member 'BP_ActionRecoverCitizen_C_Turning::CallFunc_BP_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Turning, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BP_ActionRecoverCitizen_C_Turning::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Turning, CallFunc_BP_GetActionTargetActor_ReturnValue) == 0x000020, "Member 'BP_ActionRecoverCitizen_C_Turning::CallFunc_BP_GetActionTargetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Turning, K2Node_DynamicCast_AsCharacter_Dummy) == 0x000028, "Member 'BP_ActionRecoverCitizen_C_Turning::K2Node_DynamicCast_AsCharacter_Dummy' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Turning, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_ActionRecoverCitizen_C_Turning::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Turning, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'BP_ActionRecoverCitizen_C_Turning::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Turning, CallFunc_GetSocketLocation_ReturnValue) == 0x000040, "Member 'BP_ActionRecoverCitizen_C_Turning::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Turning, CallFunc_BP_GetOwnerCharacterBattle_ReturnValue) == 0x000050, "Member 'BP_ActionRecoverCitizen_C_Turning::CallFunc_BP_GetOwnerCharacterBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Turning, CallFunc_BP_GetOwnerMovementBattle_ReturnValue) == 0x000058, "Member 'BP_ActionRecoverCitizen_C_Turning::CallFunc_BP_GetOwnerMovementBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Turning, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000060, "Member 'BP_ActionRecoverCitizen_C_Turning::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Turning, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00006C, "Member 'BP_ActionRecoverCitizen_C_Turning::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Turning, CallFunc_BreakVector_X) == 0x000078, "Member 'BP_ActionRecoverCitizen_C_Turning::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Turning, CallFunc_BreakVector_Y) == 0x00007C, "Member 'BP_ActionRecoverCitizen_C_Turning::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Turning, CallFunc_BreakVector_Z) == 0x000080, "Member 'BP_ActionRecoverCitizen_C_Turning::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Turning, CallFunc_MakeVector_ReturnValue) == 0x000084, "Member 'BP_ActionRecoverCitizen_C_Turning::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_ActionRecoverCitizen.BP_ActionRecoverCitizen_C.Begin
// 0x0030 (0x0030 - 0x0000)
struct BP_ActionRecoverCitizen_C_Begin final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterAssign                              Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_1;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_2;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_3;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterParam*                        CallFunc_BP_GetParam_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  K2Node_Select_Default_1;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRecoverCitizen_C_Begin) == 0x000008, "Wrong alignment on BP_ActionRecoverCitizen_C_Begin");
static_assert(sizeof(BP_ActionRecoverCitizen_C_Begin) == 0x000030, "Wrong size on BP_ActionRecoverCitizen_C_Begin");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Begin, Temp_bool_Variable) == 0x000000, "Member 'BP_ActionRecoverCitizen_C_Begin::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Begin, Temp_float_Variable) == 0x000004, "Member 'BP_ActionRecoverCitizen_C_Begin::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Begin, Temp_float_Variable_1) == 0x000008, "Member 'BP_ActionRecoverCitizen_C_Begin::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Begin, Temp_byte_Variable) == 0x00000C, "Member 'BP_ActionRecoverCitizen_C_Begin::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Begin, Temp_byte_Variable_1) == 0x00000D, "Member 'BP_ActionRecoverCitizen_C_Begin::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Begin, Temp_byte_Variable_2) == 0x00000E, "Member 'BP_ActionRecoverCitizen_C_Begin::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Begin, Temp_byte_Variable_3) == 0x00000F, "Member 'BP_ActionRecoverCitizen_C_Begin::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Begin, CallFunc_BP_GetParam_ReturnValue) == 0x000010, "Member 'BP_ActionRecoverCitizen_C_Begin::CallFunc_BP_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Begin, K2Node_Select_Default) == 0x000018, "Member 'BP_ActionRecoverCitizen_C_Begin::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Begin, CallFunc_BP_GetAnimation_ReturnValue) == 0x000020, "Member 'BP_ActionRecoverCitizen_C_Begin::CallFunc_BP_GetAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Begin, K2Node_Select_Default_1) == 0x000028, "Member 'BP_ActionRecoverCitizen_C_Begin::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_ActionRecoverCitizen.BP_ActionRecoverCitizen_C.Recover
// 0x0020 (0x0020 - 0x0000)
struct BP_ActionRecoverCitizen_C_Recover final
{
public:
	ECharacterAssign                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterParam*                        CallFunc_BP_GetParam_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRecoverCitizen_C_Recover) == 0x000008, "Wrong alignment on BP_ActionRecoverCitizen_C_Recover");
static_assert(sizeof(BP_ActionRecoverCitizen_C_Recover) == 0x000020, "Wrong size on BP_ActionRecoverCitizen_C_Recover");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Recover, Temp_byte_Variable) == 0x000000, "Member 'BP_ActionRecoverCitizen_C_Recover::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Recover, Temp_byte_Variable_1) == 0x000001, "Member 'BP_ActionRecoverCitizen_C_Recover::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Recover, Temp_byte_Variable_2) == 0x000002, "Member 'BP_ActionRecoverCitizen_C_Recover::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Recover, Temp_byte_Variable_3) == 0x000003, "Member 'BP_ActionRecoverCitizen_C_Recover::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Recover, CallFunc_BP_GetParam_ReturnValue) == 0x000008, "Member 'BP_ActionRecoverCitizen_C_Recover::CallFunc_BP_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Recover, CallFunc_BP_GetAnimation_ReturnValue) == 0x000010, "Member 'BP_ActionRecoverCitizen_C_Recover::CallFunc_BP_GetAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Recover, K2Node_Select_Default) == 0x000018, "Member 'BP_ActionRecoverCitizen_C_Recover::K2Node_Select_Default' has a wrong offset!");

// Function BP_ActionRecoverCitizen.BP_ActionRecoverCitizen_C.Complete
// 0x0020 (0x0020 - 0x0000)
struct BP_ActionRecoverCitizen_C_Complete final
{
public:
	ECharacterAssign                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterParam*                        CallFunc_BP_GetParam_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRecoverCitizen_C_Complete) == 0x000008, "Wrong alignment on BP_ActionRecoverCitizen_C_Complete");
static_assert(sizeof(BP_ActionRecoverCitizen_C_Complete) == 0x000020, "Wrong size on BP_ActionRecoverCitizen_C_Complete");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Complete, Temp_byte_Variable) == 0x000000, "Member 'BP_ActionRecoverCitizen_C_Complete::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Complete, Temp_byte_Variable_1) == 0x000001, "Member 'BP_ActionRecoverCitizen_C_Complete::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Complete, Temp_byte_Variable_2) == 0x000002, "Member 'BP_ActionRecoverCitizen_C_Complete::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Complete, Temp_byte_Variable_3) == 0x000003, "Member 'BP_ActionRecoverCitizen_C_Complete::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Complete, CallFunc_BP_GetParam_ReturnValue) == 0x000008, "Member 'BP_ActionRecoverCitizen_C_Complete::CallFunc_BP_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Complete, CallFunc_BP_GetAnimation_ReturnValue) == 0x000010, "Member 'BP_ActionRecoverCitizen_C_Complete::CallFunc_BP_GetAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_Complete, K2Node_Select_Default) == 0x000018, "Member 'BP_ActionRecoverCitizen_C_Complete::K2Node_Select_Default' has a wrong offset!");

// Function BP_ActionRecoverCitizen.BP_ActionRecoverCitizen_C.ChangeFacial
// 0x0018 (0x0018 - 0x0000)
struct BP_ActionRecoverCitizen_C_ChangeFacial final
{
public:
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterBattle*                       CallFunc_BP_GetOwnerCharacterBattle_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterId                                  CallFunc_BP_GetCharacterId_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ActionRecoverCitizen_C_ChangeFacial) == 0x000008, "Wrong alignment on BP_ActionRecoverCitizen_C_ChangeFacial");
static_assert(sizeof(BP_ActionRecoverCitizen_C_ChangeFacial) == 0x000018, "Wrong size on BP_ActionRecoverCitizen_C_ChangeFacial");
static_assert(offsetof(BP_ActionRecoverCitizen_C_ChangeFacial, CallFunc_BP_GetAnimation_ReturnValue) == 0x000000, "Member 'BP_ActionRecoverCitizen_C_ChangeFacial::CallFunc_BP_GetAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_ChangeFacial, CallFunc_BP_GetOwnerCharacterBattle_ReturnValue) == 0x000008, "Member 'BP_ActionRecoverCitizen_C_ChangeFacial::CallFunc_BP_GetOwnerCharacterBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_ChangeFacial, CallFunc_BP_GetCharacterId_ReturnValue) == 0x000010, "Member 'BP_ActionRecoverCitizen_C_ChangeFacial::CallFunc_BP_GetCharacterId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_ChangeFacial, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'BP_ActionRecoverCitizen_C_ChangeFacial::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_ActionRecoverCitizen.BP_ActionRecoverCitizen_C.BeginFaceTurn
// 0x0030 (0x0030 - 0x0000)
struct BP_ActionRecoverCitizen_C_BeginFaceTurn final
{
public:
	class UCharacterParam*                        CallFunc_BP_GetParam_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BP_GetActionTargetActor_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterDummy*                        K2Node_DynamicCast_AsCharacter_Dummy;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRecoverCitizen_C_BeginFaceTurn) == 0x000008, "Wrong alignment on BP_ActionRecoverCitizen_C_BeginFaceTurn");
static_assert(sizeof(BP_ActionRecoverCitizen_C_BeginFaceTurn) == 0x000030, "Wrong size on BP_ActionRecoverCitizen_C_BeginFaceTurn");
static_assert(offsetof(BP_ActionRecoverCitizen_C_BeginFaceTurn, CallFunc_BP_GetParam_ReturnValue) == 0x000000, "Member 'BP_ActionRecoverCitizen_C_BeginFaceTurn::CallFunc_BP_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_BeginFaceTurn, CallFunc_BP_GetActionTargetActor_ReturnValue) == 0x000008, "Member 'BP_ActionRecoverCitizen_C_BeginFaceTurn::CallFunc_BP_GetActionTargetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_BeginFaceTurn, K2Node_DynamicCast_AsCharacter_Dummy) == 0x000010, "Member 'BP_ActionRecoverCitizen_C_BeginFaceTurn::K2Node_DynamicCast_AsCharacter_Dummy' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_BeginFaceTurn, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ActionRecoverCitizen_C_BeginFaceTurn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_BeginFaceTurn, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BP_ActionRecoverCitizen_C_BeginFaceTurn::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_BeginFaceTurn, CallFunc_GetSocketLocation_ReturnValue) == 0x00001C, "Member 'BP_ActionRecoverCitizen_C_BeginFaceTurn::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_BeginFaceTurn, CallFunc_BP_GetAnimation_ReturnValue) == 0x000028, "Member 'BP_ActionRecoverCitizen_C_BeginFaceTurn::CallFunc_BP_GetAnimation_ReturnValue' has a wrong offset!");

// Function BP_ActionRecoverCitizen.BP_ActionRecoverCitizen_C.EndFaceTurn
// 0x0008 (0x0008 - 0x0000)
struct BP_ActionRecoverCitizen_C_EndFaceTurn final
{
public:
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRecoverCitizen_C_EndFaceTurn) == 0x000008, "Wrong alignment on BP_ActionRecoverCitizen_C_EndFaceTurn");
static_assert(sizeof(BP_ActionRecoverCitizen_C_EndFaceTurn) == 0x000008, "Wrong size on BP_ActionRecoverCitizen_C_EndFaceTurn");
static_assert(offsetof(BP_ActionRecoverCitizen_C_EndFaceTurn, CallFunc_BP_GetAnimation_ReturnValue) == 0x000000, "Member 'BP_ActionRecoverCitizen_C_EndFaceTurn::CallFunc_BP_GetAnimation_ReturnValue' has a wrong offset!");

// Function BP_ActionRecoverCitizen.BP_ActionRecoverCitizen_C.BP_IsEnableShiftAction
// 0x000C (0x000C - 0x0000)
struct BP_ActionRecoverCitizen_C_BP_IsEnableShiftAction final
{
public:
	class FName                                   NextAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ActionRecoverCitizen_C_BP_IsEnableShiftAction) == 0x000004, "Wrong alignment on BP_ActionRecoverCitizen_C_BP_IsEnableShiftAction");
static_assert(sizeof(BP_ActionRecoverCitizen_C_BP_IsEnableShiftAction) == 0x00000C, "Wrong size on BP_ActionRecoverCitizen_C_BP_IsEnableShiftAction");
static_assert(offsetof(BP_ActionRecoverCitizen_C_BP_IsEnableShiftAction, NextAction) == 0x000000, "Member 'BP_ActionRecoverCitizen_C_BP_IsEnableShiftAction::NextAction' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_BP_IsEnableShiftAction, ReturnValue) == 0x000008, "Member 'BP_ActionRecoverCitizen_C_BP_IsEnableShiftAction::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRecoverCitizen_C_BP_IsEnableShiftAction, K2Node_SwitchName_CmpSuccess) == 0x000009, "Member 'BP_ActionRecoverCitizen_C_BP_IsEnableShiftAction::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

}

