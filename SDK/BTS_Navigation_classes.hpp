#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_Navigation

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTS_Navigation.BTS_Navigation_C
// 0x0068 (0x0100 - 0x0098)
class UBTS_Navigation_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 TargetActorKey;                                    // 0x00A0(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 TargetNavigationKey;                               // 0x00C8(0x0028)(Edit, BlueprintVisible)
	struct FVector                                PreLocation;                                       // 0x00F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTS_Navigation(int32 EntryPoint);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTS_Navigation_C">();
	}
	static class UBTS_Navigation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_Navigation_C>();
	}
};
static_assert(alignof(UBTS_Navigation_C) == 0x000008, "Wrong alignment on UBTS_Navigation_C");
static_assert(sizeof(UBTS_Navigation_C) == 0x000100, "Wrong size on UBTS_Navigation_C");
static_assert(offsetof(UBTS_Navigation_C, UberGraphFrame) == 0x000098, "Member 'UBTS_Navigation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTS_Navigation_C, TargetActorKey) == 0x0000A0, "Member 'UBTS_Navigation_C::TargetActorKey' has a wrong offset!");
static_assert(offsetof(UBTS_Navigation_C, TargetNavigationKey) == 0x0000C8, "Member 'UBTS_Navigation_C::TargetNavigationKey' has a wrong offset!");
static_assert(offsetof(UBTS_Navigation_C, PreLocation) == 0x0000F0, "Member 'UBTS_Navigation_C::PreLocation' has a wrong offset!");

}

