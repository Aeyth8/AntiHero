#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CC_Ability_MoveSpeed

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_CC_Ability_MoveSpeed.BP_CC_Ability_MoveSpeed_C.ExecuteUbergraph_BP_CC_Ability_MoveSpeed
// 0x0020 (0x0020 - 0x0000)
struct BP_CC_Ability_MoveSpeed_C_ExecuteUbergraph_BP_CC_Ability_MoveSpeed final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_oldLevel;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_newLevel;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetEfficacyValue_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterBattle*                       CallFunc_BP_GetOwnerCharacterBattle_ReturnValue;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMaterialControlComponent*     CallFunc_BP_GetCharacterMaterialControl_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CC_Ability_MoveSpeed_C_ExecuteUbergraph_BP_CC_Ability_MoveSpeed) == 0x000008, "Wrong alignment on BP_CC_Ability_MoveSpeed_C_ExecuteUbergraph_BP_CC_Ability_MoveSpeed");
static_assert(sizeof(BP_CC_Ability_MoveSpeed_C_ExecuteUbergraph_BP_CC_Ability_MoveSpeed) == 0x000020, "Wrong size on BP_CC_Ability_MoveSpeed_C_ExecuteUbergraph_BP_CC_Ability_MoveSpeed");
static_assert(offsetof(BP_CC_Ability_MoveSpeed_C_ExecuteUbergraph_BP_CC_Ability_MoveSpeed, EntryPoint) == 0x000000, "Member 'BP_CC_Ability_MoveSpeed_C_ExecuteUbergraph_BP_CC_Ability_MoveSpeed::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CC_Ability_MoveSpeed_C_ExecuteUbergraph_BP_CC_Ability_MoveSpeed, K2Node_Event_oldLevel) == 0x000004, "Member 'BP_CC_Ability_MoveSpeed_C_ExecuteUbergraph_BP_CC_Ability_MoveSpeed::K2Node_Event_oldLevel' has a wrong offset!");
static_assert(offsetof(BP_CC_Ability_MoveSpeed_C_ExecuteUbergraph_BP_CC_Ability_MoveSpeed, K2Node_Event_newLevel) == 0x000008, "Member 'BP_CC_Ability_MoveSpeed_C_ExecuteUbergraph_BP_CC_Ability_MoveSpeed::K2Node_Event_newLevel' has a wrong offset!");
static_assert(offsetof(BP_CC_Ability_MoveSpeed_C_ExecuteUbergraph_BP_CC_Ability_MoveSpeed, CallFunc_BP_GetEfficacyValue_ReturnValue) == 0x00000C, "Member 'BP_CC_Ability_MoveSpeed_C_ExecuteUbergraph_BP_CC_Ability_MoveSpeed::CallFunc_BP_GetEfficacyValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CC_Ability_MoveSpeed_C_ExecuteUbergraph_BP_CC_Ability_MoveSpeed, CallFunc_BP_GetOwnerCharacterBattle_ReturnValue) == 0x000010, "Member 'BP_CC_Ability_MoveSpeed_C_ExecuteUbergraph_BP_CC_Ability_MoveSpeed::CallFunc_BP_GetOwnerCharacterBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CC_Ability_MoveSpeed_C_ExecuteUbergraph_BP_CC_Ability_MoveSpeed, CallFunc_BP_GetCharacterMaterialControl_ReturnValue) == 0x000018, "Member 'BP_CC_Ability_MoveSpeed_C_ExecuteUbergraph_BP_CC_Ability_MoveSpeed::CallFunc_BP_GetCharacterMaterialControl_ReturnValue' has a wrong offset!");

// Function BP_CC_Ability_MoveSpeed.BP_CC_Ability_MoveSpeed_C.BP_OnChangeConditionLevel
// 0x0008 (0x0008 - 0x0000)
struct BP_CC_Ability_MoveSpeed_C_BP_OnChangeConditionLevel final
{
public:
	int32                                         OldLevel;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewLevel;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CC_Ability_MoveSpeed_C_BP_OnChangeConditionLevel) == 0x000004, "Wrong alignment on BP_CC_Ability_MoveSpeed_C_BP_OnChangeConditionLevel");
static_assert(sizeof(BP_CC_Ability_MoveSpeed_C_BP_OnChangeConditionLevel) == 0x000008, "Wrong size on BP_CC_Ability_MoveSpeed_C_BP_OnChangeConditionLevel");
static_assert(offsetof(BP_CC_Ability_MoveSpeed_C_BP_OnChangeConditionLevel, OldLevel) == 0x000000, "Member 'BP_CC_Ability_MoveSpeed_C_BP_OnChangeConditionLevel::OldLevel' has a wrong offset!");
static_assert(offsetof(BP_CC_Ability_MoveSpeed_C_BP_OnChangeConditionLevel, NewLevel) == 0x000004, "Member 'BP_CC_Ability_MoveSpeed_C_BP_OnChangeConditionLevel::NewLevel' has a wrong offset!");

}

