#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VoiceChatModule

#include "Basic.hpp"

#include "VoiceChatModule_classes.hpp"
#include "VoiceChatModule_parameters.hpp"


namespace SDK
{

// Function VoiceChatModule.VoiceChatObject.GetInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UVoiceChatObject*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UVoiceChatObject* UVoiceChatObject::GetInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("VoiceChatObject", "GetInstance");

	Params::VoiceChatObject_GetInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VoiceChatModule.VoiceChatObject.AddCrossMutePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PlatformPlayerId                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoiceChatObject::AddCrossMutePlayer(const class FString& PlatformPlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "AddCrossMutePlayer");

	Params::VoiceChatObject_AddCrossMutePlayer Parms{};

	Parms.PlatformPlayerId = std::move(PlatformPlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.BlockPlayersStatus
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   PlatformPlayerIds                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UVoiceChatObject::BlockPlayersStatus(const TArray<class FString>& PlatformPlayerIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "BlockPlayersStatus");

	Params::VoiceChatObject_BlockPlayersStatus Parms{};

	Parms.PlatformPlayerIds = std::move(PlatformPlayerIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.BlockPlayerStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PlatformPlayerId                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoiceChatObject::BlockPlayerStatus(const class FString& PlatformPlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "BlockPlayerStatus");

	Params::VoiceChatObject_BlockPlayerStatus Parms{};

	Parms.PlatformPlayerId = std::move(PlatformPlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.Connect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PlatformPlayerId                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVoiceChatObject::Connect(const class FString& PlatformPlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "Connect");

	Params::VoiceChatObject_Connect Parms{};

	Parms.PlatformPlayerId = std::move(PlatformPlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VoiceChatModule.VoiceChatObject.Disconnect
// (Final, Native, Public, BlueprintCallable)

void UVoiceChatObject::Disconnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "Disconnect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.GetActiveInputDevice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UVoiceChatObject::GetActiveInputDevice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "GetActiveInputDevice");

	Params::VoiceChatObject_GetActiveInputDevice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VoiceChatModule.VoiceChatObject.GetActiveOutputDevice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UVoiceChatObject::GetActiveOutputDevice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "GetActiveOutputDevice");

	Params::VoiceChatObject_GetActiveOutputDevice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VoiceChatModule.VoiceChatObject.Initialize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVoiceChatObject::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "Initialize");

	Params::VoiceChatObject_Initialize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VoiceChatModule.VoiceChatObject.IsInitialized
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVoiceChatObject::IsInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "IsInitialized");

	Params::VoiceChatObject_IsInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VoiceChatModule.VoiceChatObject.JoinChannel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ChannelName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoiceChatObject::JoinChannel(const class FString& ChannelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "JoinChannel");

	Params::VoiceChatObject_JoinChannel Parms{};

	Parms.ChannelName = std::move(ChannelName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.Set3DPosition
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          SpeakerPos                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ListenerPos                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ForwardDir                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          UpDirection                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoiceChatObject::Set3DPosition(const struct FVector& SpeakerPos, const struct FVector& ListenerPos, const struct FVector& ForwardDir, const struct FVector& UpDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "Set3DPosition");

	Params::VoiceChatObject_Set3DPosition Parms{};

	Parms.SpeakerPos = std::move(SpeakerPos);
	Parms.ListenerPos = std::move(ListenerPos);
	Parms.ForwardDir = std::move(ForwardDir);
	Parms.UpDirection = std::move(UpDirection);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.SetAudioInputMute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bMuted                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoiceChatObject::SetAudioInputMute(bool bMuted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "SetAudioInputMute");

	Params::VoiceChatObject_SetAudioInputMute Parms{};

	Parms.bMuted = bMuted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.SetAudioInputVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoiceChatObject::SetAudioInputVolume(float Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "SetAudioInputVolume");

	Params::VoiceChatObject_SetAudioInputVolume Parms{};

	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.SetAudioOutputMute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bMuted                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoiceChatObject::SetAudioOutputMute(bool bMuted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "SetAudioOutputMute");

	Params::VoiceChatObject_SetAudioOutputMute Parms{};

	Parms.bMuted = bMuted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.SetAudioOutputVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoiceChatObject::SetAudioOutputVolume(float Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "SetAudioOutputVolume");

	Params::VoiceChatObject_SetAudioOutputVolume Parms{};

	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.SetCrossMutePlayers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   PlatformPlayerIds                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UVoiceChatObject::SetCrossMutePlayers(const TArray<class FString>& PlatformPlayerIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "SetCrossMutePlayers");

	Params::VoiceChatObject_SetCrossMutePlayers Parms{};

	Parms.PlatformPlayerIds = std::move(PlatformPlayerIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.SetEcho
// (Final, Native, Public, BlueprintCallable)

void UVoiceChatObject::SetEcho()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "SetEcho");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.SetEnableSpeechToText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnableSpeechToText                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoiceChatObject::SetEnableSpeechToText(const bool bEnableSpeechToText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "SetEnableSpeechToText");

	Params::VoiceChatObject_SetEnableSpeechToText Parms{};

	Parms.bEnableSpeechToText = bEnableSpeechToText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.SetInputDevice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InputDeviceId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoiceChatObject::SetInputDevice(const class FString& InputDeviceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "SetInputDevice");

	Params::VoiceChatObject_SetInputDevice Parms{};

	Parms.InputDeviceId = std::move(InputDeviceId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.SetNonPositional
// (Final, Native, Public, BlueprintCallable)

void UVoiceChatObject::SetNonPositional()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "SetNonPositional");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.SetOutputDevice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           OutputDeviceId                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoiceChatObject::SetOutputDevice(const class FString& OutputDeviceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "SetOutputDevice");

	Params::VoiceChatObject_SetOutputDevice Parms{};

	Parms.OutputDeviceId = std::move(OutputDeviceId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.SetPlayerMute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PlatformPlayerId                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMute                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoiceChatObject::SetPlayerMute(const class FString& PlatformPlayerId, bool bMute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "SetPlayerMute");

	Params::VoiceChatObject_SetPlayerMute Parms{};

	Parms.PlatformPlayerId = std::move(PlatformPlayerId);
	Parms.bMute = bMute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.SetPlayerVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PlatformPlayerId                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoiceChatObject::SetPlayerVolume(const class FString& PlatformPlayerId, float Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "SetPlayerVolume");

	Params::VoiceChatObject_SetPlayerVolume Parms{};

	Parms.PlatformPlayerId = std::move(PlatformPlayerId);
	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.SetPositional
// (Final, Native, Public, BlueprintCallable)

void UVoiceChatObject::SetPositional()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "SetPositional");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.SetVoiceFont
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           VoiceFontName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoiceChatObject::SetVoiceFont(const class FString& VoiceFontName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "SetVoiceFont");

	Params::VoiceChatObject_SetVoiceFont Parms{};

	Parms.VoiceFontName = std::move(VoiceFontName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.UnblockPlayersStatus
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   PlatformPlayerIds                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UVoiceChatObject::UnblockPlayersStatus(const TArray<class FString>& PlatformPlayerIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "UnblockPlayersStatus");

	Params::VoiceChatObject_UnblockPlayersStatus Parms{};

	Parms.PlatformPlayerIds = std::move(PlatformPlayerIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.UnblockPlayerStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PlatformPlayerId                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoiceChatObject::UnblockPlayerStatus(const class FString& PlatformPlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "UnblockPlayerStatus");

	Params::VoiceChatObject_UnblockPlayerStatus Parms{};

	Parms.PlatformPlayerId = std::move(PlatformPlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.UnInitialize
// (Final, Native, Public, BlueprintCallable)

void UVoiceChatObject::UnInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "UnInitialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VoiceChatModule.VoiceChatObject.GetAudioInputVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UVoiceChatObject::GetAudioInputVolume() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "GetAudioInputVolume");

	Params::VoiceChatObject_GetAudioInputVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VoiceChatModule.VoiceChatObject.GetAudioOutputVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UVoiceChatObject::GetAudioOutputVolume() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "GetAudioOutputVolume");

	Params::VoiceChatObject_GetAudioOutputVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VoiceChatModule.VoiceChatObject.GetCurrentChannelName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UVoiceChatObject::GetCurrentChannelName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "GetCurrentChannelName");

	Params::VoiceChatObject_GetCurrentChannelName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VoiceChatModule.VoiceChatObject.GetPlayersInChannel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UVoiceChatObject::GetPlayersInChannel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "GetPlayersInChannel");

	Params::VoiceChatObject_GetPlayersInChannel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VoiceChatModule.VoiceChatObject.GetPlayerVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           PlatformPlayerId                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UVoiceChatObject::GetPlayerVolume(const class FString& PlatformPlayerId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "GetPlayerVolume");

	Params::VoiceChatObject_GetPlayerVolume Parms{};

	Parms.PlatformPlayerId = std::move(PlatformPlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VoiceChatModule.VoiceChatObject.GetVoiceFontNameList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UVoiceChatObject::GetVoiceFontNameList() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "GetVoiceFontNameList");

	Params::VoiceChatObject_GetVoiceFontNameList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VoiceChatModule.VoiceChatObject.IsAudioInputMuted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVoiceChatObject::IsAudioInputMuted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "IsAudioInputMuted");

	Params::VoiceChatObject_IsAudioInputMuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VoiceChatModule.VoiceChatObject.IsAudioOutputMuted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVoiceChatObject::IsAudioOutputMuted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "IsAudioOutputMuted");

	Params::VoiceChatObject_IsAudioOutputMuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VoiceChatModule.VoiceChatObject.IsChannelConnected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVoiceChatObject::IsChannelConnected() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "IsChannelConnected");

	Params::VoiceChatObject_IsChannelConnected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VoiceChatModule.VoiceChatObject.IsConnected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVoiceChatObject::IsConnected() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "IsConnected");

	Params::VoiceChatObject_IsConnected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VoiceChatModule.VoiceChatObject.IsPlayerMuted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           PlatformPlayerId                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVoiceChatObject::IsPlayerMuted(const class FString& PlatformPlayerId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "IsPlayerMuted");

	Params::VoiceChatObject_IsPlayerMuted Parms{};

	Parms.PlatformPlayerId = std::move(PlatformPlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VoiceChatModule.VoiceChatObject.SendTextSpeech
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoiceChatObject::SendTextSpeech(const class FString& Message) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChatObject", "SendTextSpeech");

	Params::VoiceChatObject_SendTextSpeech Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

