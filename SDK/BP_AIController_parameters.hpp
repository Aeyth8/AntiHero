#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIController

#include "Basic.hpp"

#include "InGameModule_structs.hpp"


namespace SDK::Params
{

// Function BP_AIController.BP_AIController_C.ExecuteUbergraph_BP_AIController
// 0x0070 (0x0070 - 0x0000)
struct BP_AIController_C_ExecuteUbergraph_BP_AIController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAIMoveCommand                         K2Node_Event_command;                              // 0x0008(0x0020)(ConstParm, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_SkillExitCheck_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RunBehaviorTree_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_UseBlackboard_BlackboardComponent;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UseBlackboard_ReturnValue;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAISkillCommand>                K2Node_Event_commands;                             // 0x0048(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_Event_instant;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_interval;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSkillCommandFixedDuration_ReturnValue; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AIController_C_ExecuteUbergraph_BP_AIController) == 0x000008, "Wrong alignment on BP_AIController_C_ExecuteUbergraph_BP_AIController");
static_assert(sizeof(BP_AIController_C_ExecuteUbergraph_BP_AIController) == 0x000070, "Wrong size on BP_AIController_C_ExecuteUbergraph_BP_AIController");
static_assert(offsetof(BP_AIController_C_ExecuteUbergraph_BP_AIController, EntryPoint) == 0x000000, "Member 'BP_AIController_C_ExecuteUbergraph_BP_AIController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AIController_C_ExecuteUbergraph_BP_AIController, Temp_int_Variable) == 0x000004, "Member 'BP_AIController_C_ExecuteUbergraph_BP_AIController::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIController_C_ExecuteUbergraph_BP_AIController, K2Node_Event_command) == 0x000008, "Member 'BP_AIController_C_ExecuteUbergraph_BP_AIController::K2Node_Event_command' has a wrong offset!");
static_assert(offsetof(BP_AIController_C_ExecuteUbergraph_BP_AIController, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'BP_AIController_C_ExecuteUbergraph_BP_AIController::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIController_C_ExecuteUbergraph_BP_AIController, CallFunc_BP_SkillExitCheck_ReturnValue) == 0x000029, "Member 'BP_AIController_C_ExecuteUbergraph_BP_AIController::CallFunc_BP_SkillExitCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIController_C_ExecuteUbergraph_BP_AIController, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_AIController_C_ExecuteUbergraph_BP_AIController::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIController_C_ExecuteUbergraph_BP_AIController, CallFunc_RunBehaviorTree_ReturnValue) == 0x000030, "Member 'BP_AIController_C_ExecuteUbergraph_BP_AIController::CallFunc_RunBehaviorTree_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIController_C_ExecuteUbergraph_BP_AIController, CallFunc_UseBlackboard_BlackboardComponent) == 0x000038, "Member 'BP_AIController_C_ExecuteUbergraph_BP_AIController::CallFunc_UseBlackboard_BlackboardComponent' has a wrong offset!");
static_assert(offsetof(BP_AIController_C_ExecuteUbergraph_BP_AIController, CallFunc_UseBlackboard_ReturnValue) == 0x000040, "Member 'BP_AIController_C_ExecuteUbergraph_BP_AIController::CallFunc_UseBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIController_C_ExecuteUbergraph_BP_AIController, K2Node_Event_commands) == 0x000048, "Member 'BP_AIController_C_ExecuteUbergraph_BP_AIController::K2Node_Event_commands' has a wrong offset!");
static_assert(offsetof(BP_AIController_C_ExecuteUbergraph_BP_AIController, K2Node_Event_instant) == 0x000058, "Member 'BP_AIController_C_ExecuteUbergraph_BP_AIController::K2Node_Event_instant' has a wrong offset!");
static_assert(offsetof(BP_AIController_C_ExecuteUbergraph_BP_AIController, K2Node_Event_interval) == 0x00005C, "Member 'BP_AIController_C_ExecuteUbergraph_BP_AIController::K2Node_Event_interval' has a wrong offset!");
static_assert(offsetof(BP_AIController_C_ExecuteUbergraph_BP_AIController, CallFunc_GetSkillCommandFixedDuration_ReturnValue) == 0x000060, "Member 'BP_AIController_C_ExecuteUbergraph_BP_AIController::CallFunc_GetSkillCommandFixedDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIController_C_ExecuteUbergraph_BP_AIController, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_AIController_C_ExecuteUbergraph_BP_AIController::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIController_C_ExecuteUbergraph_BP_AIController, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_AIController_C_ExecuteUbergraph_BP_AIController::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIController_C_ExecuteUbergraph_BP_AIController, K2Node_SwitchEnum_CmpSuccess_1) == 0x000069, "Member 'BP_AIController_C_ExecuteUbergraph_BP_AIController::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_AIController.BP_AIController_C.BP_SkillAction
// 0x0018 (0x0018 - 0x0000)
struct BP_AIController_C_BP_SkillAction final
{
public:
	TArray<struct FAISkillCommand>                Commands;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Instant;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Interval;                                          // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIController_C_BP_SkillAction) == 0x000008, "Wrong alignment on BP_AIController_C_BP_SkillAction");
static_assert(sizeof(BP_AIController_C_BP_SkillAction) == 0x000018, "Wrong size on BP_AIController_C_BP_SkillAction");
static_assert(offsetof(BP_AIController_C_BP_SkillAction, Commands) == 0x000000, "Member 'BP_AIController_C_BP_SkillAction::Commands' has a wrong offset!");
static_assert(offsetof(BP_AIController_C_BP_SkillAction, Instant) == 0x000010, "Member 'BP_AIController_C_BP_SkillAction::Instant' has a wrong offset!");
static_assert(offsetof(BP_AIController_C_BP_SkillAction, Interval) == 0x000014, "Member 'BP_AIController_C_BP_SkillAction::Interval' has a wrong offset!");

// Function BP_AIController.BP_AIController_C.BP_MoveAction
// 0x0020 (0x0020 - 0x0000)
struct BP_AIController_C_BP_MoveAction final
{
public:
	struct FAIMoveCommand                         Command;                                           // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_AIController_C_BP_MoveAction) == 0x000004, "Wrong alignment on BP_AIController_C_BP_MoveAction");
static_assert(sizeof(BP_AIController_C_BP_MoveAction) == 0x000020, "Wrong size on BP_AIController_C_BP_MoveAction");
static_assert(offsetof(BP_AIController_C_BP_MoveAction, Command) == 0x000000, "Member 'BP_AIController_C_BP_MoveAction::Command' has a wrong offset!");

}

