#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActionRun

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ActionRun.BP_ActionRun_C.ExecuteUbergraph_BP_ActionRun
// 0x00B0 (0x00B0 - 0x0000)
struct BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterState*                        CallFunc_BP_GetOwnerState_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsGiant_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterBattle*                       CallFunc_BP_GetOwnerCharacterBattle_ReturnValue;   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterCommandComponent*             CallFunc_BP_GetCommandComponent_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BP_GetMoveDirection_ReturnValue;          // 0x0028(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue;    // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_prevAction;                           // 0x0040(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue_1;  // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterState*                        CallFunc_BP_GetOwnerState_ReturnValue_1;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BP_GetMoveDirection_ReturnValue_1;        // 0x0068(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterParam*                        CallFunc_BP_GetParam_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BP_GetForwardDirectionForBaseActionMovement_ReturnValue; // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_nextAction;                           // 0x008C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue_1;            // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSpeed__Action_Run_Initial_Speed;       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSpeed__Action_Run_Last_Speed;          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSpeed__Action_Run_Accel_Span;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAccelSpan__Action_Run_Initial_Turn_Span; // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun) == 0x000008, "Wrong alignment on BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun");
static_assert(sizeof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun) == 0x0000B0, "Wrong size on BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, EntryPoint) == 0x000000, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, CallFunc_BP_GetOwnerState_ReturnValue) == 0x000008, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::CallFunc_BP_GetOwnerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, CallFunc_BP_IsGiant_ReturnValue) == 0x000010, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::CallFunc_BP_IsGiant_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, CallFunc_BP_GetOwnerCharacterBattle_ReturnValue) == 0x000018, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::CallFunc_BP_GetOwnerCharacterBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, CallFunc_BP_GetCommandComponent_ReturnValue) == 0x000020, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::CallFunc_BP_GetCommandComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, CallFunc_BP_GetMoveDirection_ReturnValue) == 0x000028, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::CallFunc_BP_GetMoveDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, CallFunc_BP_GetOwnerMovementBattle_ReturnValue) == 0x000038, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::CallFunc_BP_GetOwnerMovementBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, K2Node_Event_prevAction) == 0x000040, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::K2Node_Event_prevAction' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, CallFunc_BP_GetAnimation_ReturnValue) == 0x000048, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::CallFunc_BP_GetAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, CallFunc_BP_GetOwnerMovementBattle_ReturnValue_1) == 0x000050, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::CallFunc_BP_GetOwnerMovementBattle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, Temp_bool_Variable) == 0x000058, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, CallFunc_BP_GetOwnerState_ReturnValue_1) == 0x000060, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::CallFunc_BP_GetOwnerState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, CallFunc_BP_GetMoveDirection_ReturnValue_1) == 0x000068, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::CallFunc_BP_GetMoveDirection_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, CallFunc_BP_GetParam_ReturnValue) == 0x000078, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::CallFunc_BP_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, CallFunc_BP_GetForwardDirectionForBaseActionMovement_ReturnValue) == 0x000080, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::CallFunc_BP_GetForwardDirectionForBaseActionMovement_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, K2Node_Event_nextAction) == 0x00008C, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::K2Node_Event_nextAction' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, K2Node_Select_Default) == 0x000094, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, CallFunc_BP_GetAnimation_ReturnValue_1) == 0x000098, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::CallFunc_BP_GetAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, CallFunc_GetSpeed__Action_Run_Initial_Speed) == 0x0000A0, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::CallFunc_GetSpeed__Action_Run_Initial_Speed' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, CallFunc_GetSpeed__Action_Run_Last_Speed) == 0x0000A4, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::CallFunc_GetSpeed__Action_Run_Last_Speed' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, CallFunc_GetSpeed__Action_Run_Accel_Span) == 0x0000A8, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::CallFunc_GetSpeed__Action_Run_Accel_Span' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun, CallFunc_GetAccelSpan__Action_Run_Initial_Turn_Span) == 0x0000AC, "Member 'BP_ActionRun_C_ExecuteUbergraph_BP_ActionRun::CallFunc_GetAccelSpan__Action_Run_Initial_Turn_Span' has a wrong offset!");

// Function BP_ActionRun.BP_ActionRun_C.BP_OnEndAction
// 0x0008 (0x0008 - 0x0000)
struct BP_ActionRun_C_BP_OnEndAction final
{
public:
	class FName                                   NextAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRun_C_BP_OnEndAction) == 0x000004, "Wrong alignment on BP_ActionRun_C_BP_OnEndAction");
static_assert(sizeof(BP_ActionRun_C_BP_OnEndAction) == 0x000008, "Wrong size on BP_ActionRun_C_BP_OnEndAction");
static_assert(offsetof(BP_ActionRun_C_BP_OnEndAction, NextAction) == 0x000000, "Member 'BP_ActionRun_C_BP_OnEndAction::NextAction' has a wrong offset!");

// Function BP_ActionRun.BP_ActionRun_C.BP_OnBeginAction
// 0x0008 (0x0008 - 0x0000)
struct BP_ActionRun_C_BP_OnBeginAction final
{
public:
	class FName                                   PrevAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRun_C_BP_OnBeginAction) == 0x000004, "Wrong alignment on BP_ActionRun_C_BP_OnBeginAction");
static_assert(sizeof(BP_ActionRun_C_BP_OnBeginAction) == 0x000008, "Wrong size on BP_ActionRun_C_BP_OnBeginAction");
static_assert(offsetof(BP_ActionRun_C_BP_OnBeginAction, PrevAction) == 0x000000, "Member 'BP_ActionRun_C_BP_OnBeginAction::PrevAction' has a wrong offset!");

// Function BP_ActionRun.BP_ActionRun_C.UpdateMoveDirection
// 0x0038 (0x0038 - 0x0000)
struct BP_ActionRun_C_UpdateMoveDirection final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterState*                        CallFunc_BP_GetOwnerState_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterCommandComponent*             CallFunc_BP_GetOwnerCommand_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsGiant_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BP_GetMoveDirection_ReturnValue;          // 0x001C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterParam*                        CallFunc_BP_GetParam_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetDeltaSeconds_ReturnValue;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRun_C_UpdateMoveDirection) == 0x000008, "Wrong alignment on BP_ActionRun_C_UpdateMoveDirection");
static_assert(sizeof(BP_ActionRun_C_UpdateMoveDirection) == 0x000038, "Wrong size on BP_ActionRun_C_UpdateMoveDirection");
static_assert(offsetof(BP_ActionRun_C_UpdateMoveDirection, Temp_bool_Variable) == 0x000000, "Member 'BP_ActionRun_C_UpdateMoveDirection::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_UpdateMoveDirection, CallFunc_BP_GetOwnerState_ReturnValue) == 0x000008, "Member 'BP_ActionRun_C_UpdateMoveDirection::CallFunc_BP_GetOwnerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_UpdateMoveDirection, CallFunc_BP_GetOwnerCommand_ReturnValue) == 0x000010, "Member 'BP_ActionRun_C_UpdateMoveDirection::CallFunc_BP_GetOwnerCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_UpdateMoveDirection, CallFunc_BP_IsGiant_ReturnValue) == 0x000018, "Member 'BP_ActionRun_C_UpdateMoveDirection::CallFunc_BP_IsGiant_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_UpdateMoveDirection, CallFunc_BP_GetMoveDirection_ReturnValue) == 0x00001C, "Member 'BP_ActionRun_C_UpdateMoveDirection::CallFunc_BP_GetMoveDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_UpdateMoveDirection, CallFunc_BP_GetParam_ReturnValue) == 0x000028, "Member 'BP_ActionRun_C_UpdateMoveDirection::CallFunc_BP_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_UpdateMoveDirection, CallFunc_BP_GetDeltaSeconds_ReturnValue) == 0x000030, "Member 'BP_ActionRun_C_UpdateMoveDirection::CallFunc_BP_GetDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_UpdateMoveDirection, K2Node_Select_Default) == 0x000034, "Member 'BP_ActionRun_C_UpdateMoveDirection::K2Node_Select_Default' has a wrong offset!");

// Function BP_ActionRun.BP_ActionRun_C.UpdateCharacterDirection
// 0x0028 (0x0028 - 0x0000)
struct BP_ActionRun_C_UpdateCharacterDirection final
{
public:
	struct FVector                                CallFunc_BP_GetMoveDirection_ReturnValue;          // 0x0000(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BP_GetForwardDirectionForBaseActionMovement_ReturnValue; // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRun_C_UpdateCharacterDirection) == 0x000008, "Wrong alignment on BP_ActionRun_C_UpdateCharacterDirection");
static_assert(sizeof(BP_ActionRun_C_UpdateCharacterDirection) == 0x000028, "Wrong size on BP_ActionRun_C_UpdateCharacterDirection");
static_assert(offsetof(BP_ActionRun_C_UpdateCharacterDirection, CallFunc_BP_GetMoveDirection_ReturnValue) == 0x000000, "Member 'BP_ActionRun_C_UpdateCharacterDirection::CallFunc_BP_GetMoveDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_UpdateCharacterDirection, CallFunc_BP_GetOwnerMovementBattle_ReturnValue) == 0x000010, "Member 'BP_ActionRun_C_UpdateCharacterDirection::CallFunc_BP_GetOwnerMovementBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_UpdateCharacterDirection, CallFunc_BP_GetForwardDirectionForBaseActionMovement_ReturnValue) == 0x000018, "Member 'BP_ActionRun_C_UpdateCharacterDirection::CallFunc_BP_GetForwardDirectionForBaseActionMovement_ReturnValue' has a wrong offset!");

// Function BP_ActionRun.BP_ActionRun_C.UpdateSpeedRate
// 0x0018 (0x0018 - 0x0000)
struct BP_ActionRun_C_UpdateSpeedRate final
{
public:
	class UCharacterCommandComponent*             CallFunc_BP_GetOwnerCommand_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetMoveRate_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRun_C_UpdateSpeedRate) == 0x000008, "Wrong alignment on BP_ActionRun_C_UpdateSpeedRate");
static_assert(sizeof(BP_ActionRun_C_UpdateSpeedRate) == 0x000018, "Wrong size on BP_ActionRun_C_UpdateSpeedRate");
static_assert(offsetof(BP_ActionRun_C_UpdateSpeedRate, CallFunc_BP_GetOwnerCommand_ReturnValue) == 0x000000, "Member 'BP_ActionRun_C_UpdateSpeedRate::CallFunc_BP_GetOwnerCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_UpdateSpeedRate, CallFunc_BP_GetOwnerMovementBattle_ReturnValue) == 0x000008, "Member 'BP_ActionRun_C_UpdateSpeedRate::CallFunc_BP_GetOwnerMovementBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_UpdateSpeedRate, CallFunc_BP_GetMoveRate_ReturnValue) == 0x000010, "Member 'BP_ActionRun_C_UpdateSpeedRate::CallFunc_BP_GetMoveRate_ReturnValue' has a wrong offset!");

// Function BP_ActionRun.BP_ActionRun_C.GetSpeed
// 0x0030 (0x0030 - 0x0000)
struct BP_ActionRun_C_GetSpeed final
{
public:
	float                                         _Action_Run_Initial_Speed;                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _Action_Run_Last_Speed;                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _Action_Run_Accel_Span;                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterParam*                        CallFunc_BP_GetParam_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterParam*                        CallFunc_BP_GetParam_ReturnValue_1;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterState*                        CallFunc_BP_GetOwnerState_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsGiant_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ActionRun_C_GetSpeed) == 0x000008, "Wrong alignment on BP_ActionRun_C_GetSpeed");
static_assert(sizeof(BP_ActionRun_C_GetSpeed) == 0x000030, "Wrong size on BP_ActionRun_C_GetSpeed");
static_assert(offsetof(BP_ActionRun_C_GetSpeed, _Action_Run_Initial_Speed) == 0x000000, "Member 'BP_ActionRun_C_GetSpeed::_Action_Run_Initial_Speed' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_GetSpeed, _Action_Run_Last_Speed) == 0x000004, "Member 'BP_ActionRun_C_GetSpeed::_Action_Run_Last_Speed' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_GetSpeed, _Action_Run_Accel_Span) == 0x000008, "Member 'BP_ActionRun_C_GetSpeed::_Action_Run_Accel_Span' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_GetSpeed, CallFunc_BP_GetParam_ReturnValue) == 0x000010, "Member 'BP_ActionRun_C_GetSpeed::CallFunc_BP_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_GetSpeed, CallFunc_BP_GetParam_ReturnValue_1) == 0x000018, "Member 'BP_ActionRun_C_GetSpeed::CallFunc_BP_GetParam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_GetSpeed, CallFunc_BP_GetOwnerState_ReturnValue) == 0x000020, "Member 'BP_ActionRun_C_GetSpeed::CallFunc_BP_GetOwnerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_GetSpeed, CallFunc_BP_IsGiant_ReturnValue) == 0x000028, "Member 'BP_ActionRun_C_GetSpeed::CallFunc_BP_IsGiant_ReturnValue' has a wrong offset!");

// Function BP_ActionRun.BP_ActionRun_C.GetAccelSpan
// 0x0028 (0x0028 - 0x0000)
struct BP_ActionRun_C_GetAccelSpan final
{
public:
	float                                         _Action_Run_Initial_Turn_Span;                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterState*                        CallFunc_BP_GetOwnerState_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterParam*                        CallFunc_BP_GetParam_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsGiant_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterParam*                        CallFunc_BP_GetParam_ReturnValue_1;                // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRun_C_GetAccelSpan) == 0x000008, "Wrong alignment on BP_ActionRun_C_GetAccelSpan");
static_assert(sizeof(BP_ActionRun_C_GetAccelSpan) == 0x000028, "Wrong size on BP_ActionRun_C_GetAccelSpan");
static_assert(offsetof(BP_ActionRun_C_GetAccelSpan, _Action_Run_Initial_Turn_Span) == 0x000000, "Member 'BP_ActionRun_C_GetAccelSpan::_Action_Run_Initial_Turn_Span' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_GetAccelSpan, CallFunc_BP_GetOwnerState_ReturnValue) == 0x000008, "Member 'BP_ActionRun_C_GetAccelSpan::CallFunc_BP_GetOwnerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_GetAccelSpan, CallFunc_BP_GetParam_ReturnValue) == 0x000010, "Member 'BP_ActionRun_C_GetAccelSpan::CallFunc_BP_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_GetAccelSpan, CallFunc_BP_IsGiant_ReturnValue) == 0x000018, "Member 'BP_ActionRun_C_GetAccelSpan::CallFunc_BP_IsGiant_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_GetAccelSpan, CallFunc_BP_GetParam_ReturnValue_1) == 0x000020, "Member 'BP_ActionRun_C_GetAccelSpan::CallFunc_BP_GetParam_ReturnValue_1' has a wrong offset!");

// Function BP_ActionRun.BP_ActionRun_C.BP_IsEnableShiftAction
// 0x000C (0x000C - 0x0000)
struct BP_ActionRun_C_BP_IsEnableShiftAction final
{
public:
	class FName                                   NextAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ActionRun_C_BP_IsEnableShiftAction) == 0x000004, "Wrong alignment on BP_ActionRun_C_BP_IsEnableShiftAction");
static_assert(sizeof(BP_ActionRun_C_BP_IsEnableShiftAction) == 0x00000C, "Wrong size on BP_ActionRun_C_BP_IsEnableShiftAction");
static_assert(offsetof(BP_ActionRun_C_BP_IsEnableShiftAction, NextAction) == 0x000000, "Member 'BP_ActionRun_C_BP_IsEnableShiftAction::NextAction' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_BP_IsEnableShiftAction, ReturnValue) == 0x000008, "Member 'BP_ActionRun_C_BP_IsEnableShiftAction::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRun_C_BP_IsEnableShiftAction, K2Node_SwitchName_CmpSuccess) == 0x000009, "Member 'BP_ActionRun_C_BP_IsEnableShiftAction::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

}

