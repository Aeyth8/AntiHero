#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AntiCheatModule

#include "Basic.hpp"

#include "AntiCheatModule_classes.hpp"
#include "AntiCheatModule_parameters.hpp"


namespace SDK
{

// Function AntiCheatModule.AntiCheatPlayerController.SendAntiCheatMessageClientInternal
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// TArray<int8>                            Message                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AAntiCheatPlayerController::SendAntiCheatMessageClientInternal(const TArray<int8>& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntiCheatPlayerController", "SendAntiCheatMessageClientInternal");

	Params::AntiCheatPlayerController_SendAntiCheatMessageClientInternal Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AntiCheatModule.AntiCheatPlayerController.SendAntiCheatMessageServerInternal
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// TArray<int8>                            Message                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AAntiCheatPlayerController::SendAntiCheatMessageServerInternal(const TArray<int8>& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntiCheatPlayerController", "SendAntiCheatMessageServerInternal");

	Params::AntiCheatPlayerController_SendAntiCheatMessageServerInternal Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

