#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DevelopMenu

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DevelopMenu_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function DevelopMenu.DevelopMenuButtonWidget.GetBorderColor
// 0x0010 (0x0010 - 0x0000)
struct DevelopMenuButtonWidget_GetBorderColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopMenuButtonWidget_GetBorderColor) == 0x000004, "Wrong alignment on DevelopMenuButtonWidget_GetBorderColor");
static_assert(sizeof(DevelopMenuButtonWidget_GetBorderColor) == 0x000010, "Wrong size on DevelopMenuButtonWidget_GetBorderColor");
static_assert(offsetof(DevelopMenuButtonWidget_GetBorderColor, ReturnValue) == 0x000000, "Member 'DevelopMenuButtonWidget_GetBorderColor::ReturnValue' has a wrong offset!");

// Function DevelopMenu.DevelopMenuButtonWidget.GetButtonText
// 0x0018 (0x0018 - 0x0000)
struct DevelopMenuButtonWidget_GetButtonText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopMenuButtonWidget_GetButtonText) == 0x000008, "Wrong alignment on DevelopMenuButtonWidget_GetButtonText");
static_assert(sizeof(DevelopMenuButtonWidget_GetButtonText) == 0x000018, "Wrong size on DevelopMenuButtonWidget_GetButtonText");
static_assert(offsetof(DevelopMenuButtonWidget_GetButtonText, ReturnValue) == 0x000000, "Member 'DevelopMenuButtonWidget_GetButtonText::ReturnValue' has a wrong offset!");

// Function DevelopMenu.DevelopMenuButtonWidget.GetColorAndOpacity
// 0x0028 (0x0028 - 0x0000)
struct DevelopMenuButtonWidget_GetColorAndOpacity final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopMenuButtonWidget_GetColorAndOpacity) == 0x000008, "Wrong alignment on DevelopMenuButtonWidget_GetColorAndOpacity");
static_assert(sizeof(DevelopMenuButtonWidget_GetColorAndOpacity) == 0x000028, "Wrong size on DevelopMenuButtonWidget_GetColorAndOpacity");
static_assert(offsetof(DevelopMenuButtonWidget_GetColorAndOpacity, ReturnValue) == 0x000000, "Member 'DevelopMenuButtonWidget_GetColorAndOpacity::ReturnValue' has a wrong offset!");

// Function DevelopMenu.DevelopMenuButtonWidget.GetContentColorAndOpacity
// 0x0010 (0x0010 - 0x0000)
struct DevelopMenuButtonWidget_GetContentColorAndOpacity final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopMenuButtonWidget_GetContentColorAndOpacity) == 0x000004, "Wrong alignment on DevelopMenuButtonWidget_GetContentColorAndOpacity");
static_assert(sizeof(DevelopMenuButtonWidget_GetContentColorAndOpacity) == 0x000010, "Wrong size on DevelopMenuButtonWidget_GetContentColorAndOpacity");
static_assert(offsetof(DevelopMenuButtonWidget_GetContentColorAndOpacity, ReturnValue) == 0x000000, "Member 'DevelopMenuButtonWidget_GetContentColorAndOpacity::ReturnValue' has a wrong offset!");

// Function DevelopMenu.DevelopMenuItemWidget.ExecuteEvent_CallFunc
// 0x0004 (0x0004 - 0x0000)
struct DevelopMenuItemWidget_ExecuteEvent_CallFunc final
{
public:
	int32                                         SelectNum;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopMenuItemWidget_ExecuteEvent_CallFunc) == 0x000004, "Wrong alignment on DevelopMenuItemWidget_ExecuteEvent_CallFunc");
static_assert(sizeof(DevelopMenuItemWidget_ExecuteEvent_CallFunc) == 0x000004, "Wrong size on DevelopMenuItemWidget_ExecuteEvent_CallFunc");
static_assert(offsetof(DevelopMenuItemWidget_ExecuteEvent_CallFunc, SelectNum) == 0x000000, "Member 'DevelopMenuItemWidget_ExecuteEvent_CallFunc::SelectNum' has a wrong offset!");

// Function DevelopMenu.DevelopMenuItemWidget.ExecuteEvent_OnCheckStateChanged_ItemCheckBox
// 0x0001 (0x0001 - 0x0000)
struct DevelopMenuItemWidget_ExecuteEvent_OnCheckStateChanged_ItemCheckBox final
{
public:
	bool                                          IsChecked;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopMenuItemWidget_ExecuteEvent_OnCheckStateChanged_ItemCheckBox) == 0x000001, "Wrong alignment on DevelopMenuItemWidget_ExecuteEvent_OnCheckStateChanged_ItemCheckBox");
static_assert(sizeof(DevelopMenuItemWidget_ExecuteEvent_OnCheckStateChanged_ItemCheckBox) == 0x000001, "Wrong size on DevelopMenuItemWidget_ExecuteEvent_OnCheckStateChanged_ItemCheckBox");
static_assert(offsetof(DevelopMenuItemWidget_ExecuteEvent_OnCheckStateChanged_ItemCheckBox, IsChecked) == 0x000000, "Member 'DevelopMenuItemWidget_ExecuteEvent_OnCheckStateChanged_ItemCheckBox::IsChecked' has a wrong offset!");

// Function DevelopMenu.DevelopMenuItemWidget.ExecuteEvent_OnSelectionChanged_ItemTextList
// 0x0018 (0x0018 - 0x0000)
struct DevelopMenuItemWidget_ExecuteEvent_OnSelectionChanged_ItemTextList final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DevelopMenuItemWidget_ExecuteEvent_OnSelectionChanged_ItemTextList) == 0x000008, "Wrong alignment on DevelopMenuItemWidget_ExecuteEvent_OnSelectionChanged_ItemTextList");
static_assert(sizeof(DevelopMenuItemWidget_ExecuteEvent_OnSelectionChanged_ItemTextList) == 0x000018, "Wrong size on DevelopMenuItemWidget_ExecuteEvent_OnSelectionChanged_ItemTextList");
static_assert(offsetof(DevelopMenuItemWidget_ExecuteEvent_OnSelectionChanged_ItemTextList, Text) == 0x000000, "Member 'DevelopMenuItemWidget_ExecuteEvent_OnSelectionChanged_ItemTextList::Text' has a wrong offset!");
static_assert(offsetof(DevelopMenuItemWidget_ExecuteEvent_OnSelectionChanged_ItemTextList, SelectionType) == 0x000010, "Member 'DevelopMenuItemWidget_ExecuteEvent_OnSelectionChanged_ItemTextList::SelectionType' has a wrong offset!");

// Function DevelopMenu.DevelopMenuItemWidget.ExecuteEvent_OnTextCommitted_String
// 0x0020 (0x0020 - 0x0000)
struct DevelopMenuItemWidget_ExecuteEvent_OnTextCommitted_String final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DevelopMenuItemWidget_ExecuteEvent_OnTextCommitted_String) == 0x000008, "Wrong alignment on DevelopMenuItemWidget_ExecuteEvent_OnTextCommitted_String");
static_assert(sizeof(DevelopMenuItemWidget_ExecuteEvent_OnTextCommitted_String) == 0x000020, "Wrong size on DevelopMenuItemWidget_ExecuteEvent_OnTextCommitted_String");
static_assert(offsetof(DevelopMenuItemWidget_ExecuteEvent_OnTextCommitted_String, Text) == 0x000000, "Member 'DevelopMenuItemWidget_ExecuteEvent_OnTextCommitted_String::Text' has a wrong offset!");
static_assert(offsetof(DevelopMenuItemWidget_ExecuteEvent_OnTextCommitted_String, CommitMethod) == 0x000018, "Member 'DevelopMenuItemWidget_ExecuteEvent_OnTextCommitted_String::CommitMethod' has a wrong offset!");

// Function DevelopMenu.DevelopMenuItemWidget.ExecuteEvent_OnValueChanged
// 0x0004 (0x0004 - 0x0000)
struct DevelopMenuItemWidget_ExecuteEvent_OnValueChanged final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopMenuItemWidget_ExecuteEvent_OnValueChanged) == 0x000004, "Wrong alignment on DevelopMenuItemWidget_ExecuteEvent_OnValueChanged");
static_assert(sizeof(DevelopMenuItemWidget_ExecuteEvent_OnValueChanged) == 0x000004, "Wrong size on DevelopMenuItemWidget_ExecuteEvent_OnValueChanged");
static_assert(offsetof(DevelopMenuItemWidget_ExecuteEvent_OnValueChanged, Value) == 0x000000, "Member 'DevelopMenuItemWidget_ExecuteEvent_OnValueChanged::Value' has a wrong offset!");

// Function DevelopMenu.DevelopMenuItemWidget.ExecuteEvent_OnValueCommitted_Float
// 0x0008 (0x0008 - 0x0000)
struct DevelopMenuItemWidget_ExecuteEvent_OnValueCommitted_Float final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   CommitMethod;                                      // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DevelopMenuItemWidget_ExecuteEvent_OnValueCommitted_Float) == 0x000004, "Wrong alignment on DevelopMenuItemWidget_ExecuteEvent_OnValueCommitted_Float");
static_assert(sizeof(DevelopMenuItemWidget_ExecuteEvent_OnValueCommitted_Float) == 0x000008, "Wrong size on DevelopMenuItemWidget_ExecuteEvent_OnValueCommitted_Float");
static_assert(offsetof(DevelopMenuItemWidget_ExecuteEvent_OnValueCommitted_Float, Value) == 0x000000, "Member 'DevelopMenuItemWidget_ExecuteEvent_OnValueCommitted_Float::Value' has a wrong offset!");
static_assert(offsetof(DevelopMenuItemWidget_ExecuteEvent_OnValueCommitted_Float, CommitMethod) == 0x000004, "Member 'DevelopMenuItemWidget_ExecuteEvent_OnValueCommitted_Float::CommitMethod' has a wrong offset!");

// Function DevelopMenu.DevelopMenuItemWidget.ExecuteEvent_OnValueCommitted_Int
// 0x0008 (0x0008 - 0x0000)
struct DevelopMenuItemWidget_ExecuteEvent_OnValueCommitted_Int final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   CommitMethod;                                      // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DevelopMenuItemWidget_ExecuteEvent_OnValueCommitted_Int) == 0x000004, "Wrong alignment on DevelopMenuItemWidget_ExecuteEvent_OnValueCommitted_Int");
static_assert(sizeof(DevelopMenuItemWidget_ExecuteEvent_OnValueCommitted_Int) == 0x000008, "Wrong size on DevelopMenuItemWidget_ExecuteEvent_OnValueCommitted_Int");
static_assert(offsetof(DevelopMenuItemWidget_ExecuteEvent_OnValueCommitted_Int, Value) == 0x000000, "Member 'DevelopMenuItemWidget_ExecuteEvent_OnValueCommitted_Int::Value' has a wrong offset!");
static_assert(offsetof(DevelopMenuItemWidget_ExecuteEvent_OnValueCommitted_Int, CommitMethod) == 0x000004, "Member 'DevelopMenuItemWidget_ExecuteEvent_OnValueCommitted_Int::CommitMethod' has a wrong offset!");

// Function DevelopMenu.DevelopMenuItemWidget.GetItemCheckBox
// 0x0001 (0x0001 - 0x0000)
struct DevelopMenuItemWidget_GetItemCheckBox final
{
public:
	ECheckBoxState                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopMenuItemWidget_GetItemCheckBox) == 0x000001, "Wrong alignment on DevelopMenuItemWidget_GetItemCheckBox");
static_assert(sizeof(DevelopMenuItemWidget_GetItemCheckBox) == 0x000001, "Wrong size on DevelopMenuItemWidget_GetItemCheckBox");
static_assert(offsetof(DevelopMenuItemWidget_GetItemCheckBox, ReturnValue) == 0x000000, "Member 'DevelopMenuItemWidget_GetItemCheckBox::ReturnValue' has a wrong offset!");

// Function DevelopMenu.DevelopMenuItemWidget.OnMouseMoveDebug
// 0x0160 (0x0160 - 0x0000)
struct DevelopMenuItemWidget_OnMouseMoveDebug final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopMenuItemWidget_OnMouseMoveDebug) == 0x000008, "Wrong alignment on DevelopMenuItemWidget_OnMouseMoveDebug");
static_assert(sizeof(DevelopMenuItemWidget_OnMouseMoveDebug) == 0x000160, "Wrong size on DevelopMenuItemWidget_OnMouseMoveDebug");
static_assert(offsetof(DevelopMenuItemWidget_OnMouseMoveDebug, MyGeometry) == 0x000000, "Member 'DevelopMenuItemWidget_OnMouseMoveDebug::MyGeometry' has a wrong offset!");
static_assert(offsetof(DevelopMenuItemWidget_OnMouseMoveDebug, MouseEvent) == 0x000038, "Member 'DevelopMenuItemWidget_OnMouseMoveDebug::MouseEvent' has a wrong offset!");
static_assert(offsetof(DevelopMenuItemWidget_OnMouseMoveDebug, ReturnValue) == 0x0000A8, "Member 'DevelopMenuItemWidget_OnMouseMoveDebug::ReturnValue' has a wrong offset!");

// Function DevelopMenu.DevelopMenuItemWidget.OnReloadItem
// 0x0008 (0x0008 - 0x0000)
struct DevelopMenuItemWidget_OnReloadItem final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopMenuItemWidget_OnReloadItem) == 0x000004, "Wrong alignment on DevelopMenuItemWidget_OnReloadItem");
static_assert(sizeof(DevelopMenuItemWidget_OnReloadItem) == 0x000008, "Wrong size on DevelopMenuItemWidget_OnReloadItem");
static_assert(offsetof(DevelopMenuItemWidget_OnReloadItem, Name_0) == 0x000000, "Member 'DevelopMenuItemWidget_OnReloadItem::Name_0' has a wrong offset!");

// Function DevelopMenu.DevelopMenuWidget.ExecuteEvent_OnSelectionChanged_SlotComboBox
// 0x0018 (0x0018 - 0x0000)
struct DevelopMenuWidget_ExecuteEvent_OnSelectionChanged_SlotComboBox final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DevelopMenuWidget_ExecuteEvent_OnSelectionChanged_SlotComboBox) == 0x000008, "Wrong alignment on DevelopMenuWidget_ExecuteEvent_OnSelectionChanged_SlotComboBox");
static_assert(sizeof(DevelopMenuWidget_ExecuteEvent_OnSelectionChanged_SlotComboBox) == 0x000018, "Wrong size on DevelopMenuWidget_ExecuteEvent_OnSelectionChanged_SlotComboBox");
static_assert(offsetof(DevelopMenuWidget_ExecuteEvent_OnSelectionChanged_SlotComboBox, SelectedItem) == 0x000000, "Member 'DevelopMenuWidget_ExecuteEvent_OnSelectionChanged_SlotComboBox::SelectedItem' has a wrong offset!");
static_assert(offsetof(DevelopMenuWidget_ExecuteEvent_OnSelectionChanged_SlotComboBox, SelectionType) == 0x000010, "Member 'DevelopMenuWidget_ExecuteEvent_OnSelectionChanged_SlotComboBox::SelectionType' has a wrong offset!");

// Function DevelopMenu.DevelopMenuWidget.OnClickedMenuButton
// 0x0003 (0x0003 - 0x0000)
struct DevelopMenuWidget_OnClickedMenuButton final
{
public:
	EDevelopMenuMainTabID                         MainId;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDevelopMenuSubTabID                          SubId;                                             // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDevelopMenuHierarchy                         Hierarchy;                                         // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopMenuWidget_OnClickedMenuButton) == 0x000001, "Wrong alignment on DevelopMenuWidget_OnClickedMenuButton");
static_assert(sizeof(DevelopMenuWidget_OnClickedMenuButton) == 0x000003, "Wrong size on DevelopMenuWidget_OnClickedMenuButton");
static_assert(offsetof(DevelopMenuWidget_OnClickedMenuButton, MainId) == 0x000000, "Member 'DevelopMenuWidget_OnClickedMenuButton::MainId' has a wrong offset!");
static_assert(offsetof(DevelopMenuWidget_OnClickedMenuButton, SubId) == 0x000001, "Member 'DevelopMenuWidget_OnClickedMenuButton::SubId' has a wrong offset!");
static_assert(offsetof(DevelopMenuWidget_OnClickedMenuButton, Hierarchy) == 0x000002, "Member 'DevelopMenuWidget_OnClickedMenuButton::Hierarchy' has a wrong offset!");

// Function DevelopMenu.DevelopMenuWidget.SetButtonFlag
// 0x0003 (0x0003 - 0x0000)
struct DevelopMenuWidget_SetButtonFlag final
{
public:
	EDevelopMenuMainTabID                         MainId;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDevelopMenuSubTabID                          SubId;                                             // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDevelopMenuHierarchy                         Hierarchy;                                         // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopMenuWidget_SetButtonFlag) == 0x000001, "Wrong alignment on DevelopMenuWidget_SetButtonFlag");
static_assert(sizeof(DevelopMenuWidget_SetButtonFlag) == 0x000003, "Wrong size on DevelopMenuWidget_SetButtonFlag");
static_assert(offsetof(DevelopMenuWidget_SetButtonFlag, MainId) == 0x000000, "Member 'DevelopMenuWidget_SetButtonFlag::MainId' has a wrong offset!");
static_assert(offsetof(DevelopMenuWidget_SetButtonFlag, SubId) == 0x000001, "Member 'DevelopMenuWidget_SetButtonFlag::SubId' has a wrong offset!");
static_assert(offsetof(DevelopMenuWidget_SetButtonFlag, Hierarchy) == 0x000002, "Member 'DevelopMenuWidget_SetButtonFlag::Hierarchy' has a wrong offset!");

// Function DevelopMenu.DevelopMenuWidget.SetSystemElementFlag
// 0x0001 (0x0001 - 0x0000)
struct DevelopMenuWidget_SetSystemElementFlag final
{
public:
	EDevelopMenuHierarchy                         Hierarchy;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopMenuWidget_SetSystemElementFlag) == 0x000001, "Wrong alignment on DevelopMenuWidget_SetSystemElementFlag");
static_assert(sizeof(DevelopMenuWidget_SetSystemElementFlag) == 0x000001, "Wrong size on DevelopMenuWidget_SetSystemElementFlag");
static_assert(offsetof(DevelopMenuWidget_SetSystemElementFlag, Hierarchy) == 0x000000, "Member 'DevelopMenuWidget_SetSystemElementFlag::Hierarchy' has a wrong offset!");

// Function DevelopMenu.DevelopMenuWidget.GetDipDisplayString
// 0x0018 (0x0018 - 0x0000)
struct DevelopMenuWidget_GetDipDisplayString final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopMenuWidget_GetDipDisplayString) == 0x000008, "Wrong alignment on DevelopMenuWidget_GetDipDisplayString");
static_assert(sizeof(DevelopMenuWidget_GetDipDisplayString) == 0x000018, "Wrong size on DevelopMenuWidget_GetDipDisplayString");
static_assert(offsetof(DevelopMenuWidget_GetDipDisplayString, ReturnValue) == 0x000000, "Member 'DevelopMenuWidget_GetDipDisplayString::ReturnValue' has a wrong offset!");

// Function DevelopMenu.DevelopMenuWidget.GetDipMessageText
// 0x0018 (0x0018 - 0x0000)
struct DevelopMenuWidget_GetDipMessageText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopMenuWidget_GetDipMessageText) == 0x000008, "Wrong alignment on DevelopMenuWidget_GetDipMessageText");
static_assert(sizeof(DevelopMenuWidget_GetDipMessageText) == 0x000018, "Wrong size on DevelopMenuWidget_GetDipMessageText");
static_assert(offsetof(DevelopMenuWidget_GetDipMessageText, ReturnValue) == 0x000000, "Member 'DevelopMenuWidget_GetDipMessageText::ReturnValue' has a wrong offset!");

// Function DevelopMenu.DevelopMenuWidget.GetMakerText
// 0x0018 (0x0018 - 0x0000)
struct DevelopMenuWidget_GetMakerText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopMenuWidget_GetMakerText) == 0x000008, "Wrong alignment on DevelopMenuWidget_GetMakerText");
static_assert(sizeof(DevelopMenuWidget_GetMakerText) == 0x000018, "Wrong size on DevelopMenuWidget_GetMakerText");
static_assert(offsetof(DevelopMenuWidget_GetMakerText, ReturnValue) == 0x000000, "Member 'DevelopMenuWidget_GetMakerText::ReturnValue' has a wrong offset!");

// Function DevelopMenu.DevelopMenuWork.BP_OpenDIPMenu
// 0x0010 (0x0010 - 0x0000)
struct DevelopMenuWork_BP_OpenDIPMenu final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOpen;                                             // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DevelopMenuWork_BP_OpenDIPMenu) == 0x000008, "Wrong alignment on DevelopMenuWork_BP_OpenDIPMenu");
static_assert(sizeof(DevelopMenuWork_BP_OpenDIPMenu) == 0x000010, "Wrong size on DevelopMenuWork_BP_OpenDIPMenu");
static_assert(offsetof(DevelopMenuWork_BP_OpenDIPMenu, WorldContextObject) == 0x000000, "Member 'DevelopMenuWork_BP_OpenDIPMenu::WorldContextObject' has a wrong offset!");
static_assert(offsetof(DevelopMenuWork_BP_OpenDIPMenu, bOpen) == 0x000008, "Member 'DevelopMenuWork_BP_OpenDIPMenu::bOpen' has a wrong offset!");

// Function DevelopMenu.DevelopMenuWork.BP_OpenWaitMenu
// 0x0010 (0x0010 - 0x0000)
struct DevelopMenuWork_BP_OpenWaitMenu final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOpen;                                             // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DevelopMenuWork_BP_OpenWaitMenu) == 0x000008, "Wrong alignment on DevelopMenuWork_BP_OpenWaitMenu");
static_assert(sizeof(DevelopMenuWork_BP_OpenWaitMenu) == 0x000010, "Wrong size on DevelopMenuWork_BP_OpenWaitMenu");
static_assert(offsetof(DevelopMenuWork_BP_OpenWaitMenu, WorldContextObject) == 0x000000, "Member 'DevelopMenuWork_BP_OpenWaitMenu::WorldContextObject' has a wrong offset!");
static_assert(offsetof(DevelopMenuWork_BP_OpenWaitMenu, bOpen) == 0x000008, "Member 'DevelopMenuWork_BP_OpenWaitMenu::bOpen' has a wrong offset!");

// Function DevelopMenu.DevelopMenuWork.BP_GetDipAsBoolean
// 0x000C (0x000C - 0x0000)
struct DevelopMenuWork_BP_GetDipAsBoolean final
{
public:
	class FName                                   IdName;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DevelopMenuWork_BP_GetDipAsBoolean) == 0x000004, "Wrong alignment on DevelopMenuWork_BP_GetDipAsBoolean");
static_assert(sizeof(DevelopMenuWork_BP_GetDipAsBoolean) == 0x00000C, "Wrong size on DevelopMenuWork_BP_GetDipAsBoolean");
static_assert(offsetof(DevelopMenuWork_BP_GetDipAsBoolean, IdName) == 0x000000, "Member 'DevelopMenuWork_BP_GetDipAsBoolean::IdName' has a wrong offset!");
static_assert(offsetof(DevelopMenuWork_BP_GetDipAsBoolean, ReturnValue) == 0x000008, "Member 'DevelopMenuWork_BP_GetDipAsBoolean::ReturnValue' has a wrong offset!");

// Function DevelopMenu.DevelopMenuWork.BP_GetDipAsFloat
// 0x000C (0x000C - 0x0000)
struct DevelopMenuWork_BP_GetDipAsFloat final
{
public:
	class FName                                   IdName;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopMenuWork_BP_GetDipAsFloat) == 0x000004, "Wrong alignment on DevelopMenuWork_BP_GetDipAsFloat");
static_assert(sizeof(DevelopMenuWork_BP_GetDipAsFloat) == 0x00000C, "Wrong size on DevelopMenuWork_BP_GetDipAsFloat");
static_assert(offsetof(DevelopMenuWork_BP_GetDipAsFloat, IdName) == 0x000000, "Member 'DevelopMenuWork_BP_GetDipAsFloat::IdName' has a wrong offset!");
static_assert(offsetof(DevelopMenuWork_BP_GetDipAsFloat, ReturnValue) == 0x000008, "Member 'DevelopMenuWork_BP_GetDipAsFloat::ReturnValue' has a wrong offset!");

// Function DevelopMenu.DevelopMenuWork.BP_GetDipAsInt
// 0x000C (0x000C - 0x0000)
struct DevelopMenuWork_BP_GetDipAsInt final
{
public:
	class FName                                   IdName;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopMenuWork_BP_GetDipAsInt) == 0x000004, "Wrong alignment on DevelopMenuWork_BP_GetDipAsInt");
static_assert(sizeof(DevelopMenuWork_BP_GetDipAsInt) == 0x00000C, "Wrong size on DevelopMenuWork_BP_GetDipAsInt");
static_assert(offsetof(DevelopMenuWork_BP_GetDipAsInt, IdName) == 0x000000, "Member 'DevelopMenuWork_BP_GetDipAsInt::IdName' has a wrong offset!");
static_assert(offsetof(DevelopMenuWork_BP_GetDipAsInt, ReturnValue) == 0x000008, "Member 'DevelopMenuWork_BP_GetDipAsInt::ReturnValue' has a wrong offset!");

// Function DevelopMenu.DevelopMenuWork.BP_GetDipAsString
// 0x0018 (0x0018 - 0x0000)
struct DevelopMenuWork_BP_GetDipAsString final
{
public:
	class FName                                   IdName;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopMenuWork_BP_GetDipAsString) == 0x000008, "Wrong alignment on DevelopMenuWork_BP_GetDipAsString");
static_assert(sizeof(DevelopMenuWork_BP_GetDipAsString) == 0x000018, "Wrong size on DevelopMenuWork_BP_GetDipAsString");
static_assert(offsetof(DevelopMenuWork_BP_GetDipAsString, IdName) == 0x000000, "Member 'DevelopMenuWork_BP_GetDipAsString::IdName' has a wrong offset!");
static_assert(offsetof(DevelopMenuWork_BP_GetDipAsString, ReturnValue) == 0x000008, "Member 'DevelopMenuWork_BP_GetDipAsString::ReturnValue' has a wrong offset!");

}

