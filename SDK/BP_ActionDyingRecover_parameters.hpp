#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActionDyingRecover

#include "Basic.hpp"

#include "GameModule_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ActionDyingRecover.BP_ActionDyingRecover_C.ExecuteUbergraph_BP_ActionDyingRecover
// 0x0060 (0x0060 - 0x0000)
struct BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterState*                        CallFunc_BP_GetOwnerState_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterState*                        CallFunc_BP_GetOwnerState_ReturnValue_1;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_prevAction;                           // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue_1;  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerStateBattle*                     CallFunc_BP_GetPlayerStateBattle_ReturnValue;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_nextAction;                           // 0x0040(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterBattle*                       CallFunc_BP_GetOwnerCharacterBattle_ReturnValue;   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterState*                        CallFunc_BP_GetOwnerState_ReturnValue_2;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterBattleVoiceComponent*         CallFunc_BP_GetBattleVoiceComponent_ReturnValue;   // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover) == 0x000008, "Wrong alignment on BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover");
static_assert(sizeof(BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover) == 0x000060, "Wrong size on BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover");
static_assert(offsetof(BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover, EntryPoint) == 0x000000, "Member 'BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover, CallFunc_BP_GetOwnerState_ReturnValue) == 0x000008, "Member 'BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover::CallFunc_BP_GetOwnerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover, CallFunc_BP_GetOwnerMovementBattle_ReturnValue) == 0x000010, "Member 'BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover::CallFunc_BP_GetOwnerMovementBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover, CallFunc_BP_GetOwnerState_ReturnValue_1) == 0x000018, "Member 'BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover::CallFunc_BP_GetOwnerState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover, K2Node_Event_prevAction) == 0x000020, "Member 'BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover::K2Node_Event_prevAction' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover, CallFunc_NotEqual_NameName_ReturnValue) == 0x000028, "Member 'BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover, CallFunc_BP_GetOwnerMovementBattle_ReturnValue_1) == 0x000030, "Member 'BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover::CallFunc_BP_GetOwnerMovementBattle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover, CallFunc_BP_GetPlayerStateBattle_ReturnValue) == 0x000038, "Member 'BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover::CallFunc_BP_GetPlayerStateBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover, K2Node_Event_nextAction) == 0x000040, "Member 'BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover::K2Node_Event_nextAction' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover, CallFunc_BP_GetOwnerCharacterBattle_ReturnValue) == 0x000048, "Member 'BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover::CallFunc_BP_GetOwnerCharacterBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover, CallFunc_BP_GetOwnerState_ReturnValue_2) == 0x000050, "Member 'BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover::CallFunc_BP_GetOwnerState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover, CallFunc_BP_GetBattleVoiceComponent_ReturnValue) == 0x000058, "Member 'BP_ActionDyingRecover_C_ExecuteUbergraph_BP_ActionDyingRecover::CallFunc_BP_GetBattleVoiceComponent_ReturnValue' has a wrong offset!");

// Function BP_ActionDyingRecover.BP_ActionDyingRecover_C.BP_OnEndAction
// 0x0008 (0x0008 - 0x0000)
struct BP_ActionDyingRecover_C_BP_OnEndAction final
{
public:
	class FName                                   NextAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionDyingRecover_C_BP_OnEndAction) == 0x000004, "Wrong alignment on BP_ActionDyingRecover_C_BP_OnEndAction");
static_assert(sizeof(BP_ActionDyingRecover_C_BP_OnEndAction) == 0x000008, "Wrong size on BP_ActionDyingRecover_C_BP_OnEndAction");
static_assert(offsetof(BP_ActionDyingRecover_C_BP_OnEndAction, NextAction) == 0x000000, "Member 'BP_ActionDyingRecover_C_BP_OnEndAction::NextAction' has a wrong offset!");

// Function BP_ActionDyingRecover.BP_ActionDyingRecover_C.BP_OnBeginAction
// 0x0008 (0x0008 - 0x0000)
struct BP_ActionDyingRecover_C_BP_OnBeginAction final
{
public:
	class FName                                   PrevAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionDyingRecover_C_BP_OnBeginAction) == 0x000004, "Wrong alignment on BP_ActionDyingRecover_C_BP_OnBeginAction");
static_assert(sizeof(BP_ActionDyingRecover_C_BP_OnBeginAction) == 0x000008, "Wrong size on BP_ActionDyingRecover_C_BP_OnBeginAction");
static_assert(offsetof(BP_ActionDyingRecover_C_BP_OnBeginAction, PrevAction) == 0x000000, "Member 'BP_ActionDyingRecover_C_BP_OnBeginAction::PrevAction' has a wrong offset!");

// Function BP_ActionDyingRecover.BP_ActionDyingRecover_C.UpdateMoveDirection
// 0x0020 (0x0020 - 0x0000)
struct BP_ActionDyingRecover_C_UpdateMoveDirection final
{
public:
	class UCharacterCommandComponent*             CallFunc_BP_GetOwnerCommand_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterParam*                        CallFunc_BP_GetParam_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BP_GetMoveDirection_ReturnValue;          // 0x0010(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetDeltaSeconds_ReturnValue;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionDyingRecover_C_UpdateMoveDirection) == 0x000008, "Wrong alignment on BP_ActionDyingRecover_C_UpdateMoveDirection");
static_assert(sizeof(BP_ActionDyingRecover_C_UpdateMoveDirection) == 0x000020, "Wrong size on BP_ActionDyingRecover_C_UpdateMoveDirection");
static_assert(offsetof(BP_ActionDyingRecover_C_UpdateMoveDirection, CallFunc_BP_GetOwnerCommand_ReturnValue) == 0x000000, "Member 'BP_ActionDyingRecover_C_UpdateMoveDirection::CallFunc_BP_GetOwnerCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_UpdateMoveDirection, CallFunc_BP_GetParam_ReturnValue) == 0x000008, "Member 'BP_ActionDyingRecover_C_UpdateMoveDirection::CallFunc_BP_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_UpdateMoveDirection, CallFunc_BP_GetMoveDirection_ReturnValue) == 0x000010, "Member 'BP_ActionDyingRecover_C_UpdateMoveDirection::CallFunc_BP_GetMoveDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_UpdateMoveDirection, CallFunc_BP_GetDeltaSeconds_ReturnValue) == 0x00001C, "Member 'BP_ActionDyingRecover_C_UpdateMoveDirection::CallFunc_BP_GetDeltaSeconds_ReturnValue' has a wrong offset!");

// Function BP_ActionDyingRecover.BP_ActionDyingRecover_C.UpdateSpeedRate
// 0x0018 (0x0018 - 0x0000)
struct BP_ActionDyingRecover_C_UpdateSpeedRate final
{
public:
	class UCharacterCommandComponent*             CallFunc_BP_GetOwnerCommand_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetMoveRate_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionDyingRecover_C_UpdateSpeedRate) == 0x000008, "Wrong alignment on BP_ActionDyingRecover_C_UpdateSpeedRate");
static_assert(sizeof(BP_ActionDyingRecover_C_UpdateSpeedRate) == 0x000018, "Wrong size on BP_ActionDyingRecover_C_UpdateSpeedRate");
static_assert(offsetof(BP_ActionDyingRecover_C_UpdateSpeedRate, CallFunc_BP_GetOwnerCommand_ReturnValue) == 0x000000, "Member 'BP_ActionDyingRecover_C_UpdateSpeedRate::CallFunc_BP_GetOwnerCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_UpdateSpeedRate, CallFunc_BP_GetOwnerMovementBattle_ReturnValue) == 0x000008, "Member 'BP_ActionDyingRecover_C_UpdateSpeedRate::CallFunc_BP_GetOwnerMovementBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_UpdateSpeedRate, CallFunc_BP_GetMoveRate_ReturnValue) == 0x000010, "Member 'BP_ActionDyingRecover_C_UpdateSpeedRate::CallFunc_BP_GetMoveRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_UpdateSpeedRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_ActionDyingRecover_C_UpdateSpeedRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ActionDyingRecover.BP_ActionDyingRecover_C.UpdateCharacterDirection
// 0x0018 (0x0018 - 0x0000)
struct BP_ActionDyingRecover_C_UpdateCharacterDirection final
{
public:
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue;    // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BP_GetMoveDirection_ReturnValue;          // 0x0008(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionDyingRecover_C_UpdateCharacterDirection) == 0x000008, "Wrong alignment on BP_ActionDyingRecover_C_UpdateCharacterDirection");
static_assert(sizeof(BP_ActionDyingRecover_C_UpdateCharacterDirection) == 0x000018, "Wrong size on BP_ActionDyingRecover_C_UpdateCharacterDirection");
static_assert(offsetof(BP_ActionDyingRecover_C_UpdateCharacterDirection, CallFunc_BP_GetOwnerMovementBattle_ReturnValue) == 0x000000, "Member 'BP_ActionDyingRecover_C_UpdateCharacterDirection::CallFunc_BP_GetOwnerMovementBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_UpdateCharacterDirection, CallFunc_BP_GetMoveDirection_ReturnValue) == 0x000008, "Member 'BP_ActionDyingRecover_C_UpdateCharacterDirection::CallFunc_BP_GetMoveDirection_ReturnValue' has a wrong offset!");

// Function BP_ActionDyingRecover.BP_ActionDyingRecover_C.PlayAnimation
// 0x0020 (0x0020 - 0x0000)
struct BP_ActionDyingRecover_C_PlayAnimation final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAnimationId                                  Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  CallFunc_BP_GetCurrentAnimationId_ReturnValue;     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAnimationId                                  K2Node_Select_Default;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionDyingRecover_C_PlayAnimation) == 0x000008, "Wrong alignment on BP_ActionDyingRecover_C_PlayAnimation");
static_assert(sizeof(BP_ActionDyingRecover_C_PlayAnimation) == 0x000020, "Wrong size on BP_ActionDyingRecover_C_PlayAnimation");
static_assert(offsetof(BP_ActionDyingRecover_C_PlayAnimation, Temp_bool_Variable) == 0x000000, "Member 'BP_ActionDyingRecover_C_PlayAnimation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_PlayAnimation, Temp_byte_Variable) == 0x000001, "Member 'BP_ActionDyingRecover_C_PlayAnimation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_PlayAnimation, Temp_byte_Variable_1) == 0x000002, "Member 'BP_ActionDyingRecover_C_PlayAnimation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_PlayAnimation, CallFunc_BP_GetAnimation_ReturnValue) == 0x000008, "Member 'BP_ActionDyingRecover_C_PlayAnimation::CallFunc_BP_GetAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_PlayAnimation, CallFunc_BP_GetAnimation_ReturnValue_1) == 0x000010, "Member 'BP_ActionDyingRecover_C_PlayAnimation::CallFunc_BP_GetAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_PlayAnimation, CallFunc_BP_GetCurrentAnimationId_ReturnValue) == 0x000018, "Member 'BP_ActionDyingRecover_C_PlayAnimation::CallFunc_BP_GetCurrentAnimationId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_PlayAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BP_ActionDyingRecover_C_PlayAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_PlayAnimation, K2Node_Select_Default) == 0x00001A, "Member 'BP_ActionDyingRecover_C_PlayAnimation::K2Node_Select_Default' has a wrong offset!");

// Function BP_ActionDyingRecover.BP_ActionDyingRecover_C.BP_IsEnableShiftAction
// 0x000C (0x000C - 0x0000)
struct BP_ActionDyingRecover_C_BP_IsEnableShiftAction final
{
public:
	class FName                                   NextAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ActionDyingRecover_C_BP_IsEnableShiftAction) == 0x000004, "Wrong alignment on BP_ActionDyingRecover_C_BP_IsEnableShiftAction");
static_assert(sizeof(BP_ActionDyingRecover_C_BP_IsEnableShiftAction) == 0x00000C, "Wrong size on BP_ActionDyingRecover_C_BP_IsEnableShiftAction");
static_assert(offsetof(BP_ActionDyingRecover_C_BP_IsEnableShiftAction, NextAction) == 0x000000, "Member 'BP_ActionDyingRecover_C_BP_IsEnableShiftAction::NextAction' has a wrong offset!");
static_assert(offsetof(BP_ActionDyingRecover_C_BP_IsEnableShiftAction, ReturnValue) == 0x000008, "Member 'BP_ActionDyingRecover_C_BP_IsEnableShiftAction::ReturnValue' has a wrong offset!");

}

