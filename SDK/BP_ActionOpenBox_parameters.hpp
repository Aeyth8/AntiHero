#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActionOpenBox

#include "Basic.hpp"

#include "GameModule_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ActionOpenBox.BP_ActionOpenBox_C.ExecuteUbergraph_BP_ActionOpenBox
// 0x00D0 (0x00D0 - 0x0000)
struct BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BP_GetActionTargetActor_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BP_GetActionTargetActor_ReturnValue_1;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASupplyBox*                             K2Node_DynamicCast_AsSupply_Box;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BP_GetRequiredOpenTime_ReturnValue;       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Turning_TurnSpan;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BP_GetActionTargetActor_ReturnValue_2;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASupplyBox*                             K2Node_DynamicCast_AsSupply_Box_1;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterState*                        CallFunc_BP_GetOwnerState_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterCommandComponent*             CallFunc_BP_GetOwnerCommand_ReturnValue;           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetDeltaSeconds_ReturnValue;           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_nextAction;                           // 0x007C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BP_GetActionTargetActor_ReturnValue_3;    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASupplyBox*                             K2Node_DynamicCast_AsSupply_Box_2;                 // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_prevAction;                           // 0x00AC(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterState*                        CallFunc_BP_GetOwnerState_ReturnValue_1;           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpenBoxAnimation_flag;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue_2;            // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox) == 0x000008, "Wrong alignment on BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox");
static_assert(sizeof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox) == 0x0000D0, "Wrong size on BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, EntryPoint) == 0x000000, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, CallFunc_BP_GetAnimation_ReturnValue) == 0x000008, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::CallFunc_BP_GetAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, CallFunc_BP_GetActionTargetActor_ReturnValue) == 0x000010, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::CallFunc_BP_GetActionTargetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, CallFunc_BP_GetActionTargetActor_ReturnValue_1) == 0x000018, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::CallFunc_BP_GetActionTargetActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, K2Node_DynamicCast_AsSupply_Box) == 0x000028, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::K2Node_DynamicCast_AsSupply_Box' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, CallFunc_BP_GetRequiredOpenTime_ReturnValue) == 0x000034, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::CallFunc_BP_GetRequiredOpenTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, CallFunc_Turning_TurnSpan) == 0x000038, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::CallFunc_Turning_TurnSpan' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, CallFunc_BP_GetAnimation_ReturnValue_1) == 0x000040, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::CallFunc_BP_GetAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, CallFunc_BP_GetActionTargetActor_ReturnValue_2) == 0x000048, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::CallFunc_BP_GetActionTargetActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, K2Node_DynamicCast_AsSupply_Box_1) == 0x000058, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::K2Node_DynamicCast_AsSupply_Box_1' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, CallFunc_BP_GetOwnerState_ReturnValue) == 0x000068, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::CallFunc_BP_GetOwnerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, CallFunc_BP_GetOwnerCommand_ReturnValue) == 0x000070, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::CallFunc_BP_GetOwnerCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, CallFunc_BP_GetDeltaSeconds_ReturnValue) == 0x000078, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::CallFunc_BP_GetDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, K2Node_Event_nextAction) == 0x00007C, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::K2Node_Event_nextAction' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000084, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, CallFunc_Add_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, CallFunc_BooleanAND_ReturnValue) == 0x00008C, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, CallFunc_BP_GetActionTargetActor_ReturnValue_3) == 0x000090, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::CallFunc_BP_GetActionTargetActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, CallFunc_IsValid_ReturnValue_2) == 0x000098, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, K2Node_DynamicCast_AsSupply_Box_2) == 0x0000A0, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::K2Node_DynamicCast_AsSupply_Box_2' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, K2Node_Event_prevAction) == 0x0000AC, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::K2Node_Event_prevAction' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, CallFunc_BP_GetOwnerState_ReturnValue_1) == 0x0000B8, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::CallFunc_BP_GetOwnerState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, CallFunc_IsOpenBoxAnimation_flag) == 0x0000C0, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::CallFunc_IsOpenBoxAnimation_flag' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox, CallFunc_BP_GetAnimation_ReturnValue_2) == 0x0000C8, "Member 'BP_ActionOpenBox_C_ExecuteUbergraph_BP_ActionOpenBox::CallFunc_BP_GetAnimation_ReturnValue_2' has a wrong offset!");

// Function BP_ActionOpenBox.BP_ActionOpenBox_C.BP_OnEndAction
// 0x0008 (0x0008 - 0x0000)
struct BP_ActionOpenBox_C_BP_OnEndAction final
{
public:
	class FName                                   NextAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionOpenBox_C_BP_OnEndAction) == 0x000004, "Wrong alignment on BP_ActionOpenBox_C_BP_OnEndAction");
static_assert(sizeof(BP_ActionOpenBox_C_BP_OnEndAction) == 0x000008, "Wrong size on BP_ActionOpenBox_C_BP_OnEndAction");
static_assert(offsetof(BP_ActionOpenBox_C_BP_OnEndAction, NextAction) == 0x000000, "Member 'BP_ActionOpenBox_C_BP_OnEndAction::NextAction' has a wrong offset!");

// Function BP_ActionOpenBox.BP_ActionOpenBox_C.BP_OnBeginAction
// 0x0008 (0x0008 - 0x0000)
struct BP_ActionOpenBox_C_BP_OnBeginAction final
{
public:
	class FName                                   PrevAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionOpenBox_C_BP_OnBeginAction) == 0x000004, "Wrong alignment on BP_ActionOpenBox_C_BP_OnBeginAction");
static_assert(sizeof(BP_ActionOpenBox_C_BP_OnBeginAction) == 0x000008, "Wrong size on BP_ActionOpenBox_C_BP_OnBeginAction");
static_assert(offsetof(BP_ActionOpenBox_C_BP_OnBeginAction, PrevAction) == 0x000000, "Member 'BP_ActionOpenBox_C_BP_OnBeginAction::PrevAction' has a wrong offset!");

// Function BP_ActionOpenBox.BP_ActionOpenBox_C.Initialize
// 0x0028 (0x0028 - 0x0000)
struct BP_ActionOpenBox_C_Initialize final
{
public:
	class FName                                   PrevAction;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterState*                        CallFunc_BP_GetOwnerState_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue_1;  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionOpenBox_C_Initialize) == 0x000008, "Wrong alignment on BP_ActionOpenBox_C_Initialize");
static_assert(sizeof(BP_ActionOpenBox_C_Initialize) == 0x000028, "Wrong size on BP_ActionOpenBox_C_Initialize");
static_assert(offsetof(BP_ActionOpenBox_C_Initialize, PrevAction) == 0x000000, "Member 'BP_ActionOpenBox_C_Initialize::PrevAction' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Initialize, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000008, "Member 'BP_ActionOpenBox_C_Initialize::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Initialize, CallFunc_BP_GetOwnerState_ReturnValue) == 0x000010, "Member 'BP_ActionOpenBox_C_Initialize::CallFunc_BP_GetOwnerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Initialize, CallFunc_BP_GetOwnerMovementBattle_ReturnValue) == 0x000018, "Member 'BP_ActionOpenBox_C_Initialize::CallFunc_BP_GetOwnerMovementBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Initialize, CallFunc_BP_GetOwnerMovementBattle_ReturnValue_1) == 0x000020, "Member 'BP_ActionOpenBox_C_Initialize::CallFunc_BP_GetOwnerMovementBattle_ReturnValue_1' has a wrong offset!");

// Function BP_ActionOpenBox.BP_ActionOpenBox_C.InitializeOpenStyle
// 0x0060 (0x0060 - 0x0000)
struct BP_ActionOpenBox_C_InitializeOpenStyle final
{
public:
	class ACharacterBattle*                       CallFunc_BP_GetOwnerCharacterBattle_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BP_GetActionTargetActor_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASupplyBox*                             K2Node_DynamicCast_AsSupply_Box;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsLarge_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ActionOpenBox_C_InitializeOpenStyle) == 0x000008, "Wrong alignment on BP_ActionOpenBox_C_InitializeOpenStyle");
static_assert(sizeof(BP_ActionOpenBox_C_InitializeOpenStyle) == 0x000060, "Wrong size on BP_ActionOpenBox_C_InitializeOpenStyle");
static_assert(offsetof(BP_ActionOpenBox_C_InitializeOpenStyle, CallFunc_BP_GetOwnerCharacterBattle_ReturnValue) == 0x000000, "Member 'BP_ActionOpenBox_C_InitializeOpenStyle::CallFunc_BP_GetOwnerCharacterBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_InitializeOpenStyle, CallFunc_BP_GetActionTargetActor_ReturnValue) == 0x000008, "Member 'BP_ActionOpenBox_C_InitializeOpenStyle::CallFunc_BP_GetActionTargetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_InitializeOpenStyle, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_ActionOpenBox_C_InitializeOpenStyle::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_InitializeOpenStyle, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_ActionOpenBox_C_InitializeOpenStyle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_InitializeOpenStyle, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000020, "Member 'BP_ActionOpenBox_C_InitializeOpenStyle::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_InitializeOpenStyle, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00002C, "Member 'BP_ActionOpenBox_C_InitializeOpenStyle::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_InitializeOpenStyle, K2Node_DynamicCast_AsSupply_Box) == 0x000038, "Member 'BP_ActionOpenBox_C_InitializeOpenStyle::K2Node_DynamicCast_AsSupply_Box' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_InitializeOpenStyle, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_ActionOpenBox_C_InitializeOpenStyle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_InitializeOpenStyle, CallFunc_Normal_ReturnValue) == 0x000044, "Member 'BP_ActionOpenBox_C_InitializeOpenStyle::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_InitializeOpenStyle, CallFunc_BP_IsLarge_ReturnValue) == 0x000050, "Member 'BP_ActionOpenBox_C_InitializeOpenStyle::CallFunc_BP_IsLarge_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_InitializeOpenStyle, CallFunc_Dot_VectorVector_ReturnValue) == 0x000054, "Member 'BP_ActionOpenBox_C_InitializeOpenStyle::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_InitializeOpenStyle, CallFunc_Less_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_ActionOpenBox_C_InitializeOpenStyle::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_InitializeOpenStyle, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'BP_ActionOpenBox_C_InitializeOpenStyle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_ActionOpenBox.BP_ActionOpenBox_C.Turning
// 0x0060 (0x0060 - 0x0000)
struct BP_ActionOpenBox_C_Turning final
{
public:
	float                                         TurnSpan;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterBattle*                       CallFunc_BP_GetOwnerCharacterBattle_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BP_GetActionTargetActor_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionOpenBox_C_Turning) == 0x000008, "Wrong alignment on BP_ActionOpenBox_C_Turning");
static_assert(sizeof(BP_ActionOpenBox_C_Turning) == 0x000060, "Wrong size on BP_ActionOpenBox_C_Turning");
static_assert(offsetof(BP_ActionOpenBox_C_Turning, TurnSpan) == 0x000000, "Member 'BP_ActionOpenBox_C_Turning::TurnSpan' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Turning, CallFunc_BP_GetOwnerCharacterBattle_ReturnValue) == 0x000008, "Member 'BP_ActionOpenBox_C_Turning::CallFunc_BP_GetOwnerCharacterBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Turning, CallFunc_BP_GetActionTargetActor_ReturnValue) == 0x000010, "Member 'BP_ActionOpenBox_C_Turning::CallFunc_BP_GetActionTargetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Turning, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_ActionOpenBox_C_Turning::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Turning, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000024, "Member 'BP_ActionOpenBox_C_Turning::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Turning, CallFunc_BP_GetOwnerMovementBattle_ReturnValue) == 0x000030, "Member 'BP_ActionOpenBox_C_Turning::CallFunc_BP_GetOwnerMovementBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Turning, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000038, "Member 'BP_ActionOpenBox_C_Turning::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Turning, CallFunc_BreakVector_X) == 0x000044, "Member 'BP_ActionOpenBox_C_Turning::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Turning, CallFunc_BreakVector_Y) == 0x000048, "Member 'BP_ActionOpenBox_C_Turning::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Turning, CallFunc_BreakVector_Z) == 0x00004C, "Member 'BP_ActionOpenBox_C_Turning::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Turning, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'BP_ActionOpenBox_C_Turning::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_ActionOpenBox.BP_ActionOpenBox_C.Begin
// 0x0028 (0x0028 - 0x0000)
struct BP_ActionOpenBox_C_Begin final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAnimationId                                  Temp_byte_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_1;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  K2Node_Select_Default_1;                           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionOpenBox_C_Begin) == 0x000008, "Wrong alignment on BP_ActionOpenBox_C_Begin");
static_assert(sizeof(BP_ActionOpenBox_C_Begin) == 0x000028, "Wrong size on BP_ActionOpenBox_C_Begin");
static_assert(offsetof(BP_ActionOpenBox_C_Begin, Temp_bool_Variable) == 0x000000, "Member 'BP_ActionOpenBox_C_Begin::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Begin, Temp_float_Variable) == 0x000004, "Member 'BP_ActionOpenBox_C_Begin::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Begin, Temp_float_Variable_1) == 0x000008, "Member 'BP_ActionOpenBox_C_Begin::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Begin, Temp_bool_Variable_1) == 0x00000C, "Member 'BP_ActionOpenBox_C_Begin::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Begin, Temp_byte_Variable) == 0x00000D, "Member 'BP_ActionOpenBox_C_Begin::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Begin, Temp_byte_Variable_1) == 0x00000E, "Member 'BP_ActionOpenBox_C_Begin::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Begin, CallFunc_BP_GetAnimation_ReturnValue) == 0x000010, "Member 'BP_ActionOpenBox_C_Begin::CallFunc_BP_GetAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Begin, K2Node_Select_Default) == 0x000018, "Member 'BP_ActionOpenBox_C_Begin::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Begin, K2Node_Select_Default_1) == 0x00001C, "Member 'BP_ActionOpenBox_C_Begin::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Begin, CallFunc_BP_GetAnimation_ReturnValue_1) == 0x000020, "Member 'BP_ActionOpenBox_C_Begin::CallFunc_BP_GetAnimation_ReturnValue_1' has a wrong offset!");

// Function BP_ActionOpenBox.BP_ActionOpenBox_C.Open
// 0x0020 (0x0020 - 0x0000)
struct BP_ActionOpenBox_C_Open final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAnimationId                                  Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionOpenBox_C_Open) == 0x000008, "Wrong alignment on BP_ActionOpenBox_C_Open");
static_assert(sizeof(BP_ActionOpenBox_C_Open) == 0x000020, "Wrong size on BP_ActionOpenBox_C_Open");
static_assert(offsetof(BP_ActionOpenBox_C_Open, Temp_bool_Variable) == 0x000000, "Member 'BP_ActionOpenBox_C_Open::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Open, Temp_byte_Variable) == 0x000001, "Member 'BP_ActionOpenBox_C_Open::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Open, Temp_byte_Variable_1) == 0x000002, "Member 'BP_ActionOpenBox_C_Open::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Open, CallFunc_BP_GetAnimation_ReturnValue) == 0x000008, "Member 'BP_ActionOpenBox_C_Open::CallFunc_BP_GetAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Open, CallFunc_BP_GetAnimation_ReturnValue_1) == 0x000010, "Member 'BP_ActionOpenBox_C_Open::CallFunc_BP_GetAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Open, K2Node_Select_Default) == 0x000018, "Member 'BP_ActionOpenBox_C_Open::K2Node_Select_Default' has a wrong offset!");

// Function BP_ActionOpenBox.BP_ActionOpenBox_C.Complete
// 0x0020 (0x0020 - 0x0000)
struct BP_ActionOpenBox_C_Complete final
{
public:
	bool                                          LocallyContorol;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EAnimationId                                  Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionOpenBox_C_Complete) == 0x000008, "Wrong alignment on BP_ActionOpenBox_C_Complete");
static_assert(sizeof(BP_ActionOpenBox_C_Complete) == 0x000020, "Wrong size on BP_ActionOpenBox_C_Complete");
static_assert(offsetof(BP_ActionOpenBox_C_Complete, LocallyContorol) == 0x000000, "Member 'BP_ActionOpenBox_C_Complete::LocallyContorol' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Complete, Temp_byte_Variable) == 0x000001, "Member 'BP_ActionOpenBox_C_Complete::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Complete, Temp_byte_Variable_1) == 0x000002, "Member 'BP_ActionOpenBox_C_Complete::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Complete, Temp_bool_Variable) == 0x000003, "Member 'BP_ActionOpenBox_C_Complete::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Complete, CallFunc_BP_GetAnimation_ReturnValue) == 0x000008, "Member 'BP_ActionOpenBox_C_Complete::CallFunc_BP_GetAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Complete, CallFunc_BP_GetAnimation_ReturnValue_1) == 0x000010, "Member 'BP_ActionOpenBox_C_Complete::CallFunc_BP_GetAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_Complete, K2Node_Select_Default) == 0x000018, "Member 'BP_ActionOpenBox_C_Complete::K2Node_Select_Default' has a wrong offset!");

// Function BP_ActionOpenBox.BP_ActionOpenBox_C.IsOpenBoxAnimation
// 0x0018 (0x0018 - 0x0000)
struct BP_ActionOpenBox_C_IsOpenBoxAnimation final
{
public:
	bool                                          Flag;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  CallFunc_BP_GetCurrentAnimationId_ReturnValue;     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ActionOpenBox_C_IsOpenBoxAnimation) == 0x000008, "Wrong alignment on BP_ActionOpenBox_C_IsOpenBoxAnimation");
static_assert(sizeof(BP_ActionOpenBox_C_IsOpenBoxAnimation) == 0x000018, "Wrong size on BP_ActionOpenBox_C_IsOpenBoxAnimation");
static_assert(offsetof(BP_ActionOpenBox_C_IsOpenBoxAnimation, Flag) == 0x000000, "Member 'BP_ActionOpenBox_C_IsOpenBoxAnimation::Flag' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_IsOpenBoxAnimation, CallFunc_BP_GetAnimation_ReturnValue) == 0x000008, "Member 'BP_ActionOpenBox_C_IsOpenBoxAnimation::CallFunc_BP_GetAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_IsOpenBoxAnimation, CallFunc_BP_GetCurrentAnimationId_ReturnValue) == 0x000010, "Member 'BP_ActionOpenBox_C_IsOpenBoxAnimation::CallFunc_BP_GetCurrentAnimationId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_IsOpenBoxAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'BP_ActionOpenBox_C_IsOpenBoxAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_IsOpenBoxAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000012, "Member 'BP_ActionOpenBox_C_IsOpenBoxAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_IsOpenBoxAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000013, "Member 'BP_ActionOpenBox_C_IsOpenBoxAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_IsOpenBoxAnimation, CallFunc_BooleanOR_ReturnValue) == 0x000014, "Member 'BP_ActionOpenBox_C_IsOpenBoxAnimation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_IsOpenBoxAnimation, CallFunc_BooleanOR_ReturnValue_1) == 0x000015, "Member 'BP_ActionOpenBox_C_IsOpenBoxAnimation::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_ActionOpenBox.BP_ActionOpenBox_C.BP_IsEnableShiftAction
// 0x000C (0x000C - 0x0000)
struct BP_ActionOpenBox_C_BP_IsEnableShiftAction final
{
public:
	class FName                                   NextAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ActionOpenBox_C_BP_IsEnableShiftAction) == 0x000004, "Wrong alignment on BP_ActionOpenBox_C_BP_IsEnableShiftAction");
static_assert(sizeof(BP_ActionOpenBox_C_BP_IsEnableShiftAction) == 0x00000C, "Wrong size on BP_ActionOpenBox_C_BP_IsEnableShiftAction");
static_assert(offsetof(BP_ActionOpenBox_C_BP_IsEnableShiftAction, NextAction) == 0x000000, "Member 'BP_ActionOpenBox_C_BP_IsEnableShiftAction::NextAction' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_BP_IsEnableShiftAction, ReturnValue) == 0x000008, "Member 'BP_ActionOpenBox_C_BP_IsEnableShiftAction::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionOpenBox_C_BP_IsEnableShiftAction, K2Node_SwitchName_CmpSuccess) == 0x000009, "Member 'BP_ActionOpenBox_C_BP_IsEnableShiftAction::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

}

