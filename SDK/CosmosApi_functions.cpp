#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CosmosApi

#include "Basic.hpp"

#include "CosmosApi_classes.hpp"
#include "CosmosApi_parameters.hpp"


namespace SDK
{

// Function CosmosApi.NetHttp.Create
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetHttp* UNetHttp::Create(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NetHttp", "Create");

	Params::NetHttp_Create Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CosmosApi.NetHttp.PostRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetMessage*                      Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LimitSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetHttp* UNetHttp::PostRequest(class UObject* WorldContextObject, const class FString& URL, class UNetMessage* Data, float LimitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetHttp", "PostRequest");

	Params::NetHttp_PostRequest Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.URL = std::move(URL);
	Parms.Data = Data;
	Parms.LimitSec = LimitSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CosmosApi.NetHttp.SetHeader
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TitleCd                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           UserId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Session                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Platform                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetHttp*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetHttp* UNetHttp::SetHeader(class UObject* WorldContextObject, const class FString& TitleCd, const class FString& UserId, const class FString& Session, int32 Platform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetHttp", "SetHeader");

	Params::NetHttp_SetHeader Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TitleCd = std::move(TitleCd);
	Parms.UserId = std::move(UserId);
	Parms.Session = std::move(Session);
	Parms.Platform = Platform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CosmosApi.NetMessage.Create
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* UNetMessage::Create(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NetMessage", "Create");

	Params::NetMessage_Create Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CosmosApi.NetMessage.Dump
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Prefix                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UNetMessage::Dump(const class FString& Prefix)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetMessage", "Dump");

	Params::NetMessage_Dump Parms{};

	Parms.Prefix = std::move(Prefix);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CosmosApi.NetMessage.DumpHttp
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Prefix                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UNetMessage::DumpHttp(const class FString& Prefix)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetMessage", "DumpHttp");

	Params::NetMessage_DumpHttp Parms{};

	Parms.Prefix = std::move(Prefix);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CosmosApi.NetMessage.DumpHttpHeader
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Prefix                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UNetMessage::DumpHttpHeader(const class FString& Prefix)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetMessage", "DumpHttpHeader");

	Params::NetMessage_DumpHttpHeader Parms{};

	Parms.Prefix = std::move(Prefix);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CosmosApi.NetMessage.Set
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UNetMessage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNetMessage* UNetMessage::Set(int32 ID, const TArray<uint8>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetMessage", "Set");

	Params::NetMessage_Set Parms{};

	Parms.ID = ID;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CosmosApi.NetMessage.ToJson
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UNetMessage::ToJson()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetMessage", "ToJson");

	Params::NetMessage_ToJson Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CosmosApi.NetSocketFacadeInterface.SetCipherMode
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENetSocketCipherMode                    Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void INetSocketFacadeInterface::SetCipherMode(ENetSocketCipherMode Mode, const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSocketFacadeInterface", "SetCipherMode");

	Params::NetSocketFacadeInterface_SetCipherMode Parms{};

	Parms.Mode = Mode;
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSocketFacadeInterface.SetUseTickReceive
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Use                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void INetSocketFacadeInterface::SetUseTickReceive(bool Use)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSocketFacadeInterface", "SetUseTickReceive");

	Params::NetSocketFacadeInterface_SetUseTickReceive Parms{};

	Parms.Use = Use;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.Appeal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AppealMessage                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetSquad::Appeal(const class FString& AppealMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "Appeal");

	Params::NetSquad_Appeal Parms{};

	Parms.AppealMessage = std::move(AppealMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.AppealCustomSquad
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           CustomRoomId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CustomSquadNo                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Appeal                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetSquad::AppealCustomSquad(const class FString& CustomRoomId, int32 CustomSquadNo, const class FString& Appeal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "AppealCustomSquad");

	Params::NetSquad_AppealCustomSquad Parms{};

	Parms.CustomRoomId = std::move(CustomRoomId);
	Parms.CustomSquadNo = CustomSquadNo;
	Parms.Appeal = std::move(Appeal);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.CancelCustomLobbyMatching
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           CustomRoomId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetSquad::CancelCustomLobbyMatching(const class FString& CustomRoomId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "CancelCustomLobbyMatching");

	Params::NetSquad_CancelCustomLobbyMatching Parms{};

	Parms.CustomRoomId = std::move(CustomRoomId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.CancelFindSquad
// (Final, Native, Public, BlueprintCallable)

void UNetSquad::CancelFindSquad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "CancelFindSquad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.CancelSquadMatching
// (Final, Native, Public, BlueprintCallable)

void UNetSquad::CancelSquadMatching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "CancelSquadMatching");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.ChangePlayMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewPlayMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetSquad::ChangePlayMode(int32 NewPlayMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "ChangePlayMode");

	Params::NetSquad_ChangePlayMode Parms{};

	Parms.NewPlayMode = NewPlayMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.ConnectMatchingServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Score                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetSquad::ConnectMatchingServer(int32 Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "ConnectMatchingServer");

	Params::NetSquad_ConnectMatchingServer Parms{};

	Parms.Score = Score;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.CreateCustomRoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           CustomRoomId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           UserData                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CustomRoomData                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CustomRoomPlayMode                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetSquad::CreateCustomRoom(const class FString& CustomRoomId, const class FString& UserData, const class FString& CustomRoomData, int32 CustomRoomPlayMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "CreateCustomRoom");

	Params::NetSquad_CreateCustomRoom Parms{};

	Parms.CustomRoomId = std::move(CustomRoomId);
	Parms.UserData = std::move(UserData);
	Parms.CustomRoomData = std::move(CustomRoomData);
	Parms.CustomRoomPlayMode = CustomRoomPlayMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.CreateSquad
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCreateSquadParam                Param                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UNetSquad::CreateSquad(const struct FCreateSquadParam& Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "CreateSquad");

	Params::NetSquad_CreateSquad Parms{};

	Parms.Param = std::move(Param);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.Disconnect
// (Final, Native, Public, BlueprintCallable)

void UNetSquad::Disconnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "Disconnect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.FindSquad
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Skill                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ConnectionServerIP                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ConnectionServerPort                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetSquad::FindSquad(int32 PlayMode, int32 Skill, const class FString& ConnectionServerIP, int32 ConnectionServerPort)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "FindSquad");

	Params::NetSquad_FindSquad Parms{};

	Parms.PlayMode = PlayMode;
	Parms.Skill = Skill;
	Parms.ConnectionServerIP = std::move(ConnectionServerIP);
	Parms.ConnectionServerPort = ConnectionServerPort;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.FinishCustomGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           CustomRoomId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetSquad::FinishCustomGame(const class FString& CustomRoomId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "FinishCustomGame");

	Params::NetSquad_FinishCustomGame Parms{};

	Parms.CustomRoomId = std::move(CustomRoomId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.GetBattleServerAddress
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           OutServerHost                                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutServerPort                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNetSquad::GetBattleServerAddress(class FString* OutServerHost, int32* OutServerPort)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "GetBattleServerAddress");

	Params::NetSquad_GetBattleServerAddress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutServerHost != nullptr)
		*OutServerHost = std::move(Parms.OutServerHost);

	if (OutServerPort != nullptr)
		*OutServerPort = Parms.OutServerPort;

	return Parms.ReturnValue;
}


// Function CosmosApi.NetSquad.GetConnectionServerAddress
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           OutServerHost                                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutServerPort                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNetSquad::GetConnectionServerAddress(class FString* OutServerHost, int32* OutServerPort)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "GetConnectionServerAddress");

	Params::NetSquad_GetConnectionServerAddress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutServerHost != nullptr)
		*OutServerHost = std::move(Parms.OutServerHost);

	if (OutServerPort != nullptr)
		*OutServerPort = Parms.OutServerPort;

	return Parms.ReturnValue;
}


// Function CosmosApi.NetSquad.GetCustomLobbyServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           CustomRoomId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetSquad::GetCustomLobbyServer(const class FString& CustomRoomId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "GetCustomLobbyServer");

	Params::NetSquad_GetCustomLobbyServer Parms{};

	Parms.CustomRoomId = std::move(CustomRoomId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.GetCustomRoomData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           CustomRoomId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetSquad::GetCustomRoomData(const class FString& CustomRoomId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "GetCustomRoomData");

	Params::NetSquad_GetCustomRoomData Parms{};

	Parms.CustomRoomId = std::move(CustomRoomId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.Initialize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FNetSquadConfig                  Config                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bUseWebSocket                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseP2P                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetSquad::Initialize(const struct FNetSquadConfig& Config, bool bUseWebSocket, bool bUseP2P)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "Initialize");

	Params::NetSquad_Initialize Parms{};

	Parms.Config = std::move(Config);
	Parms.bUseWebSocket = bUseWebSocket;
	Parms.bUseP2P = bUseP2P;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.JoinCustomRoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           CustomRoomId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           UserData                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetSquad::JoinCustomRoom(const class FString& CustomRoomId, const class FString& UserData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "JoinCustomRoom");

	Params::NetSquad_JoinCustomRoom Parms{};

	Parms.CustomRoomId = std::move(CustomRoomId);
	Parms.UserData = std::move(UserData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.JoinInvitedSquad
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           JoinSquadId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FNetSquadMemberData              OutMemberData                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UNetSquad::JoinInvitedSquad(const class FString& JoinSquadId, const struct FNetSquadMemberData& OutMemberData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "JoinInvitedSquad");

	Params::NetSquad_JoinInvitedSquad Parms{};

	Parms.JoinSquadId = std::move(JoinSquadId);
	Parms.OutMemberData = std::move(OutMemberData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.JoinMatchingSquad
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           JoinSquadId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FNetSquadMemberData              MemberData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UNetSquad::JoinMatchingSquad(const class FString& JoinSquadId, const struct FNetSquadMemberData& MemberData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "JoinMatchingSquad");

	Params::NetSquad_JoinMatchingSquad Parms{};

	Parms.JoinSquadId = std::move(JoinSquadId);
	Parms.MemberData = std::move(MemberData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.KickCustomRoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           CustomRoomId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           UserId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetSquad::KickCustomRoom(const class FString& CustomRoomId, const class FString& UserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "KickCustomRoom");

	Params::NetSquad_KickCustomRoom Parms{};

	Parms.CustomRoomId = std::move(CustomRoomId);
	Parms.UserId = std::move(UserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.KickSquadMember
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           UserId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetSquad::KickSquadMember(const class FString& UserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "KickSquadMember");

	Params::NetSquad_KickSquadMember Parms{};

	Parms.UserId = std::move(UserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.LeaveCustomRoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           CustomRoomId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetSquad::LeaveCustomRoom(const class FString& CustomRoomId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "LeaveCustomRoom");

	Params::NetSquad_LeaveCustomRoom Parms{};

	Parms.CustomRoomId = std::move(CustomRoomId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.LeaveSquad
// (Final, Native, Public, BlueprintCallable)

void UNetSquad::LeaveSquad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "LeaveSquad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.QuitGame
// (Final, Native, Public, BlueprintCallable)

void UNetSquad::QuitGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "QuitGame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.ReadyCustomRoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           CustomRoomId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetSquad::ReadyCustomRoom(const class FString& CustomRoomId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "ReadyCustomRoom");

	Params::NetSquad_ReadyCustomRoom Parms{};

	Parms.CustomRoomId = std::move(CustomRoomId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.RequestSquadMemberData
// (Final, Native, Public, BlueprintCallable)

void UNetSquad::RequestSquadMemberData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "RequestSquadMemberData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.SendCustomSquadChat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           CustomRoomId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CustomSquadNo                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ChatMessage                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetSquad::SendCustomSquadChat(const class FString& CustomRoomId, int32 CustomSquadNo, const class FString& ChatMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "SendCustomSquadChat");

	Params::NetSquad_SendCustomSquadChat Parms{};

	Parms.CustomRoomId = std::move(CustomRoomId);
	Parms.CustomSquadNo = CustomSquadNo;
	Parms.ChatMessage = std::move(ChatMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.SendHeartbeat
// (Final, Native, Public, BlueprintCallable)

void UNetSquad::SendHeartbeat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "SendHeartbeat");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.SendSquadChatMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetSquad::SendSquadChatMessage(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "SendSquadChatMessage");

	Params::NetSquad_SendSquadChatMessage Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.SetCustomMemberData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           CustomRoomId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           UserData                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetSquad::SetCustomMemberData(const class FString& CustomRoomId, const class FString& UserData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "SetCustomMemberData");

	Params::NetSquad_SetCustomMemberData Parms{};

	Parms.CustomRoomId = std::move(CustomRoomId);
	Parms.UserData = std::move(UserData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.SetCustomRoomMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           CustomRoomId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FCosmosCustomRoomSquadList>RoomSquadList                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UNetSquad::SetCustomRoomMember(const class FString& CustomRoomId, const TArray<struct FCosmosCustomRoomSquadList>& RoomSquadList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "SetCustomRoomMember");

	Params::NetSquad_SetCustomRoomMember Parms{};

	Parms.CustomRoomId = std::move(CustomRoomId);
	Parms.RoomSquadList = std::move(RoomSquadList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.SetCustomRoomSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           CustomRoomId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CustomRoomData                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CustomRoomPlayMode                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetSquad::SetCustomRoomSettings(const class FString& CustomRoomId, const class FString& CustomRoomData, int32 CustomRoomPlayMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "SetCustomRoomSettings");

	Params::NetSquad_SetCustomRoomSettings Parms{};

	Parms.CustomRoomId = std::move(CustomRoomId);
	Parms.CustomRoomData = std::move(CustomRoomData);
	Parms.CustomRoomPlayMode = CustomRoomPlayMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.SetSquadMemberData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FNetSquadMemberData              MemberData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UNetSquad::SetSquadMemberData(const struct FNetSquadMemberData& MemberData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "SetSquadMemberData");

	Params::NetSquad_SetSquadMemberData Parms{};

	Parms.MemberData = std::move(MemberData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.StartSquadMatching
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Skill                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetSquad::StartSquadMatching(int32 PlayMode, int32 Skill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "StartSquadMatching");

	Params::NetSquad_StartSquadMatching Parms{};

	Parms.PlayMode = PlayMode;
	Parms.Skill = Skill;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CosmosApi.NetSquad.GetPlayMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNetSquad::GetPlayMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "GetPlayMode");

	Params::NetSquad_GetPlayMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CosmosApi.NetSquad.GetSquadId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UNetSquad::GetSquadId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "GetSquadId");

	Params::NetSquad_GetSquadId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CosmosApi.NetSquad.GetSquadMemberData
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           UserId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FNetSquadMemberData              OutMemberData                                          (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNetSquad::GetSquadMemberData(const class FString& UserId, struct FNetSquadMemberData* OutMemberData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "GetSquadMemberData");

	Params::NetSquad_GetSquadMemberData Parms{};

	Parms.UserId = std::move(UserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMemberData != nullptr)
		*OutMemberData = std::move(Parms.OutMemberData);

	return Parms.ReturnValue;
}


// Function CosmosApi.NetSquad.GetSquadMemberList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UNetSquad::GetSquadMemberList() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "GetSquadMemberList");

	Params::NetSquad_GetSquadMemberList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CosmosApi.NetSquad.GetUserId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UNetSquad::GetUserId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "GetUserId");

	Params::NetSquad_GetUserId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CosmosApi.NetSquad.IsLeader
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNetSquad::IsLeader() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSquad", "IsLeader");

	Params::NetSquad_IsLeader Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

