#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NLP_Test

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_NLP_Test.BP_NLP_Test_C.ExecuteUbergraph_BP_NLP_Test
// 0x0020 (0x0020 - 0x0000)
struct BP_NLP_Test_C_ExecuteUbergraph_BP_NLP_Test final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Agent;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Destination;                          // 0x0010(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NLP_Test_C_ExecuteUbergraph_BP_NLP_Test) == 0x000008, "Wrong alignment on BP_NLP_Test_C_ExecuteUbergraph_BP_NLP_Test");
static_assert(sizeof(BP_NLP_Test_C_ExecuteUbergraph_BP_NLP_Test) == 0x000020, "Wrong size on BP_NLP_Test_C_ExecuteUbergraph_BP_NLP_Test");
static_assert(offsetof(BP_NLP_Test_C_ExecuteUbergraph_BP_NLP_Test, EntryPoint) == 0x000000, "Member 'BP_NLP_Test_C_ExecuteUbergraph_BP_NLP_Test::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NLP_Test_C_ExecuteUbergraph_BP_NLP_Test, K2Node_Event_Agent) == 0x000008, "Member 'BP_NLP_Test_C_ExecuteUbergraph_BP_NLP_Test::K2Node_Event_Agent' has a wrong offset!");
static_assert(offsetof(BP_NLP_Test_C_ExecuteUbergraph_BP_NLP_Test, K2Node_Event_Destination) == 0x000010, "Member 'BP_NLP_Test_C_ExecuteUbergraph_BP_NLP_Test::K2Node_Event_Destination' has a wrong offset!");

// Function BP_NLP_Test.BP_NLP_Test_C.ReceiveSmartLinkReached
// 0x0018 (0x0018 - 0x0000)
struct BP_NLP_Test_C_ReceiveSmartLinkReached final
{
public:
	class AActor*                                 Agent;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Destination;                                       // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NLP_Test_C_ReceiveSmartLinkReached) == 0x000008, "Wrong alignment on BP_NLP_Test_C_ReceiveSmartLinkReached");
static_assert(sizeof(BP_NLP_Test_C_ReceiveSmartLinkReached) == 0x000018, "Wrong size on BP_NLP_Test_C_ReceiveSmartLinkReached");
static_assert(offsetof(BP_NLP_Test_C_ReceiveSmartLinkReached, Agent) == 0x000000, "Member 'BP_NLP_Test_C_ReceiveSmartLinkReached::Agent' has a wrong offset!");
static_assert(offsetof(BP_NLP_Test_C_ReceiveSmartLinkReached, Destination) == 0x000008, "Member 'BP_NLP_Test_C_ReceiveSmartLinkReached::Destination' has a wrong offset!");

}

