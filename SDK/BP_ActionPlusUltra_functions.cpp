#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActionPlusUltra

#include "Basic.hpp"

#include "BP_ActionPlusUltra_classes.hpp"
#include "BP_ActionPlusUltra_parameters.hpp"


namespace SDK
{

// Function BP_ActionPlusUltra.BP_ActionPlusUltra_C.ExecuteUbergraph_BP_ActionPlusUltra
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ActionPlusUltra_C::ExecuteUbergraph_BP_ActionPlusUltra(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionPlusUltra_C", "ExecuteUbergraph_BP_ActionPlusUltra");

	Params::BP_ActionPlusUltra_C_ExecuteUbergraph_BP_ActionPlusUltra Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ActionPlusUltra.BP_ActionPlusUltra_C.BP_OnAnimNotify
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             Type                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Event                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ActionPlusUltra_C::BP_OnAnimNotify(const class FName& Type, const class FName& Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionPlusUltra_C", "BP_OnAnimNotify");

	Params::BP_ActionPlusUltra_C_BP_OnAnimNotify Parms{};

	Parms.Type = Type;
	Parms.Event = Event;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ActionPlusUltra.BP_ActionPlusUltra_C.BP_OnEndAction
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             NextAction                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ActionPlusUltra_C::BP_OnEndAction(const class FName& NextAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionPlusUltra_C", "BP_OnEndAction");

	Params::BP_ActionPlusUltra_C_BP_OnEndAction Parms{};

	Parms.NextAction = NextAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ActionPlusUltra.BP_ActionPlusUltra_C.BP_ActionRemote
// (Event, Protected, BlueprintEvent)

void UBP_ActionPlusUltra_C::BP_ActionRemote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionPlusUltra_C", "BP_ActionRemote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ActionPlusUltra.BP_ActionPlusUltra_C.BP_OnBeginAction
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             PrevAction                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ActionPlusUltra_C::BP_OnBeginAction(const class FName& PrevAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionPlusUltra_C", "BP_OnBeginAction");

	Params::BP_ActionPlusUltra_C_BP_OnBeginAction Parms{};

	Parms.PrevAction = PrevAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ActionPlusUltra.BP_ActionPlusUltra_C.BP_ActionMain
// (Event, Protected, BlueprintEvent)

void UBP_ActionPlusUltra_C::BP_ActionMain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionPlusUltra_C", "BP_ActionMain");

	UObject::ProcessEvent(Func, nullptr);
}

}

