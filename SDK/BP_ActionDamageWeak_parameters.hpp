#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActionDamageWeak

#include "Basic.hpp"

#include "GameModule_structs.hpp"
#include "InGameModule_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ActionDamageWeak.BP_ActionDamageWeak_C.ExecuteUbergraph_BP_ActionDamageWeak
// 0x0048 (0x0048 - 0x0000)
struct BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateBattle*                     CallFunc_BP_GetPlayerStateBattle_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsDead_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsDying_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_prevAction;                           // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  CallFunc_DecideAnimationId_Animation_Id;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterState*                        CallFunc_BP_GetOwnerState_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue_1;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  CallFunc_DecideAnimationId_Animation_Id_1;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak) == 0x000008, "Wrong alignment on BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak");
static_assert(sizeof(BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak) == 0x000048, "Wrong size on BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak");
static_assert(offsetof(BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak, EntryPoint) == 0x000000, "Member 'BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak, CallFunc_BP_GetPlayerStateBattle_ReturnValue) == 0x000008, "Member 'BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak::CallFunc_BP_GetPlayerStateBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak, CallFunc_BP_IsDead_ReturnValue) == 0x000010, "Member 'BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak::CallFunc_BP_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak, CallFunc_BP_IsDying_ReturnValue) == 0x000011, "Member 'BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak::CallFunc_BP_IsDying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak, CallFunc_BooleanOR_ReturnValue) == 0x000012, "Member 'BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak, CallFunc_BP_GetAnimation_ReturnValue) == 0x000018, "Member 'BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak::CallFunc_BP_GetAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak, K2Node_Event_prevAction) == 0x000020, "Member 'BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak::K2Node_Event_prevAction' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak, CallFunc_DecideAnimationId_Animation_Id) == 0x000028, "Member 'BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak::CallFunc_DecideAnimationId_Animation_Id' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak, CallFunc_BP_GetOwnerState_ReturnValue) == 0x000030, "Member 'BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak::CallFunc_BP_GetOwnerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak, CallFunc_BP_GetAnimation_ReturnValue_1) == 0x000038, "Member 'BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak::CallFunc_BP_GetAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak, CallFunc_DecideAnimationId_Animation_Id_1) == 0x000040, "Member 'BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak::CallFunc_DecideAnimationId_Animation_Id_1' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000041, "Member 'BP_ActionDamageWeak_C_ExecuteUbergraph_BP_ActionDamageWeak::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_ActionDamageWeak.BP_ActionDamageWeak_C.BP_OnBeginAction
// 0x0008 (0x0008 - 0x0000)
struct BP_ActionDamageWeak_C_BP_OnBeginAction final
{
public:
	class FName                                   PrevAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionDamageWeak_C_BP_OnBeginAction) == 0x000004, "Wrong alignment on BP_ActionDamageWeak_C_BP_OnBeginAction");
static_assert(sizeof(BP_ActionDamageWeak_C_BP_OnBeginAction) == 0x000008, "Wrong size on BP_ActionDamageWeak_C_BP_OnBeginAction");
static_assert(offsetof(BP_ActionDamageWeak_C_BP_OnBeginAction, PrevAction) == 0x000000, "Member 'BP_ActionDamageWeak_C_BP_OnBeginAction::PrevAction' has a wrong offset!");

// Function BP_ActionDamageWeak.BP_ActionDamageWeak_C.UpdateOnce
// 0x00A8 (0x00A8 - 0x0000)
struct BP_ActionDamageWeak_C_UpdateOnce final
{
public:
	struct FVector                                CallFunc_BP_GetMoveDirection_ReturnValue;          // 0x0000(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterDamageComponent*              CallFunc_BP_GetOwnerDamage_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDamageInfo                            CallFunc_BP_GetDamageInfo_ReturnValue;             // 0x0018(0x0080)(ConstParm, NoDestructor)
	struct FVector                                CallFunc_BP_GetDamageDirection_ReturnValue;        // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionDamageWeak_C_UpdateOnce) == 0x000008, "Wrong alignment on BP_ActionDamageWeak_C_UpdateOnce");
static_assert(sizeof(BP_ActionDamageWeak_C_UpdateOnce) == 0x0000A8, "Wrong size on BP_ActionDamageWeak_C_UpdateOnce");
static_assert(offsetof(BP_ActionDamageWeak_C_UpdateOnce, CallFunc_BP_GetMoveDirection_ReturnValue) == 0x000000, "Member 'BP_ActionDamageWeak_C_UpdateOnce::CallFunc_BP_GetMoveDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_UpdateOnce, CallFunc_BP_GetOwnerDamage_ReturnValue) == 0x000010, "Member 'BP_ActionDamageWeak_C_UpdateOnce::CallFunc_BP_GetOwnerDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_UpdateOnce, CallFunc_BP_GetDamageInfo_ReturnValue) == 0x000018, "Member 'BP_ActionDamageWeak_C_UpdateOnce::CallFunc_BP_GetDamageInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_UpdateOnce, CallFunc_BP_GetDamageDirection_ReturnValue) == 0x000098, "Member 'BP_ActionDamageWeak_C_UpdateOnce::CallFunc_BP_GetDamageDirection_ReturnValue' has a wrong offset!");

// Function BP_ActionDamageWeak.BP_ActionDamageWeak_C.DecideAnimationId
// 0x00A0 (0x00A0 - 0x0000)
struct BP_ActionDamageWeak_C_DecideAnimationId final
{
public:
	EAnimationId                                  Animation_Id;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageDirection                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_6;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EDamageDirection                              Temp_byte_Variable_7;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_8;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_9;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_10;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_11;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_12;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  Temp_byte_Variable_13;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterState*                        CallFunc_BP_GetOwnerState_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDamageInfo                            CallFunc_BP_GetDamageInfo_ReturnValue;             // 0x0018(0x0080)(ConstParm, NoDestructor)
	bool                                          CallFunc_BP_IsOnGround_ReturnValue;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAnimationId                                  K2Node_Select_Default;                             // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  K2Node_Select_Default_1;                           // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationId                                  K2Node_Select_Default_2;                           // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionDamageWeak_C_DecideAnimationId) == 0x000008, "Wrong alignment on BP_ActionDamageWeak_C_DecideAnimationId");
static_assert(sizeof(BP_ActionDamageWeak_C_DecideAnimationId) == 0x0000A0, "Wrong size on BP_ActionDamageWeak_C_DecideAnimationId");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, Animation_Id) == 0x000000, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::Animation_Id' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, Temp_byte_Variable) == 0x000001, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, Temp_byte_Variable_1) == 0x000002, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, Temp_byte_Variable_2) == 0x000003, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, Temp_byte_Variable_3) == 0x000004, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, Temp_byte_Variable_4) == 0x000005, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, Temp_byte_Variable_5) == 0x000006, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, Temp_byte_Variable_6) == 0x000007, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, Temp_bool_Variable) == 0x000008, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, Temp_byte_Variable_7) == 0x000009, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, Temp_byte_Variable_8) == 0x00000A, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, Temp_byte_Variable_9) == 0x00000B, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, Temp_byte_Variable_10) == 0x00000C, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, Temp_byte_Variable_11) == 0x00000D, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, Temp_byte_Variable_12) == 0x00000E, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, Temp_byte_Variable_13) == 0x00000F, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, CallFunc_BP_GetOwnerState_ReturnValue) == 0x000010, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::CallFunc_BP_GetOwnerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, CallFunc_BP_GetDamageInfo_ReturnValue) == 0x000018, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::CallFunc_BP_GetDamageInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, CallFunc_BP_IsOnGround_ReturnValue) == 0x000098, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::CallFunc_BP_IsOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, K2Node_Select_Default) == 0x000099, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, K2Node_Select_Default_1) == 0x00009A, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageWeak_C_DecideAnimationId, K2Node_Select_Default_2) == 0x00009B, "Member 'BP_ActionDamageWeak_C_DecideAnimationId::K2Node_Select_Default_2' has a wrong offset!");

}

