#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameModule

#include "Basic.hpp"

#include "GameModule_classes.hpp"
#include "GameModule_parameters.hpp"


namespace SDK
{

// Function GameModule.AchievementWork.OnAddItem
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FDbItemCategoryParam             Item                                                   (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quantity                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAchievementWork::OnAddItem(const struct FDbItemCategoryParam& Item, const int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AchievementWork", "OnAddItem");

	Params::AchievementWork_OnAddItem Parms{};

	Parms.Item = std::move(Item);
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.AchievementWork.SetBuyShop
// (Final, Native, Protected)

void UAchievementWork::SetBuyShop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AchievementWork", "SetBuyShop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.AchievementWork.SetClearTutorial
// (Final, Native, Protected)

void UAchievementWork::SetClearTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AchievementWork", "SetClearTutorial");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.AchievementWork.SetSendLike
// (Final, Native, Public)
// Parameters:
// int32                                   Count                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAchievementWork::SetSendLike(const int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AchievementWork", "SetSendLike");

	Params::AchievementWork_SetSendLike Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.AdjustTextWidget.BP_GetFont
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSlateFontInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FSlateFontInfo UAdjustTextWidget::BP_GetFont()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdjustTextWidget", "BP_GetFont");

	Params::AdjustTextWidget_BP_GetFont Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.AdjustTextWidget.BP_GetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UAdjustTextWidget::BP_GetText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdjustTextWidget", "BP_GetText");

	Params::AdjustTextWidget_BP_GetText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.AdjustTextWidget.BP_SetFont
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSlateFontInfo                   Font                                                   (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAdjustTextWidget::BP_SetFont(const struct FSlateFontInfo& Font)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdjustTextWidget", "BP_SetFont");

	Params::AdjustTextWidget_BP_SetFont Parms{};

	Parms.Font = std::move(Font);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.AdjustTextWidget.BP_SetJustification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETextJustify                            Justification                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAdjustTextWidget::BP_SetJustification(ETextJustify Justification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdjustTextWidget", "BP_SetJustification");

	Params::AdjustTextWidget_BP_SetJustification Parms{};

	Parms.Justification = Justification;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.AdjustTextWidget.BP_SetLineBreak
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    LineBreak                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAdjustTextWidget::BP_SetLineBreak(bool LineBreak)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdjustTextWidget", "BP_SetLineBreak");

	Params::AdjustTextWidget_BP_SetLineBreak Parms{};

	Parms.LineBreak = LineBreak;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.AdjustTextWidget.BP_SetText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAdjustTextWidget::BP_SetText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdjustTextWidget", "BP_SetText");

	Params::AdjustTextWidget_BP_SetText Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.AdjustTextWidget.BP_SetTextColorAndOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSlateColor                      InColorAndOpacity                                      (Parm, NativeAccessSpecifierPublic)

void UAdjustTextWidget::BP_SetTextColorAndOpacity(const struct FSlateColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdjustTextWidget", "BP_SetTextColorAndOpacity");

	Params::AdjustTextWidget_BP_SetTextColorAndOpacity Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.AdjustTextWidget.OnFinishedScrollEventDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UAdjustTextWidget::OnFinishedScrollEventDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdjustTextWidget", "OnFinishedScrollEventDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.Animation.BP_AnimationBlendingOutStartedDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// EAnimationId                            ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_AnimationBlendingOutStartedDelegate(TDelegate<void()> Delegate, EAnimationId ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_AnimationBlendingOutStartedDelegate");

	Params::Animation_BP_AnimationBlendingOutStartedDelegate Parms{};

	Parms.Delegate = Delegate;
	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_AnimationEndedDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// EAnimationId                            ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_AnimationEndedDelegate(TDelegate<void()> Delegate, EAnimationId ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_AnimationEndedDelegate");

	Params::Animation_BP_AnimationEndedDelegate Parms{};

	Parms.Delegate = Delegate;
	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_ChangeAnimationAsset
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECharacterId                            CharaID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EAnimationId>                    SrcIds                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FName>                     DstIds                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAnimation::BP_ChangeAnimationAsset(ECharacterId CharaID, const TArray<EAnimationId>& SrcIds, const TArray<class FName>& DstIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_ChangeAnimationAsset");

	Params::Animation_BP_ChangeAnimationAsset Parms{};

	Parms.CharaID = CharaID;
	Parms.SrcIds = std::move(SrcIds);
	Parms.DstIds = std::move(DstIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_ChangeNagaraGuard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharacterId                            CharaID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_ChangeNagaraGuard(ECharacterId CharaID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_ChangeNagaraGuard");

	Params::Animation_BP_ChangeNagaraGuard Parms{};

	Parms.CharaID = CharaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_ChangeNagaraOtherCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharacterId                            CharaID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   VariationNo                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_ChangeNagaraOtherCharacter(ECharacterId CharaID, uint8 VariationNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_ChangeNagaraOtherCharacter");

	Params::Animation_BP_ChangeNagaraOtherCharacter Parms{};

	Parms.CharaID = CharaID;
	Parms.VariationNo = VariationNo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_ChangeNagaraOtherUnique
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   UniqueNo                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharacterId                            CharaID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   VariationNo                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_ChangeNagaraOtherUnique(int32 UniqueNo, ECharacterId CharaID, uint8 VariationNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_ChangeNagaraOtherUnique");

	Params::Animation_BP_ChangeNagaraOtherUnique Parms{};

	Parms.UniqueNo = UniqueNo;
	Parms.CharaID = CharaID;
	Parms.VariationNo = VariationNo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_ChangeUniqueOtherCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   UniqueNo                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharacterId                            CharaID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   VariationNo                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_ChangeUniqueOtherCharacter(int32 UniqueNo, ECharacterId CharaID, uint8 VariationNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_ChangeUniqueOtherCharacter");

	Params::Animation_BP_ChangeUniqueOtherCharacter Parms{};

	Parms.UniqueNo = UniqueNo;
	Parms.CharaID = CharaID;
	Parms.VariationNo = VariationNo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_DisableAnimNotify
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NotifyTypeFlags                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_DisableAnimNotify(int32 NotifyTypeFlags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_DisableAnimNotify");

	Params::Animation_BP_DisableAnimNotify Parms{};

	Parms.NotifyTypeFlags = NotifyTypeFlags;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_DisableRootMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAnimationSlot                          Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDisable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_DisableRootMotion(EAnimationSlot Slot, bool bDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_DisableRootMotion");

	Params::Animation_BP_DisableRootMotion Parms{};

	Parms.Slot = Slot;
	Parms.bDisable = bDisable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_EmoteCodeToAnimIdName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   EmoteCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UAnimation::BP_EmoteCodeToAnimIdName(int32 EmoteCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_EmoteCodeToAnimIdName");

	Params::Animation_BP_EmoteCodeToAnimIdName Parms{};

	Parms.EmoteCode = EmoteCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.Animation.BP_JumpToSection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SectionName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAnimationSlot                          Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_JumpToSection(class FName SectionName, EAnimationSlot Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_JumpToSection");

	Params::Animation_BP_JumpToSection Parms{};

	Parms.SectionName = SectionName;
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_PlayAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAnimationId                            ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendInTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNotReplay                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_PlayAnimation(EAnimationId ID, float PlayRate, float BlendInTime, bool bNotReplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_PlayAnimation");

	Params::Animation_BP_PlayAnimation Parms{};

	Parms.ID = ID;
	Parms.PlayRate = PlayRate;
	Parms.BlendInTime = BlendInTime;
	Parms.bNotReplay = bNotReplay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_PlayAnimationAsync
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharacterId                            CharaID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAnimationSlot                          Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendInTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendOutTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_PlayAnimationAsync(ECharacterId CharaID, class FName ID, EAnimationSlot Slot, float PlayRate, float BlendInTime, float BlendOutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_PlayAnimationAsync");

	Params::Animation_BP_PlayAnimationAsync Parms{};

	Parms.CharaID = CharaID;
	Parms.ID = ID;
	Parms.Slot = Slot;
	Parms.PlayRate = PlayRate;
	Parms.BlendInTime = BlendInTime;
	Parms.BlendOutTime = BlendOutTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_PlayAnimationEmote
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   EmoteCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendInTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_PlayAnimationEmote(int32 EmoteCode, float PlayRate, float BlendInTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_PlayAnimationEmote");

	Params::Animation_BP_PlayAnimationEmote Parms{};

	Parms.EmoteCode = EmoteCode;
	Parms.PlayRate = PlayRate;
	Parms.BlendInTime = BlendInTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_PlayAnimationFace
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAnimationId                            ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendInTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_PlayAnimationFace(EAnimationId ID, float PlayRate, float BlendInTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_PlayAnimationFace");

	Params::Animation_BP_PlayAnimationFace Parms{};

	Parms.ID = ID;
	Parms.PlayRate = PlayRate;
	Parms.BlendInTime = BlendInTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_PlayAnimationNagara
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAnimationId                            ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendInTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_PlayAnimationNagara(EAnimationId ID, float PlayRate, float BlendInTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_PlayAnimationNagara");

	Params::Animation_BP_PlayAnimationNagara Parms{};

	Parms.ID = ID;
	Parms.PlayRate = PlayRate;
	Parms.BlendInTime = BlendInTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_PlayAnimationNagaraDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAnimationId                            ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendInTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_PlayAnimationNagaraDamage(EAnimationId ID, float PlayRate, float BlendInTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_PlayAnimationNagaraDamage");

	Params::Animation_BP_PlayAnimationNagaraDamage Parms{};

	Parms.ID = ID;
	Parms.PlayRate = PlayRate;
	Parms.BlendInTime = BlendInTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_PlayAnimationNagaraGuard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAnimationId                            ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendInTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_PlayAnimationNagaraGuard(EAnimationId ID, float PlayRate, float BlendInTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_PlayAnimationNagaraGuard");

	Params::Animation_BP_PlayAnimationNagaraGuard Parms{};

	Parms.ID = ID;
	Parms.PlayRate = PlayRate;
	Parms.BlendInTime = BlendInTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_PlayAnimationReplicate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAnimationId                            ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAnimationSlot                          Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_PlayAnimationReplicate(EAnimationId ID, EAnimationSlot Slot, float PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_PlayAnimationReplicate");

	Params::Animation_BP_PlayAnimationReplicate Parms{};

	Parms.ID = ID;
	Parms.Slot = Slot;
	Parms.PlayRate = PlayRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_ResetDynamics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETeleportType                           TeleportType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_ResetDynamics(ETeleportType TeleportType, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_ResetDynamics");

	Params::Animation_BP_ResetDynamics Parms{};

	Parms.TeleportType = TeleportType;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_SetAimingRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Rate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_SetAimingRate(float Rate, float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_SetAimingRate");

	Params::Animation_BP_SetAimingRate Parms{};

	Parms.Rate = Rate;
	Parms.BlendTime = BlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_SetAimTargetLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_SetAimTargetLocation(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_SetAimTargetLocation");

	Params::Animation_BP_SetAimTargetLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_SetAnimationSpeedRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Speed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_SetAnimationSpeedRate(float Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_SetAnimationSpeedRate");

	Params::Animation_BP_SetAnimationSpeedRate Parms{};

	Parms.Speed = Speed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_SetCenterRotationOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         Rot                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UAnimation::BP_SetCenterRotationOffset(const struct FRotator& Rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_SetCenterRotationOffset");

	Params::Animation_BP_SetCenterRotationOffset Parms{};

	Parms.Rot = std::move(Rot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_SetCenterTransOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Offset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_SetCenterTransOffset(const struct FVector& Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_SetCenterTransOffset");

	Params::Animation_BP_SetCenterTransOffset Parms{};

	Parms.Offset = std::move(Offset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_SetCurrentPlayPosition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAnimationSlot                          Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_SetCurrentPlayPosition(EAnimationSlot Slot, float Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_SetCurrentPlayPosition");

	Params::Animation_BP_SetCurrentPlayPosition Parms{};

	Parms.Slot = Slot;
	Parms.Position = Position;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_SetFaceAimingRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Rate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_SetFaceAimingRate(float Rate, float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_SetFaceAimingRate");

	Params::Animation_BP_SetFaceAimingRate Parms{};

	Parms.Rate = Rate;
	Parms.BlendTime = BlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_SetFaceDamageOneShot
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Rate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_SetFaceDamageOneShot(const struct FVector& Location, float Rate, float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_SetFaceDamageOneShot");

	Params::Animation_BP_SetFaceDamageOneShot Parms{};

	Parms.Location = std::move(Location);
	Parms.Rate = Rate;
	Parms.BlendTime = BlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_SetLeanRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Rate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxSpeed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_SetLeanRate(float Rate, float MaxSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_SetLeanRate");

	Params::Animation_BP_SetLeanRate Parms{};

	Parms.Rate = Rate;
	Parms.MaxSpeed = MaxSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_SetMoveType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAnimationMoveType                      Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_SetMoveType(EAnimationMoveType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_SetMoveType");

	Params::Animation_BP_SetMoveType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_SetPlayRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAnimationSlot                          Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_SetPlayRate(EAnimationSlot Slot, float PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_SetPlayRate");

	Params::Animation_BP_SetPlayRate Parms{};

	Parms.Slot = Slot;
	Parms.PlayRate = PlayRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_SetRunMoveDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_SetRunMoveDistance(float Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_SetRunMoveDistance");

	Params::Animation_BP_SetRunMoveDistance Parms{};

	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_SetWalkMoveDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_SetWalkMoveDistance(float Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_SetWalkMoveDistance");

	Params::Animation_BP_SetWalkMoveDistance Parms{};

	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_SetWholeAimingRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Rate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_SetWholeAimingRate(float Rate, float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_SetWholeAimingRate");

	Params::Animation_BP_SetWholeAimingRate Parms{};

	Parms.Rate = Rate;
	Parms.BlendTime = BlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_StopAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAnimationSlot                          Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendOutTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::BP_StopAnimation(EAnimationSlot Slot, float BlendOutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_StopAnimation");

	Params::Animation_BP_StopAnimation Parms{};

	Parms.Slot = Slot;
	Parms.BlendOutTime = BlendOutTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.OnMontageBlendingOutStarted
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInterrupted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::OnMontageBlendingOutStarted(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "OnMontageBlendingOutStarted");

	Params::Animation_OnMontageBlendingOutStarted Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.OnMontageEnded
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInterrupted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::OnMontageEnded(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "OnMontageEnded");

	Params::Animation_OnMontageEnded Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.OnMontageStarted
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimation::OnMontageStarted(class UAnimMontage* Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "OnMontageStarted");

	Params::Animation_OnMontageStarted Parms{};

	Parms.Montage = Montage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.OnRep_PlayAnimation
// (Final, Native, Protected)

void UAnimation::OnRep_PlayAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "OnRep_PlayAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.ServerPlayAnimation
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FAnimationPlayParams             Param                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UAnimation::ServerPlayAnimation(const struct FAnimationPlayParams& Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "ServerPlayAnimation");

	Params::Animation_ServerPlayAnimation Parms{};

	Parms.Param = std::move(Param);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Animation.BP_GetCurrentAnimationId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAnimationSlot                          Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAnimationId                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAnimationId UAnimation::BP_GetCurrentAnimationId(EAnimationSlot Slot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_GetCurrentAnimationId");

	Params::Animation_BP_GetCurrentAnimationId Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.Animation.BP_GetCurrentPlayLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAnimationSlot                          Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAnimation::BP_GetCurrentPlayLength(EAnimationSlot Slot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_GetCurrentPlayLength");

	Params::Animation_BP_GetCurrentPlayLength Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.Animation.BP_GetCurrentPlayPosition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAnimationSlot                          Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAnimation::BP_GetCurrentPlayPosition(EAnimationSlot Slot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_GetCurrentPlayPosition");

	Params::Animation_BP_GetCurrentPlayPosition Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.Animation.BP_IsActiveAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAnimationSlot                          Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAnimationId                            ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAnimation::BP_IsActiveAnimation(EAnimationSlot Slot, EAnimationId ID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_IsActiveAnimation");

	Params::Animation_BP_IsActiveAnimation Parms{};

	Parms.Slot = Slot;
	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.Animation.BP_IsBaseCommon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAnimation::BP_IsBaseCommon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_IsBaseCommon");

	Params::Animation_BP_IsBaseCommon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.Animation.BP_IsInitialized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAnimation::BP_IsInitialized() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_IsInitialized");

	Params::Animation_BP_IsInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.Animation.BP_IsPlayingAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAnimationSlot                          Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAnimationId                            ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAnimation::BP_IsPlayingAnimation(EAnimationSlot Slot, EAnimationId ID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Animation", "BP_IsPlayingAnimation");

	Params::Animation_BP_IsPlayingAnimation Parms{};

	Parms.Slot = Slot;
	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.AnimInstanceGame.BP_EndNotifyStates
// (Final, Native, Public, BlueprintCallable)

void UAnimInstanceGame::BP_EndNotifyStates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimInstanceGame", "BP_EndNotifyStates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.AnimInstanceGame.PlayCharacterSelectIdle__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UAnimInstanceGame::PlayCharacterSelectIdle__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimInstanceGame", "PlayCharacterSelectIdle__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.AnimInstancePostProcess.BP_OnResetAnimInstance
// (Event, Public, BlueprintEvent)

void UAnimInstancePostProcess::BP_OnResetAnimInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimInstancePostProcess", "BP_OnResetAnimInstance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.AnimInstancePostProcess.IsBaseCommon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAnimInstancePostProcess::IsBaseCommon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimInstancePostProcess", "IsBaseCommon");

	Params::AnimInstancePostProcess_IsBaseCommon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.AsyncSaveGameOption.AsyncSaveGameOption
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAsyncSaveGameOption*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAsyncSaveGameOption* UAsyncSaveGameOption::AsyncSaveGameOption(class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AsyncSaveGameOption", "AsyncSaveGameOption");

	Params::AsyncSaveGameOption_AsyncSaveGameOption Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.AsyncSaveGameOption.Complete
// (Final, Native, Private)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAsyncSaveGameOption::Complete(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncSaveGameOption", "Complete");

	Params::AsyncSaveGameOption_Complete Parms{};

	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.BGMSubsystem.IsPlayingAnyMusic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBGMSubsystem::IsPlayingAnyMusic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGMSubsystem", "IsPlayingAnyMusic");

	Params::BGMSubsystem_IsPlayingAnyMusic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.BGMSubsystem.PlayMusic
// (Final, Native, Public)
// Parameters:
// class USoundAtomCue*                    Cue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBGMSubsystem::PlayMusic(class USoundAtomCue* Cue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGMSubsystem", "PlayMusic");

	Params::BGMSubsystem_PlayMusic Parms{};

	Parms.Cue = Cue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.BGMSubsystem.SetAisacByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ControlName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ControlValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBGMSubsystem::SetAisacByName(const class FString& ControlName, float ControlValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGMSubsystem", "SetAisacByName");

	Params::BGMSubsystem_SetAisacByName Parms{};

	Parms.ControlName = std::move(ControlName);
	Parms.ControlValue = ControlValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.BGMSubsystem.StartMusic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             bgmType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCrossFadeOnReleaseTimeBegin                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeToCrossFadeStartOnReleaseTimeBegin                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceReplay                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBGMSubsystem::StartMusic(class FName bgmType, bool bCrossFadeOnReleaseTimeBegin, float TimeToCrossFadeStartOnReleaseTimeBegin, bool bForceReplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGMSubsystem", "StartMusic");

	Params::BGMSubsystem_StartMusic Parms{};

	Parms.bgmType = bgmType;
	Parms.bCrossFadeOnReleaseTimeBegin = bCrossFadeOnReleaseTimeBegin;
	Parms.TimeToCrossFadeStartOnReleaseTimeBegin = TimeToCrossFadeStartOnReleaseTimeBegin;
	Parms.bForceReplay = bForceReplay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.BGMSubsystem.StopNowPlayingMusic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bWithReleaseTime                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBGMSubsystem::StopNowPlayingMusic(bool bWithReleaseTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGMSubsystem", "StopNowPlayingMusic");

	Params::BGMSubsystem_StopNowPlayingMusic Parms{};

	Parms.bWithReleaseTime = bWithReleaseTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.BGMSubsystem.TransitNowPlayingMusicBlock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   BlockIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBGMSubsystem::TransitNowPlayingMusicBlock(int32 BlockIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BGMSubsystem", "TransitNowPlayingMusicBlock");

	Params::BGMSubsystem_TransitNowPlayingMusicBlock Parms{};

	Parms.BlockIndex = BlockIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.BlockListWidget.OnClosedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    bDecide                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlockListWidget::OnClosedDelegate__DelegateSignature(bool bDecide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlockListWidget", "OnClosedDelegate__DelegateSignature");

	Params::BlockListWidget_OnClosedDelegate__DelegateSignature Parms{};

	Parms.bDecide = bDecide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.BlockListWidget.OnCloseEvent
// (Final, Native, Protected)

void UBlockListWidget::OnCloseEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlockListWidget", "OnCloseEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.BlockListWidget.OnCompletedFadeOut
// (Final, Native, Protected)

void UBlockListWidget::OnCompletedFadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlockListWidget", "OnCompletedFadeOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.BlockListWidget.OnCompleteNotifyExitRoom
// (Final, Native, Protected)

void UBlockListWidget::OnCompleteNotifyExitRoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlockListWidget", "OnCompleteNotifyExitRoom");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.BlockListWidget.OnOpenEvent
// (Final, Native, Protected)

void UBlockListWidget::OnOpenEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlockListWidget", "OnOpenEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.BlockListWidget.OnWindowInputEvent
// (Final, Native, Protected)
// Parameters:
// class UAppWidget*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWidgetInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    LeftButton                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlockListWidget::OnWindowInputEvent(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlockListWidget", "OnWindowInputEvent");

	Params::BlockListWidget_OnWindowInputEvent Parms{};

	Parms.Widget = Widget;
	Parms.InputType = InputType;
	Parms.LeftButton = LeftButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.BPActorUtilityComponent.BP_SpawnEmitterAtLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UParticleSystem*                  EmitterTemplate                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       SpawnTransform                                         (ConstParm, Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAutoDestroy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCustomParticleSystemComponent*   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCustomParticleSystemComponent* UBPActorUtilityComponent::BP_SpawnEmitterAtLocation(class UParticleSystem* EmitterTemplate, const struct FTransform& SpawnTransform, bool bAutoDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPActorUtilityComponent", "BP_SpawnEmitterAtLocation");

	Params::BPActorUtilityComponent_BP_SpawnEmitterAtLocation Parms{};

	Parms.EmitterTemplate = EmitterTemplate;
	Parms.SpawnTransform = std::move(SpawnTransform);
	Parms.bAutoDestroy = bAutoDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.BPActorUtilityComponent.BP_SpawnEmitterAttached
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UParticleSystem*                  EmitterTemplate                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  AttachToComponent                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AttachPointName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// EAttachLocation                         LocationType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoDestroy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCustomParticleSystemComponent*   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCustomParticleSystemComponent* UBPActorUtilityComponent::BP_SpawnEmitterAttached(class UParticleSystem* EmitterTemplate, class USceneComponent* AttachToComponent, class FName AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, EAttachLocation LocationType, bool bAutoDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPActorUtilityComponent", "BP_SpawnEmitterAttached");

	Params::BPActorUtilityComponent_BP_SpawnEmitterAttached Parms{};

	Parms.EmitterTemplate = EmitterTemplate;
	Parms.AttachToComponent = AttachToComponent;
	Parms.AttachPointName = AttachPointName;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.LocationType = LocationType;
	Parms.bAutoDestroy = bAutoDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.BPActorUtilityComponent.BP_SpawnEmitterVertex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UParticleSystem*                  EmitterTemplate                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*           Mesh                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCustomParticleSystemComponent*   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCustomParticleSystemComponent* UBPActorUtilityComponent::BP_SpawnEmitterVertex(class UParticleSystem* EmitterTemplate, class USkeletalMeshComponent* Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPActorUtilityComponent", "BP_SpawnEmitterVertex");

	Params::BPActorUtilityComponent_BP_SpawnEmitterVertex Parms{};

	Parms.EmitterTemplate = EmitterTemplate;
	Parms.Mesh = Mesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.BPActorUtilityComponent.BP_IsAvatar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBPActorUtilityComponent::BP_IsAvatar(ECharacterId CharacterId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPActorUtilityComponent", "BP_IsAvatar");

	Params::BPActorUtilityComponent_BP_IsAvatar Parms{};

	Parms.CharacterId = CharacterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CharacterAvatarComponent.BP_GetAvatarBodyPhysique
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UCharacterAvatarComponent::BP_GetAvatarBodyPhysique() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterAvatarComponent", "BP_GetAvatarBodyPhysique");

	Params::CharacterAvatarComponent_BP_GetAvatarBodyPhysique Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CharacterAvatarComponent.BP_GetAvatarBodyScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UCharacterAvatarComponent::BP_GetAvatarBodyScale() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterAvatarComponent", "BP_GetAvatarBodyScale");

	Params::CharacterAvatarComponent_BP_GetAvatarBodyScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CharacterGame.BP_ChangeAnimBlueprint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                           AnimBPClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharacterGame::BP_ChangeAnimBlueprint(class UClass* AnimBPClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterGame", "BP_ChangeAnimBlueprint");

	Params::CharacterGame_BP_ChangeAnimBlueprint Parms{};

	Parms.AnimBPClass = AnimBPClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CharacterGame.BP_HideAllImpersonationBone
// (Final, Native, Public, BlueprintCallable)

void ACharacterGame::BP_HideAllImpersonationBone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterGame", "BP_HideAllImpersonationBone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CharacterGame.BP_UnHideImpersonationBone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharacterGame::BP_UnHideImpersonationBone(class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterGame", "BP_UnHideImpersonationBone");

	Params::CharacterGame_BP_UnHideImpersonationBone Parms{};

	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CharacterGame.EnableAuraEffect
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCustomParticleSystemComponent*   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCustomParticleSystemComponent* ACharacterGame::EnableAuraEffect(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterGame", "EnableAuraEffect");

	Params::CharacterGame_EnableAuraEffect Parms{};

	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction GameModule.CharacterGame.OnSetupMaterialDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ACharacterGame::OnSetupMaterialDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterGame", "OnSetupMaterialDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.CharacterGame.BP_GetAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimation*                       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimation* ACharacterGame::BP_GetAnimation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterGame", "BP_GetAnimation");

	Params::CharacterGame_BP_GetAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CharacterGame.BP_GetBPActorUtilityComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBPActorUtilityComponent*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBPActorUtilityComponent* ACharacterGame::BP_GetBPActorUtilityComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterGame", "BP_GetBPActorUtilityComponent");

	Params::CharacterGame_BP_GetBPActorUtilityComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CharacterGame.BP_GetCharacterId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterId                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharacterId ACharacterGame::BP_GetCharacterId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterGame", "BP_GetCharacterId");

	Params::CharacterGame_BP_GetCharacterId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CharacterGame.BP_GetCostumeMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMesh*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMesh* ACharacterGame::BP_GetCostumeMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterGame", "BP_GetCostumeMesh");

	Params::CharacterGame_BP_GetCostumeMesh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CharacterGame.BP_GetMaterialControl
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMaterialControlComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialControlComponent* ACharacterGame::BP_GetMaterialControl() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterGame", "BP_GetMaterialControl");

	Params::CharacterGame_BP_GetMaterialControl Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CharacterGame.BP_GetOptionMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             PotionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMesh* ACharacterGame::BP_GetOptionMesh(class FName PotionName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterGame", "BP_GetOptionMesh");

	Params::CharacterGame_BP_GetOptionMesh Parms{};

	Parms.PotionName = PotionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CharacterGame.BP_GetVariationNo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ACharacterGame::BP_GetVariationNo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterGame", "BP_GetVariationNo");

	Params::CharacterGame_BP_GetVariationNo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CharacterGame.BP_IsImpersonator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharacterGame::BP_IsImpersonator() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterGame", "BP_IsImpersonator");

	Params::CharacterGame_BP_IsImpersonator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CharacterGame.GetAvatarComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCharacterAvatarComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCharacterAvatarComponent* ACharacterGame::GetAvatarComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterGame", "GetAvatarComponent");

	Params::CharacterGame_GetAvatarComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CharacterGame.GetVisualMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* ACharacterGame::GetVisualMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterGame", "GetVisualMesh");

	Params::CharacterGame_GetVisualMesh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CharacterGame.IsAvatarCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharacterGame::IsAvatarCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterGame", "IsAvatarCharacter");

	Params::CharacterGame_IsAvatarCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CharacterStateBase.BP_SetAirialState
// (Final, Native, Public, BlueprintCallable)

void UCharacterStateBase::BP_SetAirialState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterStateBase", "BP_SetAirialState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CharacterStateBase.BP_SetGroundState
// (Final, Native, Public, BlueprintCallable)

void UCharacterStateBase::BP_SetGroundState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterStateBase", "BP_SetGroundState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CharacterStateBase.BP_IsOnGround
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCharacterStateBase::BP_IsOnGround() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterStateBase", "BP_IsOnGround");

	Params::CharacterStateBase_BP_IsOnGround Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CharacterVoiceComponent.OnAudioFinishedEvent
// (Final, Native, Private)
// Parameters:
// class UAtomComponent*                   AtomComponent                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterVoiceComponent::OnAudioFinishedEvent(class UAtomComponent* AtomComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterVoiceComponent", "OnAudioFinishedEvent");

	Params::CharacterVoiceComponent_OnAudioFinishedEvent Parms{};

	Parms.AtomComponent = AtomComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CharacterVoiceComponent.PlayNextVoice
// (Final, Native, Public)

void UCharacterVoiceComponent::PlayNextVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterVoiceComponent", "PlayNextVoice");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ChatMute.BP_Open
// (Final, Native, Public, BlueprintCallable)

void UChatMute::BP_Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatMute", "BP_Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ChatMute.Close
// (Final, Native, Public)
// Parameters:
// class UAppWidget*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWidgetInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatMute::Close(class UAppWidget* Widget, EWidgetInputType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatMute", "Close");

	Params::ChatMute_Close Parms{};

	Parms.Widget = Widget;
	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ChatMute.OnChangeSquad
// (Final, Native, Public)
// Parameters:
// int32                                   SquadNum                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatMute::OnChangeSquad(int32 SquadNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatMute", "OnChangeSquad");

	Params::ChatMute_OnChangeSquad Parms{};

	Parms.SquadNum = SquadNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ChatMute.PressMuteButton
// (Final, Native, Public)
// Parameters:
// class UAppWidget*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWidgetInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatMute::PressMuteButton(class UAppWidget* Widget, EWidgetInputType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatMute", "PressMuteButton");

	Params::ChatMute_PressMuteButton Parms{};

	Parms.Widget = Widget;
	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ChatStatusWidget.OnVCBeginTalk
// (Final, Native, Public)
// Parameters:
// class FString                           UniqueNetId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatStatusWidget::OnVCBeginTalk(const class FString& UniqueNetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatStatusWidget", "OnVCBeginTalk");

	Params::ChatStatusWidget_OnVCBeginTalk Parms{};

	Parms.UniqueNetId = std::move(UniqueNetId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ChatStatusWidget.OnVCDisconnected
// (Final, Native, Public)
// Parameters:
// class FString                           UniqueNetId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatStatusWidget::OnVCDisconnected(const class FString& UniqueNetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatStatusWidget", "OnVCDisconnected");

	Params::ChatStatusWidget_OnVCDisconnected Parms{};

	Parms.UniqueNetId = std::move(UniqueNetId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ChatStatusWidget.OnVCEndTalk
// (Final, Native, Public)
// Parameters:
// class FString                           UniqueNetId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatStatusWidget::OnVCEndTalk(const class FString& UniqueNetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatStatusWidget", "OnVCEndTalk");

	Params::ChatStatusWidget_OnVCEndTalk Parms{};

	Parms.UniqueNetId = std::move(UniqueNetId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Cheat.WritePGO
// (Final, Exec, Native, Static, Public)

void UCheat::WritePGO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Cheat", "WritePGO");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Cheat.DIP
// (Final, Exec, Native, Public)

void UCheat::DIP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cheat", "DIP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Cheat.OpenDevelopMenu
// (Final, Exec, Native, Public)

void UCheat::OpenDevelopMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cheat", "OpenDevelopMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Cheat.QueryAchievements
// (Final, Exec, Native, Public)

void UCheat::QueryAchievements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cheat", "QueryAchievements");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Cheat.SetCachedUniqueNetId
// (Final, Exec, Native, Public)

void UCheat::SetCachedUniqueNetId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cheat", "SetCachedUniqueNetId");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.Cheat.SetTrophy
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCheat::SetTrophy(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cheat", "SetTrophy");

	Params::Cheat_SetTrophy Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlatformWidgetButton.BP_SetEnable
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlatformWidgetButton::BP_SetEnable(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformWidgetButton", "BP_SetEnable");

	Params::PlatformWidgetButton_BP_SetEnable Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlatformWidgetButton.BP_SetOverrideFocusAtomCue
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class USoundAtomCue*                    AtomCue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlatformWidgetButton::BP_SetOverrideFocusAtomCue(class USoundAtomCue* AtomCue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformWidgetButton", "BP_SetOverrideFocusAtomCue");

	Params::PlatformWidgetButton_BP_SetOverrideFocusAtomCue Parms{};

	Parms.AtomCue = AtomCue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlatformWidgetButton.BP_SetOverrideNegativeAtomCue
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class USoundAtomCue*                    AtomCue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlatformWidgetButton::BP_SetOverrideNegativeAtomCue(class USoundAtomCue* AtomCue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformWidgetButton", "BP_SetOverrideNegativeAtomCue");

	Params::PlatformWidgetButton_BP_SetOverrideNegativeAtomCue Parms{};

	Parms.AtomCue = AtomCue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlatformWidgetButton.BP_SetOverridePressAtomCue
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class USoundAtomCue*                    AtomCue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlatformWidgetButton::BP_SetOverridePressAtomCue(class USoundAtomCue* AtomCue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformWidgetButton", "BP_SetOverridePressAtomCue");

	Params::PlatformWidgetButton_BP_SetOverridePressAtomCue Parms{};

	Parms.AtomCue = AtomCue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlatformWidgetButton.BP_SetOverrideShortcutAtomCue
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class USoundAtomCue*                    AtomCue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlatformWidgetButton::BP_SetOverrideShortcutAtomCue(class USoundAtomCue* AtomCue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformWidgetButton", "BP_SetOverrideShortcutAtomCue");

	Params::PlatformWidgetButton_BP_SetOverrideShortcutAtomCue Parms{};

	Parms.AtomCue = AtomCue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlatformWidgetButton.BP_UpdateSingleButtonImg
// (Final, Native, Protected, BlueprintCallable)

void UPlatformWidgetButton::BP_UpdateSingleButtonImg()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformWidgetButton", "BP_UpdateSingleButtonImg");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlatformWidgetButton.ResetAtomComp
// (Final, Native, Public, BlueprintCallable)

void UPlatformWidgetButton::ResetAtomComp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformWidgetButton", "ResetAtomComp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlatformWidgetButton.SetAdjustmentJustSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAdjustmentJustSize                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlatformWidgetButton::SetAdjustmentJustSize(const bool bAdjustmentJustSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformWidgetButton", "SetAdjustmentJustSize");

	Params::PlatformWidgetButton_SetAdjustmentJustSize Parms{};

	Parms.bAdjustmentJustSize = bAdjustmentJustSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlatformWidgetButton.SetupMultipleButton
// (Final, Native, Public)

void UPlatformWidgetButton::SetupMultipleButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformWidgetButton", "SetupMultipleButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlatformWidgetButton.SetViewButtonGuide
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bView                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlatformWidgetButton::SetViewButtonGuide(const bool bView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformWidgetButton", "SetViewButtonGuide");

	Params::PlatformWidgetButton_SetViewButtonGuide Parms{};

	Parms.bView = bView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlatformWidgetButton.SwitchMultipleButtonGuide
// (Final, Native, Public)

void UPlatformWidgetButton::SwitchMultipleButtonGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformWidgetButton", "SwitchMultipleButtonGuide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.CheckButtonWidget.OnChangeStateDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    bCheck                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCheckButtonWidget::OnChangeStateDelegate__DelegateSignature(bool bCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckButtonWidget", "OnChangeStateDelegate__DelegateSignature");

	Params::CheckButtonWidget_OnChangeStateDelegate__DelegateSignature Parms{};

	Parms.bCheck = bCheck;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.CheckButtonWidget.OnDecideEvent
// (Final, Native, Protected)
// Parameters:
// class UAppWidget*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWidgetInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCheckButtonWidget::OnDecideEvent(class UAppWidget* Widget, EWidgetInputType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckButtonWidget", "OnDecideEvent");

	Params::CheckButtonWidget_OnDecideEvent Parms{};

	Parms.Widget = Widget;
	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CheckButtonWidget.SetCheck
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bCheck                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCallDelegate                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCheckButtonWidget::SetCheck(const bool bCheck, const bool bCallDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckButtonWidget", "SetCheck");

	Params::CheckButtonWidget_SetCheck Parms{};

	Parms.bCheck = bCheck;
	Parms.bCallDelegate = bCallDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CheckButtonWidget.SetOffText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, NativeAccessSpecifierPublic)

void UCheckButtonWidget::SetOffText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckButtonWidget", "SetOffText");

	Params::CheckButtonWidget_SetOffText Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CheckButtonWidget.SetOnText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, NativeAccessSpecifierPublic)

void UCheckButtonWidget::SetOnText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckButtonWidget", "SetOnText");

	Params::CheckButtonWidget_SetOnText Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CheckButtonWidget.IsCheck
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCheckButtonWidget::IsCheck() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckButtonWidget", "IsCheck");

	Params::CheckButtonWidget_IsCheck Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputKey.AddCustomInputKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             CustomName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             Key                                                    (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCustomInputKey::AddCustomInputKey(const class FName CustomName, const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "AddCustomInputKey");

	Params::CustomInputKey_AddCustomInputKey Parms{};

	Parms.CustomName = CustomName;
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputKey.AddCustomInputKeys
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             CustomName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FKey>                     Keys                                                   (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCustomInputKey::AddCustomInputKeys(const class FName CustomName, const TArray<struct FKey>& Keys)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "AddCustomInputKeys");

	Params::CustomInputKey_AddCustomInputKeys Parms{};

	Parms.CustomName = CustomName;
	Parms.Keys = std::move(Keys);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputKey.AddMousePressStartKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKey                             Key                                                    (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomInputKey::AddMousePressStartKey(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "AddMousePressStartKey");

	Params::CustomInputKey_AddMousePressStartKey Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CustomInputKey.AddMousePressStartKeys
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FKey>                     Keys                                                   (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UCustomInputKey::AddMousePressStartKeys(const TArray<struct FKey>& Keys)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "AddMousePressStartKeys");

	Params::CustomInputKey_AddMousePressStartKeys Parms{};

	Parms.Keys = std::move(Keys);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CustomInputKey.GetViewportSize
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UCustomInputKey::GetViewportSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "GetViewportSize");

	Params::CustomInputKey_GetViewportSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputKey.IsPressKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             CustomName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCustomInputKey::IsPressKey(const class FName CustomName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "IsPressKey");

	Params::CustomInputKey_IsPressKey Parms{};

	Parms.CustomName = CustomName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputKey.IsPressRapidFire
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             CustomName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCustomInputKey::IsPressRapidFire(const class FName CustomName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "IsPressRapidFire");

	Params::CustomInputKey_IsPressRapidFire Parms{};

	Parms.CustomName = CustomName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputKey.IsPressTrg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             CustomName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCustomInputKey::IsPressTrg(const class FName CustomName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "IsPressTrg");

	Params::CustomInputKey_IsPressTrg Parms{};

	Parms.CustomName = CustomName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction GameModule.CustomInputKey.PressEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FName                             CustomName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTrg                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRapidFire                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomInputKey::PressEvent__DelegateSignature(const class FName CustomName, const bool bTrg, const bool bRapidFire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "PressEvent__DelegateSignature");

	Params::CustomInputKey_PressEvent__DelegateSignature Parms{};

	Parms.CustomName = CustomName;
	Parms.bTrg = bTrg;
	Parms.bRapidFire = bRapidFire;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction GameModule.CustomInputKey.ReleaseEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FName                             CustomName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomInputKey::ReleaseEvent__DelegateSignature(const class FName CustomName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "ReleaseEvent__DelegateSignature");

	Params::CustomInputKey_ReleaseEvent__DelegateSignature Parms{};

	Parms.CustomName = CustomName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.CustomInputKey.RemoveCustomInputKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             CustomName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             Key                                                    (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomInputKey::RemoveCustomInputKey(const class FName CustomName, const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "RemoveCustomInputKey");

	Params::CustomInputKey_RemoveCustomInputKey Parms{};

	Parms.CustomName = CustomName;
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CustomInputKey.RemoveCustomInputKeys
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             CustomName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FKey>                     Keys                                                   (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UCustomInputKey::RemoveCustomInputKeys(const class FName CustomName, const TArray<struct FKey>& Keys)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "RemoveCustomInputKeys");

	Params::CustomInputKey_RemoveCustomInputKeys Parms{};

	Parms.CustomName = CustomName;
	Parms.Keys = std::move(Keys);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CustomInputKey.RemoveCustomInputName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             CustomName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomInputKey::RemoveCustomInputName(const class FName CustomName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "RemoveCustomInputName");

	Params::CustomInputKey_RemoveCustomInputName Parms{};

	Parms.CustomName = CustomName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CustomInputKey.RemoveMousePressStart
// (Final, Native, Public, BlueprintCallable)

void UCustomInputKey::RemoveMousePressStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "RemoveMousePressStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CustomInputKey.RemoveMousePressStartKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKey                             Key                                                    (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomInputKey::RemoveMousePressStartKey(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "RemoveMousePressStartKey");

	Params::CustomInputKey_RemoveMousePressStartKey Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CustomInputKey.RemoveMousePressStartKeys
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FKey>                     Keys                                                   (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UCustomInputKey::RemoveMousePressStartKeys(const TArray<struct FKey>& Keys)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "RemoveMousePressStartKeys");

	Params::CustomInputKey_RemoveMousePressStartKeys Parms{};

	Parms.Keys = std::move(Keys);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CustomInputKey.SetTickFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bTick                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomInputKey::SetTickFlag(bool bTick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "SetTickFlag");

	Params::CustomInputKey_SetTickFlag Parms{};

	Parms.bTick = bTick;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CustomInputKey.GetClickStartPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UCustomInputKey::GetClickStartPosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "GetClickStartPosition");

	Params::CustomInputKey_GetClickStartPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputKey.GetClickStartPositionDPI
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UCustomInputKey::GetClickStartPositionDPI() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "GetClickStartPositionDPI");

	Params::CustomInputKey_GetClickStartPositionDPI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputKey.GetMouseDelta
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UCustomInputKey::GetMouseDelta() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "GetMouseDelta");

	Params::CustomInputKey_GetMouseDelta Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputKey.GetMouseDeltaDPI
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UCustomInputKey::GetMouseDeltaDPI() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "GetMouseDeltaDPI");

	Params::CustomInputKey_GetMouseDeltaDPI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputKey.GetMousePosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UCustomInputKey::GetMousePosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "GetMousePosition");

	Params::CustomInputKey_GetMousePosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputKey.GetMousePositionDPI
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UCustomInputKey::GetMousePositionDPI() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "GetMousePositionDPI");

	Params::CustomInputKey_GetMousePositionDPI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputKey.GetMouseWheel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UCustomInputKey::GetMouseWheel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "GetMouseWheel");

	Params::CustomInputKey_GetMouseWheel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputKey.GetTouchDelta
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETouchIndex                             Finger                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UCustomInputKey::GetTouchDelta(const ETouchIndex Finger) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "GetTouchDelta");

	Params::CustomInputKey_GetTouchDelta Parms{};

	Parms.Finger = Finger;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputKey.GetTouchDeltaDPI
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETouchIndex                             Finger                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UCustomInputKey::GetTouchDeltaDPI(const ETouchIndex Finger) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "GetTouchDeltaDPI");

	Params::CustomInputKey_GetTouchDeltaDPI Parms{};

	Parms.Finger = Finger;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputKey.GetTouchPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETouchIndex                             Finger                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UCustomInputKey::GetTouchPosition(const ETouchIndex Finger) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "GetTouchPosition");

	Params::CustomInputKey_GetTouchPosition Parms{};

	Parms.Finger = Finger;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputKey.GetTouchPositionDPI
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETouchIndex                             Finger                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UCustomInputKey::GetTouchPositionDPI(const ETouchIndex Finger) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "GetTouchPositionDPI");

	Params::CustomInputKey_GetTouchPositionDPI Parms{};

	Parms.Finger = Finger;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputKey.GetTouchStartPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETouchIndex                             Finger                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UCustomInputKey::GetTouchStartPosition(const ETouchIndex Finger) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "GetTouchStartPosition");

	Params::CustomInputKey_GetTouchStartPosition Parms{};

	Parms.Finger = Finger;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputKey.GetTouchStartPositionDPI
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETouchIndex                             Finger                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UCustomInputKey::GetTouchStartPositionDPI(const ETouchIndex Finger) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "GetTouchStartPositionDPI");

	Params::CustomInputKey_GetTouchStartPositionDPI Parms{};

	Parms.Finger = Finger;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputKey.GetViewPortSizeDPI
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UCustomInputKey::GetViewPortSizeDPI() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputKey", "GetViewPortSizeDPI");

	Params::CustomInputKey_GetViewPortSizeDPI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputTextBox.BP_CheckCommit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Input                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomInputTextBox::BP_CheckCommit(const class FString& Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputTextBox", "BP_CheckCommit");

	Params::CustomInputTextBox_BP_CheckCommit Parms{};

	Parms.Input = std::move(Input);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CustomInputTextBox.BP_CheckFirstFocus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Focus                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCustomInputTextBox::BP_CheckFirstFocus(bool Focus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputTextBox", "BP_CheckFirstFocus");

	Params::CustomInputTextBox_BP_CheckFirstFocus Parms{};

	Parms.Focus = Focus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputTextBox.BP_CheckMessageEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCustomInputTextBox::BP_CheckMessageEmpty(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputTextBox", "BP_CheckMessageEmpty");

	Params::CustomInputTextBox_BP_CheckMessageEmpty Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputTextBox.BP_ClearText
// (Final, Native, Public, BlueprintCallable)

void UCustomInputTextBox::BP_ClearText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputTextBox", "BP_ClearText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CustomInputTextBox.BP_GetText
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCustomInputTextBox::BP_GetText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputTextBox", "BP_GetText");

	Params::CustomInputTextBox_BP_GetText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomInputTextBox.BP_SetFocusInput
// (Final, Native, Public, BlueprintCallable)

void UCustomInputTextBox::BP_SetFocusInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputTextBox", "BP_SetFocusInput");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CustomInputTextBox.CallActiveInputEvent
// (Final, Native, Public, BlueprintCallable)

void UCustomInputTextBox::CallActiveInputEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputTextBox", "CallActiveInputEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CustomInputTextBox.CallChangeTextEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             Text                                                   (Parm, NativeAccessSpecifierPublic)
// bool                                    IsEmpty                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomInputTextBox::CallChangeTextEvent(const class FText& Text, const bool IsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputTextBox", "CallChangeTextEvent");

	Params::CustomInputTextBox_CallChangeTextEvent Parms{};

	Parms.Text = std::move(Text);
	Parms.IsEmpty = IsEmpty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CustomInputTextBox.CallConcentEvent
// (Final, Native, Public, BlueprintCallable)

void UCustomInputTextBox::CallConcentEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputTextBox", "CallConcentEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CustomInputTextBox.CallSendableEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Commit                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlatform                               Platform                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomInputTextBox::CallSendableEvent(const bool Commit, EPlatform Platform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputTextBox", "CallSendableEvent");

	Params::CustomInputTextBox_CallSendableEvent Parms{};

	Parms.Commit = Commit;
	Parms.Platform = Platform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CustomInputTextBox.CallSendEvent
// (Final, Native, Public, BlueprintCallable)

void UCustomInputTextBox::CallSendEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputTextBox", "CallSendEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.CustomInputTextBox.OnActiveInputDispather__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UCustomInputTextBox::OnActiveInputDispather__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputTextBox", "OnActiveInputDispather__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.CustomInputTextBox.OnCallConcentDispather__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UCustomInputTextBox::OnCallConcentDispather__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputTextBox", "OnCallConcentDispather__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.CustomInputTextBox.OnChangeTextDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FText                             Text                                                   (Parm, NativeAccessSpecifierPublic)
// bool                                    IsEmpty                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomInputTextBox::OnChangeTextDelegate__DelegateSignature(const class FText& Text, const bool IsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputTextBox", "OnChangeTextDelegate__DelegateSignature");

	Params::CustomInputTextBox_OnChangeTextDelegate__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.IsEmpty = IsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction GameModule.CustomInputTextBox.OnSendableDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    Commit                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlatform                               Platform                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomInputTextBox::OnSendableDelegate__DelegateSignature(const bool Commit, EPlatform Platform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputTextBox", "OnSendableDelegate__DelegateSignature");

	Params::CustomInputTextBox_OnSendableDelegate__DelegateSignature Parms{};

	Parms.Commit = Commit;
	Parms.Platform = Platform;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction GameModule.CustomInputTextBox.OnSendDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UCustomInputTextBox::OnSendDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputTextBox", "OnSendDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.CustomInputTextBox.OpenParentalControlDispather__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UCustomInputTextBox::OpenParentalControlDispather__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputTextBox", "OpenParentalControlDispather__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.CustomInputTextBox.UpdateFocus
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UCustomInputTextBox::UpdateFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputTextBox", "UpdateFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.CustomInputTextBox.BP_GetFirstFocus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCustomInputTextBox::BP_GetFirstFocus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomInputTextBox", "BP_GetFirstFocus");

	Params::CustomInputTextBox_BP_GetFirstFocus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomMatchDatabaseWork.BP_SetCustomMatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bCustomMatch                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomMatchDatabaseWork::BP_SetCustomMatch(bool bCustomMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomMatchDatabaseWork", "BP_SetCustomMatch");

	Params::CustomMatchDatabaseWork_BP_SetCustomMatch Parms{};

	Parms.bCustomMatch = bCustomMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CustomMatchDatabaseWork.OnLoadedResultDataList
// (Final, Native, Protected)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomMatchDatabaseWork::OnLoadedResultDataList(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomMatchDatabaseWork", "OnLoadedResultDataList");

	Params::CustomMatchDatabaseWork_OnLoadedResultDataList Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CustomMatchDatabaseWork.GetRoomOwnerId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCustomMatchDatabaseWork::GetRoomOwnerId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomMatchDatabaseWork", "GetRoomOwnerId");

	Params::CustomMatchDatabaseWork_GetRoomOwnerId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomMatchDatabaseWork.GetRoomOwnerOrder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UCustomMatchDatabaseWork::GetRoomOwnerOrder() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomMatchDatabaseWork", "GetRoomOwnerOrder");

	Params::CustomMatchDatabaseWork_GetRoomOwnerOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomMatchDatabaseWork.GetTeamCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UCustomMatchDatabaseWork::GetTeamCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomMatchDatabaseWork", "GetTeamCount");

	Params::CustomMatchDatabaseWork_GetTeamCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomMatchDatabaseWork.HasRoomOwnerRight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCustomMatchDatabaseWork::HasRoomOwnerRight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomMatchDatabaseWork", "HasRoomOwnerRight");

	Params::CustomMatchDatabaseWork_HasRoomOwnerRight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomMatchDatabaseWork.IsCustomMatch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCustomMatchDatabaseWork::IsCustomMatch() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomMatchDatabaseWork", "IsCustomMatch");

	Params::CustomMatchDatabaseWork_IsCustomMatch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomMatchDatabaseWork.IsJoinRoomOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCustomMatchDatabaseWork::IsJoinRoomOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomMatchDatabaseWork", "IsJoinRoomOwner");

	Params::CustomMatchDatabaseWork_IsJoinRoomOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomMatchDatabaseWork.IsRoomOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCustomMatchDatabaseWork::IsRoomOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomMatchDatabaseWork", "IsRoomOwner");

	Params::CustomMatchDatabaseWork_IsRoomOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomParticleSystemComponent.ChangeViewType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EViewType                               Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCustomParticleSystemComponent::ChangeViewType(EViewType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomParticleSystemComponent", "ChangeViewType");

	Params::CustomParticleSystemComponent_ChangeViewType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.CustomParticleSystemComponent.End
// (Final, Native, Public, BlueprintCallable)

void UCustomParticleSystemComponent::End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomParticleSystemComponent", "End");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CustomParticleSystemComponent.FadeIn
// (Final, Native, Public, BlueprintCallable)

void UCustomParticleSystemComponent::FadeIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomParticleSystemComponent", "FadeIn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CustomParticleSystemComponent.FadeOut
// (Final, Native, Public, BlueprintCallable)

void UCustomParticleSystemComponent::FadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomParticleSystemComponent", "FadeOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.CustomParticleSystemComponent.OnParticleDeathEvent
// (Native, Public)
// Parameters:
// class UParticleSystemComponent*         PSystem                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomParticleSystemComponent::OnParticleDeathEvent(class UParticleSystemComponent* PSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomParticleSystemComponent", "OnParticleDeathEvent");

	Params::CustomParticleSystemComponent_OnParticleDeathEvent Parms{};

	Parms.PSystem = PSystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.EmblemDisplayWidget.BP_GetBodyCanvasPanel
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UCanvasPanel*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCanvasPanel* UEmblemDisplayWidget::BP_GetBodyCanvasPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmblemDisplayWidget", "BP_GetBodyCanvasPanel");

	Params::EmblemDisplayWidget_BP_GetBodyCanvasPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.EmblemDisplayWidget.OnLoadedImage
// (Final, Native, Private)
// Parameters:
// TSubclassOf<class UWidgetBase>          WidgetClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEmblemDisplayWidget::OnLoadedImage(TSubclassOf<class UWidgetBase> WidgetClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmblemDisplayWidget", "OnLoadedImage");

	Params::EmblemDisplayWidget_OnLoadedImage Parms{};

	Parms.WidgetClass = WidgetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.FocusAnimationWidget.SetViewArrowDown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bView                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFocusAnimationWidget::SetViewArrowDown(const bool bView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FocusAnimationWidget", "SetViewArrowDown");

	Params::FocusAnimationWidget_SetViewArrowDown Parms{};

	Parms.bView = bView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.FocusAnimationWidget.SetViewArrowLeft
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bView                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFocusAnimationWidget::SetViewArrowLeft(const bool bView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FocusAnimationWidget", "SetViewArrowLeft");

	Params::FocusAnimationWidget_SetViewArrowLeft Parms{};

	Parms.bView = bView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.FocusAnimationWidget.SetViewArrowRight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bView                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFocusAnimationWidget::SetViewArrowRight(const bool bView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FocusAnimationWidget", "SetViewArrowRight");

	Params::FocusAnimationWidget_SetViewArrowRight Parms{};

	Parms.bView = bView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.FocusAnimationWidget.SetViewArrowUp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bView                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFocusAnimationWidget::SetViewArrowUp(const bool bView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FocusAnimationWidget", "SetViewArrowUp");

	Params::FocusAnimationWidget_SetViewArrowUp Parms{};

	Parms.bView = bView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.FocusAnimationWidget.SetViewFocus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bView                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFocusAnimationWidget::SetViewFocus(const bool bView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FocusAnimationWidget", "SetViewFocus");

	Params::FocusAnimationWidget_SetViewFocus Parms{};

	Parms.bView = bView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameEffectSubsystem.BP_SpawnEmitterAttached
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UParticleSystem*                  EmitterTemplate                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  AttachToComponent                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AttachPointName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// EAttachLocation                         LocationType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoDestroy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUsedPooling                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCustomParticleSystemComponent*   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCustomParticleSystemComponent* UGameEffectSubsystem::BP_SpawnEmitterAttached(class UParticleSystem* EmitterTemplate, class USceneComponent* AttachToComponent, class FName AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, EAttachLocation LocationType, bool bAutoDestroy, bool bUsedPooling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameEffectSubsystem", "BP_SpawnEmitterAttached");

	Params::GameEffectSubsystem_BP_SpawnEmitterAttached Parms{};

	Parms.EmitterTemplate = EmitterTemplate;
	Parms.AttachToComponent = AttachToComponent;
	Parms.AttachPointName = AttachPointName;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.LocationType = LocationType;
	Parms.bAutoDestroy = bAutoDestroy;
	Parms.bUsedPooling = bUsedPooling;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameEffectSubsystem.OnParticleDestroy
// (Final, Native, Public)
// Parameters:
// class UParticleSystemComponent*         Particle                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameEffectSubsystem::OnParticleDestroy(class UParticleSystemComponent* Particle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameEffectSubsystem", "OnParticleDestroy");

	Params::GameEffectSubsystem_OnParticleDestroy Parms{};

	Parms.Particle = Particle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_GetButtonGuideImgId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EKeyConfigurableCommand                 Command                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsDesignTime                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UGameOption::BP_GetButtonGuideImgId(const class UObject* WorldContextObject, const EKeyConfigurableCommand Command, const bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GameOption", "BP_GetButtonGuideImgId");

	Params::GameOption_BP_GetButtonGuideImgId Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Command = Command;
	Parms.IsDesignTime = IsDesignTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.BP_DefaultGamePadAction
// (Final, Native, Public, BlueprintCallable)

void UGameOption::BP_DefaultGamePadAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_DefaultGamePadAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_DefaultKeyboardAction
// (Final, Native, Public, BlueprintCallable)

void UGameOption::BP_DefaultKeyboardAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_DefaultKeyboardAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_GetCustomCommandName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Page                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UGameOption::BP_GetCustomCommandName(int32 Index_0, int32 Page)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_GetCustomCommandName");

	Params::GameOption_BP_GetCustomCommandName Parms{};

	Parms.Index_0 = Index_0;
	Parms.Page = Page;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.BP_SaveAndApplyGamePadAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EKeyConfigurableCommand                 Command                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             Key                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::BP_SaveAndApplyGamePadAction(const EKeyConfigurableCommand Command, const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SaveAndApplyGamePadAction");

	Params::GameOption_BP_SaveAndApplyGamePadAction Parms{};

	Parms.Command = Command;
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_SaveAndApplyKeyboardAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EKeyConfigurableCommand                 Command                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             Key                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::BP_SaveAndApplyKeyboardAction(const EKeyConfigurableCommand Command, const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SaveAndApplyKeyboardAction");

	Params::GameOption_BP_SaveAndApplyKeyboardAction Parms{};

	Parms.Command = Command;
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_SaveGameOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameOption::BP_SaveGameOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SaveGameOption");

	Params::GameOption_BP_SaveGameOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.BP_SetAgreeFreeTextInputGuildChat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Agree                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::BP_SetAgreeFreeTextInputGuildChat(bool Agree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SetAgreeFreeTextInputGuildChat");

	Params::GameOption_BP_SetAgreeFreeTextInputGuildChat Parms{};

	Parms.Agree = Agree;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_SetAgreeFreeTextInputPlayerIntroduction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Agree                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::BP_SetAgreeFreeTextInputPlayerIntroduction(bool Agree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SetAgreeFreeTextInputPlayerIntroduction");

	Params::GameOption_BP_SetAgreeFreeTextInputPlayerIntroduction Parms{};

	Parms.Agree = Agree;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_SetAgreeFreeTextInputPlayerName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Agree                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::BP_SetAgreeFreeTextInputPlayerName(bool Agree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SetAgreeFreeTextInputPlayerName");

	Params::GameOption_BP_SetAgreeFreeTextInputPlayerName Parms{};

	Parms.Agree = Agree;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_SetAgreeFreeTextInputTextChat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Agree                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::BP_SetAgreeFreeTextInputTextChat(bool Agree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SetAgreeFreeTextInputTextChat");

	Params::GameOption_BP_SetAgreeFreeTextInputTextChat Parms{};

	Parms.Agree = Agree;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_SetDAPGameAgreeKpi
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    AgreeKpi                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::BP_SetDAPGameAgreeKpi(bool AgreeKpi)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SetDAPGameAgreeKpi");

	Params::GameOption_BP_SetDAPGameAgreeKpi Parms{};

	Parms.AgreeKpi = AgreeKpi;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_SetGameAgreeKpi
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    AgreeKpi                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::BP_SetGameAgreeKpi(bool AgreeKpi)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SetGameAgreeKpi");

	Params::GameOption_BP_SetGameAgreeKpi Parms{};

	Parms.AgreeKpi = AgreeKpi;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_SetGamePadCameraAimRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Rate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::BP_SetGamePadCameraAimRate(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SetGamePadCameraAimRate");

	Params::GameOption_BP_SetGamePadCameraAimRate Parms{};

	Parms.Rate = Rate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_SetGamePadCameraDashRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Rate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::BP_SetGamePadCameraDashRate(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SetGamePadCameraDashRate");

	Params::GameOption_BP_SetGamePadCameraDashRate Parms{};

	Parms.Rate = Rate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_SetGamePadCameraPitchReverse
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bReverse                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::BP_SetGamePadCameraPitchReverse(bool bReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SetGamePadCameraPitchReverse");

	Params::GameOption_BP_SetGamePadCameraPitchReverse Parms{};

	Parms.bReverse = bReverse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_SetGamePadCameraRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Rate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::BP_SetGamePadCameraRate(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SetGamePadCameraRate");

	Params::GameOption_BP_SetGamePadCameraRate Parms{};

	Parms.Rate = Rate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_SetGamePadCameraYawReverse
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bReverse                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::BP_SetGamePadCameraYawReverse(bool bReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SetGamePadCameraYawReverse");

	Params::GameOption_BP_SetGamePadCameraYawReverse Parms{};

	Parms.bReverse = bReverse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_SetGuildData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   GuildLevel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           GuildSearchId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBlock                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::BP_SetGuildData(int32 GuildLevel, const class FString& GuildSearchId, bool bBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SetGuildData");

	Params::GameOption_BP_SetGuildData Parms{};

	Parms.GuildLevel = GuildLevel;
	Parms.GuildSearchId = std::move(GuildSearchId);
	Parms.bBlock = bBlock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_SetGuildNameConsent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAgree                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::BP_SetGuildNameConsent(bool bAgree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SetGuildNameConsent");

	Params::GameOption_BP_SetGuildNameConsent Parms{};

	Parms.bAgree = bAgree;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_SetGuildProfileConsent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAgree                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::BP_SetGuildProfileConsent(bool bAgree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SetGuildProfileConsent");

	Params::GameOption_BP_SetGuildProfileConsent Parms{};

	Parms.bAgree = bAgree;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_SetMouseCameraPitchReverse
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bReverse                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::BP_SetMouseCameraPitchReverse(bool bReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SetMouseCameraPitchReverse");

	Params::GameOption_BP_SetMouseCameraPitchReverse Parms{};

	Parms.bReverse = bReverse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_SetMouseCameraRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Rate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::BP_SetMouseCameraRate(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SetMouseCameraRate");

	Params::GameOption_BP_SetMouseCameraRate Parms{};

	Parms.Rate = Rate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_SetMouseCameraYawReverse
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bReverse                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::BP_SetMouseCameraYawReverse(bool bReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SetMouseCameraYawReverse");

	Params::GameOption_BP_SetMouseCameraYawReverse Parms{};

	Parms.bReverse = bReverse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_SetPadPlay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bPad                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::BP_SetPadPlay(bool bPad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SetPadPlay");

	Params::GameOption_BP_SetPadPlay Parms{};

	Parms.bPad = bPad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_SetShopItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSet<int32>                             ShopItems                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGameOption::BP_SetShopItem(const TSet<int32>& ShopItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SetShopItem");

	Params::GameOption_BP_SetShopItem Parms{};

	Parms.ShopItems = std::move(ShopItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_SetViewShopItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ShopItem                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameOption::BP_SetViewShopItem(int32 ShopItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_SetViewShopItem");

	Params::GameOption_BP_SetViewShopItem Parms{};

	Parms.ShopItem = ShopItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.GetGamePadKeyConfigOnCommand
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TMap<EKeyConfigurableCommand, struct FKey>ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<EKeyConfigurableCommand, struct FKey> UGameOption::GetGamePadKeyConfigOnCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "GetGamePadKeyConfigOnCommand");

	Params::GameOption_GetGamePadKeyConfigOnCommand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.GetKeyboardAxisKeyConfigOnCommand
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TMap<EKeyConfigurableCommand, struct FKey>ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<EKeyConfigurableCommand, struct FKey> UGameOption::GetKeyboardAxisKeyConfigOnCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "GetKeyboardAxisKeyConfigOnCommand");

	Params::GameOption_GetKeyboardAxisKeyConfigOnCommand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.GetKeyboardKeyConfigOnCommand
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TMap<EKeyConfigurableCommand, struct FKey>ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<EKeyConfigurableCommand, struct FKey> UGameOption::GetKeyboardKeyConfigOnCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "GetKeyboardKeyConfigOnCommand");

	Params::GameOption_GetKeyboardKeyConfigOnCommand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.GetOutGameTutorialFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETutorialPopupScene                     PopupScene                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameOption::GetOutGameTutorialFlag(const ETutorialPopupScene PopupScene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "GetOutGameTutorialFlag");

	Params::GameOption_GetOutGameTutorialFlag Parms{};

	Parms.PopupScene = PopupScene;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.OnCompleteLoadTrackingNumber
// (Final, Native, Protected)
// Parameters:
// class FString                           TrackingNumber                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::OnCompleteLoadTrackingNumber(const class FString& TrackingNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "OnCompleteLoadTrackingNumber");

	Params::GameOption_OnCompleteLoadTrackingNumber Parms{};

	Parms.TrackingNumber = std::move(TrackingNumber);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.SetAuraAreaType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGameOptionAuraAreaType                 AreaType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::SetAuraAreaType(EGameOptionAuraAreaType AreaType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "SetAuraAreaType");

	Params::GameOption_SetAuraAreaType Parms{};

	Parms.AreaType = AreaType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.SetAuraDispType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGameOptionAuraDispType                 DispType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::SetAuraDispType(EGameOptionAuraDispType DispType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "SetAuraDispType");

	Params::GameOption_SetAuraDispType Parms{};

	Parms.DispType = DispType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.SetCameraAcclerationType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECameraAccelerationType                 AccelerationType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::SetCameraAcclerationType(ECameraAccelerationType AccelerationType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "SetCameraAcclerationType");

	Params::GameOption_SetCameraAcclerationType Parms{};

	Parms.AccelerationType = AccelerationType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.SetIsAutoLevelUp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAuto                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::SetIsAutoLevelUp(bool bAuto)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "SetIsAutoLevelUp");

	Params::GameOption_SetIsAutoLevelUp Parms{};

	Parms.bAuto = bAuto;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.SetOutGameTutorialFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETutorialPopupScene                     PopupScene                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::SetOutGameTutorialFlag(const ETutorialPopupScene PopupScene, bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "SetOutGameTutorialFlag");

	Params::GameOption_SetOutGameTutorialFlag Parms{};

	Parms.PopupScene = PopupScene;
	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.SetPlayBattleActionCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bPlay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameOption::SetPlayBattleActionCamera(bool bPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "SetPlayBattleActionCamera");

	Params::GameOption_SetPlayBattleActionCamera Parms{};

	Parms.bPlay = bPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameOption.BP_GetAgreeFreeTextInputGuildChat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameOption::BP_GetAgreeFreeTextInputGuildChat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_GetAgreeFreeTextInputGuildChat");

	Params::GameOption_BP_GetAgreeFreeTextInputGuildChat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.BP_GetAgreeFreeTextInputPlayerIntroduction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameOption::BP_GetAgreeFreeTextInputPlayerIntroduction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_GetAgreeFreeTextInputPlayerIntroduction");

	Params::GameOption_BP_GetAgreeFreeTextInputPlayerIntroduction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.BP_GetAgreeFreeTextInputPlayerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameOption::BP_GetAgreeFreeTextInputPlayerName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_GetAgreeFreeTextInputPlayerName");

	Params::GameOption_BP_GetAgreeFreeTextInputPlayerName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.BP_GetAgreeFreeTextInputTextChat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameOption::BP_GetAgreeFreeTextInputTextChat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_GetAgreeFreeTextInputTextChat");

	Params::GameOption_BP_GetAgreeFreeTextInputTextChat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.BP_GetGamePadCameraAimRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGameOption::BP_GetGamePadCameraAimRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_GetGamePadCameraAimRate");

	Params::GameOption_BP_GetGamePadCameraAimRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.BP_GetGamePadCameraDashRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGameOption::BP_GetGamePadCameraDashRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_GetGamePadCameraDashRate");

	Params::GameOption_BP_GetGamePadCameraDashRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.BP_GetGamePadCameraPitchReverse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameOption::BP_GetGamePadCameraPitchReverse() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_GetGamePadCameraPitchReverse");

	Params::GameOption_BP_GetGamePadCameraPitchReverse Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.BP_GetGamePadCameraRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGameOption::BP_GetGamePadCameraRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_GetGamePadCameraRate");

	Params::GameOption_BP_GetGamePadCameraRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.BP_GetGamePadCameraYawReverse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameOption::BP_GetGamePadCameraYawReverse() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_GetGamePadCameraYawReverse");

	Params::GameOption_BP_GetGamePadCameraYawReverse Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.BP_GetGuildLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGameOption::BP_GetGuildLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_GetGuildLevel");

	Params::GameOption_BP_GetGuildLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.BP_GetGuildNameConsent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameOption::BP_GetGuildNameConsent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_GetGuildNameConsent");

	Params::GameOption_BP_GetGuildNameConsent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.BP_GetGuildProfileConsent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameOption::BP_GetGuildProfileConsent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_GetGuildProfileConsent");

	Params::GameOption_BP_GetGuildProfileConsent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.BP_GetGuildSearchId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UGameOption::BP_GetGuildSearchId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_GetGuildSearchId");

	Params::GameOption_BP_GetGuildSearchId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.BP_GetMouseCameraPitchReverse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameOption::BP_GetMouseCameraPitchReverse() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_GetMouseCameraPitchReverse");

	Params::GameOption_BP_GetMouseCameraPitchReverse Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.BP_GetMouseCameraRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGameOption::BP_GetMouseCameraRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_GetMouseCameraRate");

	Params::GameOption_BP_GetMouseCameraRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.BP_GetMouseCameraYawReverse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameOption::BP_GetMouseCameraYawReverse() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_GetMouseCameraYawReverse");

	Params::GameOption_BP_GetMouseCameraYawReverse Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.BP_GetPadPlay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameOption::BP_GetPadPlay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "BP_GetPadPlay");

	Params::GameOption_BP_GetPadPlay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.GetAuraAreaType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGameOptionAuraAreaType                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGameOptionAuraAreaType UGameOption::GetAuraAreaType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "GetAuraAreaType");

	Params::GameOption_GetAuraAreaType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.GetAuraDispType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGameOptionAuraDispType                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGameOptionAuraDispType UGameOption::GetAuraDispType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "GetAuraDispType");

	Params::GameOption_GetAuraDispType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.GetCameraAcclerationType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECameraAccelerationType                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECameraAccelerationType UGameOption::GetCameraAcclerationType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "GetCameraAcclerationType");

	Params::GameOption_GetCameraAcclerationType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.GetMiniMapVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameOption::GetMiniMapVisible() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "GetMiniMapVisible");

	Params::GameOption_GetMiniMapVisible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.GetPlayBattleActionCamera
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameOption::GetPlayBattleActionCamera() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "GetPlayBattleActionCamera");

	Params::GameOption_GetPlayBattleActionCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.IsAutoLevelUp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameOption::IsAutoLevelUp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "IsAutoLevelUp");

	Params::GameOption_IsAutoLevelUp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOption.IsMinimapRightSide
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameOption::IsMinimapRightSide() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOption", "IsMinimapRightSide");

	Params::GameOption_IsMinimapRightSide Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameOptionSettingsInterface.CloseOptionMenu
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IGameOptionSettingsInterface::CloseOptionMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameOptionSettingsInterface", "CloseOptionMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.GameSequenceWork.BattleSequenceCancelDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EBattleStartSequenceType                SequenceType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::BattleSequenceCancelDelegate__DelegateSignature(EBattleStartSequenceType SequenceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BattleSequenceCancelDelegate__DelegateSignature");

	Params::GameSequenceWork_BattleSequenceCancelDelegate__DelegateSignature Parms{};

	Parms.SequenceType = SequenceType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.GameSequenceWork.BP_BackOpenLevel
// (Final, Native, Public, BlueprintCallable)

void UGameSequenceWork::BP_BackOpenLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_BackOpenLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_CloseSubLevelItemGetList
// (Final, Native, Public, BlueprintCallable)

void UGameSequenceWork::BP_CloseSubLevelItemGetList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_CloseSubLevelItemGetList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_EndBattleAndReturnToMenu
// (Final, Native, Public, BlueprintCallable)

void UGameSequenceWork::BP_EndBattleAndReturnToMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_EndBattleAndReturnToMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_GetProfileDisplayData
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UProfileDisplayData*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UProfileDisplayData* UGameSequenceWork::BP_GetProfileDisplayData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_GetProfileDisplayData");

	Params::GameSequenceWork_BP_GetProfileDisplayData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.BP_IsMoveHeroCrystalTab
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameSequenceWork::BP_IsMoveHeroCrystalTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_IsMoveHeroCrystalTab");

	Params::GameSequenceWork_BP_IsMoveHeroCrystalTab Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.BP_IsOpenNetworkErrorWindow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameSequenceWork::BP_IsOpenNetworkErrorWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_IsOpenNetworkErrorWindow");

	Params::GameSequenceWork_BP_IsOpenNetworkErrorWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.BP_IsOpenReturnTitleNetworkErrorWindow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameSequenceWork::BP_IsOpenReturnTitleNetworkErrorWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_IsOpenReturnTitleNetworkErrorWindow");

	Params::GameSequenceWork_BP_IsOpenReturnTitleNetworkErrorWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.BP_OpenLevelCustomize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Shortcut                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::BP_OpenLevelCustomize(bool Shortcut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_OpenLevelCustomize");

	Params::GameSequenceWork_BP_OpenLevelCustomize Parms{};

	Parms.Shortcut = Shortcut;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_OpenLevelCustomMatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bFadeOut                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::BP_OpenLevelCustomMatch(bool bFadeOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_OpenLevelCustomMatch");

	Params::GameSequenceWork_BP_OpenLevelCustomMatch Parms{};

	Parms.bFadeOut = bFadeOut;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_OpenLevelGasha
// (Final, Native, Public, BlueprintCallable)

void UGameSequenceWork::BP_OpenLevelGasha()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_OpenLevelGasha");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_OpenLevelLoginBonus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ELoginBonusTransitionType               TransitionType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::BP_OpenLevelLoginBonus(ELoginBonusTransitionType TransitionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_OpenLevelLoginBonus");

	Params::GameSequenceWork_BP_OpenLevelLoginBonus Parms{};

	Parms.TransitionType = TransitionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_OpenLevelMainMenu
// (Final, Native, Public, BlueprintCallable)

void UGameSequenceWork::BP_OpenLevelMainMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_OpenLevelMainMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_OpenLevelShopTopNormal
// (Final, Native, Public, BlueprintCallable)

void UGameSequenceWork::BP_OpenLevelShopTopNormal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_OpenLevelShopTopNormal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_OpenLevelShopTopPremium
// (Final, Native, Public, BlueprintCallable)

void UGameSequenceWork::BP_OpenLevelShopTopPremium()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_OpenLevelShopTopPremium");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_OpenMainMenuTabLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::BP_OpenMainMenuTabLevel(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_OpenMainMenuTabLevel");

	Params::GameSequenceWork_BP_OpenMainMenuTabLevel Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_OpenObtainFromLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ObtainFromCode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::BP_OpenObtainFromLevel(int32 ObtainFromCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_OpenObtainFromLevel");

	Params::GameSequenceWork_BP_OpenObtainFromLevel Parms{};

	Parms.ObtainFromCode = ObtainFromCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_OpenSubLevelItemDetail
// (Final, Native, Public, BlueprintCallable)

void UGameSequenceWork::BP_OpenSubLevelItemDetail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_OpenSubLevelItemDetail");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_OpenSubLevelItemGetList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             Subtitle                                               (Parm, NativeAccessSpecifierPublic)

void UGameSequenceWork::BP_OpenSubLevelItemGetList(const class FText& Subtitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_OpenSubLevelItemGetList");

	Params::GameSequenceWork_BP_OpenSubLevelItemGetList Parms{};

	Parms.Subtitle = std::move(Subtitle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_OpenSubLevelUseCurrencySelect
// (Final, Native, Public, BlueprintCallable)

void UGameSequenceWork::BP_OpenSubLevelUseCurrencySelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_OpenSubLevelUseCurrencySelect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_OpenSubLevelWindow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UWorld>            SubLevel                                               (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::BP_OpenSubLevelWindow(TSoftObjectPtr<class UWorld> SubLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_OpenSubLevelWindow");

	Params::GameSequenceWork_BP_OpenSubLevelWindow Parms{};

	Parms.SubLevel = SubLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_PopReturnLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             OutLevelName                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameSequenceWork::BP_PopReturnLevel(class FName* OutLevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_PopReturnLevel");

	Params::GameSequenceWork_BP_PopReturnLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLevelName != nullptr)
		*OutLevelName = Parms.OutLevelName;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.BP_PushReturnCurrentLevel
// (Final, Native, Public, BlueprintCallable)

void UGameSequenceWork::BP_PushReturnCurrentLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_PushReturnCurrentLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_PushReturnLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UObject>           Level                                                  (ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::BP_PushReturnLevel(const TSoftObjectPtr<class UObject> Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_PushReturnLevel");

	Params::GameSequenceWork_BP_PushReturnLevel Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_SetMenuListIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::BP_SetMenuListIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_SetMenuListIndex");

	Params::GameSequenceWork_BP_SetMenuListIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_SetOpenNetworkWaitingMessageParameter
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EWaitMessageType                        Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    backImage                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    backBlur                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::BP_SetOpenNetworkWaitingMessageParameter(EWaitMessageType Type, bool backImage, bool backBlur)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_SetOpenNetworkWaitingMessageParameter");

	Params::GameSequenceWork_BP_SetOpenNetworkWaitingMessageParameter Parms{};

	Parms.Type = Type;
	Parms.backImage = backImage;
	Parms.backBlur = backBlur;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_SetOpenNetworkWaitingNoneMessageType
// (Final, Native, Protected, BlueprintCallable)

void UGameSequenceWork::BP_SetOpenNetworkWaitingNoneMessageType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_SetOpenNetworkWaitingNoneMessageType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_SetOpenNetworkWaitingResetParameter
// (Final, Native, Protected, BlueprintCallable)

void UGameSequenceWork::BP_SetOpenNetworkWaitingResetParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_SetOpenNetworkWaitingResetParameter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_SetOutGameCharacterCode
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   CharaCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::BP_SetOutGameCharacterCode(int32 CharaCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_SetOutGameCharacterCode");

	Params::GameSequenceWork_BP_SetOutGameCharacterCode Parms{};

	Parms.CharaCode = CharaCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_SetOutGameFriendFetchCategory
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EFriendRequesetType                     Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    buleFlag                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::BP_SetOutGameFriendFetchCategory(EFriendRequesetType Type, bool buleFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_SetOutGameFriendFetchCategory");

	Params::GameSequenceWork_BP_SetOutGameFriendFetchCategory Parms{};

	Parms.Type = Type;
	Parms.buleFlag = buleFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_SetTutorialStep
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::BP_SetTutorialStep(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_SetTutorialStep");

	Params::GameSequenceWork_BP_SetTutorialStep Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.BP_SpecifyTabIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   TabIdx                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::BP_SpecifyTabIndex(const int32& TabIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_SpecifyTabIndex");

	Params::GameSequenceWork_BP_SpecifyTabIndex Parms{};

	Parms.TabIdx = TabIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.CallDebugMenuMasterData
// (Final, Native, Public, BlueprintCallable)

void UGameSequenceWork::CallDebugMenuMasterData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "CallDebugMenuMasterData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.GameSequenceWork.CancelVisualLobbySearchDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UGameSequenceWork::CancelVisualLobbySearchDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "CancelVisualLobbySearchDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.GameSequenceWork.ChangeBattleRuleDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UGameSequenceWork::ChangeBattleRuleDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "ChangeBattleRuleDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.GameSequenceWork.ChangeBattleSequenceDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EBattleStartSequenceType                Sequence                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::ChangeBattleSequenceDelegate__DelegateSignature(EBattleStartSequenceType Sequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "ChangeBattleSequenceDelegate__DelegateSignature");

	Params::GameSequenceWork_ChangeBattleSequenceDelegate__DelegateSignature Parms{};

	Parms.Sequence = Sequence;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.GameSequenceWork.ClearReturnLevel
// (Final, Native, Public, BlueprintCallable)

void UGameSequenceWork::ClearReturnLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "ClearReturnLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.DebugSetSquadMemberNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Num                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::DebugSetSquadMemberNum(int32 Num, ECharacterId CharacterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "DebugSetSquadMemberNum");

	Params::GameSequenceWork_DebugSetSquadMemberNum Parms{};

	Parms.Num = Num;
	Parms.CharacterId = CharacterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.EndTutorialAndReturn
// (Final, Native, Public, BlueprintCallable)

void UGameSequenceWork::EndTutorialAndReturn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "EndTutorialAndReturn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.GetGameAfterLoginStepType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGameAfterLoginStepType                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGameAfterLoginStepType UGameSequenceWork::GetGameAfterLoginStepType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "GetGameAfterLoginStepType");

	Params::GameSequenceWork_GetGameAfterLoginStepType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.GetOutGameTutorialPopupScene
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETutorialPopupScene                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETutorialPopupScene UGameSequenceWork::GetOutGameTutorialPopupScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "GetOutGameTutorialPopupScene");

	Params::GameSequenceWork_GetOutGameTutorialPopupScene Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.GetSelectedGameMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMdGameMode                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMdGameMode UGameSequenceWork::GetSelectedGameMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "GetSelectedGameMode");

	Params::GameSequenceWork_GetSelectedGameMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.IsFinishedTutorial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameSequenceWork::IsFinishedTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "IsFinishedTutorial");

	Params::GameSequenceWork_IsFinishedTutorial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.IsSquadMemberDuplicate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharacterId                            SelectedCharacterId                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameSequenceWork::IsSquadMemberDuplicate(ECharacterId SelectedCharacterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "IsSquadMemberDuplicate");

	Params::GameSequenceWork_IsSquadMemberDuplicate Parms{};

	Parms.SelectedCharacterId = SelectedCharacterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction GameModule.GameSequenceWork.ItemDetailSubLevelCloseDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UGameSequenceWork::ItemDetailSubLevelCloseDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "ItemDetailSubLevelCloseDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.GameSequenceWork.ItemGetSceneCloseDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UGameSequenceWork::ItemGetSceneCloseDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "ItemGetSceneCloseDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.GameSequenceWork.NetworkDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UGameSequenceWork::NetworkDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "NetworkDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.GameSequenceWork.NetworkLoginFinishedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    LoginCompleted                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::NetworkLoginFinishedDelegate__DelegateSignature(bool LoginCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "NetworkLoginFinishedDelegate__DelegateSignature");

	Params::GameSequenceWork_NetworkLoginFinishedDelegate__DelegateSignature Parms{};

	Parms.LoginCompleted = LoginCompleted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.GameSequenceWork.OnApplicationHasReactivatedDelegate
// (Final, Native, Public)

void UGameSequenceWork::OnApplicationHasReactivatedDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnApplicationHasReactivatedDelegate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnAudioFinished_AppearSquad
// (Final, Native, Private)
// Parameters:
// class UAtomComponent*                   AtomComponent                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::OnAudioFinished_AppearSquad(class UAtomComponent* AtomComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnAudioFinished_AppearSquad");

	Params::GameSequenceWork_OnAudioFinished_AppearSquad Parms{};

	Parms.AtomComponent = AtomComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnAudioFinished_AppearSquadMember
// (Final, Native, Private)
// Parameters:
// class UAtomComponent*                   AtomComponent                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::OnAudioFinished_AppearSquadMember(class UAtomComponent* AtomComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnAudioFinished_AppearSquadMember");

	Params::GameSequenceWork_OnAudioFinished_AppearSquadMember Parms{};

	Parms.AtomComponent = AtomComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.GameSequenceWork.OnChangedMainMenuDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::OnChangedMainMenuDelegate__DelegateSignature(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnChangedMainMenuDelegate__DelegateSignature");

	Params::GameSequenceWork_OnChangedMainMenuDelegate__DelegateSignature Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.GameSequenceWork.OnChangeIdleStatusEvent
// (Final, Native, Protected)
// Parameters:
// bool                                    Idle                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StateSetting                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::OnChangeIdleStatusEvent(bool Idle, int32 StateSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnChangeIdleStatusEvent");

	Params::GameSequenceWork_OnChangeIdleStatusEvent Parms{};

	Parms.Idle = Idle;
	Parms.StateSetting = StateSetting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnCustomMatchTeamUpUpdatedEvent
// (Final, Native, Public)

void UGameSequenceWork::OnCustomMatchTeamUpUpdatedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnCustomMatchTeamUpUpdatedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnErrorWindowClosed
// (Final, Native, Private)

void UGameSequenceWork::OnErrorWindowClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnErrorWindowClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnFinishedFadeOutOpenLevelCustomMatch
// (Final, Native, Protected)

void UGameSequenceWork::OnFinishedFadeOutOpenLevelCustomMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnFinishedFadeOutOpenLevelCustomMatch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnFinishedQuitBattle_ChangeIdleStatusEvent
// (Final, Native, Protected)
// Parameters:
// bool                                    Idle                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StateSetting                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::OnFinishedQuitBattle_ChangeIdleStatusEvent(bool Idle, int32 StateSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnFinishedQuitBattle_ChangeIdleStatusEvent");

	Params::GameSequenceWork_OnFinishedQuitBattle_ChangeIdleStatusEvent Parms{};

	Parms.Idle = Idle;
	Parms.StateSetting = StateSetting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnGameOptionSoundChanged
// (Final, Native, Public)

void UGameSequenceWork::OnGameOptionSoundChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnGameOptionSoundChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.GameSequenceWork.OnHasReactivedCompletePurchaseDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UGameSequenceWork::OnHasReactivedCompletePurchaseDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnHasReactivedCompletePurchaseDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.GameSequenceWork.OnLoadCompleteConfirmPurchase
// (Final, Native, Public)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::OnLoadCompleteConfirmPurchase(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnLoadCompleteConfirmPurchase");

	Params::GameSequenceWork_OnLoadCompleteConfirmPurchase Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnLoadCompletePurchaseError
// (Final, Native, Public)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Key                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Message                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::OnLoadCompletePurchaseError(int32 RequestId, const class FName Key, const class FName Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnLoadCompletePurchaseError");

	Params::GameSequenceWork_OnLoadCompletePurchaseError Parms{};

	Parms.RequestId = RequestId;
	Parms.Key = Key;
	Parms.Message = Message;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnLoadCompletePurchaseStatus
// (Final, Native, Public)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::OnLoadCompletePurchaseStatus(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnLoadCompletePurchaseStatus");

	Params::GameSequenceWork_OnLoadCompletePurchaseStatus Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnNotifyTeamUpKickedEvent
// (Final, Native, Public)

void UGameSequenceWork::OnNotifyTeamUpKickedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnNotifyTeamUpKickedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnPlayerRequestErrorEvent
// (Final, Native, Protected)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Key                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Message                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::OnPlayerRequestErrorEvent(int32 RequestId, const class FName Key, const class FName Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnPlayerRequestErrorEvent");

	Params::GameSequenceWork_OnPlayerRequestErrorEvent Parms{};

	Parms.RequestId = RequestId;
	Parms.Key = Key;
	Parms.Message = Message;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnPlayerRequestErrorServerEvent
// (Final, Native, Protected)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Key                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Message                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::OnPlayerRequestErrorServerEvent(int32 RequestId, const class FName Key, const class FName Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnPlayerRequestErrorServerEvent");

	Params::GameSequenceWork_OnPlayerRequestErrorServerEvent Parms{};

	Parms.RequestId = RequestId;
	Parms.Key = Key;
	Parms.Message = Message;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnPopupGeneralWindowClosed
// (Final, Native, Private)

void UGameSequenceWork::OnPopupGeneralWindowClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnPopupGeneralWindowClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnReadyForPlayEvent
// (Final, Native, Public)

void UGameSequenceWork::OnReadyForPlayEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnReadyForPlayEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnSquadNumChanged
// (Final, Native, Private)
// Parameters:
// int32                                   SquadNum                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::OnSquadNumChanged(int32 SquadNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnSquadNumChanged");

	Params::GameSequenceWork_OnSquadNumChanged Parms{};

	Parms.SquadNum = SquadNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnSubLevelHidden
// (Final, Native, Protected)

void UGameSequenceWork::OnSubLevelHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnSubLevelHidden");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnSubLevelHidden_TutorialPopup
// (Final, Native, Protected)

void UGameSequenceWork::OnSubLevelHidden_TutorialPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnSubLevelHidden_TutorialPopup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.GameSequenceWork.OnSubLevelHiddenDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UGameSequenceWork::OnSubLevelHiddenDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnSubLevelHiddenDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.GameSequenceWork.OnSubLevelHiddenTutorialDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// ETutorialPopupScene                     Scene                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::OnSubLevelHiddenTutorialDelegate__DelegateSignature(ETutorialPopupScene Scene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnSubLevelHiddenTutorialDelegate__DelegateSignature");

	Params::GameSequenceWork_OnSubLevelHiddenTutorialDelegate__DelegateSignature Parms{};

	Parms.Scene = Scene;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.GameSequenceWork.OnSubLevelShown
// (Final, Native, Protected)

void UGameSequenceWork::OnSubLevelShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnSubLevelShown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnSystemErrorEvent
// (Final, Native, Protected)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Key                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Message                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::OnSystemErrorEvent(int32 RequestId, const class FName Key, const class FName Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnSystemErrorEvent");

	Params::GameSequenceWork_OnSystemErrorEvent Parms{};

	Parms.RequestId = RequestId;
	Parms.Key = Key;
	Parms.Message = Message;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnSystemErrorServerEvent
// (Final, Native, Protected)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Key                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Message                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::OnSystemErrorServerEvent(int32 RequestId, const class FName Key, const class FName Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnSystemErrorServerEvent");

	Params::GameSequenceWork_OnSystemErrorServerEvent Parms{};

	Parms.RequestId = RequestId;
	Parms.Key = Key;
	Parms.Message = Message;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnTeamUpAutoBattleStartErrorEvent
// (Final, Native, Public)

void UGameSequenceWork::OnTeamUpAutoBattleStartErrorEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnTeamUpAutoBattleStartErrorEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnTeamUpAutoStartBattleCompleteEvent
// (Final, Native, Public)
// Parameters:
// EAutoStartBattleState                   State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::OnTeamUpAutoStartBattleCompleteEvent(EAutoStartBattleState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnTeamUpAutoStartBattleCompleteEvent");

	Params::GameSequenceWork_OnTeamUpAutoStartBattleCompleteEvent Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnTeamUpLeaveEvent
// (Final, Native, Public)

void UGameSequenceWork::OnTeamUpLeaveEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnTeamUpLeaveEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnTeamUpMemberKickedEvent
// (Final, Native, Public)

void UGameSequenceWork::OnTeamUpMemberKickedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnTeamUpMemberKickedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnTeamUpUpdatedEvent
// (Final, Native, Public)

void UGameSequenceWork::OnTeamUpUpdatedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnTeamUpUpdatedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.GameSequenceWork.OnTokushoAndSettlementCloseDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UGameSequenceWork::OnTokushoAndSettlementCloseDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnTokushoAndSettlementCloseDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.GameSequenceWork.OnTutorialFinishedFadeOut
// (Final, Native, Public)

void UGameSequenceWork::OnTutorialFinishedFadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnTutorialFinishedFadeOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnTutorialFinishedStepUpdated
// (Final, Native, Public)

void UGameSequenceWork::OnTutorialFinishedStepUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnTutorialFinishedStepUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnUpdateCompleteUpdateTutorial
// (Final, Native, Public)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::OnUpdateCompleteUpdateTutorial(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnUpdateCompleteUpdateTutorial");

	Params::GameSequenceWork_OnUpdateCompleteUpdateTutorial Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnVoiceChatChangePlayerStatus
// (Final, Native, Public)
// Parameters:
// class FString                           UniqueNetId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EVoiceChatMemberStatus                  Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::OnVoiceChatChangePlayerStatus(const class FString& UniqueNetId, EVoiceChatMemberStatus Status, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnVoiceChatChangePlayerStatus");

	Params::GameSequenceWork_OnVoiceChatChangePlayerStatus Parms{};

	Parms.UniqueNetId = std::move(UniqueNetId);
	Parms.Status = Status;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OnVoiceChatChangeStatus
// (Final, Native, Public)
// Parameters:
// EVoiceChatSystemStatus                  Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::OnVoiceChatChangeStatus(EVoiceChatSystemStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnVoiceChatChangeStatus");

	Params::GameSequenceWork_OnVoiceChatChangeStatus Parms{};

	Parms.Status = Status;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.GameSequenceWork.OnWindowCloseEventDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UGameSequenceWork::OnWindowCloseEventDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OnWindowCloseEventDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.GameSequenceWork.OpenTutorialLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           UniqueId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::OpenTutorialLevel(const class FString& UniqueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OpenTutorialLevel");

	Params::GameSequenceWork_OpenTutorialLevel Parms{};

	Parms.UniqueId = std::move(UniqueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.OutgameTutorialTipsWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETutorialPopupScene                     PopupScene                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AlwaysOpen                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelStreamingDynamic*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULevelStreamingDynamic* UGameSequenceWork::OutgameTutorialTipsWidget(ETutorialPopupScene PopupScene, bool AlwaysOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "OutgameTutorialTipsWidget");

	Params::GameSequenceWork_OutgameTutorialTipsWidget Parms{};

	Parms.PopupScene = PopupScene;
	Parms.AlwaysOpen = AlwaysOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.SetEditPlayerIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::SetEditPlayerIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "SetEditPlayerIndex");

	Params::GameSequenceWork_SetEditPlayerIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.SetEditTrainingCharacterId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::SetEditTrainingCharacterId(ECharacterId CharacterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "SetEditTrainingCharacterId");

	Params::GameSequenceWork_SetEditTrainingCharacterId Parms{};

	Parms.CharacterId = CharacterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.SetEditTrainingSkillVariationCode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SkillVariationCode                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::SetEditTrainingSkillVariationCode(int32 SkillVariationCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "SetEditTrainingSkillVariationCode");

	Params::GameSequenceWork_SetEditTrainingSkillVariationCode Parms{};

	Parms.SkillVariationCode = SkillVariationCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.SetLoginBonusTransitionType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ELoginBonusTransitionType               TransitionType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::SetLoginBonusTransitionType(ELoginBonusTransitionType TransitionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "SetLoginBonusTransitionType");

	Params::GameSequenceWork_SetLoginBonusTransitionType Parms{};

	Parms.TransitionType = TransitionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.SetMoveHeroCrystalTab
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::SetMoveHeroCrystalTab(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "SetMoveHeroCrystalTab");

	Params::GameSequenceWork_SetMoveHeroCrystalTab Parms{};

	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.SetNextGuildLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NextGuildLevel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::SetNextGuildLevel(int32 NextGuildLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "SetNextGuildLevel");

	Params::GameSequenceWork_SetNextGuildLevel Parms{};

	Parms.NextGuildLevel = NextGuildLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.GameSequenceWork.SetNoticeUnreadFlagDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    Unread                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::SetNoticeUnreadFlagDelegate__DelegateSignature(bool Unread)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "SetNoticeUnreadFlagDelegate__DelegateSignature");

	Params::GameSequenceWork_SetNoticeUnreadFlagDelegate__DelegateSignature Parms{};

	Parms.Unread = Unread;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.GameSequenceWork.SetPrevGuildLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PrevGuildLevel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::SetPrevGuildLevel(int32 PrevGuildLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "SetPrevGuildLevel");

	Params::GameSequenceWork_SetPrevGuildLevel Parms{};

	Parms.PrevGuildLevel = PrevGuildLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.SetSkillVariationCodeMap
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<ECharacterId, int32>               SkillVariationCodeMap                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGameSequenceWork::SetSkillVariationCodeMap(const TMap<ECharacterId, int32>& SkillVariationCodeMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "SetSkillVariationCodeMap");

	Params::GameSequenceWork_SetSkillVariationCodeMap Parms{};

	Parms.SkillVariationCodeMap = std::move(SkillVariationCodeMap);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.ShowInviteUINetworkTest
// (Final, Native, Public, BlueprintCallable)

void UGameSequenceWork::ShowInviteUINetworkTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "ShowInviteUINetworkTest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameSequenceWork.ShowInviteUITest
// (Final, Native, Public, BlueprintCallable)

void UGameSequenceWork::ShowInviteUITest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "ShowInviteUITest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.GameSequenceWork.UpdateTutorialDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UGameSequenceWork::UpdateTutorialDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "UpdateTutorialDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.GameSequenceWork.UpdateTutorialStepNo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETutorialStepNo                         UpdateStepNo                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameSequenceWork::UpdateTutorialStepNo(ETutorialStepNo UpdateStepNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "UpdateTutorialStepNo");

	Params::GameSequenceWork_UpdateTutorialStepNo Parms{};

	Parms.UpdateStepNo = UpdateStepNo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction GameModule.GameSequenceWork.VoiceChatEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FString                           UniqueNetId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameSequenceWork::VoiceChatEvent__DelegateSignature(const class FString& UniqueNetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "VoiceChatEvent__DelegateSignature");

	Params::GameSequenceWork_VoiceChatEvent__DelegateSignature Parms{};

	Parms.UniqueNetId = std::move(UniqueNetId);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction GameModule.GameSequenceWork.WebApiErrorEventDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UGameSequenceWork::WebApiErrorEventDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "WebApiErrorEventDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.GameSequenceWork.BP_GetMainMenuBattleSequence
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBattleStartSequenceType                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBattleStartSequenceType UGameSequenceWork::BP_GetMainMenuBattleSequence() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_GetMainMenuBattleSequence");

	Params::GameSequenceWork_BP_GetMainMenuBattleSequence Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.BP_GetOutGameCharacterCode
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGameSequenceWork::BP_GetOutGameCharacterCode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_GetOutGameCharacterCode");

	Params::GameSequenceWork_BP_GetOutGameCharacterCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.BP_GetOutGameFriendFetchBlueFlag
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameSequenceWork::BP_GetOutGameFriendFetchBlueFlag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_GetOutGameFriendFetchBlueFlag");

	Params::GameSequenceWork_BP_GetOutGameFriendFetchBlueFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.BP_GetOutGameFriendFetchCategoryType
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFriendRequesetType                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFriendRequesetType UGameSequenceWork::BP_GetOutGameFriendFetchCategoryType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_GetOutGameFriendFetchCategoryType");

	Params::GameSequenceWork_BP_GetOutGameFriendFetchCategoryType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.BP_GetTutorialStep
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGameSequenceWork::BP_GetTutorialStep() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "BP_GetTutorialStep");

	Params::GameSequenceWork_BP_GetTutorialStep Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.GetEditPlayerIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGameSequenceWork::GetEditPlayerIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "GetEditPlayerIndex");

	Params::GameSequenceWork_GetEditPlayerIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.GetEditTrainingCharacterId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterId                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharacterId UGameSequenceWork::GetEditTrainingCharacterId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "GetEditTrainingCharacterId");

	Params::GameSequenceWork_GetEditTrainingCharacterId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.GetEditTrainingSkillVariationCode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGameSequenceWork::GetEditTrainingSkillVariationCode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "GetEditTrainingSkillVariationCode");

	Params::GameSequenceWork_GetEditTrainingSkillVariationCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.GetMatchingSquadTimer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGameSequenceWork::GetMatchingSquadTimer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "GetMatchingSquadTimer");

	Params::GameSequenceWork_GetMatchingSquadTimer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.GetNextGuildLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGameSequenceWork::GetNextGuildLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "GetNextGuildLevel");

	Params::GameSequenceWork_GetNextGuildLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.GetPrevGuildLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGameSequenceWork::GetPrevGuildLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "GetPrevGuildLevel");

	Params::GameSequenceWork_GetPrevGuildLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.GetSearchSquadTimer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGameSequenceWork::GetSearchSquadTimer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "GetSearchSquadTimer");

	Params::GameSequenceWork_GetSearchSquadTimer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.GetSelectGuildId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UGameSequenceWork::GetSelectGuildId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "GetSelectGuildId");

	Params::GameSequenceWork_GetSelectGuildId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.GetSequenceTimer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGameSequenceWork::GetSequenceTimer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "GetSequenceTimer");

	Params::GameSequenceWork_GetSequenceTimer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.GetSkillVariationCodeMap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TMap<ECharacterId, int32>         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TMap<ECharacterId, int32> UGameSequenceWork::GetSkillVariationCodeMap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "GetSkillVariationCodeMap");

	Params::GameSequenceWork_GetSkillVariationCodeMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameSequenceWork.IsOutGame
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameSequenceWork::IsOutGame() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameSequenceWork", "IsOutGame");

	Params::GameSequenceWork_IsOutGame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameStatics.DebugDrawText2D
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPosX                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPosY                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InText                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     InColor                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameStatics::DebugDrawText2D(const class UObject* WorldContextObject, const int32 InPosX, const int32 InPosY, const class FString& InText, const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GameStatics", "DebugDrawText2D");

	Params::GameStatics_DebugDrawText2D Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InPosX = InPosX;
	Parms.InPosY = InPosY;
	Parms.InText = std::move(InText);
	Parms.InColor = std::move(InColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameStatics.DebugDrawText2DF
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPosX                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPosY                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InText                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     InColor                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameStatics::DebugDrawText2DF(const class UObject* WorldContextObject, const float InPosX, const float InPosY, const class FString& InText, const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GameStatics", "DebugDrawText2DF");

	Params::GameStatics_DebugDrawText2DF Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InPosX = InPosX;
	Parms.InPosY = InPosY;
	Parms.InText = std::move(InText);
	Parms.InColor = std::move(InColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GameStatics.GetCurrentStageId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EStageId                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EStageId UGameStatics::GetCurrentStageId(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GameStatics", "GetCurrentStageId");

	Params::GameStatics_GetCurrentStageId Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameStatics.GetCurrentStageIdAsInt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGameStatics::GetCurrentStageIdAsInt(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GameStatics", "GetCurrentStageIdAsInt");

	Params::GameStatics_GetCurrentStageIdAsInt Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameStatics.GetCurrentStageIdAsString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UGameStatics::GetCurrentStageIdAsString(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GameStatics", "GetCurrentStageIdAsString");

	Params::GameStatics_GetCurrentStageIdAsString Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GameStatics.IsAutoPlayMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameStatics::IsAutoPlayMode(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GameStatics", "IsAutoPlayMode");

	Params::GameStatics_IsAutoPlayMode Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GashaDatabaseWork.BP_EntryGashaParam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   GashaIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PaymentIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGashaDatabaseWork::BP_EntryGashaParam(int32 GashaIndex, int32 PaymentIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_EntryGashaParam");

	Params::GashaDatabaseWork_BP_EntryGashaParam Parms{};

	Parms.GashaIndex = GashaIndex;
	Parms.PaymentIndex = PaymentIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GashaDatabaseWork.BP_GetActiveGashaCode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGashaDatabaseWork::BP_GetActiveGashaCode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_GetActiveGashaCode");

	Params::GashaDatabaseWork_BP_GetActiveGashaCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GashaDatabaseWork.BP_GetEntryNotes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UGashaDatabaseWork::BP_GetEntryNotes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_GetEntryNotes");

	Params::GashaDatabaseWork_BP_GetEntryNotes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GashaDatabaseWork.BP_GetGashaBannerPaperSprites
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     PBanner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     PLogo                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGashaDatabaseWork::BP_GetGashaBannerPaperSprites(int32 Code, class UPaperSprite* PBanner, class UPaperSprite* PLogo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_GetGashaBannerPaperSprites");

	Params::GashaDatabaseWork_BP_GetGashaBannerPaperSprites Parms{};

	Parms.Code = Code;
	Parms.PBanner = PBanner;
	Parms.PLogo = PLogo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.BP_GetGashaBoxTopRarity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMdRarity                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMdRarity UGashaDatabaseWork::BP_GetGashaBoxTopRarity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_GetGashaBoxTopRarity");

	Params::GashaDatabaseWork_BP_GetGashaBoxTopRarity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GashaDatabaseWork.BP_GetGashaCostumeImageFromItemCode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ItemCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGashaImageSizeType                     SizeType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UGashaDatabaseWork::BP_GetGashaCostumeImageFromItemCode(int32 ItemCode, EGashaImageSizeType SizeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_GetGashaCostumeImageFromItemCode");

	Params::GashaDatabaseWork_BP_GetGashaCostumeImageFromItemCode Parms{};

	Parms.ItemCode = ItemCode;
	Parms.SizeType = SizeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GashaDatabaseWork.BP_GetGashaCurrencyImage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ItemCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGashaImageSizeType                     SizeType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UGashaDatabaseWork::BP_GetGashaCurrencyImage(int32 ItemCode, EGashaImageSizeType SizeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_GetGashaCurrencyImage");

	Params::GashaDatabaseWork_BP_GetGashaCurrencyImage Parms{};

	Parms.ItemCode = ItemCode;
	Parms.SizeType = SizeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GashaDatabaseWork.BP_GetGashaEmoteImageFromCharacterId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ItemCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGashaImageSizeType                     SizeType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UGashaDatabaseWork::BP_GetGashaEmoteImageFromCharacterId(int32 ItemCode, EGashaImageSizeType SizeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_GetGashaEmoteImageFromCharacterId");

	Params::GashaDatabaseWork_BP_GetGashaEmoteImageFromCharacterId Parms{};

	Parms.ItemCode = ItemCode;
	Parms.SizeType = SizeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GashaDatabaseWork.BP_GetGashaIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGashaDatabaseWork::BP_GetGashaIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_GetGashaIndex");

	Params::GashaDatabaseWork_BP_GetGashaIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GashaDatabaseWork.BP_GetGashaNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGashaDatabaseWork::BP_GetGashaNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_GetGashaNum");

	Params::GashaDatabaseWork_BP_GetGashaNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GashaDatabaseWork.BP_GetGashaResultData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGashaResultData           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FGashaResultData UGashaDatabaseWork::BP_GetGashaResultData(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_GetGashaResultData");

	Params::GashaDatabaseWork_BP_GetGashaResultData Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GashaDatabaseWork.BP_GetGashaSkipFlg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGashaDatabaseWork::BP_GetGashaSkipFlg()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_GetGashaSkipFlg");

	Params::GashaDatabaseWork_BP_GetGashaSkipFlg Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GashaDatabaseWork.BP_GetGashaTopRarity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMdRarity                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMdRarity UGashaDatabaseWork::BP_GetGashaTopRarity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_GetGashaTopRarity");

	Params::GashaDatabaseWork_BP_GetGashaTopRarity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GashaDatabaseWork.BP_GetGashaVoiceImageFromCharacterId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsIcon                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UGashaDatabaseWork::BP_GetGashaVoiceImageFromCharacterId(ECharacterId CharacterId, bool IsIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_GetGashaVoiceImageFromCharacterId");

	Params::GashaDatabaseWork_BP_GetGashaVoiceImageFromCharacterId Parms{};

	Parms.CharacterId = CharacterId;
	Parms.IsIcon = IsIcon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GashaDatabaseWork.BP_GetLawType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGashaLawType                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGashaLawType UGashaDatabaseWork::BP_GetLawType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_GetLawType");

	Params::GashaDatabaseWork_BP_GetLawType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GashaDatabaseWork.BP_GetPaperSpriteSize
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPaperSprite*                     Sprite                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UGashaDatabaseWork::BP_GetPaperSpriteSize(class UPaperSprite* Sprite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_GetPaperSpriteSize");

	Params::GashaDatabaseWork_BP_GetPaperSpriteSize Parms{};

	Parms.Sprite = Sprite;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GashaDatabaseWork.BP_GetSequencerSkipFrame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGashaDatabaseWork::BP_GetSequencerSkipFrame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_GetSequencerSkipFrame");

	Params::GashaDatabaseWork_BP_GetSequencerSkipFrame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GashaDatabaseWork.BP_OpenGashaLevel
// (Final, Native, Public, BlueprintCallable)

void UGashaDatabaseWork::BP_OpenGashaLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_OpenGashaLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.BP_OpenMainMenuLevel
// (Final, Native, Public, BlueprintCallable)

void UGashaDatabaseWork::BP_OpenMainMenuLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_OpenMainMenuLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.BP_PlayGashaSuggestVoice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAtomComponent*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAtomComponent* UGashaDatabaseWork::BP_PlayGashaSuggestVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_PlayGashaSuggestVoice");

	Params::GashaDatabaseWork_BP_PlayGashaSuggestVoice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.GashaDatabaseWork.BP_ResetEntryGashaParam
// (Final, Native, Public, BlueprintCallable)

void UGashaDatabaseWork::BP_ResetEntryGashaParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_ResetEntryGashaParam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.BP_RunGasha
// (Final, Native, Public, BlueprintCallable)

void UGashaDatabaseWork::BP_RunGasha()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_RunGasha");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.BP_SetGashaSkipFlg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsSkip                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGashaDatabaseWork::BP_SetGashaSkipFlg(bool IsSkip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_SetGashaSkipFlg");

	Params::GashaDatabaseWork_BP_SetGashaSkipFlg Parms{};

	Parms.IsSkip = IsSkip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.BP_SetLawType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGashaLawType                           LawType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGashaDatabaseWork::BP_SetLawType(EGashaLawType LawType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_SetLawType");

	Params::GashaDatabaseWork_BP_SetLawType Parms{};

	Parms.LawType = LawType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.BP_SetSequencerSkipFrame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Frame                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGashaDatabaseWork::BP_SetSequencerSkipFrame(int32 Frame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "BP_SetSequencerSkipFrame");

	Params::GashaDatabaseWork_BP_SetSequencerSkipFrame Parms{};

	Parms.Frame = Frame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.ConfirmRetryGashaComplete
// (Final, Native, Public)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGashaDatabaseWork::ConfirmRetryGashaComplete(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "ConfirmRetryGashaComplete");

	Params::GashaDatabaseWork_ConfirmRetryGashaComplete Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.DebugOpenSuggestVoiceSubLevel
// (Final, Native, Public, BlueprintCallable)

void UGashaDatabaseWork::DebugOpenSuggestVoiceSubLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "DebugOpenSuggestVoiceSubLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.DebugRunGasha
// (Final, Native, Public, BlueprintCallable)

void UGashaDatabaseWork::DebugRunGasha()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "DebugRunGasha");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.DebugRunGashaLoadComplete
// (Final, Native, Public)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGashaDatabaseWork::DebugRunGashaLoadComplete(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "DebugRunGashaLoadComplete");

	Params::GashaDatabaseWork_DebugRunGashaLoadComplete Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.ExChangeListLoadComplete
// (Final, Native, Public)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGashaDatabaseWork::ExChangeListLoadComplete(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "ExChangeListLoadComplete");

	Params::GashaDatabaseWork_ExChangeListLoadComplete Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.ExChangeLoadComplete
// (Final, Native, Public)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGashaDatabaseWork::ExChangeLoadComplete(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "ExChangeLoadComplete");

	Params::GashaDatabaseWork_ExChangeLoadComplete Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.ExchangeLotteryMileage
// (Final, Native, Public, BlueprintCallable)

void UGashaDatabaseWork::ExchangeLotteryMileage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "ExchangeLotteryMileage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.GashaListLoadComplete
// (Final, Native, Public)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGashaDatabaseWork::GashaListLoadComplete(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "GashaListLoadComplete");

	Params::GashaDatabaseWork_GashaListLoadComplete Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.LoadGashaResultImage
// (Final, Native, Public, BlueprintCallable)

void UGashaDatabaseWork::LoadGashaResultImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "LoadGashaResultImage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.OfferRatioLoadComplete
// (Final, Native, Public)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGashaDatabaseWork::OfferRatioLoadComplete(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "OfferRatioLoadComplete");

	Params::GashaDatabaseWork_OfferRatioLoadComplete Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.GashaDatabaseWork.OnGashaInfoButtonBackDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UGashaDatabaseWork::OnGashaInfoButtonBackDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "OnGashaInfoButtonBackDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.GashaDatabaseWork.OnGashaUseCheckCancelDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UGashaDatabaseWork::OnGashaUseCheckCancelDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "OnGashaUseCheckCancelDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.GashaDatabaseWork.OnLoadedImage
// (Final, Native, Public)
// Parameters:
// class UPaperSprite*                     Sprite                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGashaDatabaseWork::OnLoadedImage(class UPaperSprite* Sprite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "OnLoadedImage");

	Params::GashaDatabaseWork_OnLoadedImage Parms{};

	Parms.Sprite = Sprite;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.OnPreLoadComplete
// (Final, Native, Public)

void UGashaDatabaseWork::OnPreLoadComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "OnPreLoadComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.OpenGashaLevelFadeOutEnd
// (Final, Native, Public)

void UGashaDatabaseWork::OpenGashaLevelFadeOutEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "OpenGashaLevelFadeOutEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.RunGashaLoadComplete
// (Final, Native, Public)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGashaDatabaseWork::RunGashaLoadComplete(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "RunGashaLoadComplete");

	Params::GashaDatabaseWork_RunGashaLoadComplete Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.RunGashaLoadError
// (Final, Native, Public)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Key                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Message                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGashaDatabaseWork::RunGashaLoadError(int32 RequestId, const class FName Key, const class FName Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "RunGashaLoadError");

	Params::GashaDatabaseWork_RunGashaLoadError Parms{};

	Parms.RequestId = RequestId;
	Parms.Key = Key;
	Parms.Message = Message;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.SetCharaImage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UImage*                           Image                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMdRarityItemCategory                   Category                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSyncLoad                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGashaImageSizeType                     SizeType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGashaDatabaseWork::SetCharaImage(class UImage* Image, EMdRarityItemCategory Category, int32 ItemCode, bool bSyncLoad, EGashaImageSizeType SizeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "SetCharaImage");

	Params::GashaDatabaseWork_SetCharaImage Parms{};

	Parms.Image = Image;
	Parms.Category = Category;
	Parms.ItemCode = ItemCode;
	Parms.bSyncLoad = bSyncLoad;
	Parms.SizeType = SizeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.GashaDatabaseWork.UnLoadGashaResultImage
// (Final, Native, Public, BlueprintCallable)

void UGashaDatabaseWork::UnLoadGashaResultImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GashaDatabaseWork", "UnLoadGashaResultImage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.HerovsControlChannel.OnErrorForDedicatedServer
// (Final, Native, Private)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Key                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Message                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHerovsControlChannel::OnErrorForDedicatedServer(int32 RequestId, const class FName Key, const class FName Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsControlChannel", "OnErrorForDedicatedServer");

	Params::HerovsControlChannel_OnErrorForDedicatedServer Parms{};

	Parms.RequestId = RequestId;
	Parms.Key = Key;
	Parms.Message = Message;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.HerovsControlChannel.OnLoadedProfile
// (Final, Native, Private)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHerovsControlChannel::OnLoadedProfile(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsControlChannel", "OnLoadedProfile");

	Params::HerovsControlChannel_OnLoadedProfile Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.HerovsControlChannel.OnReadyForPlayersLoginForDedicatedServer
// (Final, Native, Private)

void UHerovsControlChannel::OnReadyForPlayersLoginForDedicatedServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsControlChannel", "OnReadyForPlayersLoginForDedicatedServer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.HerovsGameInstance.SetNeverRenderFocusRule
// (Final, Native, Static, Public, BlueprintCallable)

void UHerovsGameInstance::SetNeverRenderFocusRule()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HerovsGameInstance", "SetNeverRenderFocusRule");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.HerovsGameInstance.BP_GetDipSelectedLanguage
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UHerovsGameInstance::BP_GetDipSelectedLanguage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsGameInstance", "BP_GetDipSelectedLanguage");

	Params::HerovsGameInstance_BP_GetDipSelectedLanguage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.HerovsGameInstance.BP_OnChangeLanguage
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bNext                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHerovsGameInstance::BP_OnChangeLanguage(bool bNext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsGameInstance", "BP_OnChangeLanguage");

	Params::HerovsGameInstance_BP_OnChangeLanguage Parms{};

	Parms.bNext = bNext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.HerovsGameInstance.BP_OpenRestartedLevel
// (Final, Native, Protected, BlueprintCallable)

void UHerovsGameInstance::BP_OpenRestartedLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsGameInstance", "BP_OpenRestartedLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.HerovsGameInstance.OnChangeSteamOverrayActive__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHerovsGameInstance::OnChangeSteamOverrayActive__DelegateSignature(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsGameInstance", "OnChangeSteamOverrayActive__DelegateSignature");

	Params::HerovsGameInstance_OnChangeSteamOverrayActive__DelegateSignature Parms{};

	Parms.bActive = bActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.HerovsGameInstance.OnLoadComplete
// (Final, Native, Public)

void UHerovsGameInstance::OnLoadComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsGameInstance", "OnLoadComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.HerovsGameInstance.OnLoadCompleteConfirmPurchase
// (Final, Native, Public)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHerovsGameInstance::OnLoadCompleteConfirmPurchase(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsGameInstance", "OnLoadCompleteConfirmPurchase");

	Params::HerovsGameInstance_OnLoadCompleteConfirmPurchase Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.HerovsGameInstance.OnLoadCompletePurchaseStatus
// (Final, Native, Public)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHerovsGameInstance::OnLoadCompletePurchaseStatus(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsGameInstance", "OnLoadCompletePurchaseStatus");

	Params::HerovsGameInstance_OnLoadCompletePurchaseStatus Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.HerovsGameInstance.OnLoadCompleteStartPurchase
// (Final, Native, Public)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHerovsGameInstance::OnLoadCompleteStartPurchase(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsGameInstance", "OnLoadCompleteStartPurchase");

	Params::HerovsGameInstance_OnLoadCompleteStartPurchase Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.HerovsGameInstance.OnMasterDataInitializeComplete
// (Final, Native, Public)

void UHerovsGameInstance::OnMasterDataInitializeComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsGameInstance", "OnMasterDataInitializeComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.HerovsGameInstance.OnMicroTxnAuthorizationResponse__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FString                           OrderId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAuthorized                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHerovsGameInstance::OnMicroTxnAuthorizationResponse__DelegateSignature(const class FString& OrderId, bool bAuthorized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsGameInstance", "OnMicroTxnAuthorizationResponse__DelegateSignature");

	Params::HerovsGameInstance_OnMicroTxnAuthorizationResponse__DelegateSignature Parms{};

	Parms.OrderId = std::move(OrderId);
	Parms.bAuthorized = bAuthorized;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.HerovsGameInstance.OnReloadedMasterDataInitializeComplete
// (Final, Native, Public)

void UHerovsGameInstance::OnReloadedMasterDataInitializeComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsGameInstance", "OnReloadedMasterDataInitializeComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.HerovsGameInstance.SetMatchingPlayerNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Num                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHerovsGameInstance::SetMatchingPlayerNum(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsGameInstance", "SetMatchingPlayerNum");

	Params::HerovsGameInstance_SetMatchingPlayerNum Parms{};

	Parms.Num = Num;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.HerovsGameInstance.TestLoadPurchaseCatalog
// (Final, Native, Public)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHerovsGameInstance::TestLoadPurchaseCatalog(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsGameInstance", "TestLoadPurchaseCatalog");

	Params::HerovsGameInstance_TestLoadPurchaseCatalog Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.HerovsGameState.BP_CloseSystemMenu
// (Final, Native, Private, BlueprintCallable)

void AHerovsGameState::BP_CloseSystemMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsGameState", "BP_CloseSystemMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.HerovsGameState.BP_OpenSystemMenu
// (Final, Native, Private, BlueprintCallable)

void AHerovsGameState::BP_OpenSystemMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsGameState", "BP_OpenSystemMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.HerovsGameState.PlayerArrayChangeEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void AHerovsGameState::PlayerArrayChangeEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsGameState", "PlayerArrayChangeEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.HerovsGameState.GetGameModeType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGameModeType                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGameModeType AHerovsGameState::GetGameModeType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsGameState", "GetGameModeType");

	Params::HerovsGameState_GetGameModeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.HerovsGameState.IsLocalCharacterReady
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHerovsGameState::IsLocalCharacterReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsGameState", "IsLocalCharacterReady");

	Params::HerovsGameState_IsLocalCharacterReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.HerovsPlayerState.BP_SetIsKing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bKing                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHerovsPlayerState::BP_SetIsKing(bool bKing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsPlayerState", "BP_SetIsKing");

	Params::HerovsPlayerState_BP_SetIsKing Parms{};

	Parms.bKing = bKing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.HerovsPlayerState.BP_SetSquadId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHerovsPlayerState::BP_SetSquadId(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsPlayerState", "BP_SetSquadId");

	Params::HerovsPlayerState_BP_SetSquadId Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.HerovsPlayerState.BP_SetTeamId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHerovsPlayerState::BP_SetTeamId(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsPlayerState", "BP_SetTeamId");

	Params::HerovsPlayerState_BP_SetTeamId Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.HerovsPlayerState.MulticastOnInitialized
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void AHerovsPlayerState::MulticastOnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsPlayerState", "MulticastOnInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.HerovsPlayerState.BP_GetIsKing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHerovsPlayerState::BP_GetIsKing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsPlayerState", "BP_GetIsKing");

	Params::HerovsPlayerState_BP_GetIsKing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.HerovsPlayerState.BP_GetSquadId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHerovsPlayerState::BP_GetSquadId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsPlayerState", "BP_GetSquadId");

	Params::HerovsPlayerState_BP_GetSquadId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.HerovsPlayerState.BP_GetTeamId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AHerovsPlayerState::BP_GetTeamId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsPlayerState", "BP_GetTeamId");

	Params::HerovsPlayerState_BP_GetTeamId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.HerovsPlayerState.BP_GetUniqueId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUniqueNetIdRepl           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FUniqueNetIdRepl AHerovsPlayerState::BP_GetUniqueId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsPlayerState", "BP_GetUniqueId");

	Params::HerovsPlayerState_BP_GetUniqueId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.HerovsPlayerState.BP_GetUniqueNetId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AHerovsPlayerState::BP_GetUniqueNetId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsPlayerState", "BP_GetUniqueNetId");

	Params::HerovsPlayerState_BP_GetUniqueNetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.HerovsPlayerState.OnRep_UpdateKingEffect
// (Final, Native, Protected, Const)

void AHerovsPlayerState::OnRep_UpdateKingEffect() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HerovsPlayerState", "OnRep_UpdateKingEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.HudResource.BP_GetAbilityMeshFaceTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UHudResource::BP_GetAbilityMeshFaceTexture(ECharacterId CharacterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudResource", "BP_GetAbilityMeshFaceTexture");

	Params::HudResource_BP_GetAbilityMeshFaceTexture Parms{};

	Parms.CharacterId = CharacterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.HudResource.BP_GetCharacterFaceSprite
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UHudResource::BP_GetCharacterFaceSprite(ECharacterId CharacterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudResource", "BP_GetCharacterFaceSprite");

	Params::HudResource_BP_GetCharacterFaceSprite Parms{};

	Parms.CharacterId = CharacterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.HudResource.BP_GetCharacterFaceSpriteTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UHudResource::BP_GetCharacterFaceSpriteTexture(ECharacterId CharacterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudResource", "BP_GetCharacterFaceSpriteTexture");

	Params::HudResource_BP_GetCharacterFaceSpriteTexture Parms{};

	Parms.CharacterId = CharacterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.HudResource.GetMarkerSprite
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMarkerType                             MarkerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UHudResource::GetMarkerSprite(EMarkerType MarkerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HudResource", "GetMarkerSprite");

	Params::HudResource_GetMarkerSprite Parms{};

	Parms.MarkerType = MarkerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.LambdaWrapper.Dispatch
// (Final, Native, Public)

void ULambdaWrapper::Dispatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LambdaWrapper", "Dispatch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.LoadIconWidget.BP_PlayIconAnimation
// (Final, Native, Protected, BlueprintCallable)

void ULoadIconWidget::BP_PlayIconAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadIconWidget", "BP_PlayIconAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.LoadIconWidget.BP_PlayIconCloseAnimation
// (Final, Native, Protected, BlueprintCallable)

void ULoadIconWidget::BP_PlayIconCloseAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadIconWidget", "BP_PlayIconCloseAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.LoadIconWidget.BP_PlayIconOpenAnimation
// (Final, Native, Protected, BlueprintCallable)

void ULoadIconWidget::BP_PlayIconOpenAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadIconWidget", "BP_PlayIconOpenAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.LoadIconWidget.StartFadeIn
// (Final, Native, Protected, BlueprintCallable)

void ULoadIconWidget::StartFadeIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadIconWidget", "StartFadeIn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.LoadTransitionWidget.HiddenBgTexture
// (Event, Protected, BlueprintEvent)

void ULoadTransitionWidget::HiddenBgTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadTransitionWidget", "HiddenBgTexture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.LoadTransitionWidget.UpdateBgTexture
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoadTransitionWidget::UpdateBgTexture(int32 Code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadTransitionWidget", "UpdateBgTexture");

	Params::LoadTransitionWidget_UpdateBgTexture Parms{};

	Parms.Code = Code;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.MaterialControlComponent.BP_HiddenMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMaterialHideFlag                       Flag                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CacheName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialControlComponent::BP_HiddenMaterial(const EMaterialHideFlag Flag, const class FName CacheName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialControlComponent", "BP_HiddenMaterial");

	Params::MaterialControlComponent_BP_HiddenMaterial Parms{};

	Parms.Flag = Flag;
	Parms.CacheName = CacheName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.MaterialControlComponent.BP_HiddenMaterial_Custom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMaterialCustomFlag                     Flag                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CacheName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialControlComponent::BP_HiddenMaterial_Custom(const EMaterialCustomFlag Flag, const class FName CacheName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialControlComponent", "BP_HiddenMaterial_Custom");

	Params::MaterialControlComponent_BP_HiddenMaterial_Custom Parms{};

	Parms.Flag = Flag;
	Parms.CacheName = CacheName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.MaterialControlComponent.BP_IndicateMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMaterialHideFlag                       Flag                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CacheName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialControlComponent::BP_IndicateMaterial(const EMaterialHideFlag Flag, const class FName CacheName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialControlComponent", "BP_IndicateMaterial");

	Params::MaterialControlComponent_BP_IndicateMaterial Parms{};

	Parms.Flag = Flag;
	Parms.CacheName = CacheName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.MaterialControlComponent.BP_IndicateMaterial_Custom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMaterialCustomFlag                     Flag                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CacheName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialControlComponent::BP_IndicateMaterial_Custom(const EMaterialCustomFlag Flag, const class FName CacheName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialControlComponent", "BP_IndicateMaterial_Custom");

	Params::MaterialControlComponent_BP_IndicateMaterial_Custom Parms{};

	Parms.Flag = Flag;
	Parms.CacheName = CacheName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.MaterialControlComponent.BP_Reflesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             CacheName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialControlComponent::BP_Reflesh(const class FName CacheName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialControlComponent", "BP_Reflesh");

	Params::MaterialControlComponent_BP_Reflesh Parms{};

	Parms.CacheName = CacheName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.MaterialControlComponent.BP_RegisterOverWriteMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMaterialOverWriteType                  OverWriteType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               MaterialInterface                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialControlComponent::BP_RegisterOverWriteMaterial(EMaterialOverWriteType OverWriteType, class UMaterialInterface* MaterialInterface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialControlComponent", "BP_RegisterOverWriteMaterial");

	Params::MaterialControlComponent_BP_RegisterOverWriteMaterial Parms{};

	Parms.OverWriteType = OverWriteType;
	Parms.MaterialInterface = MaterialInterface;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.MaterialControlComponent.BP_ResetOverWriteMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             CacheName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialControlComponent::BP_ResetOverWriteMaterial(const class FName CacheName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialControlComponent", "BP_ResetOverWriteMaterial");

	Params::MaterialControlComponent_BP_ResetOverWriteMaterial Parms{};

	Parms.CacheName = CacheName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.MaterialControlComponent.BP_SetDefaultScalarParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMaterialGroupFlag                      GroupFlag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CacheName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialControlComponent::BP_SetDefaultScalarParameter(class FName ParameterName, EMaterialGroupFlag GroupFlag, class FName CacheName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialControlComponent", "BP_SetDefaultScalarParameter");

	Params::MaterialControlComponent_BP_SetDefaultScalarParameter Parms{};

	Parms.ParameterName = ParameterName;
	Parms.GroupFlag = GroupFlag;
	Parms.CacheName = CacheName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.MaterialControlComponent.BP_SetDefaultScalarParameterForOverWriteMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMaterialOverWriteType                  Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialControlComponent::BP_SetDefaultScalarParameterForOverWriteMaterial(class FName ParameterName, EMaterialOverWriteType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialControlComponent", "BP_SetDefaultScalarParameterForOverWriteMaterial");

	Params::MaterialControlComponent_BP_SetDefaultScalarParameterForOverWriteMaterial Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.MaterialControlComponent.BP_SetDefaultTextureParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMaterialGroupFlag                      GroupFlag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CacheName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialControlComponent::BP_SetDefaultTextureParameter(class FName ParameterName, EMaterialGroupFlag GroupFlag, class FName CacheName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialControlComponent", "BP_SetDefaultTextureParameter");

	Params::MaterialControlComponent_BP_SetDefaultTextureParameter Parms{};

	Parms.ParameterName = ParameterName;
	Parms.GroupFlag = GroupFlag;
	Parms.CacheName = CacheName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.MaterialControlComponent.BP_SetDefaultVectorParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMaterialGroupFlag                      GroupFlag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CacheName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialControlComponent::BP_SetDefaultVectorParameter(class FName ParameterName, EMaterialGroupFlag GroupFlag, class FName CacheName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialControlComponent", "BP_SetDefaultVectorParameter");

	Params::MaterialControlComponent_BP_SetDefaultVectorParameter Parms{};

	Parms.ParameterName = ParameterName;
	Parms.GroupFlag = GroupFlag;
	Parms.CacheName = CacheName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.MaterialControlComponent.BP_SetOverWriteMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMaterialOverWriteType                  OverWriteType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CacheName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialControlComponent::BP_SetOverWriteMaterial(EMaterialOverWriteType OverWriteType, const class FName CacheName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialControlComponent", "BP_SetOverWriteMaterial");

	Params::MaterialControlComponent_BP_SetOverWriteMaterial Parms{};

	Parms.OverWriteType = OverWriteType;
	Parms.CacheName = CacheName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.MaterialControlComponent.BP_SetScalarParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMaterialGroupFlag                      GroupFlag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CacheName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialControlComponent::BP_SetScalarParameter(class FName ParameterName, float Value, EMaterialGroupFlag GroupFlag, class FName CacheName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialControlComponent", "BP_SetScalarParameter");

	Params::MaterialControlComponent_BP_SetScalarParameter Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = Value;
	Parms.GroupFlag = GroupFlag;
	Parms.CacheName = CacheName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.MaterialControlComponent.BP_SetScalarParameterForOverWriteMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMaterialOverWriteType                  Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialControlComponent::BP_SetScalarParameterForOverWriteMaterial(class FName ParameterName, float Value, EMaterialOverWriteType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialControlComponent", "BP_SetScalarParameterForOverWriteMaterial");

	Params::MaterialControlComponent_BP_SetScalarParameterForOverWriteMaterial Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = Value;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.MaterialControlComponent.BP_SetTexture_Custom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMaterialCustomFlag                     Flag                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CacheName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialControlComponent::BP_SetTexture_Custom(const EMaterialCustomFlag Flag, class UTexture* Value, const class FName CacheName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialControlComponent", "BP_SetTexture_Custom");

	Params::MaterialControlComponent_BP_SetTexture_Custom Parms{};

	Parms.Flag = Flag;
	Parms.Value = Value;
	Parms.CacheName = CacheName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.MaterialControlComponent.BP_SetTextureParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMaterialGroupFlag                      GroupFlag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CacheName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialControlComponent::BP_SetTextureParameter(class FName ParameterName, class UTexture* Value, EMaterialGroupFlag GroupFlag, class FName CacheName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialControlComponent", "BP_SetTextureParameter");

	Params::MaterialControlComponent_BP_SetTextureParameter Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = Value;
	Parms.GroupFlag = GroupFlag;
	Parms.CacheName = CacheName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.MaterialControlComponent.BP_SetVectorParameter
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMaterialGroupFlag                      GroupFlag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CacheName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialControlComponent::BP_SetVectorParameter(class FName ParameterName, const struct FLinearColor& Value, EMaterialGroupFlag GroupFlag, class FName CacheName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialControlComponent", "BP_SetVectorParameter");

	Params::MaterialControlComponent_BP_SetVectorParameter Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = std::move(Value);
	Parms.GroupFlag = GroupFlag;
	Parms.CacheName = CacheName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.MaterialControlComponent.BP_TransitionScalar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTransitionMaterialScalarParamArgmentArgment                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UMaterialControlComponent::BP_TransitionScalar(const struct FTransitionMaterialScalarParamArgment& Argment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialControlComponent", "BP_TransitionScalar");

	Params::MaterialControlComponent_BP_TransitionScalar Parms{};

	Parms.Argment = std::move(Argment);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.MaterialControlComponent.BP_TransitionVector
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTransitionMaterialVectorParamArgmentArgment                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UMaterialControlComponent::BP_TransitionVector(const struct FTransitionMaterialVectorParamArgment& Argment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialControlComponent", "BP_TransitionVector");

	Params::MaterialControlComponent_BP_TransitionVector Parms{};

	Parms.Argment = std::move(Argment);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.MaterialControlComponent.BP_UnregisterOverWriteMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMaterialOverWriteType                  OverWriteType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialControlComponent::BP_UnregisterOverWriteMaterial(EMaterialOverWriteType OverWriteType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialControlComponent", "BP_UnregisterOverWriteMaterial");

	Params::MaterialControlComponent_BP_UnregisterOverWriteMaterial Parms{};

	Parms.OverWriteType = OverWriteType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.MultipleDigitsWidget.BP_SetDisplayNumber
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   DispNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   DispDigits                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMultipleDigitsWidget::BP_SetDisplayNumber(int32 DispNum, uint8 DispDigits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultipleDigitsWidget", "BP_SetDisplayNumber");

	Params::MultipleDigitsWidget_BP_SetDisplayNumber Parms{};

	Parms.DispNum = DispNum;
	Parms.DispDigits = DispDigits;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NetworkErrorWidget.OnCloseEvent
// (Final, Native, Public)

void UNetworkErrorWidget::OnCloseEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkErrorWidget", "OnCloseEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NetworkErrorWidget.OnFadeOut
// (Final, Native, Public)

void UNetworkErrorWidget::OnFadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkErrorWidget", "OnFadeOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NetworkErrorWidget.OnOpenEvent
// (Final, Native, Public)

void UNetworkErrorWidget::OnOpenEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkErrorWidget", "OnOpenEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.NetworkErrorWidget.OnWindowEventDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UNetworkErrorWidget::OnWindowEventDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkErrorWidget", "OnWindowEventDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.NetworkWork.AcceptSessionJoinRequest
// (Final, Native, Public)

void UNetworkWork::AcceptSessionJoinRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "AcceptSessionJoinRequest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NetworkWork.ApplyMute
// (Final, Native, Public, BlueprintCallable)

void UNetworkWork::ApplyMute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "ApplyMute");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NetworkWork.BP_CancelReadyBattleWait
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNetworkWork::BP_CancelReadyBattleWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "BP_CancelReadyBattleWait");

	Params::NetworkWork_BP_CancelReadyBattleWait Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.NetworkWork.BP_GetPlatformBlockUserIdArray
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FString>                   OutBlockIdArray                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UNetworkWork::BP_GetPlatformBlockUserIdArray(TArray<class FString>* OutBlockIdArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "BP_GetPlatformBlockUserIdArray");

	Params::NetworkWork_BP_GetPlatformBlockUserIdArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBlockIdArray != nullptr)
		*OutBlockIdArray = std::move(Parms.OutBlockIdArray);
}


// Function GameModule.NetworkWork.BP_GetSquadMemberIdList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    TheFront                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UNetworkWork::BP_GetSquadMemberIdList(bool TheFront)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "BP_GetSquadMemberIdList");

	Params::NetworkWork_BP_GetSquadMemberIdList Parms{};

	Parms.TheFront = TheFront;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.NetworkWork.BP_GetSquadMemberNameList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    TheFront                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UNetworkWork::BP_GetSquadMemberNameList(bool TheFront)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "BP_GetSquadMemberNameList");

	Params::NetworkWork_BP_GetSquadMemberNameList Parms{};

	Parms.TheFront = TheFront;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.NetworkWork.BP_InitializeChangeBlockListDelegate
// (Final, Native, Protected, BlueprintCallable)

void UNetworkWork::BP_InitializeChangeBlockListDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "BP_InitializeChangeBlockListDelegate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NetworkWork.BP_InitializeDeletedFriendDelegate
// (Final, Native, Public, BlueprintCallable)

void UNetworkWork::BP_InitializeDeletedFriendDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "BP_InitializeDeletedFriendDelegate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NetworkWork.BP_IsAgeRestrictionFailure
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNetworkWork::BP_IsAgeRestrictionFailure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "BP_IsAgeRestrictionFailure");

	Params::NetworkWork_BP_IsAgeRestrictionFailure Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.NetworkWork.BP_IsChatUserPrivilege
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNetworkWork::BP_IsChatUserPrivilege()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "BP_IsChatUserPrivilege");

	Params::NetworkWork_BP_IsChatUserPrivilege Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.NetworkWork.BP_IsRequiredPatchAvailable
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNetworkWork::BP_IsRequiredPatchAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "BP_IsRequiredPatchAvailable");

	Params::NetworkWork_BP_IsRequiredPatchAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.NetworkWork.BP_IsUGCUserPrivilege
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNetworkWork::BP_IsUGCUserPrivilege()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "BP_IsUGCUserPrivilege");

	Params::NetworkWork_BP_IsUGCUserPrivilege Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.NetworkWork.BP_LeaveSquadMatchkingMember
// (Final, Native, Public, BlueprintCallable)

void UNetworkWork::BP_LeaveSquadMatchkingMember()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "BP_LeaveSquadMatchkingMember");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NetworkWork.BP_ReadPlatformBlockList
// (Final, Native, Public, BlueprintCallable)

void UNetworkWork::BP_ReadPlatformBlockList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "BP_ReadPlatformBlockList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NetworkWork.BP_ShowPlatformMessageBox
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlatformMessageType                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetworkWork::BP_ShowPlatformMessageBox(int32 PlatformMessageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "BP_ShowPlatformMessageBox");

	Params::NetworkWork_BP_ShowPlatformMessageBox Parms{};

	Parms.PlatformMessageType = PlatformMessageType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NetworkWork.BP_Test_ShowPlatformProfile
// (Final, Native, Protected, BlueprintCallable)

void UNetworkWork::BP_Test_ShowPlatformProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "BP_Test_ShowPlatformProfile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NetworkWork.CreateSessionComplete
// (Final, Native, Private)

void UNetworkWork::CreateSessionComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "CreateSessionComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.NetworkWork.FindSquadTimeOutDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UNetworkWork::FindSquadTimeOutDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "FindSquadTimeOutDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.NetworkWork.JoinSquad
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SquadPassword                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNetworkWork::JoinSquad(const class FString& SquadPassword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "JoinSquad");

	Params::NetworkWork_JoinSquad Parms{};

	Parms.SquadPassword = std::move(SquadPassword);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.NetworkWork.JoinSquadByInvitation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InvitationId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           NoticeId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNetworkWork::JoinSquadByInvitation(const class FString& InvitationId, const class FString& NoticeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "JoinSquadByInvitation");

	Params::NetworkWork_JoinSquadByInvitation Parms{};

	Parms.InvitationId = std::move(InvitationId);
	Parms.NoticeId = std::move(NoticeId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.NetworkWork.OnClosedBlockList
// (Final, Native, Protected)
// Parameters:
// bool                                    bDecide                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetworkWork::OnClosedBlockList(bool bDecide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "OnClosedBlockList");

	Params::NetworkWork_OnClosedBlockList Parms{};

	Parms.bDecide = bDecide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NetworkWork.OnCustomMatchJoinCompleteEvent
// (Final, Native, Private)

void UNetworkWork::OnCustomMatchJoinCompleteEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "OnCustomMatchJoinCompleteEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NetworkWork.OnCustomMatchTeamUpLeaveEvent
// (Final, Native, Private)

void UNetworkWork::OnCustomMatchTeamUpLeaveEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "OnCustomMatchTeamUpLeaveEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NetworkWork.OnCustomMatchTeamUpUpdatedEvent
// (Final, Native, Private)

void UNetworkWork::OnCustomMatchTeamUpUpdatedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "OnCustomMatchTeamUpUpdatedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NetworkWork.OnJoinSquadWindowClosed
// (Final, Native, Private)

void UNetworkWork::OnJoinSquadWindowClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "OnJoinSquadWindowClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NetworkWork.OnLoadCompleteEvent
// (Final, Native, Private)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetworkWork::OnLoadCompleteEvent(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "OnLoadCompleteEvent");

	Params::NetworkWork_OnLoadCompleteEvent Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.NetworkWork.OnOPRUserPrivilegeDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UNetworkWork::OnOPRUserPrivilegeDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "OnOPRUserPrivilegeDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.NetworkWork.OnTeamUpJoinEvent
// (Final, Native, Private)

void UNetworkWork::OnTeamUpJoinEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "OnTeamUpJoinEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NetworkWork.OnTeamUpLeaveEvent
// (Final, Native, Private)

void UNetworkWork::OnTeamUpLeaveEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "OnTeamUpLeaveEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NetworkWork.OnTeamUpMemberKickedEvent
// (Final, Native, Private)

void UNetworkWork::OnTeamUpMemberKickedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "OnTeamUpMemberKickedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NetworkWork.OnTeamUpUpdatedEvent
// (Final, Native, Private)

void UNetworkWork::OnTeamUpUpdatedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "OnTeamUpUpdatedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NetworkWork.ResetCheckBlockPlayerMap
// (Final, Native, Public)

void UNetworkWork::ResetCheckBlockPlayerMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "ResetCheckBlockPlayerMap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NetworkWork.ShowDumpSession
// (Final, Native, Protected)

void UNetworkWork::ShowDumpSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "ShowDumpSession");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.NetworkWork.SquadChangeDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   SquadNum                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetworkWork::SquadChangeDelegate__DelegateSignature(int32 SquadNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "SquadChangeDelegate__DelegateSignature");

	Params::NetworkWork_SquadChangeDelegate__DelegateSignature Parms{};

	Parms.SquadNum = SquadNum;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction GameModule.NetworkWork.SquadInfoChangedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UNetworkWork::SquadInfoChangedDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "SquadInfoChangedDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.NetworkWork.UpdateMute
// (Final, Native, Public, BlueprintCallable)

void UNetworkWork::UpdateMute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "UpdateMute");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.NetworkWork.VoiceChatEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FString                           UniqueNetId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNetworkWork::VoiceChatEvent__DelegateSignature(const class FString& UniqueNetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "VoiceChatEvent__DelegateSignature");

	Params::NetworkWork_VoiceChatEvent__DelegateSignature Parms{};

	Parms.UniqueNetId = std::move(UniqueNetId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.NetworkWork.BP_GetSquadLeaderId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UNetworkWork::BP_GetSquadLeaderId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "BP_GetSquadLeaderId");

	Params::NetworkWork_BP_GetSquadLeaderId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.NetworkWork.BP_IsSquadLeader
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNetworkWork::BP_IsSquadLeader() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "BP_IsSquadLeader");

	Params::NetworkWork_BP_IsSquadLeader Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.NetworkWork.BP_SquadMemberIsCombat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNetworkWork::BP_SquadMemberIsCombat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "BP_SquadMemberIsCombat");

	Params::NetworkWork_BP_SquadMemberIsCombat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.NetworkWork.GetMuteMap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TMap<class FString, bool>         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TMap<class FString, bool> UNetworkWork::GetMuteMap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetworkWork", "GetMuteMap");

	Params::NetworkWork_GetMuteMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.NoticeWindowWidget.BP_ChangeAvailableButton
// (Event, Public, BlueprintEvent)

void UNoticeWindowWidget::BP_ChangeAvailableButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NoticeWindowWidget", "BP_ChangeAvailableButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.NoticeWindowWidget.CallEndEvent
// (Final, Native, Public, BlueprintCallable)

void UNoticeWindowWidget::CallEndEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NoticeWindowWidget", "CallEndEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NoticeWindowWidget.CreateButtonTileView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NumberToMake                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNoticeWindowWidget::CreateButtonTileView(int32 NumberToMake)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NoticeWindowWidget", "CreateButtonTileView");

	Params::NoticeWindowWidget_CreateButtonTileView Parms{};

	Parms.NumberToMake = NumberToMake;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NoticeWindowWidget.GetMasterData
// (Final, Native, Public, BlueprintCallable)

void UNoticeWindowWidget::GetMasterData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NoticeWindowWidget", "GetMasterData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NoticeWindowWidget.GetNoticeText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UNoticeWindowWidget::GetNoticeText(int32 Code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NoticeWindowWidget", "GetNoticeText");

	Params::NoticeWindowWidget_GetNoticeText Parms{};

	Parms.Code = Code;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.NoticeWindowWidget.NextButtonTileView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NotMaxNext                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNoticeWindowWidget::NextButtonTileView(const bool NotMaxNext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NoticeWindowWidget", "NextButtonTileView");

	Params::NoticeWindowWidget_NextButtonTileView Parms{};

	Parms.NotMaxNext = NotMaxNext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.NoticeWindowWidget.OnNoticeWindowEndDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UNoticeWindowWidget::OnNoticeWindowEndDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NoticeWindowWidget", "OnNoticeWindowEndDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.NoticeWindowWidget.PrevButtonTileView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NotMinPrev                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNoticeWindowWidget::PrevButtonTileView(const bool NotMinPrev)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NoticeWindowWidget", "PrevButtonTileView");

	Params::NoticeWindowWidget_PrevButtonTileView Parms{};

	Parms.NotMinPrev = NotMinPrev;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.NoticeWindowWidget.SplitStringByCarriageReturn
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UNoticeWindowWidget::SplitStringByCarriageReturn(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NoticeWindowWidget", "SplitStringByCarriageReturn");

	Params::NoticeWindowWidget_SplitStringByCarriageReturn Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlatformRichTextBlock.ApplyButtonGuideText
// (Final, Native, Public, BlueprintCallable)

void UPlatformRichTextBlock::ApplyButtonGuideText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformRichTextBlock", "ApplyButtonGuideText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.PlatformRichTextBlock.ChangedControllerEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UPlatformRichTextBlock::ChangedControllerEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformRichTextBlock", "ChangedControllerEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.PlatformTextBlock.Update
// (Final, Native, Public)

void UPlatformTextBlock::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlatformTextBlock", "Update");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerControllerGame.BP_FlipDevMenuInternal
// (Final, Native, Public, BlueprintCallable)

void APlayerControllerGame::BP_FlipDevMenuInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerGame", "BP_FlipDevMenuInternal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerControllerGame.DoCrash
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APlayerControllerGame::DoCrash(int32 Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerGame", "DoCrash");

	Params::PlayerControllerGame_DoCrash Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerControllerGame.FlipDevMenuInternal
// (Final, Native, Protected)

void APlayerControllerGame::FlipDevMenuInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerGame", "FlipDevMenuInternal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerControllerGame.ServerDoCrash
// (Net, NetReliable, Native, Event, Public, NetServer)

void APlayerControllerGame::ServerDoCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerGame", "ServerDoCrash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerControllerGame.ServerFlipDevMenu
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// TArray<struct FDevelopMenuItemData>     MenuItemsData                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void APlayerControllerGame::ServerFlipDevMenu(const TArray<struct FDevelopMenuItemData>& MenuItemsData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerGame", "ServerFlipDevMenu");

	Params::PlayerControllerGame_ServerFlipDevMenu Parms{};

	Parms.MenuItemsData = std::move(MenuItemsData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerControllerGame.ServerFlipDevPause
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void APlayerControllerGame::ServerFlipDevPause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerGame", "ServerFlipDevPause");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerControllerGame.ServerStepDevPause
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void APlayerControllerGame::ServerStepDevPause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerGame", "ServerStepDevPause");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_GetColorPaletteColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// EAvatarColorParts                       Parts                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UPlayerDatabaseWork::BP_GetColorPaletteColor(EAvatarColorParts Parts, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayerDatabaseWork", "BP_GetColorPaletteColor");

	Params::PlayerDatabaseWork_BP_GetColorPaletteColor Parms{};

	Parms.Parts = Parts;
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetColorPaletteNum
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EAvatarColorParts                       Parts                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerDatabaseWork::BP_GetColorPaletteNum(EAvatarColorParts Parts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayerDatabaseWork", "BP_GetColorPaletteNum");

	Params::PlayerDatabaseWork_BP_GetColorPaletteNum Parms{};

	Parms.Parts = Parts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_IsAvatarCharacterId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerDatabaseWork::BP_IsAvatarCharacterId(ECharacterId CharacterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayerDatabaseWork", "BP_IsAvatarCharacterId");

	Params::PlayerDatabaseWork_BP_IsAvatarCharacterId Parms{};

	Parms.CharacterId = CharacterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.AddItem
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FDbItemCategoryParam             Item                                                   (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quantity                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::AddItem(const struct FDbItemCategoryParam& Item, const int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "AddItem");

	Params::PlayerDatabaseWork_AddItem Parms{};

	Parms.Item = std::move(Item);
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_ClearSearchFriendInfo
// (Final, Native, Public, BlueprintCallable)

void UPlayerDatabaseWork::BP_ClearSearchFriendInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_ClearSearchFriendInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_FetchAvatarData
// (Final, Native, Public, BlueprintCallable)

void UPlayerDatabaseWork::BP_FetchAvatarData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_FetchAvatarData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_GetAvatarEditColorType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EAvatarDetailedAppearanceColorSettingItemReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAvatarDetailedAppearanceColorSettingItem UPlayerDatabaseWork::BP_GetAvatarEditColorType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetAvatarEditColorType");

	Params::PlayerDatabaseWork_BP_GetAvatarEditColorType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetAvatarEditPartsType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EAvatarDetailedAppearanceSettingDetailItemReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAvatarDetailedAppearanceSettingDetailItem UPlayerDatabaseWork::BP_GetAvatarEditPartsType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetAvatarEditPartsType");

	Params::PlayerDatabaseWork_BP_GetAvatarEditPartsType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetCostumeCodeCharacterParamSnapshot
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   CharaCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerDatabaseWork::BP_GetCostumeCodeCharacterParamSnapshot(int32 CharaCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetCostumeCodeCharacterParamSnapshot");

	Params::PlayerDatabaseWork_BP_GetCostumeCodeCharacterParamSnapshot Parms{};

	Parms.CharaCode = CharaCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetCostumeDisplayNameFromItemCode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLine                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UPlayerDatabaseWork::BP_GetCostumeDisplayNameFromItemCode(ECharacterId CharacterId, int32 ItemCode, bool IsLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetCostumeDisplayNameFromItemCode");

	Params::PlayerDatabaseWork_BP_GetCostumeDisplayNameFromItemCode Parms{};

	Parms.CharacterId = CharacterId;
	Parms.ItemCode = ItemCode;
	Parms.IsLine = IsLine;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetCurrencyDescriptionText
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ItemCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UPlayerDatabaseWork::BP_GetCurrencyDescriptionText(int32 ItemCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetCurrencyDescriptionText");

	Params::PlayerDatabaseWork_BP_GetCurrencyDescriptionText Parms{};

	Parms.ItemCode = ItemCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetCurrencyDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ItemCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UPlayerDatabaseWork::BP_GetCurrencyDisplayName(int32 ItemCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetCurrencyDisplayName");

	Params::PlayerDatabaseWork_BP_GetCurrencyDisplayName Parms{};

	Parms.ItemCode = ItemCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetDefaultMyADDataMessageCode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerDatabaseWork::BP_GetDefaultMyADDataMessageCode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetDefaultMyADDataMessageCode");

	Params::PlayerDatabaseWork_BP_GetDefaultMyADDataMessageCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetDefaultMyADDataPartsCodes
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UPlayerDatabaseWork::BP_GetDefaultMyADDataPartsCodes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetDefaultMyADDataPartsCodes");

	Params::PlayerDatabaseWork_BP_GetDefaultMyADDataPartsCodes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetEmoteCodesCharacterParamSnapshot
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   CharaCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UPlayerDatabaseWork::BP_GetEmoteCodesCharacterParamSnapshot(int32 CharaCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetEmoteCodesCharacterParamSnapshot");

	Params::PlayerDatabaseWork_BP_GetEmoteCodesCharacterParamSnapshot Parms{};

	Parms.CharaCode = CharaCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetEmoteDisplayNameFromItemCode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLine                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UPlayerDatabaseWork::BP_GetEmoteDisplayNameFromItemCode(ECharacterId CharacterId, int32 ItemCode, bool IsLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetEmoteDisplayNameFromItemCode");

	Params::PlayerDatabaseWork_BP_GetEmoteDisplayNameFromItemCode Parms{};

	Parms.CharacterId = CharacterId;
	Parms.ItemCode = ItemCode;
	Parms.IsLine = IsLine;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetMdCharacterName
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UPlayerDatabaseWork::BP_GetMdCharacterName(const class UObject* WorldContextObject, ECharacterId CharacterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetMdCharacterName");

	Params::PlayerDatabaseWork_BP_GetMdCharacterName Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CharacterId = CharacterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetMdCharacterNameAlphabet
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharacterId                            CharacterId                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPlayerDatabaseWork::BP_GetMdCharacterNameAlphabet(const class UObject* WorldContextObject, const ECharacterId CharacterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetMdCharacterNameAlphabet");

	Params::PlayerDatabaseWork_BP_GetMdCharacterNameAlphabet Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CharacterId = CharacterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetPageNo
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerDatabaseWork::BP_GetPageNo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetPageNo");

	Params::PlayerDatabaseWork_BP_GetPageNo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetSelectedFriendSort
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFriendListSortOrder                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFriendListSortOrder UPlayerDatabaseWork::BP_GetSelectedFriendSort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetSelectedFriendSort");

	Params::PlayerDatabaseWork_BP_GetSelectedFriendSort Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetSelectedFriendStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFriendStatus                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFriendStatus UPlayerDatabaseWork::BP_GetSelectedFriendStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetSelectedFriendStatus");

	Params::PlayerDatabaseWork_BP_GetSelectedFriendStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetSelectedFriendType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFriendListType                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFriendListType UPlayerDatabaseWork::BP_GetSelectedFriendType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetSelectedFriendType");

	Params::PlayerDatabaseWork_BP_GetSelectedFriendType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetSelectedItemSort
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EItemListSortOrder                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EItemListSortOrder UPlayerDatabaseWork::BP_GetSelectedItemSort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetSelectedItemSort");

	Params::PlayerDatabaseWork_BP_GetSelectedItemSort Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetSelectedPlayerId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPlayerDatabaseWork::BP_GetSelectedPlayerId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetSelectedPlayerId");

	Params::PlayerDatabaseWork_BP_GetSelectedPlayerId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetVariationDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ItemCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UPlayerDatabaseWork::BP_GetVariationDisplayName(int32 ItemCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetVariationDisplayName");

	Params::PlayerDatabaseWork_BP_GetVariationDisplayName Parms{};

	Parms.ItemCode = ItemCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetVoiceCodesCharacterParamSnapshot
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   CharaCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UPlayerDatabaseWork::BP_GetVoiceCodesCharacterParamSnapshot(int32 CharaCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetVoiceCodesCharacterParamSnapshot");

	Params::PlayerDatabaseWork_BP_GetVoiceCodesCharacterParamSnapshot Parms{};

	Parms.CharaCode = CharaCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetVoiceDisplayNameFromItemCode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLine                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UPlayerDatabaseWork::BP_GetVoiceDisplayNameFromItemCode(ECharacterId CharacterId, int32 ItemCode, bool IsLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetVoiceDisplayNameFromItemCode");

	Params::PlayerDatabaseWork_BP_GetVoiceDisplayNameFromItemCode Parms{};

	Parms.CharacterId = CharacterId;
	Parms.ItemCode = ItemCode;
	Parms.IsLine = IsLine;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetVoiceSerifTextFromItemCode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UPlayerDatabaseWork::BP_GetVoiceSerifTextFromItemCode(ECharacterId CharacterId, int32 ItemCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetVoiceSerifTextFromItemCode");

	Params::PlayerDatabaseWork_BP_GetVoiceSerifTextFromItemCode Parms{};

	Parms.CharacterId = CharacterId;
	Parms.ItemCode = ItemCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_InitializationMyADDisplayDataById
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ID                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_InitializationMyADDisplayDataById(const class FString& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_InitializationMyADDisplayDataById");

	Params::PlayerDatabaseWork_BP_InitializationMyADDisplayDataById Parms{};

	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_InitializationMyADDisplayDataByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_InitializationMyADDisplayDataByIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_InitializationMyADDisplayDataByIndex");

	Params::PlayerDatabaseWork_BP_InitializationMyADDisplayDataByIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_IsUpdateCostumeCharacterParamSnapshot
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   CharaCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerDatabaseWork::BP_IsUpdateCostumeCharacterParamSnapshot(int32 CharaCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_IsUpdateCostumeCharacterParamSnapshot");

	Params::PlayerDatabaseWork_BP_IsUpdateCostumeCharacterParamSnapshot Parms{};

	Parms.CharaCode = CharaCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_IsUpdateVoiceCharacterParamSnapshot
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   CharaCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerDatabaseWork::BP_IsUpdateVoiceCharacterParamSnapshot(int32 CharaCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_IsUpdateVoiceCharacterParamSnapshot");

	Params::PlayerDatabaseWork_BP_IsUpdateVoiceCharacterParamSnapshot Parms{};

	Parms.CharaCode = CharaCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_ResetMyADDataSnapshot
// (Final, Native, Public, BlueprintCallable)

void UPlayerDatabaseWork::BP_ResetMyADDataSnapshot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_ResetMyADDataSnapshot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_RestoreCostumeCharacterParamSnapshot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   CharaCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_RestoreCostumeCharacterParamSnapshot(int32 CharaCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_RestoreCostumeCharacterParamSnapshot");

	Params::PlayerDatabaseWork_BP_RestoreCostumeCharacterParamSnapshot Parms{};

	Parms.CharaCode = CharaCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_RestoreMyADDataSnapshot
// (Final, Native, Public, BlueprintCallable)

void UPlayerDatabaseWork::BP_RestoreMyADDataSnapshot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_RestoreMyADDataSnapshot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_RestoreSnapshot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   No                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_RestoreSnapshot(int32 No)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_RestoreSnapshot");

	Params::PlayerDatabaseWork_BP_RestoreSnapshot Parms{};

	Parms.No = No;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SaveCharacterParamSnapshot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDbMyCharacterParam              CharacterData                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SaveCharacterParamSnapshot(const struct FDbMyCharacterParam& CharacterData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SaveCharacterParamSnapshot");

	Params::PlayerDatabaseWork_BP_SaveCharacterParamSnapshot Parms{};

	Parms.CharacterData = std::move(CharacterData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SaveMyADDataSnapshot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ParamIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SaveMyADDataSnapshot(int32 ParamIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SaveMyADDataSnapshot");

	Params::PlayerDatabaseWork_BP_SaveMyADDataSnapshot Parms{};

	Parms.ParamIndex = ParamIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SaveSnapshot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   No                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SaveSnapshot(int32 No)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SaveSnapshot");

	Params::PlayerDatabaseWork_BP_SaveSnapshot Parms{};

	Parms.No = No;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SendData
// (Final, Native, Public, BlueprintCallable)

void UPlayerDatabaseWork::BP_SendData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SendData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetAccessoryIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           AccessoryIds                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetAccessoryIds(ECharacterId CharacterId, const TArray<int32>& AccessoryIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetAccessoryIds");

	Params::PlayerDatabaseWork_BP_SetAccessoryIds Parms{};

	Parms.CharacterId = CharacterId;
	Parms.AccessoryIds = std::move(AccessoryIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetAvatarBodyPhysique
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Physique                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetAvatarBodyPhysique(float Physique)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetAvatarBodyPhysique");

	Params::PlayerDatabaseWork_BP_SetAvatarBodyPhysique Parms{};

	Parms.Physique = Physique;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetAvatarBodyScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Scale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetAvatarBodyScale(float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetAvatarBodyScale");

	Params::PlayerDatabaseWork_BP_SetAvatarBodyScale Parms{};

	Parms.Scale = Scale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetAvatarChangedColorLeftAndRightEyes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetAvatarChangedColorLeftAndRightEyes(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetAvatarChangedColorLeftAndRightEyes");

	Params::PlayerDatabaseWork_BP_SetAvatarChangedColorLeftAndRightEyes Parms{};

	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetAvatarCharacterAssign
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharacterAssign                        Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetAvatarCharacterAssign(ECharacterAssign Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetAvatarCharacterAssign");

	Params::PlayerDatabaseWork_BP_SetAvatarCharacterAssign Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetAvatarCharacterBattleStyle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharacterId                            Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetAvatarCharacterBattleStyle(ECharacterId Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetAvatarCharacterBattleStyle");

	Params::PlayerDatabaseWork_BP_SetAvatarCharacterBattleStyle Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetAvatarCharacterVoice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetAvatarCharacterVoice(int32 Code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetAvatarCharacterVoice");

	Params::PlayerDatabaseWork_BP_SetAvatarCharacterVoice Parms{};

	Parms.Code = Code;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetAvatarColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAvatarColorParts                       Parts                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetAvatarColor(EAvatarColorParts Parts, int32 Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetAvatarColor");

	Params::PlayerDatabaseWork_BP_SetAvatarColor Parms{};

	Parms.Parts = Parts;
	Parms.Color = Color;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetAvatarEditColorType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAvatarDetailedAppearanceColorSettingItemType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetAvatarEditColorType(EAvatarDetailedAppearanceColorSettingItem Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetAvatarEditColorType");

	Params::PlayerDatabaseWork_BP_SetAvatarEditColorType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetAvatarEditPartsType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAvatarDetailedAppearanceSettingDetailItemType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetAvatarEditPartsType(EAvatarDetailedAppearanceSettingDetailItem Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetAvatarEditPartsType");

	Params::PlayerDatabaseWork_BP_SetAvatarEditPartsType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetAvatarFaceParts
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAvatarFaceParts                        FaceParts                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetAvatarFaceParts(EAvatarFaceParts FaceParts, int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetAvatarFaceParts");

	Params::PlayerDatabaseWork_BP_SetAvatarFaceParts Parms{};

	Parms.FaceParts = FaceParts;
	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetAvatarMaleFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetAvatarMaleFlag(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetAvatarMaleFlag");

	Params::PlayerDatabaseWork_BP_SetAvatarMaleFlag Parms{};

	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetCosmosSelectedCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SelectedCharacterId                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ForcedUpdate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetCosmosSelectedCharacter(const int32 SelectedCharacterId, bool ForcedUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetCosmosSelectedCharacter");

	Params::PlayerDatabaseWork_BP_SetCosmosSelectedCharacter Parms{};

	Parms.SelectedCharacterId = SelectedCharacterId;
	Parms.ForcedUpdate = ForcedUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetCosmosSelectedCostume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   CostumeId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetCosmosSelectedCostume(const int32 CostumeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetCosmosSelectedCostume");

	Params::PlayerDatabaseWork_BP_SetCosmosSelectedCostume Parms{};

	Parms.CostumeId = CostumeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetCostumeColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECostumeColorParts                      Parts                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetCostumeColor(ECharacterId CharacterId, ECostumeColorParts Parts, int32 Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetCostumeColor");

	Params::PlayerDatabaseWork_BP_SetCostumeColor Parms{};

	Parms.CharacterId = CharacterId;
	Parms.Parts = Parts;
	Parms.Color = Color;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetEmblemIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           EmblemIds                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetEmblemIds(ECharacterId CharacterId, const TArray<int32>& EmblemIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetEmblemIds");

	Params::PlayerDatabaseWork_BP_SetEmblemIds Parms{};

	Parms.CharacterId = CharacterId;
	Parms.EmblemIds = std::move(EmblemIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetEmoteIds
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           EmoteIds                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetEmoteIds(ECharacterId CharacterId, const TArray<int32>& EmoteIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetEmoteIds");

	Params::PlayerDatabaseWork_BP_SetEmoteIds Parms{};

	Parms.CharacterId = CharacterId;
	Parms.EmoteIds = std::move(EmoteIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetIntroduction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Intro                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetIntroduction(const class FString& Intro)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetIntroduction");

	Params::PlayerDatabaseWork_BP_SetIntroduction Parms{};

	Parms.Intro = std::move(Intro);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetItemDetailPopupFromEnum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ItemCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemCategory                           ItemCategory                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetItemDetailPopupFromEnum(int32 ItemCode, EItemCategory ItemCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetItemDetailPopupFromEnum");

	Params::PlayerDatabaseWork_BP_SetItemDetailPopupFromEnum Parms{};

	Parms.ItemCode = ItemCode;
	Parms.ItemCategory = ItemCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetItemDetailPopupFromInt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ItemCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemCategory                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetItemDetailPopupFromInt(int32 ItemCode, int32 ItemCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetItemDetailPopupFromInt");

	Params::PlayerDatabaseWork_BP_SetItemDetailPopupFromInt Parms{};

	Parms.ItemCode = ItemCode;
	Parms.ItemCategory = ItemCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetLoginBonusFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Flag                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SendData                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetLoginBonusFlag(const bool Flag, const bool SendData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetLoginBonusFlag");

	Params::PlayerDatabaseWork_BP_SetLoginBonusFlag Parms{};

	Parms.Flag = Flag;
	Parms.SendData = SendData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetMaintenanceDisplay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Minutes                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetMaintenanceDisplay(int32 Minutes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetMaintenanceDisplay");

	Params::PlayerDatabaseWork_BP_SetMaintenanceDisplay Parms{};

	Parms.Minutes = Minutes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetObtainFromCode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ObtainFromCode                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetObtainFromCode(const int32 ObtainFromCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetObtainFromCode");

	Params::PlayerDatabaseWork_BP_SetObtainFromCode Parms{};

	Parms.ObtainFromCode = ObtainFromCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetPageNo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   PageNo                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetPageNo(const int32& PageNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetPageNo");

	Params::PlayerDatabaseWork_BP_SetPageNo Parms{};

	Parms.PageNo = PageNo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetPenaltyReportScreenName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EScreenName                             ScreenName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetPenaltyReportScreenName(const EScreenName ScreenName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetPenaltyReportScreenName");

	Params::PlayerDatabaseWork_BP_SetPenaltyReportScreenName Parms{};

	Parms.ScreenName = ScreenName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetPlayerName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetPlayerName(const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetPlayerName");

	Params::PlayerDatabaseWork_BP_SetPlayerName Parms{};

	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetRequestPreviewProfileFlg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReqPreviewProfileFlg                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetRequestPreviewProfileFlg(bool ReqPreviewProfileFlg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetRequestPreviewProfileFlg");

	Params::PlayerDatabaseWork_BP_SetRequestPreviewProfileFlg Parms{};

	Parms.ReqPreviewProfileFlg = ReqPreviewProfileFlg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetSearchPlayerName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SearchName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetSearchPlayerName(const class FString& SearchName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetSearchPlayerName");

	Params::PlayerDatabaseWork_BP_SetSearchPlayerName Parms{};

	Parms.SearchName = std::move(SearchName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetSelectCharacterId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetSelectCharacterId(ECharacterId CharacterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetSelectCharacterId");

	Params::PlayerDatabaseWork_BP_SetSelectCharacterId Parms{};

	Parms.CharacterId = CharacterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetSelectCharacterString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           CharacterId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetSelectCharacterString(const class FString& CharacterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetSelectCharacterString");

	Params::PlayerDatabaseWork_BP_SetSelectCharacterString Parms{};

	Parms.CharacterId = std::move(CharacterId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetSelectCostumeCode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CostumeCode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetSelectCostumeCode(ECharacterId CharacterId, int32 CostumeCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetSelectCostumeCode");

	Params::PlayerDatabaseWork_BP_SetSelectCostumeCode Parms{};

	Parms.CharacterId = CharacterId;
	Parms.CostumeCode = CostumeCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetSelectedFriendSort
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFriendListSortOrder                    SelectedFriendSortOrder                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetSelectedFriendSort(EFriendListSortOrder SelectedFriendSortOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetSelectedFriendSort");

	Params::PlayerDatabaseWork_BP_SetSelectedFriendSort Parms{};

	Parms.SelectedFriendSortOrder = SelectedFriendSortOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetSelectedFriendStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFriendStatus                           SelectedFriendStatus                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetSelectedFriendStatus(EFriendStatus SelectedFriendStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetSelectedFriendStatus");

	Params::PlayerDatabaseWork_BP_SetSelectedFriendStatus Parms{};

	Parms.SelectedFriendStatus = SelectedFriendStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetSelectedFriendType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFriendListType                         SelectedFriendSelect                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetSelectedFriendType(EFriendListType SelectedFriendSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetSelectedFriendType");

	Params::PlayerDatabaseWork_BP_SetSelectedFriendType Parms{};

	Parms.SelectedFriendSelect = SelectedFriendSelect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetSelectedItemSort
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EItemListSortOrder                      SelectedItemSortOrder                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetSelectedItemSort(EItemListSortOrder SelectedItemSortOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetSelectedItemSort");

	Params::PlayerDatabaseWork_BP_SetSelectedItemSort Parms{};

	Parms.SelectedItemSortOrder = SelectedItemSortOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetSelectedPlayerId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SelectedPlayerId                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetSelectedPlayerId(const class FString& SelectedPlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetSelectedPlayerId");

	Params::PlayerDatabaseWork_BP_SetSelectedPlayerId Parms{};

	Parms.SelectedPlayerId = std::move(SelectedPlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetSelectedPlayerName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SelectedPlayerName                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetSelectedPlayerName(const class FString& SelectedPlayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetSelectedPlayerName");

	Params::PlayerDatabaseWork_BP_SetSelectedPlayerName Parms{};

	Parms.SelectedPlayerName = std::move(SelectedPlayerName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_SetShopItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ShopItem                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_SetShopItem(const int32 ShopItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_SetShopItem");

	Params::PlayerDatabaseWork_BP_SetShopItem Parms{};

	Parms.ShopItem = ShopItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_UpdateCostumeCharacterParamSnapshot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   CharaCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_UpdateCostumeCharacterParamSnapshot(int32 CharaCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_UpdateCostumeCharacterParamSnapshot");

	Params::PlayerDatabaseWork_BP_UpdateCostumeCharacterParamSnapshot Parms{};

	Parms.CharaCode = CharaCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_UpdateMyADAllData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FDbAdDataParam>           AdList                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_UpdateMyADAllData(const TArray<struct FDbAdDataParam>& AdList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_UpdateMyADAllData");

	Params::PlayerDatabaseWork_BP_UpdateMyADAllData Parms{};

	Parms.AdList = std::move(AdList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_UpdateMyADData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           ID                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FDbAdDataParam>           AdList                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::BP_UpdateMyADData(const class FString& ID, const TArray<struct FDbAdDataParam>& AdList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_UpdateMyADData");

	Params::PlayerDatabaseWork_BP_UpdateMyADData Parms{};

	Parms.ID = std::move(ID);
	Parms.AdList = std::move(AdList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.InitCharacterCustomize
// (Final, Native, Public)

void UPlayerDatabaseWork::InitCharacterCustomize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "InitCharacterCustomize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.InitCharacterInfo
// (Final, Native, Public)

void UPlayerDatabaseWork::InitCharacterInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "InitCharacterInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.PlayerDatabaseWork.OnBuyPremiumLoginBonusDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    Buy                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::OnBuyPremiumLoginBonusDelegate__DelegateSignature(bool Buy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "OnBuyPremiumLoginBonusDelegate__DelegateSignature");

	Params::PlayerDatabaseWork_OnBuyPremiumLoginBonusDelegate__DelegateSignature Parms{};

	Parms.Buy = Buy;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction GameModule.PlayerDatabaseWork.OnChangedAvatar__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UPlayerDatabaseWork::OnChangedAvatar__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "OnChangedAvatar__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.PlayerDatabaseWork.OnChangedAvatarCaptureType__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::OnChangedAvatarCaptureType__DelegateSignature(int32 Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "OnChangedAvatarCaptureType__DelegateSignature");

	Params::PlayerDatabaseWork_OnChangedAvatarCaptureType__DelegateSignature Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction GameModule.PlayerDatabaseWork.OnChangedCustomizeADPartsDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EMyAdPartsCategory                      Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Message                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::OnChangedCustomizeADPartsDelegate__DelegateSignature(EMyAdPartsCategory Type, int32 Code, bool Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "OnChangedCustomizeADPartsDelegate__DelegateSignature");

	Params::PlayerDatabaseWork_OnChangedCustomizeADPartsDelegate__DelegateSignature Parms{};

	Parms.Type = Type;
	Parms.Code = Code;
	Parms.Message = Message;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction GameModule.PlayerDatabaseWork.OnChangedCustomizeDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UPlayerDatabaseWork::OnChangedCustomizeDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "OnChangedCustomizeDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.PlayerDatabaseWork.OnChangedCustomizeReturnAllDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UPlayerDatabaseWork::OnChangedCustomizeReturnAllDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "OnChangedCustomizeReturnAllDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.PlayerDatabaseWork.OnChangedCustomizeReturnNoDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::OnChangedCustomizeReturnNoDelegate__DelegateSignature(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "OnChangedCustomizeReturnNoDelegate__DelegateSignature");

	Params::PlayerDatabaseWork_OnChangedCustomizeReturnNoDelegate__DelegateSignature Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction GameModule.PlayerDatabaseWork.OnChangedDetailShowFlagDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::OnChangedDetailShowFlagDelegate__DelegateSignature(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "OnChangedDetailShowFlagDelegate__DelegateSignature");

	Params::PlayerDatabaseWork_OnChangedDetailShowFlagDelegate__DelegateSignature Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction GameModule.PlayerDatabaseWork.OnChangedFriendParamDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UPlayerDatabaseWork::OnChangedFriendParamDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "OnChangedFriendParamDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.PlayerDatabaseWork.OnChangedFriendStatusDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FString                           ID                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFriendStatus                           Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::OnChangedFriendStatusDelegate__DelegateSignature(const class FString& ID, EFriendStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "OnChangedFriendStatusDelegate__DelegateSignature");

	Params::PlayerDatabaseWork_OnChangedFriendStatusDelegate__DelegateSignature Parms{};

	Parms.ID = std::move(ID);
	Parms.Status = Status;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction GameModule.PlayerDatabaseWork.OnChangedMainMenuAdvertiseDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UPlayerDatabaseWork::OnChangedMainMenuAdvertiseDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "OnChangedMainMenuAdvertiseDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.PlayerDatabaseWork.OnChangedSelectedCharacterDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    UnLocked                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    EnableRental                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::OnChangedSelectedCharacterDelegate__DelegateSignature(bool UnLocked, bool EnableRental)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "OnChangedSelectedCharacterDelegate__DelegateSignature");

	Params::PlayerDatabaseWork_OnChangedSelectedCharacterDelegate__DelegateSignature Parms{};

	Parms.UnLocked = UnLocked;
	Parms.EnableRental = EnableRental;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction GameModule.PlayerDatabaseWork.OnChangedWheelCommandDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UPlayerDatabaseWork::OnChangedWheelCommandDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "OnChangedWheelCommandDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.PlayerDatabaseWork.OnLoadFinishedMainMenuAdvertiseDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UPlayerDatabaseWork::OnLoadFinishedMainMenuAdvertiseDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "OnLoadFinishedMainMenuAdvertiseDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.PlayerDatabaseWork.OnMasterDataInitializeComplete
// (Final, Native, Public)

void UPlayerDatabaseWork::OnMasterDataInitializeComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "OnMasterDataInitializeComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.PlayerDatabaseWork.OnSelectCharacterCodeChangedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UPlayerDatabaseWork::OnSelectCharacterCodeChangedDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "OnSelectCharacterCodeChangedDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.PlayerDatabaseWork.OnUseCurrencyCancelDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UPlayerDatabaseWork::OnUseCurrencyCancelDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "OnUseCurrencyCancelDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.PlayerDatabaseWork.OnUseCurrencySelectDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Cost                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::OnUseCurrencySelectDelegate__DelegateSignature(int32 Index_0, int32 Code, int32 Cost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "OnUseCurrencySelectDelegate__DelegateSignature");

	Params::PlayerDatabaseWork_OnUseCurrencySelectDelegate__DelegateSignature Parms{};

	Parms.Index_0 = Index_0;
	Parms.Code = Code;
	Parms.Cost = Cost;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.PlayerDatabaseWork.SetFirstTodayLogin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerDatabaseWork::SetFirstTodayLogin(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "SetFirstTodayLogin");

	Params::PlayerDatabaseWork_SetFirstTodayLogin Parms{};

	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerDatabaseWork.BP_GetAllCostumeCode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UPlayerDatabaseWork::BP_GetAllCostumeCode(ECharacterId CharacterId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetAllCostumeCode");

	Params::PlayerDatabaseWork_BP_GetAllCostumeCode Parms{};

	Parms.CharacterId = CharacterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetAllEmoteCode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UPlayerDatabaseWork::BP_GetAllEmoteCode(ECharacterId CharacterId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetAllEmoteCode");

	Params::PlayerDatabaseWork_BP_GetAllEmoteCode Parms{};

	Parms.CharacterId = CharacterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetAllVoiceCode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UPlayerDatabaseWork::BP_GetAllVoiceCode(ECharacterId CharacterId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetAllVoiceCode");

	Params::PlayerDatabaseWork_BP_GetAllVoiceCode Parms{};

	Parms.CharacterId = CharacterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetAvatarBodyPhysique
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPlayerDatabaseWork::BP_GetAvatarBodyPhysique() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetAvatarBodyPhysique");

	Params::PlayerDatabaseWork_BP_GetAvatarBodyPhysique Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetAvatarBodyScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPlayerDatabaseWork::BP_GetAvatarBodyScale() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetAvatarBodyScale");

	Params::PlayerDatabaseWork_BP_GetAvatarBodyScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetAvatarChangedColorLeftAndRightEyes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerDatabaseWork::BP_GetAvatarChangedColorLeftAndRightEyes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetAvatarChangedColorLeftAndRightEyes");

	Params::PlayerDatabaseWork_BP_GetAvatarChangedColorLeftAndRightEyes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetAvatarCharacterAssign
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerDatabaseWork::BP_GetAvatarCharacterAssign() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetAvatarCharacterAssign");

	Params::PlayerDatabaseWork_BP_GetAvatarCharacterAssign Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetAvatarCharacterBattleStyle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerDatabaseWork::BP_GetAvatarCharacterBattleStyle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetAvatarCharacterBattleStyle");

	Params::PlayerDatabaseWork_BP_GetAvatarCharacterBattleStyle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetAvatarCharacterBattleStyleText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UPlayerDatabaseWork::BP_GetAvatarCharacterBattleStyleText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetAvatarCharacterBattleStyleText");

	Params::PlayerDatabaseWork_BP_GetAvatarCharacterBattleStyleText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetAvatarCharacterVoice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerDatabaseWork::BP_GetAvatarCharacterVoice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetAvatarCharacterVoice");

	Params::PlayerDatabaseWork_BP_GetAvatarCharacterVoice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetAvatarColor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAvatarColorParts                       Parts                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     OutColor                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerDatabaseWork::BP_GetAvatarColor(EAvatarColorParts Parts, struct FLinearColor* OutColor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetAvatarColor");

	Params::PlayerDatabaseWork_BP_GetAvatarColor Parms{};

	Parms.Parts = Parts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutColor != nullptr)
		*OutColor = std::move(Parms.OutColor);

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetAvatarFaceParts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAvatarFaceParts                        FaceParts                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerDatabaseWork::BP_GetAvatarFaceParts(EAvatarFaceParts FaceParts) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetAvatarFaceParts");

	Params::PlayerDatabaseWork_BP_GetAvatarFaceParts Parms{};

	Parms.FaceParts = FaceParts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetAvatarMaleFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerDatabaseWork::BP_GetAvatarMaleFlag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetAvatarMaleFlag");

	Params::PlayerDatabaseWork_BP_GetAvatarMaleFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetCharacterId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharacterId                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharacterId UPlayerDatabaseWork::BP_GetCharacterId(int32 Code) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetCharacterId");

	Params::PlayerDatabaseWork_BP_GetCharacterId Parms{};

	Parms.Code = Code;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetCharacterIdFromString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           CharacterId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharacterId                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharacterId UPlayerDatabaseWork::BP_GetCharacterIdFromString(const class FString& CharacterId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetCharacterIdFromString");

	Params::PlayerDatabaseWork_BP_GetCharacterIdFromString Parms{};

	Parms.CharacterId = std::move(CharacterId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetCharacterNameText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UPlayerDatabaseWork::BP_GetCharacterNameText(ECharacterId CharacterId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetCharacterNameText");

	Params::PlayerDatabaseWork_BP_GetCharacterNameText Parms{};

	Parms.CharacterId = CharacterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetCostumeColor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECostumeColorParts                      Parts                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     OutColor                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerDatabaseWork::BP_GetCostumeColor(ECharacterId CharacterId, ECostumeColorParts Parts, struct FLinearColor* OutColor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetCostumeColor");

	Params::PlayerDatabaseWork_BP_GetCostumeColor Parms{};

	Parms.CharacterId = CharacterId;
	Parms.Parts = Parts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutColor != nullptr)
		*OutColor = std::move(Parms.OutColor);

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetEmblemIds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UPlayerDatabaseWork::BP_GetEmblemIds(ECharacterId CharacterId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetEmblemIds");

	Params::PlayerDatabaseWork_BP_GetEmblemIds Parms{};

	Parms.CharacterId = CharacterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetEmoteIds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UPlayerDatabaseWork::BP_GetEmoteIds(ECharacterId CharacterId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetEmoteIds");

	Params::PlayerDatabaseWork_BP_GetEmoteIds Parms{};

	Parms.CharacterId = CharacterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetIntroduction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPlayerDatabaseWork::BP_GetIntroduction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetIntroduction");

	Params::PlayerDatabaseWork_BP_GetIntroduction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetLocalPlayerUniqueId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPlayerDatabaseWork::BP_GetLocalPlayerUniqueId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetLocalPlayerUniqueId");

	Params::PlayerDatabaseWork_BP_GetLocalPlayerUniqueId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetLoginBonusFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerDatabaseWork::BP_GetLoginBonusFlag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetLoginBonusFlag");

	Params::PlayerDatabaseWork_BP_GetLoginBonusFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetMaintenanceDisplay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Minutes                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerDatabaseWork::BP_GetMaintenanceDisplay(int32 Minutes) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetMaintenanceDisplay");

	Params::PlayerDatabaseWork_BP_GetMaintenanceDisplay Parms{};

	Parms.Minutes = Minutes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetMyADDataCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerDatabaseWork::BP_GetMyADDataCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetMyADDataCount");

	Params::PlayerDatabaseWork_BP_GetMyADDataCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetMyADDataSnapshotId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPlayerDatabaseWork::BP_GetMyADDataSnapshotId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetMyADDataSnapshotId");

	Params::PlayerDatabaseWork_BP_GetMyADDataSnapshotId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetMyADDisplayDataById
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ID                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMyADDisplayData           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FMyADDisplayData UPlayerDatabaseWork::BP_GetMyADDisplayDataById(const class FString& ID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetMyADDisplayDataById");

	Params::PlayerDatabaseWork_BP_GetMyADDisplayDataById Parms{};

	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetMyADDisplayDataByIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMyADDisplayData           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FMyADDisplayData UPlayerDatabaseWork::BP_GetMyADDisplayDataByIndex(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetMyADDisplayDataByIndex");

	Params::PlayerDatabaseWork_BP_GetMyADDisplayDataByIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetNoticeOpenFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerDatabaseWork::BP_GetNoticeOpenFlag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetNoticeOpenFlag");

	Params::PlayerDatabaseWork_BP_GetNoticeOpenFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetPenaltyReportScreenName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EScreenName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EScreenName UPlayerDatabaseWork::BP_GetPenaltyReportScreenName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetPenaltyReportScreenName");

	Params::PlayerDatabaseWork_BP_GetPenaltyReportScreenName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetPlayerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPlayerDatabaseWork::BP_GetPlayerName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetPlayerName");

	Params::PlayerDatabaseWork_BP_GetPlayerName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetPrimaryAssetItemIconPtr
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimaryAssetItemIcon*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimaryAssetItemIcon* UPlayerDatabaseWork::BP_GetPrimaryAssetItemIconPtr() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetPrimaryAssetItemIconPtr");

	Params::PlayerDatabaseWork_BP_GetPrimaryAssetItemIconPtr Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetProfileMyADIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerDatabaseWork::BP_GetProfileMyADIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetProfileMyADIndex");

	Params::PlayerDatabaseWork_BP_GetProfileMyADIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetRandomCPUCostumeCode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerDatabaseWork::BP_GetRandomCPUCostumeCode(ECharacterId CharacterId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetRandomCPUCostumeCode");

	Params::PlayerDatabaseWork_BP_GetRandomCPUCostumeCode Parms{};

	Parms.CharacterId = CharacterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetRandomCPUCostumeCodeByCharaCode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   CharacterCode                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerDatabaseWork::BP_GetRandomCPUCostumeCodeByCharaCode(int32 CharacterCode) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetRandomCPUCostumeCodeByCharaCode");

	Params::PlayerDatabaseWork_BP_GetRandomCPUCostumeCodeByCharaCode Parms{};

	Parms.CharacterCode = CharacterCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetRequestPreviewProfileFlg
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerDatabaseWork::BP_GetRequestPreviewProfileFlg() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetRequestPreviewProfileFlg");

	Params::PlayerDatabaseWork_BP_GetRequestPreviewProfileFlg Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetSelectCharacterId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterId                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharacterId UPlayerDatabaseWork::BP_GetSelectCharacterId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetSelectCharacterId");

	Params::PlayerDatabaseWork_BP_GetSelectCharacterId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetSelectCharacterIdString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPlayerDatabaseWork::BP_GetSelectCharacterIdString() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetSelectCharacterIdString");

	Params::PlayerDatabaseWork_BP_GetSelectCharacterIdString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_GetSelectCostumeCode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerDatabaseWork::BP_GetSelectCostumeCode(ECharacterId CharacterId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_GetSelectCostumeCode");

	Params::PlayerDatabaseWork_BP_GetSelectCostumeCode Parms{};

	Parms.CharacterId = CharacterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_HasChangedAvatarData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   No                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerDatabaseWork::BP_HasChangedAvatarData(int32 No) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_HasChangedAvatarData");

	Params::PlayerDatabaseWork_BP_HasChangedAvatarData Parms{};

	Parms.No = No;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_HasChangedMyADDataEditData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerDatabaseWork::BP_HasChangedMyADDataEditData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_HasChangedMyADDataEditData");

	Params::PlayerDatabaseWork_BP_HasChangedMyADDataEditData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_ValidateCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           CharacterId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    CharaSelect                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerDatabaseWork::BP_ValidateCharacter(const class FString& CharacterId, bool CharaSelect) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_ValidateCharacter");

	Params::PlayerDatabaseWork_BP_ValidateCharacter Parms{};

	Parms.CharacterId = std::move(CharacterId);
	Parms.CharaSelect = CharaSelect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.BP_ValidateCharacterFromEnum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    CharaSelect                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerDatabaseWork::BP_ValidateCharacterFromEnum(ECharacterId CharacterId, bool CharaSelect) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "BP_ValidateCharacterFromEnum");

	Params::PlayerDatabaseWork_BP_ValidateCharacterFromEnum Parms{};

	Parms.CharacterId = CharacterId;
	Parms.CharaSelect = CharaSelect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerDatabaseWork.GetFirstTodayLogin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerDatabaseWork::GetFirstTodayLogin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerDatabaseWork", "GetFirstTodayLogin");

	Params::PlayerDatabaseWork_GetFirstTodayLogin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PlayerVoiceChatStateWidget.OnVCBeginTalk
// (Final, Native, Private)
// Parameters:
// class FString                           UniqueNetId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerVoiceChatStateWidget::OnVCBeginTalk(const class FString& UniqueNetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerVoiceChatStateWidget", "OnVCBeginTalk");

	Params::PlayerVoiceChatStateWidget_OnVCBeginTalk Parms{};

	Parms.UniqueNetId = std::move(UniqueNetId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerVoiceChatStateWidget.OnVCConnected
// (Final, Native, Private)
// Parameters:
// class FString                           UniqueNetId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerVoiceChatStateWidget::OnVCConnected(const class FString& UniqueNetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerVoiceChatStateWidget", "OnVCConnected");

	Params::PlayerVoiceChatStateWidget_OnVCConnected Parms{};

	Parms.UniqueNetId = std::move(UniqueNetId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerVoiceChatStateWidget.OnVCDisconnected
// (Final, Native, Private)
// Parameters:
// class FString                           UniqueNetId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerVoiceChatStateWidget::OnVCDisconnected(const class FString& UniqueNetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerVoiceChatStateWidget", "OnVCDisconnected");

	Params::PlayerVoiceChatStateWidget_OnVCDisconnected Parms{};

	Parms.UniqueNetId = std::move(UniqueNetId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerVoiceChatStateWidget.OnVCEndTalk
// (Final, Native, Private)
// Parameters:
// class FString                           UniqueNetId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerVoiceChatStateWidget::OnVCEndTalk(const class FString& UniqueNetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerVoiceChatStateWidget", "OnVCEndTalk");

	Params::PlayerVoiceChatStateWidget_OnVCEndTalk Parms{};

	Parms.UniqueNetId = std::move(UniqueNetId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerVoiceChatStateWidget.OnVCMute
// (Final, Native, Private)
// Parameters:
// class FString                           UniqueNetId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerVoiceChatStateWidget::OnVCMute(const class FString& UniqueNetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerVoiceChatStateWidget", "OnVCMute");

	Params::PlayerVoiceChatStateWidget_OnVCMute Parms{};

	Parms.UniqueNetId = std::move(UniqueNetId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PlayerVoiceChatStateWidget.OnVCUnMute
// (Final, Native, Private)
// Parameters:
// class FString                           UniqueNetId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerVoiceChatStateWidget::OnVCUnMute(const class FString& UniqueNetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerVoiceChatStateWidget", "OnVCUnMute");

	Params::PlayerVoiceChatStateWidget_OnVCUnMute Parms{};

	Parms.UniqueNetId = std::move(UniqueNetId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PositionMeasurement.GetSquaredDistanceData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UWidget*>                  InWidgetArray                                          (ConstParm, Parm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// TArray<float>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<float> UPositionMeasurement::GetSquaredDistanceData(const TArray<class UWidget*>& InWidgetArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PositionMeasurement", "GetSquaredDistanceData");

	Params::PositionMeasurement_GetSquaredDistanceData Parms{};

	Parms.InWidgetArray = std::move(InWidgetArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PositionMeasurement.InitOneToManyProperties
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          baseWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ParentWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPositionMeasurement::InitOneToManyProperties(class UWidget* baseWidget, class UWidget* ParentWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PositionMeasurement", "InitOneToManyProperties");

	Params::PositionMeasurement_InitOneToManyProperties Parms{};

	Parms.baseWidget = baseWidget;
	Parms.ParentWidget = ParentWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PositionMeasurement.InitPairPointProperties
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          WidgetA                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          WidgetB                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ParentWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPositionMeasurement::InitPairPointProperties(class UWidget* WidgetA, class UWidget* WidgetB, class UWidget* ParentWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PositionMeasurement", "InitPairPointProperties");

	Params::PositionMeasurement_InitPairPointProperties Parms{};

	Parms.WidgetA = WidgetA;
	Parms.WidgetB = WidgetB;
	Parms.ParentWidget = ParentWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PrimaryAssetCharacterGUI.BP_GetPaperSprite
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// EFaceIconTypeId                         TypeId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UPrimaryAssetCharacterGUI::BP_GetPaperSprite(EFaceIconTypeId TypeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetCharacterGUI", "BP_GetPaperSprite");

	Params::PrimaryAssetCharacterGUI_BP_GetPaperSprite Parms{};

	Parms.TypeId = TypeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetCharacterGUI.BP_GetPaperSpriteBattleHistory
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UPrimaryAssetCharacterGUI::BP_GetPaperSpriteBattleHistory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetCharacterGUI", "BP_GetPaperSpriteBattleHistory");

	Params::PrimaryAssetCharacterGUI_BP_GetPaperSpriteBattleHistory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetCharacterGUI.BP_GetPaperSpriteBattleStyle
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UPrimaryAssetCharacterGUI::BP_GetPaperSpriteBattleStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetCharacterGUI", "BP_GetPaperSpriteBattleStyle");

	Params::PrimaryAssetCharacterGUI_BP_GetPaperSpriteBattleStyle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetCharacterGUI.BP_GetPaperSpriteBillboardChart
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UPrimaryAssetCharacterGUI::BP_GetPaperSpriteBillboardChart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetCharacterGUI", "BP_GetPaperSpriteBillboardChart");

	Params::PrimaryAssetCharacterGUI_BP_GetPaperSpriteBillboardChart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetCharacterGUI.BP_GetPaperSpriteCharaSelect
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UPrimaryAssetCharacterGUI::BP_GetPaperSpriteCharaSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetCharacterGUI", "BP_GetPaperSpriteCharaSelect");

	Params::PrimaryAssetCharacterGUI_BP_GetPaperSpriteCharaSelect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetCharacterGUI.BP_GetPaperSpriteProfileBackImage
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharacterId                            CharaID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UPrimaryAssetCharacterGUI::BP_GetPaperSpriteProfileBackImage(ECharacterId CharaID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetCharacterGUI", "BP_GetPaperSpriteProfileBackImage");

	Params::PrimaryAssetCharacterGUI_BP_GetPaperSpriteProfileBackImage Parms{};

	Parms.CharaID = CharaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetCharacterGUI.BP_GetPaperSpriteVariationIcon
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   VariationId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UPrimaryAssetCharacterGUI::BP_GetPaperSpriteVariationIcon(int32 VariationId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetCharacterGUI", "BP_GetPaperSpriteVariationIcon");

	Params::PrimaryAssetCharacterGUI_BP_GetPaperSpriteVariationIcon Parms{};

	Parms.VariationId = VariationId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetCharacterGUI.BP_SetOffset
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// ESceneCaptureTypeId                     Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       Transform                                              (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UPrimaryAssetCharacterGUI::BP_SetOffset(ESceneCaptureTypeId Type, const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetCharacterGUI", "BP_SetOffset");

	Params::PrimaryAssetCharacterGUI_BP_SetOffset Parms{};

	Parms.Type = Type;
	Parms.Transform = std::move(Transform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.PrimaryAssetCharacterGUI.GetOffset
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// ESceneCaptureTypeId                     Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       OutOffset                                              (Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UPrimaryAssetCharacterGUI::GetOffset(ESceneCaptureTypeId Type, struct FTransform* OutOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetCharacterGUI", "GetOffset");

	Params::PrimaryAssetCharacterGUI_GetOffset Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutOffset != nullptr)
		*OutOffset = std::move(Parms.OutOffset);
}


// Function GameModule.PrimaryAssetGashaImage.BP_GetPaperSpriteBanner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UPrimaryAssetGashaImage::BP_GetPaperSpriteBanner(const class FString& Key) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetGashaImage", "BP_GetPaperSpriteBanner");

	Params::PrimaryAssetGashaImage_BP_GetPaperSpriteBanner Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetGashaImage.BP_GetPaperSpriteHelp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UPrimaryAssetGashaImage::BP_GetPaperSpriteHelp(const class FString& Key) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetGashaImage", "BP_GetPaperSpriteHelp");

	Params::PrimaryAssetGashaImage_BP_GetPaperSpriteHelp Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetGashaImage.BP_GetPaperSpriteLogo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UPrimaryAssetGashaImage::BP_GetPaperSpriteLogo(const class FString& Key) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetGashaImage", "BP_GetPaperSpriteLogo");

	Params::PrimaryAssetGashaImage_BP_GetPaperSpriteLogo Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetGuild.BP_GetPaperSpriteEmblem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Key                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UPrimaryAssetGuild::BP_GetPaperSpriteEmblem(int32 Key) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetGuild", "BP_GetPaperSpriteEmblem");

	Params::PrimaryAssetGuild_BP_GetPaperSpriteEmblem Parms{};

	Parms.Key = Key;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetItemIcon.BP_GetPaperSpriteItemIconFromItemCode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ItemCategory                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsSmall                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UPrimaryAssetItemIcon::BP_GetPaperSpriteItemIconFromItemCode(int32 ItemCategory, int32 ItemCode, bool IsSmall)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetItemIcon", "BP_GetPaperSpriteItemIconFromItemCode");

	Params::PrimaryAssetItemIcon_BP_GetPaperSpriteItemIconFromItemCode Parms{};

	Parms.ItemCategory = ItemCategory;
	Parms.ItemCode = ItemCode;
	Parms.IsSmall = IsSmall;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetItemIcon.BP_GetPaperSpriteItemIconFromShopItemCode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ShopItemCode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsSmall                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UPrimaryAssetItemIcon::BP_GetPaperSpriteItemIconFromShopItemCode(int32 ShopItemCode, bool IsSmall)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetItemIcon", "BP_GetPaperSpriteItemIconFromShopItemCode");

	Params::PrimaryAssetItemIcon_BP_GetPaperSpriteItemIconFromShopItemCode Parms{};

	Parms.ShopItemCode = ShopItemCode;
	Parms.IsSmall = IsSmall;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetLanguageImage.BP_GetDataImage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UPrimaryAssetLanguageImage::BP_GetDataImage(int32 Code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetLanguageImage", "BP_GetDataImage");

	Params::PrimaryAssetLanguageImage_BP_GetDataImage Parms{};

	Parms.Code = Code;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetLanguageImage.BP_GetPCImage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UPrimaryAssetLanguageImage::BP_GetPCImage(int32 Code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetLanguageImage", "BP_GetPCImage");

	Params::PrimaryAssetLanguageImage_BP_GetPCImage Parms{};

	Parms.Code = Code;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetLanguageImage.BP_GetPlayStationImage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UPrimaryAssetLanguageImage::BP_GetPlayStationImage(int32 Code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetLanguageImage", "BP_GetPlayStationImage");

	Params::PrimaryAssetLanguageImage_BP_GetPlayStationImage Parms{};

	Parms.Code = Code;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetLanguageImage.BP_GetTOSImage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UPrimaryAssetLanguageImage::BP_GetTOSImage(int32 Code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetLanguageImage", "BP_GetTOSImage");

	Params::PrimaryAssetLanguageImage_BP_GetTOSImage Parms{};

	Parms.Code = Code;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetLicense.BP_GetTextureL
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UPrimaryAssetLicense::BP_GetTextureL(const class FString& Key) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetLicense", "BP_GetTextureL");

	Params::PrimaryAssetLicense_BP_GetTextureL Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetLicense.BP_GetTextureM
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UPrimaryAssetLicense::BP_GetTextureM(const class FString& Key) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetLicense", "BP_GetTextureM");

	Params::PrimaryAssetLicense_BP_GetTextureM Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetLicense.BP_TextureS
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UPrimaryAssetLicense::BP_TextureS(const class FString& Key) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetLicense", "BP_TextureS");

	Params::PrimaryAssetLicense_BP_TextureS Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetLoginBonusLogo.BP_GetPaperSpriteLogo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UPrimaryAssetLoginBonusLogo::BP_GetPaperSpriteLogo(const class FString& Key) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetLoginBonusLogo", "BP_GetPaperSpriteLogo");

	Params::PrimaryAssetLoginBonusLogo_BP_GetPaperSpriteLogo Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetStaffrollAnimation.BP_GetMovieMaterial
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterial*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterial* UPrimaryAssetStaffrollAnimation::BP_GetMovieMaterial(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetStaffrollAnimation", "BP_GetMovieMaterial");

	Params::PrimaryAssetStaffrollAnimation_BP_GetMovieMaterial Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetStaffrollAnimation.BP_GetMovieTexture
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture* UPrimaryAssetStaffrollAnimation::BP_GetMovieTexture(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetStaffrollAnimation", "BP_GetMovieTexture");

	Params::PrimaryAssetStaffrollAnimation_BP_GetMovieTexture Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetStaffrollLogo.BP_GetPaperSpriteLogo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UPrimaryAssetStaffrollLogo::BP_GetPaperSpriteLogo(const class FString& Key) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetStaffrollLogo", "BP_GetPaperSpriteLogo");

	Params::PrimaryAssetStaffrollLogo_BP_GetPaperSpriteLogo Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.PrimaryAssetTutorial.BP_GetPopupWorld
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// ETutorialPopupScene                     Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UWorld>            ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UWorld> UPrimaryAssetTutorial::BP_GetPopupWorld(ETutorialPopupScene Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PrimaryAssetTutorial", "BP_GetPopupWorld");

	Params::PrimaryAssetTutorial_BP_GetPopupWorld Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProfileDisplayData.BP_getAD
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FMyADDisplayData           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FMyADDisplayData UProfileDisplayData::BP_getAD() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayData", "BP_getAD");

	Params::ProfileDisplayData_BP_getAD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProfileDisplayData.BP_getEmblem
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FEmblemDisplayData         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FEmblemDisplayData UProfileDisplayData::BP_getEmblem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayData", "BP_getEmblem");

	Params::ProfileDisplayData_BP_getEmblem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProfileDisplayData.BP_getGuild
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGuildDisplayData          ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGuildDisplayData UProfileDisplayData::BP_getGuild() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayData", "BP_getGuild");

	Params::ProfileDisplayData_BP_getGuild Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProfileDisplayData.BP_getPlayer
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FPlayerDisplayData         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FPlayerDisplayData UProfileDisplayData::BP_getPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayData", "BP_getPlayer");

	Params::ProfileDisplayData_BP_getPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProfileDisplayData.BP_getPlayerId
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UProfileDisplayData::BP_getPlayerId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayData", "BP_getPlayerId");

	Params::ProfileDisplayData_BP_getPlayerId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProfileDisplayEmblemWidget.BP_SetupEmblem
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   LeftCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CenterCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RightCode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProfileDisplayEmblemWidget::BP_SetupEmblem(int32 LeftCode, int32 CenterCode, int32 RightCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayEmblemWidget", "BP_SetupEmblem");

	Params::ProfileDisplayEmblemWidget_BP_SetupEmblem Parms{};

	Parms.LeftCode = LeftCode;
	Parms.CenterCode = CenterCode;
	Parms.RightCode = RightCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayManager.BP_RequesetLoad
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UWorld>            _level                                                 (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelStreamingDynamic*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULevelStreamingDynamic* AProfileDisplayManager::BP_RequesetLoad(TSoftObjectPtr<class UWorld> _level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayManager", "BP_RequesetLoad");

	Params::ProfileDisplayManager_BP_RequesetLoad Parms{};

	Parms._level = _level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction GameModule.ProfileDisplayManager.OnFinishSetupEventDispatcher__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void AProfileDisplayManager::OnFinishSetupEventDispatcher__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayManager", "OnFinishSetupEventDispatcher__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.ProfileDisplayRankWidget.BP_GetRankImage
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Rank                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* UProfileDisplayRankWidget::BP_GetRankImage(const int32 Rank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayRankWidget", "BP_GetRankImage");

	Params::ProfileDisplayRankWidget_BP_GetRankImage Parms{};

	Parms.Rank = Rank;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProfileDisplayViolationReportWidget.BP_Cancel
// (Final, Native, Protected, BlueprintCallable)

void UProfileDisplayViolationReportWidget::BP_Cancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayViolationReportWidget", "BP_Cancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayViolationReportWidget.BP_CloseLevel
// (Final, Native, Protected, BlueprintCallable)

void UProfileDisplayViolationReportWidget::BP_CloseLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayViolationReportWidget", "BP_CloseLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayViolationReportWidget.BP_GetTargetName
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UProfileDisplayViolationReportWidget::BP_GetTargetName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayViolationReportWidget", "BP_GetTargetName");

	Params::ProfileDisplayViolationReportWidget_BP_GetTargetName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GameModule.ProfileDisplayViolationReportWidget.BP_RequestReport
// (Final, Native, Protected, BlueprintCallable)

void UProfileDisplayViolationReportWidget::BP_RequestReport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayViolationReportWidget", "BP_RequestReport");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayViolationReportWidget.BP_RequestReportInGame
// (Event, Protected, BlueprintEvent)

void UProfileDisplayViolationReportWidget::BP_RequestReportInGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayViolationReportWidget", "BP_RequestReportInGame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.ProfileDisplayViolationReportWidget.OnCancelPopupWindow
// (Final, Native, Protected)
// Parameters:
// class UAppWidget*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWidgetInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProfileDisplayViolationReportWidget::OnCancelPopupWindow(class UAppWidget* Widget, EWidgetInputType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayViolationReportWidget", "OnCancelPopupWindow");

	Params::ProfileDisplayViolationReportWidget_OnCancelPopupWindow Parms{};

	Parms.Widget = Widget;
	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayViolationReportWidget.OnClosedPopupWindow
// (Final, Native, Protected)

void UProfileDisplayViolationReportWidget::OnClosedPopupWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayViolationReportWidget", "OnClosedPopupWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayViolationReportWidget.OnClosedSelectWindow
// (Final, Native, Protected)

void UProfileDisplayViolationReportWidget::OnClosedSelectWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayViolationReportWidget", "OnClosedSelectWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayViolationReportWidget.OnDecidePopupWindow
// (Final, Native, Protected)
// Parameters:
// class UAppWidget*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWidgetInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    LeftButton                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProfileDisplayViolationReportWidget::OnDecidePopupWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayViolationReportWidget", "OnDecidePopupWindow");

	Params::ProfileDisplayViolationReportWidget_OnDecidePopupWindow Parms{};

	Parms.Widget = Widget;
	Parms.InputType = InputType;
	Parms.LeftButton = LeftButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayViolationReportWidget.OnDecideSelectWindow
// (Final, Native, Protected)
// Parameters:
// int32                                   Selectindex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAppWidget*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWidgetInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    LeftButton                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProfileDisplayViolationReportWidget::OnDecideSelectWindow(int32 Selectindex, class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayViolationReportWidget", "OnDecideSelectWindow");

	Params::ProfileDisplayViolationReportWidget_OnDecideSelectWindow Parms{};

	Parms.Selectindex = Selectindex;
	Parms.Widget = Widget;
	Parms.InputType = InputType;
	Parms.LeftButton = LeftButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayViolationReportWidget.OnFinishFetchDataEvent
// (Final, Native, Protected)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProfileDisplayViolationReportWidget::OnFinishFetchDataEvent(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayViolationReportWidget", "OnFinishFetchDataEvent");

	Params::ProfileDisplayViolationReportWidget_OnFinishFetchDataEvent Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayViolationReportWidget.OnReceivedFinish
// (Final, Native, Protected)

void UProfileDisplayViolationReportWidget::OnReceivedFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayViolationReportWidget", "OnReceivedFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayWidget.BP_SetMySelf
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProfileDisplayWidget::BP_SetMySelf(bool Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayWidget", "BP_SetMySelf");

	Params::ProfileDisplayWidget_BP_SetMySelf Parms{};

	Parms.Val = Val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayWidget.GenerateData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UProfileDisplayData*              _data                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProfileDisplayWidget::GenerateData(const class UProfileDisplayData* _data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayWidget", "GenerateData");

	Params::ProfileDisplayWidget_GenerateData Parms{};

	Parms._data = _data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayWidget.OnChangePlayerName
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UProfileDisplayWidget::OnChangePlayerName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayWidget", "OnChangePlayerName");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayWidget.OnChangIntroduction
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UProfileDisplayWidget::OnChangIntroduction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayWidget", "OnChangIntroduction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayWidget.BP_GetMySelf
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UProfileDisplayWidget::BP_GetMySelf() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayWidget", "BP_GetMySelf");

	Params::ProfileDisplayWidget_BP_GetMySelf Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProfileDisplayOfferWidget.BP_OnChangeTab
// (Final, Native, Protected, BlueprintCallable)

void UProfileDisplayOfferWidget::BP_OnChangeTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayOfferWidget", "BP_OnChangeTab");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayOfferWidget.BP_OnTryChangeTab
// (Final, Native, Protected, BlueprintCallable)

void UProfileDisplayOfferWidget::BP_OnTryChangeTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayOfferWidget", "BP_OnTryChangeTab");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayOfferWidget.DoCustomListNavigation_ListOpenButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUINavigation                           UiNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UProfileDisplayOfferWidget::DoCustomListNavigation_ListOpenButton(EUINavigation UiNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayOfferWidget", "DoCustomListNavigation_ListOpenButton");

	Params::ProfileDisplayOfferWidget_DoCustomListNavigation_ListOpenButton Parms{};

	Parms.UiNavigation = UiNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProfileDisplayOfferWidget.DoCustomListNavigation_PlatformProfileButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUINavigation                           UiNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UProfileDisplayOfferWidget::DoCustomListNavigation_PlatformProfileButton(EUINavigation UiNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayOfferWidget", "DoCustomListNavigation_PlatformProfileButton");

	Params::ProfileDisplayOfferWidget_DoCustomListNavigation_PlatformProfileButton Parms{};

	Parms.UiNavigation = UiNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProfileDisplayOfferWidget.DoCustomListNavigation_RankProfileButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUINavigation                           UiNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UProfileDisplayOfferWidget::DoCustomListNavigation_RankProfileButton(EUINavigation UiNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayOfferWidget", "DoCustomListNavigation_RankProfileButton");

	Params::ProfileDisplayOfferWidget_DoCustomListNavigation_RankProfileButton Parms{};

	Parms.UiNavigation = UiNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProfileDisplayOfferWidget.DoCustomListNavigation_SendLikeButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUINavigation                           UiNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UProfileDisplayOfferWidget::DoCustomListNavigation_SendLikeButton(EUINavigation UiNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayOfferWidget", "DoCustomListNavigation_SendLikeButton");

	Params::ProfileDisplayOfferWidget_DoCustomListNavigation_SendLikeButton Parms{};

	Parms.UiNavigation = UiNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProfileDisplayOfferWidget.OnDecidePlatformProfileButton
// (Final, Native, Protected)
// Parameters:
// class UAppWidget*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWidgetInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProfileDisplayOfferWidget::OnDecidePlatformProfileButton(class UAppWidget* Widget, EWidgetInputType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayOfferWidget", "OnDecidePlatformProfileButton");

	Params::ProfileDisplayOfferWidget_OnDecidePlatformProfileButton Parms{};

	Parms.Widget = Widget;
	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayOfferWidget.OnDecideRankProfileButton
// (Final, Native, Protected)
// Parameters:
// class UAppWidget*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWidgetInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProfileDisplayOfferWidget::OnDecideRankProfileButton(class UAppWidget* Widget, EWidgetInputType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayOfferWidget", "OnDecideRankProfileButton");

	Params::ProfileDisplayOfferWidget_OnDecideRankProfileButton Parms{};

	Parms.Widget = Widget;
	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayOfferWidget.OnFinishedNoticeWindow
// (Final, Native, Protected)

void UProfileDisplayOfferWidget::OnFinishedNoticeWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayOfferWidget", "OnFinishedNoticeWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayOfferWidget.OnFinishFetchDataEvent
// (Final, Native, Protected)

void UProfileDisplayOfferWidget::OnFinishFetchDataEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayOfferWidget", "OnFinishFetchDataEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.ProfileDisplayOfferWidget.OnFinishFetchDataEventDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UProfileDisplayOfferWidget::OnFinishFetchDataEventDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayOfferWidget", "OnFinishFetchDataEventDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.ProfileDisplayOfferWidget.OnFinishReceivedOnLoadCompleteEvent
// (Final, Native, Protected)

void UProfileDisplayOfferWidget::OnFinishReceivedOnLoadCompleteEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayOfferWidget", "OnFinishReceivedOnLoadCompleteEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayOfferWidget.OnPlayerRequestErrorEvent
// (Final, Native, Public)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Key                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Message                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProfileDisplayOfferWidget::OnPlayerRequestErrorEvent(int32 RequestId, const class FName Key, const class FName Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayOfferWidget", "OnPlayerRequestErrorEvent");

	Params::ProfileDisplayOfferWidget_OnPlayerRequestErrorEvent Parms{};

	Parms.RequestId = RequestId;
	Parms.Key = Key;
	Parms.Message = Message;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayOfferWidget.OnReceivedCloseWebApiErrorWindow
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UProfileDisplayOfferWidget::OnReceivedCloseWebApiErrorWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayOfferWidget", "OnReceivedCloseWebApiErrorWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayOfferWidget.ReceivedOnLoadCompleteEvent
// (Final, Native, Protected)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProfileDisplayOfferWidget::ReceivedOnLoadCompleteEvent(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayOfferWidget", "ReceivedOnLoadCompleteEvent");

	Params::ProfileDisplayOfferWidget_ReceivedOnLoadCompleteEvent Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileDisplayOfferWidget.UpdateAfterFetchData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UProfileDisplayOfferWidget::UpdateAfterFetchData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileDisplayOfferWidget", "UpdateAfterFetchData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProfileRankListWidget.Open
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UProfileRankListWidget::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProfileRankListWidget", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProjectileDB.BP_FindBulletLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           HashStr                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharacterId                            ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBulletLevelData           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FBulletLevelData UProjectileDB::BP_FindBulletLevel(const class FString& HashStr, ECharacterId ID, uint8 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileDB", "BP_FindBulletLevel");

	Params::ProjectileDB_BP_FindBulletLevel Parms{};

	Parms.HashStr = std::move(HashStr);
	Parms.ID = ID;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProjectileDB.BP_FindGeneratorIndexLevelData
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           HashStr                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DataHashStr                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharacterId                            ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGeneratorIndexLevelData   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGeneratorIndexLevelData UProjectileDB::BP_FindGeneratorIndexLevelData(const class FString& HashStr, const class FString& DataHashStr, ECharacterId ID, uint8 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileDB", "BP_FindGeneratorIndexLevelData");

	Params::ProjectileDB_BP_FindGeneratorIndexLevelData Parms{};

	Parms.HashStr = std::move(HashStr);
	Parms.DataHashStr = std::move(DataHashStr);
	Parms.ID = ID;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProjectileDB.OnMasterDataInitializeComplete
// (Final, Native, Private)

void UProjectileDB::OnMasterDataInitializeComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileDB", "OnMasterDataInitializeComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ProjectileDB.BP_BulletFindAnyParameterBool
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FBulletLevelData                 Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UProjectileDB::BP_BulletFindAnyParameterBool(const struct FBulletLevelData& Data, class FName ParamName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileDB", "BP_BulletFindAnyParameterBool");

	Params::ProjectileDB_BP_BulletFindAnyParameterBool Parms{};

	Parms.Data = std::move(Data);
	Parms.ParamName = ParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProjectileDB.BP_BulletFindAnyParameterFloat
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FBulletLevelData                 Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UProjectileDB::BP_BulletFindAnyParameterFloat(const struct FBulletLevelData& Data, class FName ParamName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileDB", "BP_BulletFindAnyParameterFloat");

	Params::ProjectileDB_BP_BulletFindAnyParameterFloat Parms{};

	Parms.Data = std::move(Data);
	Parms.ParamName = ParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProjectileDB.BP_BulletFindAnyParameterVector
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FBulletLevelData                 Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UProjectileDB::BP_BulletFindAnyParameterVector(const struct FBulletLevelData& Data, class FName ParamName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileDB", "BP_BulletFindAnyParameterVector");

	Params::ProjectileDB_BP_BulletFindAnyParameterVector Parms{};

	Parms.Data = std::move(Data);
	Parms.ParamName = ParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProjectileDB.BP_GeneratorFindAnyParameterBool
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGeneratorIndexLevelData         Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UProjectileDB::BP_GeneratorFindAnyParameterBool(const struct FGeneratorIndexLevelData& Data, class FName ParamName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileDB", "BP_GeneratorFindAnyParameterBool");

	Params::ProjectileDB_BP_GeneratorFindAnyParameterBool Parms{};

	Parms.Data = std::move(Data);
	Parms.ParamName = ParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProjectileDB.BP_GeneratorFindAnyParameterFloat
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGeneratorIndexLevelData         Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UProjectileDB::BP_GeneratorFindAnyParameterFloat(const struct FGeneratorIndexLevelData& Data, class FName ParamName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileDB", "BP_GeneratorFindAnyParameterFloat");

	Params::ProjectileDB_BP_GeneratorFindAnyParameterFloat Parms{};

	Parms.Data = std::move(Data);
	Parms.ParamName = ParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProjectileDB.BP_GeneratorFindAnyParameterVector
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGeneratorIndexLevelData         Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UProjectileDB::BP_GeneratorFindAnyParameterVector(const struct FGeneratorIndexLevelData& Data, class FName ParamName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileDB", "BP_GeneratorFindAnyParameterVector");

	Params::ProjectileDB_BP_GeneratorFindAnyParameterVector Parms{};

	Parms.Data = std::move(Data);
	Parms.ParamName = ParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProjectileGeneratorGame.OnSpawnInitParams
// (Event, Public, BlueprintEvent)

void AProjectileGeneratorGame::OnSpawnInitParams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileGeneratorGame", "OnSpawnInitParams");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.ProjectileGeneratorGame.BP_GetBaseDB
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGeneratorIndexData        ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGeneratorIndexData AProjectileGeneratorGame::BP_GetBaseDB() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileGeneratorGame", "BP_GetBaseDB");

	Params::ProjectileGeneratorGame_BP_GetBaseDB Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProjectileGeneratorGame.BP_GetLevelDB
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGeneratorIndexLevelData   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGeneratorIndexLevelData AProjectileGeneratorGame::BP_GetLevelDB() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileGeneratorGame", "BP_GetLevelDB");

	Params::ProjectileGeneratorGame_BP_GetLevelDB Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProjectileGeneratorGame.GetCharacterID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterId                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharacterId AProjectileGeneratorGame::GetCharacterID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileGeneratorGame", "GetCharacterID");

	Params::ProjectileGeneratorGame_GetCharacterID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProjectileGeneratorGame.GetInitDirection
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FVector AProjectileGeneratorGame::GetInitDirection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileGeneratorGame", "GetInitDirection");

	Params::ProjectileGeneratorGame_GetInitDirection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProjectileGeneratorGame.GetInitLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FVector AProjectileGeneratorGame::GetInitLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileGeneratorGame", "GetInitLocation");

	Params::ProjectileGeneratorGame_GetInitLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProjectileGeneratorGame.GetInitQuat
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FQuat                      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

const struct FQuat AProjectileGeneratorGame::GetInitQuat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileGeneratorGame", "GetInitQuat");

	Params::ProjectileGeneratorGame_GetInitQuat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProjectileGeneratorGame.GetInitScale
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FVector AProjectileGeneratorGame::GetInitScale() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileGeneratorGame", "GetInitScale");

	Params::ProjectileGeneratorGame_GetInitScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProjectileGeneratorGame.GetInitTarget
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FVector AProjectileGeneratorGame::GetInitTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileGeneratorGame", "GetInitTarget");

	Params::ProjectileGeneratorGame_GetInitTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProjectileGeneratorGame.GetInitTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTransform                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

const struct FTransform AProjectileGeneratorGame::GetInitTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileGeneratorGame", "GetInitTransform");

	Params::ProjectileGeneratorGame_GetInitTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProjectileGeneratorGame.GetIsProjectileCreatorMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AProjectileGeneratorGame::GetIsProjectileCreatorMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileGeneratorGame", "GetIsProjectileCreatorMode");

	Params::ProjectileGeneratorGame_GetIsProjectileCreatorMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProjectileGeneratorGame.GetLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AProjectileGeneratorGame::GetLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileGeneratorGame", "GetLevel");

	Params::ProjectileGeneratorGame_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProjectileGeneratorGame.GetLockonActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AProjectileGeneratorGame::GetLockonActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileGeneratorGame", "GetLockonActor");

	Params::ProjectileGeneratorGame_GetLockonActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ProjectileGeneratorGame.GetSocketName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AProjectileGeneratorGame::GetSocketName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProjectileGeneratorGame", "GetSocketName");

	Params::ProjectileGeneratorGame_GetSocketName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.ReturnButtonWidget.OnPressButton
// (Final, Native, Public)
// Parameters:
// class UAppWidget*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWidgetInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UReturnButtonWidget::OnPressButton(class UAppWidget* Widget, EWidgetInputType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReturnButtonWidget", "OnPressButton");

	Params::ReturnButtonWidget_OnPressButton Parms{};

	Parms.Widget = Widget;
	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.RoleWidget.OnSetRole
// (Event, Protected, BlueprintEvent)
// Parameters:
// EMdAbilityType                          AbilityType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URoleWidget::OnSetRole(EMdAbilityType AbilityType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RoleWidget", "OnSetRole");

	Params::RoleWidget_OnSetRole Parms{};

	Parms.AbilityType = AbilityType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.ScoreComponentBase.OnCompletedSendKpi
// (Final, Native, Protected)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScoreComponentBase::OnCompletedSendKpi(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScoreComponentBase", "OnCompletedSendKpi");

	Params::ScoreComponentBase_OnCompletedSendKpi Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ScoreComponentBase.OnCompletedSendViolationReport
// (Final, Native, Protected)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScoreComponentBase::OnCompletedSendViolationReport(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScoreComponentBase", "OnCompletedSendViolationReport");

	Params::ScoreComponentBase_OnCompletedSendViolationReport Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ScoreComponent.OnCompletedSendDropAchievement
// (Final, Native, Protected)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScoreComponent::OnCompletedSendDropAchievement(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScoreComponent", "OnCompletedSendDropAchievement");

	Params::ScoreComponent_OnCompletedSendDropAchievement Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ScoreComponent.OnCompletedSendMission
// (Final, Native, Protected)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScoreComponent::OnCompletedSendMission(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScoreComponent", "OnCompletedSendMission");

	Params::ScoreComponent_OnCompletedSendMission Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ScoreComponent.OnCompletedSendUserResult
// (Final, Native, Protected)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScoreComponent::OnCompletedSendUserResult(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScoreComponent", "OnCompletedSendUserResult");

	Params::ScoreComponent_OnCompletedSendUserResult Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.ScoreComponentCustomMatch.OnCompletedSendResultData
// (Final, Native, Protected)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScoreComponentCustomMatch::OnCompletedSendResultData(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScoreComponentCustomMatch", "OnCompletedSendResultData");

	Params::ScoreComponentCustomMatch_OnCompletedSendResultData Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.SendLikeInterface.SendLikeImage
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ISendLikeInterface::SendLikeImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SendLikeInterface", "SendLikeImage");

	Params::SendLikeInterface_SendLikeImage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.SendLikeInterface.SetSendLikeButtonEnable
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ISendLikeInterface::SetSendLikeButtonEnable(bool InEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SendLikeInterface", "SetSendLikeButtonEnable");

	Params::SendLikeInterface_SetSendLikeButtonEnable Parms{};

	Parms.InEnable = InEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.SendLikeItemWidget.UpdateOpenAnimParam
// (Final, Native, Protected, BlueprintCallable)

void USendLikeItemWidget::UpdateOpenAnimParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SendLikeItemWidget", "UpdateOpenAnimParam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.SendLikeButtonWidget.BP_UpdateSendLikeCount
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USendLikeButtonWidget::BP_UpdateSendLikeCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SendLikeButtonWidget", "BP_UpdateSendLikeCount");

	Params::SendLikeButtonWidget_BP_UpdateSendLikeCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.SendLikeButtonWidget.ClearFocus
// (Final, Native, Public, BlueprintCallable)

void USendLikeButtonWidget::ClearFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SendLikeButtonWidget", "ClearFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.SendLikeButtonWidget.OnMaxCountEventDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void USendLikeButtonWidget::OnMaxCountEventDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SendLikeButtonWidget", "OnMaxCountEventDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.SendLikeButtonWidget.SetupSendLikeCounter
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void USendLikeButtonWidget::SetupSendLikeCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SendLikeButtonWidget", "SetupSendLikeCounter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.SendLikeButtonWidget.BP_GetRemainsSendLikeCount
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USendLikeButtonWidget::BP_GetRemainsSendLikeCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SendLikeButtonWidget", "BP_GetRemainsSendLikeCount");

	Params::SendLikeButtonWidget_BP_GetRemainsSendLikeCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.SendLikeButtonWidget.BP_GetSendLikeCounter
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USendLikeButtonWidget::BP_GetSendLikeCounter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SendLikeButtonWidget", "BP_GetSendLikeCounter");

	Params::SendLikeButtonWidget_BP_GetSendLikeCounter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.SkillDerivedTypeWidget.GetUniqueButtonList
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class UPlatformRichTextBlock*>   UniqueButtonList                                       (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USkillDerivedTypeWidget::GetUniqueButtonList(TArray<class UPlatformRichTextBlock*>* UniqueButtonList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillDerivedTypeWidget", "GetUniqueButtonList");

	Params::SkillDerivedTypeWidget_GetUniqueButtonList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UniqueButtonList != nullptr)
		*UniqueButtonList = std::move(Parms.UniqueButtonList);
}


// Function GameModule.SkillVariationDetailWidget.OnAnalogValueScroll
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAnalogInputEvent                InAnalogEvent                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void USkillVariationDetailWidget::OnAnalogValueScroll(const struct FAnalogInputEvent& InAnalogEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillVariationDetailWidget", "OnAnalogValueScroll");

	Params::SkillVariationDetailWidget_OnAnalogValueScroll Parms{};

	Parms.InAnalogEvent = std::move(InAnalogEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.SkillVariationDetailWidget.OnDecideButtonEvent
// (Final, Native, Protected)
// Parameters:
// class UAppWidget*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWidgetInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkillVariationDetailWidget::OnDecideButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillVariationDetailWidget", "OnDecideButtonEvent");

	Params::SkillVariationDetailWidget_OnDecideButtonEvent Parms{};

	Parms.Widget = Widget;
	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.SkillVariationDetailWidget.OnInputSkillVariationDetailEventDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void USkillVariationDetailWidget::OnInputSkillVariationDetailEventDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillVariationDetailWidget", "OnInputSkillVariationDetailEventDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.SkillVariationDetailWidget.OnSetAbilityList
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   VariationNo                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkillVariationDetailWidget::OnSetAbilityList(ECharacterId CharacterId, int32 VariationNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillVariationDetailWidget", "OnSetAbilityList");

	Params::SkillVariationDetailWidget_OnSetAbilityList Parms{};

	Parms.CharacterId = CharacterId;
	Parms.VariationNo = VariationNo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.SkillVariationDetailWidget.OnSetHowToGetText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             HowToGetText                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void USkillVariationDetailWidget::OnSetHowToGetText(const class FText& HowToGetText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillVariationDetailWidget", "OnSetHowToGetText");

	Params::SkillVariationDetailWidget_OnSetHowToGetText Parms{};

	Parms.HowToGetText = std::move(HowToGetText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.SkillVariationListItemWidget.OnSetEquip
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bEquip                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkillVariationListItemWidget::OnSetEquip(bool bEquip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillVariationListItemWidget", "OnSetEquip");

	Params::SkillVariationListItemWidget_OnSetEquip Parms{};

	Parms.bEquip = bEquip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.SkillVariationListItemWidget.OnSetHave
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bHave                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkillVariationListItemWidget::OnSetHave(bool bHave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillVariationListItemWidget", "OnSetHave");

	Params::SkillVariationListItemWidget_OnSetHave Parms{};

	Parms.bHave = bHave;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.SkillVariationListItemWidget.OnSetHowToGetText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             HowToGetText                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void USkillVariationListItemWidget::OnSetHowToGetText(const class FText& HowToGetText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillVariationListItemWidget", "OnSetHowToGetText");

	Params::SkillVariationListItemWidget_OnSetHowToGetText Parms{};

	Parms.HowToGetText = std::move(HowToGetText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.SkillVariationListItemWidget.OnSetName
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             NameText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void USkillVariationListItemWidget::OnSetName(const class FText& NameText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillVariationListItemWidget", "OnSetName");

	Params::SkillVariationListItemWidget_OnSetName Parms{};

	Parms.NameText = std::move(NameText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.SkillVariationListItemWidget.OnSetRarity
// (Event, Protected, BlueprintEvent)
// Parameters:
// EMdRarity                               Rarity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkillVariationListItemWidget::OnSetRarity(EMdRarity Rarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillVariationListItemWidget", "OnSetRarity");

	Params::SkillVariationListItemWidget_OnSetRarity Parms{};

	Parms.Rarity = Rarity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.SkillVariationListWidget.OnDecideEvent
// (Final, Native, Protected)
// Parameters:
// class UAppWidget*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWidgetInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkillVariationListWidget::OnDecideEvent(class UAppWidget* Widget, EWidgetInputType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillVariationListWidget", "OnDecideEvent");

	Params::SkillVariationListWidget_OnDecideEvent Parms{};

	Parms.Widget = Widget;
	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.SkillVariationListWidget.OnEventGoToGashaButton__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void USkillVariationListWidget::OnEventGoToGashaButton__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillVariationListWidget", "OnEventGoToGashaButton__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.SkillVariationListWidget.OnEventSkillVariationListItemObject__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USkillVariationListItemObject*    SkillVariationListItemObject                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkillVariationListWidget::OnEventSkillVariationListItemObject__DelegateSignature(class USkillVariationListItemObject* SkillVariationListItemObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillVariationListWidget", "OnEventSkillVariationListItemObject__DelegateSignature");

	Params::SkillVariationListWidget_OnEventSkillVariationListItemObject__DelegateSignature Parms{};

	Parms.SkillVariationListItemObject = SkillVariationListItemObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.SkillVariationWidget.CloseLevel
// (Final, Native, Protected, BlueprintCallable)

void USkillVariationWidget::CloseLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillVariationWidget", "CloseLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.SkillVariationWidget.OnDecideGoToGashaButtonEvent
// (Final, Native, Protected)

void USkillVariationWidget::OnDecideGoToGashaButtonEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillVariationWidget", "OnDecideGoToGashaButtonEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.SkillVariationWidget.OnDecideSkillVariationListItemObject
// (Final, Native, Protected)
// Parameters:
// class USkillVariationListItemObject*    ItemObject                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkillVariationWidget::OnDecideSkillVariationListItemObject(class USkillVariationListItemObject* ItemObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillVariationWidget", "OnDecideSkillVariationListItemObject");

	Params::SkillVariationWidget_OnDecideSkillVariationListItemObject Parms{};

	Parms.ItemObject = ItemObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.SkillVariationWidget.OnFocusSkillVariationListItemObject
// (Final, Native, Protected)
// Parameters:
// class USkillVariationListItemObject*    ItemObject                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkillVariationWidget::OnFocusSkillVariationListItemObject(class USkillVariationListItemObject* ItemObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillVariationWidget", "OnFocusSkillVariationListItemObject");

	Params::SkillVariationWidget_OnFocusSkillVariationListItemObject Parms{};

	Parms.ItemObject = ItemObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.SkillVariationWidget.OnLoadComplete
// (Final, Native, Protected)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkillVariationWidget::OnLoadComplete(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillVariationWidget", "OnLoadComplete");

	Params::SkillVariationWidget_OnLoadComplete Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.SkillVariationWidget.OnSetAbilityList
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECharacterId                            CharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   VariationNo                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkillVariationWidget::OnSetAbilityList(ECharacterId CharacterId, int32 VariationNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillVariationWidget", "OnSetAbilityList");

	Params::SkillVariationWidget_OnSetAbilityList Parms{};

	Parms.CharacterId = CharacterId;
	Parms.VariationNo = VariationNo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.SkillVariationWidget.OnShowLoadingIcon
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkillVariationWidget::OnShowLoadingIcon(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillVariationWidget", "OnShowLoadingIcon");

	Params::SkillVariationWidget_OnShowLoadingIcon Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.SkillVariationWidget.OnUpdateComplete
// (Final, Native, Protected)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkillVariationWidget::OnUpdateComplete(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkillVariationWidget", "OnUpdateComplete");

	Params::SkillVariationWidget_OnUpdateComplete Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.SoundStatics.GetCharacterDedicatedVoiceCharacterCodeList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterCode                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSet<int32>                             OutCharacterCodeSet                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    bInBattle                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USoundStatics::GetCharacterDedicatedVoiceCharacterCodeList(const class UObject* WorldContextObject, const int32 InCharacterCode, TSet<int32>* OutCharacterCodeSet, bool bInBattle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SoundStatics", "GetCharacterDedicatedVoiceCharacterCodeList");

	Params::SoundStatics_GetCharacterDedicatedVoiceCharacterCodeList Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InCharacterCode = InCharacterCode;
	Parms.bInBattle = bInBattle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCharacterCodeSet != nullptr)
		*OutCharacterCodeSet = std::move(Parms.OutCharacterCodeSet);
}


// Function GameModule.SoundStatics.GetCharacterDedicatedVoiceCueName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterCode                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InVsCharacterCode                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDedicated                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInVillain                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InFormatString                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutSoundString                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USoundStatics::GetCharacterDedicatedVoiceCueName(const class UObject* WorldContextObject, const int32 InCharacterCode, const int32 InVsCharacterCode, const bool bInDedicated, const bool bInVillain, const class FString& InFormatString, class FString* OutSoundString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SoundStatics", "GetCharacterDedicatedVoiceCueName");

	Params::SoundStatics_GetCharacterDedicatedVoiceCueName Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InCharacterCode = InCharacterCode;
	Parms.InVsCharacterCode = InVsCharacterCode;
	Parms.bInDedicated = bInDedicated;
	Parms.bInVillain = bInVillain;
	Parms.InFormatString = std::move(InFormatString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSoundString != nullptr)
		*OutSoundString = std::move(Parms.OutSoundString);
}


// Function GameModule.SoundStatics.GetCharacterDedicatedVoiceCueNameAuto
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharacterId                            InCharacterId                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharacterId                            InVsCharacterId                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InFormatString                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutSoundString                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USoundStatics::GetCharacterDedicatedVoiceCueNameAuto(const class UObject* WorldContextObject, const ECharacterId InCharacterId, const ECharacterId InVsCharacterId, const class FString& InFormatString, class FString* OutSoundString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SoundStatics", "GetCharacterDedicatedVoiceCueNameAuto");

	Params::SoundStatics_GetCharacterDedicatedVoiceCueNameAuto Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InCharacterId = InCharacterId;
	Parms.InVsCharacterId = InVsCharacterId;
	Parms.InFormatString = std::move(InFormatString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSoundString != nullptr)
		*OutSoundString = std::move(Parms.OutSoundString);
}


// Function GameModule.SoundStatics.PlayCharacterDedicatedVoice
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCharacterCode                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InVsCharacterCode                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDedicated                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInVillain                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InFormatString                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAtomComponent*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAtomComponent* USoundStatics::PlayCharacterDedicatedVoice(const class UObject* WorldContextObject, const int32 InCharacterCode, const int32 InVsCharacterCode, const bool bInDedicated, const bool bInVillain, const class FString& InFormatString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SoundStatics", "PlayCharacterDedicatedVoice");

	Params::SoundStatics_PlayCharacterDedicatedVoice Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InCharacterCode = InCharacterCode;
	Parms.InVsCharacterCode = InVsCharacterCode;
	Parms.bInDedicated = bInDedicated;
	Parms.bInVillain = bInVillain;
	Parms.InFormatString = std::move(InFormatString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.SoundStatics.PlayCharacterDedicatedVoiceAuto
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharacterId                            InCharacterId                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharacterId                            InVsCharacterId                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InFormatString                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAtomComponent*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAtomComponent* USoundStatics::PlayCharacterDedicatedVoiceAuto(const class UObject* WorldContextObject, const ECharacterId InCharacterId, const ECharacterId InVsCharacterId, const class FString& InFormatString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SoundStatics", "PlayCharacterDedicatedVoiceAuto");

	Params::SoundStatics_PlayCharacterDedicatedVoiceAuto Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InCharacterId = InCharacterId;
	Parms.InVsCharacterId = InVsCharacterId;
	Parms.InFormatString = std::move(InFormatString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.SoundStatics.PlayMusic
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundAtomCue*                    Sound                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAtomComponent*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAtomComponent* USoundStatics::PlayMusic(const class UObject* WorldContextObject, class USoundAtomCue* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SoundStatics", "PlayMusic");

	Params::SoundStatics_PlayMusic Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Sound = Sound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.SoundStatics.PlaySound2D
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundAtomCue*                    Sound                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAtomComponent*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAtomComponent* USoundStatics::PlaySound2D(const class UObject* WorldContextObject, class USoundAtomCue* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SoundStatics", "PlaySound2D");

	Params::SoundStatics_PlaySound2D Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Sound = Sound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.SoundStatics.PlaySound2DByName
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CueName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAtomComponent*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAtomComponent* USoundStatics::PlaySound2DByName(const class UObject* WorldContextObject, const class FString& CueName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SoundStatics", "PlaySound2DByName");

	Params::SoundStatics_PlaySound2DByName Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CueName = std::move(CueName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.SoundStatics.PlaySoundAtLocation
// (Final, BlueprintCosmetic, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CueName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// float                                   VolumeMultiplier                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PitchMultiplier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundAttenuation*                AttenuationSettings                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundConcurrency*                ConcurrencySettings                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoDestroy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAtomComponent*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAtomComponent* USoundStatics::PlaySoundAtLocation(const class UObject* WorldContextObject, const class FString& CueName, const struct FVector& Location, const struct FRotator& Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings, bool bAutoDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SoundStatics", "PlaySoundAtLocation");

	Params::SoundStatics_PlaySoundAtLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CueName = std::move(CueName);
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.VolumeMultiplier = VolumeMultiplier;
	Parms.PitchMultiplier = PitchMultiplier;
	Parms.StartTime = StartTime;
	Parms.AttenuationSettings = AttenuationSettings;
	Parms.ConcurrencySettings = ConcurrencySettings;
	Parms.bAutoDestroy = bAutoDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.SoundStatics.PlaySoundAttached
// (Final, BlueprintCosmetic, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           CueName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  AttachToComponent                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AttachPointName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// EAttachLocation                         LocationType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopWhenAttachedToDestroyed                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VolumeMultiplier                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PitchMultiplier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundAttenuation*                AttenuationSettings                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundConcurrency*                ConcurrencySettings                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoDestroy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAtomComponent*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAtomComponent* USoundStatics::PlaySoundAttached(const class FString& CueName, class USceneComponent* AttachToComponent, class FName AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, EAttachLocation LocationType, bool bStopWhenAttachedToDestroyed, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings, bool bAutoDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SoundStatics", "PlaySoundAttached");

	Params::SoundStatics_PlaySoundAttached Parms{};

	Parms.CueName = std::move(CueName);
	Parms.AttachToComponent = AttachToComponent;
	Parms.AttachPointName = AttachPointName;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.LocationType = LocationType;
	Parms.bStopWhenAttachedToDestroyed = bStopWhenAttachedToDestroyed;
	Parms.VolumeMultiplier = VolumeMultiplier;
	Parms.PitchMultiplier = PitchMultiplier;
	Parms.StartTime = StartTime;
	Parms.AttenuationSettings = AttenuationSettings;
	Parms.ConcurrencySettings = ConcurrencySettings;
	Parms.bAutoDestroy = bAutoDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.SoundStatics.PlayVoice2D
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundAtomCue*                    Sound                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAtomComponent*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAtomComponent* USoundStatics::PlayVoice2D(const class UObject* WorldContextObject, class USoundAtomCue* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SoundStatics", "PlayVoice2D");

	Params::SoundStatics_PlayVoice2D Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Sound = Sound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.SoundStatics.PlayVoice2DByName
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CueName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAtomComponent*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAtomComponent* USoundStatics::PlayVoice2DByName(const class UObject* WorldContextObject, const class FString& CueName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SoundStatics", "PlayVoice2DByName");

	Params::SoundStatics_PlayVoice2DByName Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CueName = std::move(CueName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction GameModule.SquadJoinWidget.OnClosedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void USquadJoinWidget::OnClosedDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadJoinWidget", "OnClosedDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.SquadJoinWidget.OnClosedWindow
// (Final, Native, Private)

void USquadJoinWidget::OnClosedWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadJoinWidget", "OnClosedWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.SquadJoinWidget.OnCloseLevel
// (Event, Public, BlueprintEvent)

void USquadJoinWidget::OnCloseLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadJoinWidget", "OnCloseLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.SquadJoinWidget.OnCloseMessageClosedWindow
// (Final, Native, Private)

void USquadJoinWidget::OnCloseMessageClosedWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadJoinWidget", "OnCloseMessageClosedWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.SquadJoinWidget.OnPlayerRequestErrorEvent
// (Final, Native, Protected)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Key                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Message                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USquadJoinWidget::OnPlayerRequestErrorEvent(int32 RequestId, const class FName Key, const class FName Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadJoinWidget", "OnPlayerRequestErrorEvent");

	Params::SquadJoinWidget_OnPlayerRequestErrorEvent Parms{};

	Parms.RequestId = RequestId;
	Parms.Key = Key;
	Parms.Message = Message;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.SquadJoinWidget.OnSelectMessageClosedWindow
// (Final, Native, Private)

void USquadJoinWidget::OnSelectMessageClosedWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadJoinWidget", "OnSelectMessageClosedWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.SquadJoinWidget.OnSelectMessageCloseWindow
// (Final, Native, Private)
// Parameters:
// class UAppWidget*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWidgetInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    LeftButton                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USquadJoinWidget::OnSelectMessageCloseWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadJoinWidget", "OnSelectMessageCloseWindow");

	Params::SquadJoinWidget_OnSelectMessageCloseWindow Parms{};

	Parms.Widget = Widget;
	Parms.InputType = InputType;
	Parms.LeftButton = LeftButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.SquadJoinWidget.OnSelectMessageDecideWindow
// (Final, Native, Private)
// Parameters:
// class UAppWidget*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWidgetInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    LeftButton                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USquadJoinWidget::OnSelectMessageDecideWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadJoinWidget", "OnSelectMessageDecideWindow");

	Params::SquadJoinWidget_OnSelectMessageDecideWindow Parms{};

	Parms.Widget = Widget;
	Parms.InputType = InputType;
	Parms.LeftButton = LeftButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.SquadJoinWidget.OnSelectWindowSetting
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Leader                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USquadJoinWidget::OnSelectWindowSetting(bool Leader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadJoinWidget", "OnSelectWindowSetting");

	Params::SquadJoinWidget_OnSelectWindowSetting Parms{};

	Parms.Leader = Leader;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.SquadJoinWidget.OnSystemErrorEvent
// (Final, Native, Protected)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Key                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Message                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USquadJoinWidget::OnSystemErrorEvent(int32 RequestId, const class FName Key, const class FName Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadJoinWidget", "OnSystemErrorEvent");

	Params::SquadJoinWidget_OnSystemErrorEvent Parms{};

	Parms.RequestId = RequestId;
	Parms.Key = Key;
	Parms.Message = Message;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.SquadJoinWidget.OnTeamUpJoinByInvitationEvent
// (Final, Native, Private)

void USquadJoinWidget::OnTeamUpJoinByInvitationEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadJoinWidget", "OnTeamUpJoinByInvitationEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.SquadJoinWidget.OnTeamUpJoinEvent
// (Final, Native, Private)

void USquadJoinWidget::OnTeamUpJoinEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadJoinWidget", "OnTeamUpJoinEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.SquadJoinWidget.OnTeamUpLeaveEvent
// (Final, Native, Private)

void USquadJoinWidget::OnTeamUpLeaveEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadJoinWidget", "OnTeamUpLeaveEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.SquadJoinWidget.OnTeamUpUpdatedEvent
// (Final, Native, Private)

void USquadJoinWidget::OnTeamUpUpdatedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadJoinWidget", "OnTeamUpUpdatedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.SquadJoinWidget.OnUpdateCompleteEvent
// (Final, Native, Private)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USquadJoinWidget::OnUpdateCompleteEvent(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadJoinWidget", "OnUpdateCompleteEvent");

	Params::SquadJoinWidget_OnUpdateCompleteEvent Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.StaticDataManager.GetAbilityArtColorInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMdAbilityType                          AbilityType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAbilityArtColorInfo             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAbilityArtColorInfo UStaticDataManager::GetAbilityArtColorInfo(EMdAbilityType AbilityType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StaticDataManager", "GetAbilityArtColorInfo");

	Params::StaticDataManager_GetAbilityArtColorInfo Parms{};

	Parms.AbilityType = AbilityType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.StaticDataManager.GetAbilityDurationOnValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMdAbilityType                          AbilityType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UStaticDataManager::GetAbilityDurationOnValue(const class UObject* WorldContextObject, EMdAbilityType AbilityType, int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StaticDataManager", "GetAbilityDurationOnValue");

	Params::StaticDataManager_GetAbilityDurationOnValue Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AbilityType = AbilityType;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.StaticDataManager.GetGimmickDataAsset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             GimmickId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGimmickBaseDataAsset*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGimmickBaseDataAsset* UStaticDataManager::GetGimmickDataAsset(const class UObject* WorldContextObject, class FName GimmickId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StaticDataManager", "GetGimmickDataAsset");

	Params::StaticDataManager_GetGimmickDataAsset Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.GimmickId = GimmickId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.StaticDataManager.GetHudResourceDataAsset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHudResource*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHudResource* UStaticDataManager::GetHudResourceDataAsset(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StaticDataManager", "GetHudResourceDataAsset");

	Params::StaticDataManager_GetHudResourceDataAsset Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.StaticDataManager.GetLeadersTeamBorderColorInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ELeadersBattleTeamType                  TeamColor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLeadersTeamColorInfo            ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FLeadersTeamColorInfo UStaticDataManager::GetLeadersTeamBorderColorInfo(ELeadersBattleTeamType TeamColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StaticDataManager", "GetLeadersTeamBorderColorInfo");

	Params::StaticDataManager_GetLeadersTeamBorderColorInfo Parms{};

	Parms.TeamColor = TeamColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.StaticDataManager.GetPermanentDataAsset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimaryAssetPermanent*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimaryAssetPermanent* UStaticDataManager::GetPermanentDataAsset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StaticDataManager", "GetPermanentDataAsset");

	Params::StaticDataManager_GetPermanentDataAsset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.StaticDataManager.GetSupplyBaseDataAsset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SupplyId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USupplyBaseDataAsset*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USupplyBaseDataAsset* UStaticDataManager::GetSupplyBaseDataAsset(const class UObject* WorldContextObject, class FName SupplyId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StaticDataManager", "GetSupplyBaseDataAsset");

	Params::StaticDataManager_GetSupplyBaseDataAsset Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SupplyId = SupplyId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.StaticDataManager.GetSupplyParticleColorInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USupplyArtInfoDataAsset*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USupplyArtInfoDataAsset* UStaticDataManager::GetSupplyParticleColorInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StaticDataManager", "GetSupplyParticleColorInfo");

	Params::StaticDataManager_GetSupplyParticleColorInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.StaticDataManager.LoadHudResourceDataAsset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStaticDataManager::LoadHudResourceDataAsset(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StaticDataManager", "LoadHudResourceDataAsset");

	Params::StaticDataManager_LoadHudResourceDataAsset Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.SupplyBaseDataAsset.GetActionGuideText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText USupplyBaseDataAsset::GetActionGuideText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SupplyBaseDataAsset", "GetActionGuideText");

	Params::SupplyBaseDataAsset_GetActionGuideText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.SupplyBaseDataAsset.GetDescriptionText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          WorldContext                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText USupplyBaseDataAsset::GetDescriptionText(const class UObject* WorldContext) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SupplyBaseDataAsset", "GetDescriptionText");

	Params::SupplyBaseDataAsset_GetDescriptionText Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.SupplyBaseDataAsset.GetDisplayNameText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText USupplyBaseDataAsset::GetDisplayNameText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SupplyBaseDataAsset", "GetDisplayNameText");

	Params::SupplyBaseDataAsset_GetDisplayNameText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.SupplyBaseDataAsset.GetFieldPopUpWidgetColorCurve
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCurveLinearColor*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCurveLinearColor* USupplyBaseDataAsset::GetFieldPopUpWidgetColorCurve() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SupplyBaseDataAsset", "GetFieldPopUpWidgetColorCurve");

	Params::SupplyBaseDataAsset_GetFieldPopUpWidgetColorCurve Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.SupplyBaseDataAsset.GetIconPaperSprite
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPaperSprite*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperSprite* USupplyBaseDataAsset::GetIconPaperSprite() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SupplyBaseDataAsset", "GetIconPaperSprite");

	Params::SupplyBaseDataAsset_GetIconPaperSprite Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.TeamCommentaryMessageItemWidget.OnDrawTimeout
// (Final, Native, Private)

void UTeamCommentaryMessageItemWidget::OnDrawTimeout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamCommentaryMessageItemWidget", "OnDrawTimeout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.TeamCommentaryMessageItemWidget.OnMessageClosedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UTeamCommentaryMessageItemWidget::OnMessageClosedDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamCommentaryMessageItemWidget", "OnMessageClosedDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.TeamCommentaryMessageWidget.OnChangeBattleSequence
// (Final, Native, Private)
// Parameters:
// EBattleStartSequenceType                Sequence                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTeamCommentaryMessageWidget::OnChangeBattleSequence(EBattleStartSequenceType Sequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamCommentaryMessageWidget", "OnChangeBattleSequence");

	Params::TeamCommentaryMessageWidget_OnChangeBattleSequence Parms{};

	Parms.Sequence = Sequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TeamCommentaryMessageWidget.OnNoticeUpdatedEvent
// (Final, Native, Private)
// Parameters:
// int32                                   Num                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTeamCommentaryMessageWidget::OnNoticeUpdatedEvent(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamCommentaryMessageWidget", "OnNoticeUpdatedEvent");

	Params::TeamCommentaryMessageWidget_OnNoticeUpdatedEvent Parms{};

	Parms.Num = Num;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TeamCommentaryMessageWidget.OnRequestMessage
// (Event, Public, BlueprintEvent)
// Parameters:
// ETeamCommentaryMessage                  MessageType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTeamCommentaryMessageWidget::OnRequestMessage(ETeamCommentaryMessage MessageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamCommentaryMessageWidget", "OnRequestMessage");

	Params::TeamCommentaryMessageWidget_OnRequestMessage Parms{};

	Parms.MessageType = MessageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.TeamCommentaryMessageWidget.OnSquadNumChanged
// (Final, Native, Private)
// Parameters:
// int32                                   SquadNum                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTeamCommentaryMessageWidget::OnSquadNumChanged(int32 SquadNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamCommentaryMessageWidget", "OnSquadNumChanged");

	Params::TeamCommentaryMessageWidget_OnSquadNumChanged Parms{};

	Parms.SquadNum = SquadNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TeamCommentaryMessageWidget.OnTeamUpUpdatedEvent
// (Final, Native, Private)

void UTeamCommentaryMessageWidget::OnTeamUpUpdatedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamCommentaryMessageWidget", "OnTeamUpUpdatedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TeamCommentaryMessageWidget.SetMessageEnable
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTeamCommentaryMessageWidget::SetMessageEnable(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamCommentaryMessageWidget", "SetMessageEnable");

	Params::TeamCommentaryMessageWidget_SetMessageEnable Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TeamCommentaryMessageWidget.UpdateRequestId
// (Final, Native, Private)
// Parameters:
// int32                                   RequestId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTeamCommentaryMessageWidget::UpdateRequestId(int32 RequestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeamCommentaryMessageWidget", "UpdateRequestId");

	Params::TeamCommentaryMessageWidget_UpdateRequestId Parms{};

	Parms.RequestId = RequestId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatButtonGuide.BP_PlayMessageAnimation
// (Final, Native, Public, BlueprintCallable)

void UTextChatButtonGuide::BP_PlayMessageAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatButtonGuide", "BP_PlayMessageAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatButtonGuide.PlayMessageAnimation
// (Event, Public, BlueprintEvent)

void UTextChatButtonGuide::PlayMessageAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatButtonGuide", "PlayMessageAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.TextChatButtonGuide.SetGaugePercent
// (Final, Native, Public)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatButtonGuide::SetGaugePercent(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatButtonGuide", "SetGaugePercent");

	Params::TextChatButtonGuide_SetGaugePercent Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatIcon.BP_PlayMessageAnimation
// (Final, Native, Public, BlueprintCallable)

void UTextChatIcon::BP_PlayMessageAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatIcon", "BP_PlayMessageAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatIcon.BP_SetNoticeVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESlateVisibility                        Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatIcon::BP_SetNoticeVisibility(ESlateVisibility Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatIcon", "BP_SetNoticeVisibility");

	Params::TextChatIcon_BP_SetNoticeVisibility Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatIcon.BP_StartAnimation
// (Final, Native, Public, BlueprintCallable)

void UTextChatIcon::BP_StartAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatIcon", "BP_StartAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatIcon.BP_StopAnimation
// (Final, Native, Public, BlueprintCallable)

void UTextChatIcon::BP_StopAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatIcon", "BP_StopAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatIcon.BP_StopMessageAnimation
// (Final, Native, Public, BlueprintCallable)

void UTextChatIcon::BP_StopMessageAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatIcon", "BP_StopMessageAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatIcon.LoopAnimation
// (Final, Native, Public)
// Parameters:
// float                                   DeltaTime                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatIcon::LoopAnimation(const float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatIcon", "LoopAnimation");

	Params::TextChatIcon_LoopAnimation Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatIcon.PlayMessageAnimation
// (Event, Public, BlueprintEvent)

void UTextChatIcon::PlayMessageAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatIcon", "PlayMessageAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.TextChatIcon.SetNoticeVisibility
// (Event, Public, BlueprintEvent)
// Parameters:
// ESlateVisibility                        Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatIcon::SetNoticeVisibility(ESlateVisibility Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatIcon", "SetNoticeVisibility");

	Params::TextChatIcon_SetNoticeVisibility Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.TextChatIcon.StopMessageAnimation
// (Event, Public, BlueprintEvent)

void UTextChatIcon::StopMessageAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatIcon", "StopMessageAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.TextChatIcon.TickDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float                                   DeltaTime                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatIcon::TickDelegate__DelegateSignature(const float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatIcon", "TickDelegate__DelegateSignature");

	Params::TextChatIcon_TickDelegate__DelegateSignature Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.TextChatIcon.UpdateArray
// (Final, Native, Public, BlueprintCallable)

void UTextChatIcon::UpdateArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatIcon", "UpdateArray");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.TextChatIcon.UpdateArrayEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UTextChatIcon::UpdateArrayEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatIcon", "UpdateArrayEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.TextChatIconAnker.SetIconPosition
// (Event, Public, BlueprintEvent)

void UTextChatIconAnker::SetIconPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatIconAnker", "SetIconPosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.TextChatListObject.BP_GetAlreadyRead
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTextChatListObject::BP_GetAlreadyRead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatListObject", "BP_GetAlreadyRead");

	Params::TextChatListObject_BP_GetAlreadyRead Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.TextChatListObject.BP_SetAlreadyRead
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatListObject::BP_SetAlreadyRead(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatListObject", "BP_SetAlreadyRead");

	Params::TextChatListObject_BP_SetAlreadyRead Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatListObject.BP_SetItemText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PlayerId                                               (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DisplayName                                            (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Text                                                   (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatListObject::BP_SetItemText(const class FString& PlayerId, const class FString& DisplayName, const class FString& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatListObject", "BP_SetItemText");

	Params::TextChatListObject_BP_SetItemText Parms{};

	Parms.PlayerId = std::move(PlayerId);
	Parms.DisplayName = std::move(DisplayName);
	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatListObject.BP_SetPlayEntryAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsPlayedAnimation                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatListObject::BP_SetPlayEntryAnimation(bool IsPlayedAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatListObject", "BP_SetPlayEntryAnimation");

	Params::TextChatListObject_BP_SetPlayEntryAnimation Parms{};

	Parms.IsPlayedAnimation = IsPlayedAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatListObject.BP_GetDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FString UTextChatListObject::BP_GetDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatListObject", "BP_GetDisplayName");

	Params::TextChatListObject_BP_GetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.TextChatListObject.BP_GetItemText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FString UTextChatListObject::BP_GetItemText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatListObject", "BP_GetItemText");

	Params::TextChatListObject_BP_GetItemText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.TextChatListObject.BP_GetPlayedEntryAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTextChatListObject::BP_GetPlayedEntryAnimation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatListObject", "BP_GetPlayedEntryAnimation");

	Params::TextChatListObject_BP_GetPlayedEntryAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.TextChatListObject.BP_getPlayerId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FString UTextChatListObject::BP_getPlayerId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatListObject", "BP_getPlayerId");

	Params::TextChatListObject_BP_getPlayerId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.TextChatListWidget.BP_AddNewTextItem
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTextChatListWidget::BP_AddNewTextItem(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatListWidget", "BP_AddNewTextItem");

	Params::TextChatListWidget_BP_AddNewTextItem Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.TextChatListWidget.BP_CallTextChatIconEvent
// (Final, Native, Public, BlueprintCallable)

void UTextChatListWidget::BP_CallTextChatIconEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatListWidget", "BP_CallTextChatIconEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatListWidget.BP_CallTextChatRecieveEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextChatListObject*              ChatObject                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatListWidget::BP_CallTextChatRecieveEvent(const class UTextChatListObject* ChatObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatListWidget", "BP_CallTextChatRecieveEvent");

	Params::TextChatListWidget_BP_CallTextChatRecieveEvent Parms{};

	Parms.ChatObject = ChatObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatListWidget.BP_CheckUnreadMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextChatListObject*              Message                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatListWidget::BP_CheckUnreadMessage(class UTextChatListObject* Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatListWidget", "BP_CheckUnreadMessage");

	Params::TextChatListWidget_BP_CheckUnreadMessage Parms{};

	Parms.Message = Message;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatListWidget.BP_IsUnreadMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTextChatListWidget::BP_IsUnreadMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatListWidget", "BP_IsUnreadMessage");

	Params::TextChatListWidget_BP_IsUnreadMessage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.TextChatListWidget.BP_ManagementChatItems
// (Final, Native, Public, BlueprintCallable)

void UTextChatListWidget::BP_ManagementChatItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatListWidget", "BP_ManagementChatItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatListWidget.ClearEvent
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UTextChatListWidget::ClearEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatListWidget", "ClearEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.TextChatListWidget.GetScrollSpeedRate
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   AnalogValue                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DefaultSpeedRate                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxSpeedRate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AddSpeedRate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTextChatListWidget::GetScrollSpeedRate(float AnalogValue, float DefaultSpeedRate, float MaxSpeedRate, float AddSpeedRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatListWidget", "GetScrollSpeedRate");

	Params::TextChatListWidget_GetScrollSpeedRate Parms{};

	Parms.AnalogValue = AnalogValue;
	Parms.DefaultSpeedRate = DefaultSpeedRate;
	Parms.MaxSpeedRate = MaxSpeedRate;
	Parms.AddSpeedRate = AddSpeedRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.TextChatListWidget.ScrollBottom
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UTextChatListWidget::ScrollBottom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatListWidget", "ScrollBottom");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.TextChatListWidget.TextChatIconEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UTextChatListWidget::TextChatIconEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatListWidget", "TextChatIconEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.TextChatListWidget.TextChatRecieveEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UTextChatListObject*              ChatObject                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatListWidget::TextChatRecieveEvent__DelegateSignature(const class UTextChatListObject* ChatObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatListWidget", "TextChatRecieveEvent__DelegateSignature");

	Params::TextChatListWidget_TextChatRecieveEvent__DelegateSignature Parms{};

	Parms.ChatObject = ChatObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.TextChatListWidget.UpdateList
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UTextChatListWidget::UpdateList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatListWidget", "UpdateList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.TextChatSubsystem.BP_AgreeFreeTextInput
// (Final, Native, Private, BlueprintCallable)

void UTextChatSubsystem::BP_AgreeFreeTextInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "BP_AgreeFreeTextInput");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatSubsystem.BP_GetTextChatWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextChatWidget*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTextChatWidget* UTextChatSubsystem::BP_GetTextChatWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "BP_GetTextChatWidget");

	Params::TextChatSubsystem_BP_GetTextChatWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.TextChatSubsystem.BP_IsAgreeFreeTextInput
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTextChatSubsystem::BP_IsAgreeFreeTextInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "BP_IsAgreeFreeTextInput");

	Params::TextChatSubsystem_BP_IsAgreeFreeTextInput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.TextChatSubsystem.BP_WindowClose
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatSubsystem::BP_WindowClose(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "BP_WindowClose");

	Params::TextChatSubsystem_BP_WindowClose Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatSubsystem.BP_WindowOpen
// (Final, Native, Public, BlueprintCallable)

void UTextChatSubsystem::BP_WindowOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "BP_WindowOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatSubsystem.ChangeGameOptionConfiguration
// (Final, Native, Public)

void UTextChatSubsystem::ChangeGameOptionConfiguration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "ChangeGameOptionConfiguration");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatSubsystem.ChangeGameOptionGamePlay
// (Final, Native, Public)

void UTextChatSubsystem::ChangeGameOptionGamePlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "ChangeGameOptionGamePlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatSubsystem.ChangeGameOptionVideo
// (Final, Native, Public)

void UTextChatSubsystem::ChangeGameOptionVideo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "ChangeGameOptionVideo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatSubsystem.CheckBlockMember
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SquadNum                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatSubsystem::CheckBlockMember(int32 SquadNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "CheckBlockMember");

	Params::TextChatSubsystem_CheckBlockMember Parms{};

	Parms.SquadNum = SquadNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatSubsystem.ClearFocus
// (Final, Native, Public, BlueprintCallable)

void UTextChatSubsystem::ClearFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "ClearFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatSubsystem.ClearTextBox
// (Final, Native, Public, BlueprintCallable)

void UTextChatSubsystem::ClearTextBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "ClearTextBox");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatSubsystem.CreateTextChat
// (Final, Native, Public, BlueprintCallable)

void UTextChatSubsystem::CreateTextChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "CreateTextChat");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatSubsystem.GetActiveTextInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTextChatSubsystem::GetActiveTextInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "GetActiveTextInput");

	Params::TextChatSubsystem_GetActiveTextInput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.TextChatSubsystem.GetEnableIngameOpenChat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTextChatSubsystem::GetEnableIngameOpenChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "GetEnableIngameOpenChat");

	Params::TextChatSubsystem_GetEnableIngameOpenChat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.TextChatSubsystem.GetIsAnimationFinishCollapsed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTextChatSubsystem::GetIsAnimationFinishCollapsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "GetIsAnimationFinishCollapsed");

	Params::TextChatSubsystem_GetIsAnimationFinishCollapsed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.TextChatSubsystem.GetVisibilityTextChatWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTextChatSubsystem::GetVisibilityTextChatWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "GetVisibilityTextChatWidget");

	Params::TextChatSubsystem_GetVisibilityTextChatWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.TextChatSubsystem.HideIngameChat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _isHide                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatSubsystem::HideIngameChat(bool _isHide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "HideIngameChat");

	Params::TextChatSubsystem_HideIngameChat Parms{};

	Parms._isHide = _isHide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatSubsystem.IsRecieveBlockMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           MessageUser                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTextChatSubsystem::IsRecieveBlockMessage(const class FString& MessageUser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "IsRecieveBlockMessage");

	Params::TextChatSubsystem_IsRecieveBlockMessage Parms{};

	Parms.MessageUser = std::move(MessageUser);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.TextChatSubsystem.SetActiveTextInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Input                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatSubsystem::SetActiveTextInput(bool Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "SetActiveTextInput");

	Params::TextChatSubsystem_SetActiveTextInput Parms{};

	Parms.Input = Input;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatSubsystem.SetEnableIngameOpenChat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatSubsystem::SetEnableIngameOpenChat(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "SetEnableIngameOpenChat");

	Params::TextChatSubsystem_SetEnableIngameOpenChat Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatSubsystem.SetIngameWindowOpenFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatSubsystem::SetIngameWindowOpenFlag(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "SetIngameWindowOpenFlag");

	Params::TextChatSubsystem_SetIngameWindowOpenFlag Parms{};

	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatSubsystem.SetIsAnimationFinishCollapsed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatSubsystem::SetIsAnimationFinishCollapsed(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "SetIsAnimationFinishCollapsed");

	Params::TextChatSubsystem_SetIsAnimationFinishCollapsed Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatSubsystem.SetVisibilityButtonIcon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESlateVisibility                        balue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatSubsystem::SetVisibilityButtonIcon(ESlateVisibility balue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "SetVisibilityButtonIcon");

	Params::TextChatSubsystem_SetVisibilityButtonIcon Parms{};

	Parms.balue = balue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatSubsystem.SetVisibilityTextChatWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESlateVisibility                        Visibility                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatSubsystem::SetVisibilityTextChatWidget(ESlateVisibility Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "SetVisibilityTextChatWidget");

	Params::TextChatSubsystem_SetVisibilityTextChatWidget Parms{};

	Parms.Visibility = Visibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatSubsystem.BP_GetVisibleNewMessage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTextChatSubsystem::BP_GetVisibleNewMessage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "BP_GetVisibleNewMessage");

	Params::TextChatSubsystem_BP_GetVisibleNewMessage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.TextChatSubsystem.GetHasBlockUser
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTextChatSubsystem::GetHasBlockUser() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "GetHasBlockUser");

	Params::TextChatSubsystem_GetHasBlockUser Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.TextChatSubsystem.GetIngameWindowOpenFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTextChatSubsystem::GetIngameWindowOpenFlag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatSubsystem", "GetIngameWindowOpenFlag");

	Params::TextChatSubsystem_GetIngameWindowOpenFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.TextChatWidget.BP_ChangeIconPosition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETextChatLevelType                      LevelNam                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           LevelName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatWidget::BP_ChangeIconPosition(ETextChatLevelType LevelNam, const class FString& LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWidget", "BP_ChangeIconPosition");

	Params::TextChatWidget_BP_ChangeIconPosition Parms{};

	Parms.LevelNam = LevelNam;
	Parms.LevelName = std::move(LevelName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWidget.BP_SetNoticeVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESlateVisibility                        Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatWidget::BP_SetNoticeVisibility(ESlateVisibility Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWidget", "BP_SetNoticeVisibility");

	Params::TextChatWidget_BP_SetNoticeVisibility Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWidget.GetChatIcon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextChatIcon*                    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTextChatIcon* UTextChatWidget::GetChatIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWidget", "GetChatIcon");

	Params::TextChatWidget_GetChatIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.TextChatWidget.SetNoticeVisibility
// (Event, Public, BlueprintEvent)
// Parameters:
// ESlateVisibility                        Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatWidget::SetNoticeVisibility(ESlateVisibility Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWidget", "SetNoticeVisibility");

	Params::TextChatWidget_SetNoticeVisibility Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.TextChatWidget.SetValueButtonGuide
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatWidget::SetValueButtonGuide(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWidget", "SetValueButtonGuide");

	Params::TextChatWidget_SetValueButtonGuide Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWidget.SetVisibilityMessageCanvas
// (Event, Public, BlueprintEvent)

void UTextChatWidget::SetVisibilityMessageCanvas()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWidget", "SetVisibilityMessageCanvas");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.TextChatWidget.WindowClose
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bPlaySound                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatWidget::WindowClose(bool bPlaySound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWidget", "WindowClose");

	Params::TextChatWidget_WindowClose Parms{};

	Parms.bPlaySound = bPlaySound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.TextChatWidget.WindowOpen
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bPlaySound                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatWidget::WindowOpen(bool bPlaySound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWidget", "WindowOpen");

	Params::TextChatWidget_WindowOpen Parms{};

	Parms.bPlaySound = bPlaySound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.TextChatWindowWidget.AnimStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 Anim                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatWindowWidget::AnimStart(class UWidgetAnimation* Anim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "AnimStart");

	Params::TextChatWindowWidget_AnimStart Parms{};

	Parms.Anim = Anim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWindowWidget.BP_CallCloseConsentEvent
// (Final, Native, Public, BlueprintCallable)

void UTextChatWindowWidget::BP_CallCloseConsentEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "BP_CallCloseConsentEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWindowWidget.BP_CallFinishEvent
// (Final, Native, Public, BlueprintCallable)

void UTextChatWindowWidget::BP_CallFinishEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "BP_CallFinishEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWindowWidget.BP_CallHiddenEventDispatcher
// (Final, Native, Public, BlueprintCallable)

void UTextChatWindowWidget::BP_CallHiddenEventDispatcher()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "BP_CallHiddenEventDispatcher");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWindowWidget.BP_CallOpenConsentEvent
// (Final, Native, Public, BlueprintCallable)

void UTextChatWindowWidget::BP_CallOpenConsentEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "BP_CallOpenConsentEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWindowWidget.BP_CallOpenParentalControlEvent
// (Final, Native, Public, BlueprintCallable)

void UTextChatWindowWidget::BP_CallOpenParentalControlEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "BP_CallOpenParentalControlEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWindowWidget.BP_CallVisibleEventDispatcher
// (Final, Native, Public, BlueprintCallable)

void UTextChatWindowWidget::BP_CallVisibleEventDispatcher()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "BP_CallVisibleEventDispatcher");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWindowWidget.BP_ChangeColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSlateBrush                      Brush                                                  (Parm, NativeAccessSpecifierPublic)

void UTextChatWindowWidget::BP_ChangeColor(const struct FSlateBrush& Brush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "BP_ChangeColor");

	Params::TextChatWindowWidget_BP_ChangeColor Parms{};

	Parms.Brush = std::move(Brush);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWindowWidget.BP_ChangeIconLocation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETextChatLevelType                      Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           LevelName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatWindowWidget::BP_ChangeIconLocation(ETextChatLevelType Type, const class FString& LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "BP_ChangeIconLocation");

	Params::TextChatWindowWidget_BP_ChangeIconLocation Parms{};

	Parms.Type = Type;
	Parms.LevelName = std::move(LevelName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWindowWidget.BP_CheckParentControl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTextChatWindowWidget::BP_CheckParentControl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "BP_CheckParentControl");

	Params::TextChatWindowWidget_BP_CheckParentControl Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.TextChatWindowWidget.BP_ClearFocus
// (Final, Native, Public, BlueprintCallable)

void UTextChatWindowWidget::BP_ClearFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "BP_ClearFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWindowWidget.BP_PlayCloseAnimation
// (Final, Native, Public, BlueprintCallable)

void UTextChatWindowWidget::BP_PlayCloseAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "BP_PlayCloseAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWindowWidget.BP_PlayOpenAnimation
// (Final, Native, Public, BlueprintCallable)

void UTextChatWindowWidget::BP_PlayOpenAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "BP_PlayOpenAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWindowWidget.BP_SetActiveFocus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsFocusable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatWindowWidget::BP_SetActiveFocus(bool IsFocusable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "BP_SetActiveFocus");

	Params::TextChatWindowWidget_BP_SetActiveFocus Parms{};

	Parms.IsFocusable = IsFocusable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWindowWidget.BP_SetActiveSendButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsSendable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatWindowWidget::BP_SetActiveSendButton(bool IsSendable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "BP_SetActiveSendButton");

	Params::TextChatWindowWidget_BP_SetActiveSendButton Parms{};

	Parms.IsSendable = IsSendable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWindowWidget.BP_SetActiveTextInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Input                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatWindowWidget::BP_SetActiveTextInput(bool Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "BP_SetActiveTextInput");

	Params::TextChatWindowWidget_BP_SetActiveTextInput Parms{};

	Parms.Input = Input;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWindowWidget.BP_SetFocusInputTextBox
// (Final, Native, Public, BlueprintCallable)

void UTextChatWindowWidget::BP_SetFocusInputTextBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "BP_SetFocusInputTextBox");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWindowWidget.BP_SetNoticeVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESlateVisibility                        Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatWindowWidget::BP_SetNoticeVisibility(ESlateVisibility Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "BP_SetNoticeVisibility");

	Params::TextChatWindowWidget_BP_SetNoticeVisibility Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWindowWidget.BP_WindowClose
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bPlaySound                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatWindowWidget::BP_WindowClose(bool bPlaySound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "BP_WindowClose");

	Params::TextChatWindowWidget_BP_WindowClose Parms{};

	Parms.bPlaySound = bPlaySound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWindowWidget.BP_WindowOpen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bPlaySound                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatWindowWidget::BP_WindowOpen(bool bPlaySound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "BP_WindowOpen");

	Params::TextChatWindowWidget_BP_WindowOpen Parms{};

	Parms.bPlaySound = bPlaySound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWindowWidget.ChangeControllerEvent
// (Final, Native, Public, BlueprintCallable)

void UTextChatWindowWidget::ChangeControllerEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "ChangeControllerEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TextChatWindowWidget.ClearText
// (Event, Public, BlueprintEvent)

void UTextChatWindowWidget::ClearText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "ClearText");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.TextChatWindowWidget.CloseChatWindowDispather__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UTextChatWindowWidget::CloseChatWindowDispather__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "CloseChatWindowDispather__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.TextChatWindowWidget.CloseConsentDispather__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UTextChatWindowWidget::CloseConsentDispather__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "CloseConsentDispather__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.TextChatWindowWidget.GetChatIcon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextChatIcon*                    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTextChatIcon* UTextChatWindowWidget::GetChatIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "GetChatIcon");

	Params::TextChatWindowWidget_GetChatIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.TextChatWindowWidget.OnCommitChangeText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEmpty                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _isFirstFocus                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatWindowWidget::OnCommitChangeText(bool IsEmpty, bool _isFirstFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "OnCommitChangeText");

	Params::TextChatWindowWidget_OnCommitChangeText Parms{};

	Parms.IsEmpty = IsEmpty;
	Parms._isFirstFocus = _isFirstFocus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.TextChatWindowWidget.OpenConsentDispather__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UTextChatWindowWidget::OpenConsentDispather__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "OpenConsentDispather__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction GameModule.TextChatWindowWidget.OpenParentalControlDispather__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UTextChatWindowWidget::OpenParentalControlDispather__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "OpenParentalControlDispather__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.TextChatWindowWidget.SetActiveFocus
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsFocusable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatWindowWidget::SetActiveFocus(bool IsFocusable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "SetActiveFocus");

	Params::TextChatWindowWidget_SetActiveFocus Parms{};

	Parms.IsFocusable = IsFocusable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.TextChatWindowWidget.SetActiveSendButton
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsSendable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatWindowWidget::SetActiveSendButton(bool IsSendable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "SetActiveSendButton");

	Params::TextChatWindowWidget_SetActiveSendButton Parms{};

	Parms.IsSendable = IsSendable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.TextChatWindowWidget.SetActiveTextInput
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Input                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatWindowWidget::SetActiveTextInput(bool Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "SetActiveTextInput");

	Params::TextChatWindowWidget_SetActiveTextInput Parms{};

	Parms.Input = Input;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.TextChatWindowWidget.SetFocusInputTextBox
// (Event, Public, BlueprintEvent)

void UTextChatWindowWidget::SetFocusInputTextBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "SetFocusInputTextBox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.TextChatWindowWidget.SetNoticeVisibility
// (Event, Public, BlueprintEvent)
// Parameters:
// ESlateVisibility                        Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatWindowWidget::SetNoticeVisibility(ESlateVisibility Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "SetNoticeVisibility");

	Params::TextChatWindowWidget_SetNoticeVisibility Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.TextChatWindowWidget.SetUpIconPosition
// (Final, Native, Public, BlueprintCallable)

void UTextChatWindowWidget::SetUpIconPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "SetUpIconPosition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.TextChatWindowWidget.VisibleEventDispather__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UTextChatWindowWidget::VisibleEventDispather__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "VisibleEventDispather__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.TextChatWindowWidget.WindowClose
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bPlaySound                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatWindowWidget::WindowClose(bool bPlaySound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "WindowClose");

	Params::TextChatWindowWidget_WindowClose Parms{};

	Parms.bPlaySound = bPlaySound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.TextChatWindowWidget.WindowOpen
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bPlaySound                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTextChatWindowWidget::WindowOpen(bool bPlaySound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWidget", "WindowOpen");

	Params::TextChatWindowWidget_WindowOpen Parms{};

	Parms.bPlaySound = bPlaySound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.TimeWidget.BP_UpdateTimeView
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTimespan                        RemainingTime                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTimeWidget::BP_UpdateTimeView(const struct FTimespan& RemainingTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TimeWidget", "BP_UpdateTimeView");

	Params::TimeWidget_BP_UpdateTimeView Parms{};

	Parms.RemainingTime = std::move(RemainingTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TutorialMessageWidget.ChangeSizeTutorialMessageWindow
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Condition                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTutorialMessageWidget::ChangeSizeTutorialMessageWindow(bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TutorialMessageWidget", "ChangeSizeTutorialMessageWindow");

	Params::TutorialMessageWidget_ChangeSizeTutorialMessageWindow Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.TutorialMessageWidget.SetTutorialMessageWidget
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTutorialMessageWidget::SetTutorialMessageWidget(const class FText& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TutorialMessageWidget", "SetTutorialMessageWidget");

	Params::TutorialMessageWidget_SetTutorialMessageWidget Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TutorialTipsImageWidget.OnReceivedChangedImageIndexEvent
// (Final, Native, Protected)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTutorialTipsImageWidget::OnReceivedChangedImageIndexEvent(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TutorialTipsImageWidget", "OnReceivedChangedImageIndexEvent");

	Params::TutorialTipsImageWidget_OnReceivedChangedImageIndexEvent Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TutorialTipsWidget.BP_OnReceivedCloseButtonDecidedEvent
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UAppWidget*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWidgetInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTutorialTipsWidget::BP_OnReceivedCloseButtonDecidedEvent(class UAppWidget* Widget, EWidgetInputType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TutorialTipsWidget", "BP_OnReceivedCloseButtonDecidedEvent");

	Params::TutorialTipsWidget_BP_OnReceivedCloseButtonDecidedEvent Parms{};

	Parms.Widget = Widget;
	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TutorialTipsWidget.HideRightLeftButton
// (Event, Public, BlueprintEvent)

void UTutorialTipsWidget::HideRightLeftButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TutorialTipsWidget", "HideRightLeftButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.TutorialTipsWidget.NextButtonTileView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NotMaxNext                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTutorialTipsWidget::NextButtonTileView(const bool NotMaxNext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TutorialTipsWidget", "NextButtonTileView");

	Params::TutorialTipsWidget_NextButtonTileView Parms{};

	Parms.NotMaxNext = NotMaxNext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TutorialTipsWidget.OnChangeBattleSequence
// (Final, Native, Public)
// Parameters:
// EBattleStartSequenceType                Sequence                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTutorialTipsWidget::OnChangeBattleSequence(EBattleStartSequenceType Sequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TutorialTipsWidget", "OnChangeBattleSequence");

	Params::TutorialTipsWidget_OnChangeBattleSequence Parms{};

	Parms.Sequence = Sequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.TutorialTipsWidget.OnChangedImageIndexDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTutorialTipsWidget::OnChangedImageIndexDelegate__DelegateSignature(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TutorialTipsWidget", "OnChangedImageIndexDelegate__DelegateSignature");

	Params::TutorialTipsWidget_OnChangedImageIndexDelegate__DelegateSignature Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.TutorialTipsWidget.OnChangeLevel
// (Final, Native, Protected)
// Parameters:
// class ULevel*                           Level_p                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWorld*                           World_p                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTutorialTipsWidget::OnChangeLevel(class ULevel* Level_p, class UWorld* World_p)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TutorialTipsWidget", "OnChangeLevel");

	Params::TutorialTipsWidget_OnChangeLevel Parms{};

	Parms.Level_p = Level_p;
	Parms.World_p = World_p;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TutorialTipsWidget.OnReceivedCloseButtonDecidedEvent
// (Final, Native, Protected)
// Parameters:
// class UAppWidget*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWidgetInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTutorialTipsWidget::OnReceivedCloseButtonDecidedEvent(class UAppWidget* Widget, EWidgetInputType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TutorialTipsWidget", "OnReceivedCloseButtonDecidedEvent");

	Params::TutorialTipsWidget_OnReceivedCloseButtonDecidedEvent Parms{};

	Parms.Widget = Widget;
	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TutorialTipsWidget.OnReceivedClosedEmptyWindowEvent
// (Final, Native, Protected)

void UTutorialTipsWidget::OnReceivedClosedEmptyWindowEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TutorialTipsWidget", "OnReceivedClosedEmptyWindowEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TutorialTipsWidget.OnReceivedOpenedEmptyWindowEvent
// (Final, Native, Protected)

void UTutorialTipsWidget::OnReceivedOpenedEmptyWindowEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TutorialTipsWidget", "OnReceivedOpenedEmptyWindowEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TutorialTipsWidget.OnReceivedOpenedEmptyWindowEventAutoPlay
// (Final, Native, Protected)

void UTutorialTipsWidget::OnReceivedOpenedEmptyWindowEventAutoPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TutorialTipsWidget", "OnReceivedOpenedEmptyWindowEventAutoPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TutorialTipsWidget.PrevButtonTileView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NotMinPrev                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTutorialTipsWidget::PrevButtonTileView(const bool NotMinPrev)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TutorialTipsWidget", "PrevButtonTileView");

	Params::TutorialTipsWidget_PrevButtonTileView Parms{};

	Parms.NotMinPrev = NotMinPrev;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.TutorialTipsWidget.SplitStringByCarriageReturn
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UTutorialTipsWidget::SplitStringByCarriageReturn(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TutorialTipsWidget", "SplitStringByCarriageReturn");

	Params::TutorialTipsWidget_SplitStringByCarriageReturn Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.UMGTemporaryNotification.Activate
// (Final, Native, Public, BlueprintCallable)

void UUMGTemporaryNotification::Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMGTemporaryNotification", "Activate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.UMGTemporaryNotification.Deactivate
// (Final, Native, Public, BlueprintCallable)

void UUMGTemporaryNotification::Deactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMGTemporaryNotification", "Deactivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.WaitNetworkAnimationWidget.PlayWaitAnimation
// (Final, Native, Public, BlueprintCallable)

void UWaitNetworkAnimationWidget::PlayWaitAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitNetworkAnimationWidget", "PlayWaitAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.WaitNetworkMessage.OnCloseEvent
// (Final, Native, Protected)

void UWaitNetworkMessage::OnCloseEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitNetworkMessage", "OnCloseEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.WaitNetworkMessage.Setup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EWaitMessageType                        Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    backImage                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    backBlur                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StateSetting                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWaitNetworkMessage::Setup(EWaitMessageType Type, bool backImage, bool backBlur, int32 StateSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitNetworkMessage", "Setup");

	Params::WaitNetworkMessage_Setup Parms{};

	Parms.Type = Type;
	Parms.backImage = backImage;
	Parms.backBlur = backBlur;
	Parms.StateSetting = StateSetting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.WidgetAnalogInputComponent.IsGamePadControlVirtualCursor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWidgetAnalogInputComponent::IsGamePadControlVirtualCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetAnalogInputComponent", "IsGamePadControlVirtualCursor");

	Params::WidgetAnalogInputComponent_IsGamePadControlVirtualCursor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.WidgetAnalogInputComponent.IsMouseControlVirtualCursor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWidgetAnalogInputComponent::IsMouseControlVirtualCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetAnalogInputComponent", "IsMouseControlVirtualCursor");

	Params::WidgetAnalogInputComponent_IsMouseControlVirtualCursor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.WidgetAnalogInputComponent.SetVirtualCursorCenter
// (Final, Native, Public, BlueprintCallable)

void UWidgetAnalogInputComponent::SetVirtualCursorCenter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetAnalogInputComponent", "SetVirtualCursorCenter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.WidgetAnalogInputComponent.SetVirtualCursorPosition
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        Position                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetAnalogInputComponent::SetVirtualCursorPosition(const struct FVector2D& Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetAnalogInputComponent", "SetVirtualCursorPosition");

	Params::WidgetAnalogInputComponent_SetVirtualCursorPosition Parms{};

	Parms.Position = std::move(Position);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.WidgetAnalogInputComponent.UpdateLeftStickXValue
// (Final, Native, Private)
// Parameters:
// float                                   AxisValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetAnalogInputComponent::UpdateLeftStickXValue(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetAnalogInputComponent", "UpdateLeftStickXValue");

	Params::WidgetAnalogInputComponent_UpdateLeftStickXValue Parms{};

	Parms.AxisValue = AxisValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.WidgetAnalogInputComponent.UpdateLeftStickYValue
// (Final, Native, Private)
// Parameters:
// float                                   AxisValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetAnalogInputComponent::UpdateLeftStickYValue(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetAnalogInputComponent", "UpdateLeftStickYValue");

	Params::WidgetAnalogInputComponent_UpdateLeftStickYValue Parms{};

	Parms.AxisValue = AxisValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.WidgetAnalogInputComponent.UpdateRightStickXValue
// (Final, Native, Private)
// Parameters:
// float                                   AxisValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetAnalogInputComponent::UpdateRightStickXValue(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetAnalogInputComponent", "UpdateRightStickXValue");

	Params::WidgetAnalogInputComponent_UpdateRightStickXValue Parms{};

	Parms.AxisValue = AxisValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.WidgetAnalogInputComponent.UpdateRightStickYValue
// (Final, Native, Private)
// Parameters:
// float                                   AxisValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetAnalogInputComponent::UpdateRightStickYValue(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetAnalogInputComponent", "UpdateRightStickYValue");

	Params::WidgetAnalogInputComponent_UpdateRightStickYValue Parms{};

	Parms.AxisValue = AxisValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.WidgetAnalogInputComponent.GetVirtualCursorDelta
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector2D                  ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FVector2D UWidgetAnalogInputComponent::GetVirtualCursorDelta() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetAnalogInputComponent", "GetVirtualCursorDelta");

	Params::WidgetAnalogInputComponent_GetVirtualCursorDelta Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.WidgetAnalogInputComponent.GetVirtualCursorPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector2D                  ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FVector2D UWidgetAnalogInputComponent::GetVirtualCursorPosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetAnalogInputComponent", "GetVirtualCursorPosition");

	Params::WidgetAnalogInputComponent_GetVirtualCursorPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameModule.WidgetSafeGeneralWindow.OnFocus
// (Final, Native, Protected)
// Parameters:
// class UAppWidget*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWidgetInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetSafeGeneralWindow::OnFocus(class UAppWidget* Widget, EWidgetInputType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WidgetSafeGeneralWindow", "OnFocus");

	Params::WidgetSafeGeneralWindow_OnFocus Parms{};

	Parms.Widget = Widget;
	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameModule.YesNoWidget.AddYesButton
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UYesNoWidget::AddYesButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("YesNoWidget", "AddYesButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.YesNoWidget.NoEvent
// (Final, Native, Protected)
// Parameters:
// class UAppWidget*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWidgetInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UYesNoWidget::NoEvent(class UAppWidget* Widget, EWidgetInputType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("YesNoWidget", "NoEvent");

	Params::YesNoWidget_NoEvent Parms{};

	Parms.Widget = Widget;
	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GameModule.YesNoWidget.OnInputEventDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UAppWidget*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWidgetInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UYesNoWidget::OnInputEventDelegate__DelegateSignature(class UAppWidget* Widget, EWidgetInputType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("YesNoWidget", "OnInputEventDelegate__DelegateSignature");

	Params::YesNoWidget_OnInputEventDelegate__DelegateSignature Parms{};

	Parms.Widget = Widget;
	Parms.InputType = InputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GameModule.YesNoWidget.RemoveYesButton
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UYesNoWidget::RemoveYesButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("YesNoWidget", "RemoveYesButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GameModule.YesNoWidget.YesEvent
// (Final, Native, Protected)
// Parameters:
// class UAppWidget*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWidgetInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UYesNoWidget::YesEvent(class UAppWidget* Widget, EWidgetInputType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("YesNoWidget", "YesEvent");

	Params::YesNoWidget_YesEvent Parms{};

	Parms.Widget = Widget;
	Parms.InputType = InputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

