#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActionOpenBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameModule_structs.hpp"
#include "InGameModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ActionOpenBox.BP_ActionOpenBox_C
// 0x0018 (0x01D0 - 0x01B8)
class UBP_ActionOpenBox_C final : public UActionOpenBox
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bStandOpen;                                        // 0x01C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NotCancelTime;                                     // 0x01C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCrouchStart;                                      // 0x01C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EAnimationId                                  NewVar_0;                                          // 0x01C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ActionOpenBox(int32 EntryPoint);
	void CancelLoop();
	void BP_ActionRemote();
	void BP_OnEndAction(const class FName& NextAction);
	void BP_ActionMain();
	void BP_OnBeginAction(const class FName& PrevAction);
	void Initialize(class FName PrevAction);
	void InitializeOpenStyle();
	void Turning(float* TurnSpan);
	void Begin();
	void Open();
	void Complete(bool LocallyContorol);
	void IsOpenBoxAnimation(bool* Flag);

	bool BP_IsEnableShiftAction(const class FName& NextAction) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ActionOpenBox_C">();
	}
	static class UBP_ActionOpenBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ActionOpenBox_C>();
	}
};
static_assert(alignof(UBP_ActionOpenBox_C) == 0x000008, "Wrong alignment on UBP_ActionOpenBox_C");
static_assert(sizeof(UBP_ActionOpenBox_C) == 0x0001D0, "Wrong size on UBP_ActionOpenBox_C");
static_assert(offsetof(UBP_ActionOpenBox_C, UberGraphFrame) == 0x0001B8, "Member 'UBP_ActionOpenBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_ActionOpenBox_C, bStandOpen) == 0x0001C0, "Member 'UBP_ActionOpenBox_C::bStandOpen' has a wrong offset!");
static_assert(offsetof(UBP_ActionOpenBox_C, NotCancelTime) == 0x0001C4, "Member 'UBP_ActionOpenBox_C::NotCancelTime' has a wrong offset!");
static_assert(offsetof(UBP_ActionOpenBox_C, bCrouchStart) == 0x0001C8, "Member 'UBP_ActionOpenBox_C::bCrouchStart' has a wrong offset!");
static_assert(offsetof(UBP_ActionOpenBox_C, NewVar_0) == 0x0001C9, "Member 'UBP_ActionOpenBox_C::NewVar_0' has a wrong offset!");

}

