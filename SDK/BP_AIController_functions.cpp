#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIController

#include "Basic.hpp"

#include "BP_AIController_classes.hpp"
#include "BP_AIController_parameters.hpp"


namespace SDK
{

// Function BP_AIController.BP_AIController_C.ExecuteUbergraph_BP_AIController
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AIController_C::ExecuteUbergraph_BP_AIController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIController_C", "ExecuteUbergraph_BP_AIController");

	Params::BP_AIController_C_ExecuteUbergraph_BP_AIController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIController.BP_AIController_C.BP_SkillAction
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<struct FAISkillCommand>          Commands                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Instant                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Interval                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AIController_C::BP_SkillAction(const TArray<struct FAISkillCommand>& Commands, bool Instant, float Interval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIController_C", "BP_SkillAction");

	Params::BP_AIController_C_BP_SkillAction Parms{};

	Parms.Commands = std::move(Commands);
	Parms.Instant = Instant;
	Parms.Interval = Interval;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIController.BP_AIController_C.Skill_StateLoop
// (BlueprintCallable, BlueprintEvent)

void ABP_AIController_C::Skill_StateLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIController_C", "Skill_StateLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AIController.BP_AIController_C.Skill_InputLoop
// (BlueprintCallable, BlueprintEvent)

void ABP_AIController_C::Skill_InputLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIController_C", "Skill_InputLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AIController.BP_AIController_C.BP_MoveAction
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FAIMoveCommand                   Command                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ABP_AIController_C::BP_MoveAction(const struct FAIMoveCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIController_C", "BP_MoveAction");

	Params::BP_AIController_C_BP_MoveAction Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIController.BP_AIController_C.BP_StartAI
// (Event, Public, BlueprintEvent)

void ABP_AIController_C::BP_StartAI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIController_C", "BP_StartAI");

	UObject::ProcessEvent(Func, nullptr);
}

}

