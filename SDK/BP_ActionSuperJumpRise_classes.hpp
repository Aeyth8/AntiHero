#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActionSuperJumpRise

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InGameModule_classes.hpp"
#include "GameModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ActionSuperJumpRise.BP_ActionSuperJumpRise_C
// 0x0028 (0x01D8 - 0x01B0)
class UBP_ActionSuperJumpRise_C final : public UActionNormalBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCustomParticleSystemComponent*         Effect_L;                                          // 0x01B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCustomParticleSystemComponent*         Effect_R;                                          // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                JumpPadNormal;                                     // 0x01C8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ActionSuperJumpRise(int32 EntryPoint);
	void BP_ActionMain();
	void BP_OnBeginAction(const class FName& PrevAction);
	void UpdateCoMinusRoutine();
	void BP_OnEndAction(const class FName& NextAction);
	void CalcSpeedH(float* Initial_Speed, float* Last_Speed, float* Accel_Span);
	void CalcJumpParam(float* Speed, float* Span);

	bool BP_IsEnableShiftAction(const class FName& NextAction) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ActionSuperJumpRise_C">();
	}
	static class UBP_ActionSuperJumpRise_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ActionSuperJumpRise_C>();
	}
};
static_assert(alignof(UBP_ActionSuperJumpRise_C) == 0x000008, "Wrong alignment on UBP_ActionSuperJumpRise_C");
static_assert(sizeof(UBP_ActionSuperJumpRise_C) == 0x0001D8, "Wrong size on UBP_ActionSuperJumpRise_C");
static_assert(offsetof(UBP_ActionSuperJumpRise_C, UberGraphFrame) == 0x0001B0, "Member 'UBP_ActionSuperJumpRise_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_ActionSuperJumpRise_C, Effect_L) == 0x0001B8, "Member 'UBP_ActionSuperJumpRise_C::Effect_L' has a wrong offset!");
static_assert(offsetof(UBP_ActionSuperJumpRise_C, Effect_R) == 0x0001C0, "Member 'UBP_ActionSuperJumpRise_C::Effect_R' has a wrong offset!");
static_assert(offsetof(UBP_ActionSuperJumpRise_C, JumpPadNormal) == 0x0001C8, "Member 'UBP_ActionSuperJumpRise_C::JumpPadNormal' has a wrong offset!");

}

