#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CosmosManager

#include "Basic.hpp"

#include "CosmosApi_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class CosmosManager.CosmosManager
// 0x0BE8 (0x0C10 - 0x0028)
class alignas(0x10) UCosmosManager final : public UObject
{
public:
	uint8                                         Pad_28[0xA08];                                     // 0x0028(0x0A08)(Fixing Size After Last Property [ Dumper-7 ])
	class UCosmosWebApiManager*                   _webApiManager;                                    // 0x0A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A38[0x1D8];                                    // 0x0A38(0x01D8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnCustomLobbyServerEvent(const struct FCosmosCustomLobbyServerNotify& E);
	void OnCustomMatchingChangeSettingsEvent(const struct FCosmosChangeCustomRoomSettingsNotify& E);
	void OnCustomMatchingEvent(const ECustomRoomEventId E, const int32 S);
	void OnCustomMatchingRoomDataEvent(const struct FCosmosGetCustomRoomDataResponse& E);
	void OnCustomRoomReadiedEvent(const struct FCosmosCustomRoomReadiedNotify& E);
	void OnMatchingAppealEvent(const struct FSquadAppealEvent& E);
	void OnMatchingChatEvent(const struct FSquadChatEvent& E);
	void OnMatchingErrorEvent(const ECosmosProtocolResponseCode E);
	void OnMatchingSquadEvent(const struct FSquadEvent& E);
	void OnReceiveCustomSquadAppealEvent(const struct FCosmosCustomSquadAppealedNotify& E);
	void OnReceiveCustomSquadChatEvent(const struct FCosmosReceiveCustomSquadChatNotify& E);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CosmosManager">();
	}
	static class UCosmosManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCosmosManager>();
	}
};
static_assert(alignof(UCosmosManager) == 0x000010, "Wrong alignment on UCosmosManager");
static_assert(sizeof(UCosmosManager) == 0x000C10, "Wrong size on UCosmosManager");
static_assert(offsetof(UCosmosManager, _webApiManager) == 0x000A30, "Member 'UCosmosManager::_webApiManager' has a wrong offset!");

}

