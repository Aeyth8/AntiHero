#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Text

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UIFramework_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Text.WBP_Text_C
// 0x01A0 (0x0520 - 0x0380)
class UWBP_Text_C final : public UWidgetText
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0380(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FSlateColor                            TextColor;                                         // 0x0388(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FSlateFontInfo                         Font;                                              // 0x03B0(0x0058)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash)
	uint8                                         Pad_408[0x8];                                      // 0x0408(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            StrikeBrush;                                       // 0x0410(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly)
	struct FVector2D                              ShadowOffset;                                      // 0x04E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ShadowColor;                                       // 0x04E8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinDesiredWidth;                                   // 0x04F8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextTransformPolicy                          TransformPolicy;                                   // 0x04FC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Justification;                                     // 0x04FD(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FE[0x2];                                      // 0x04FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                Margin;                                            // 0x0500(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         LineHeightPercentage;                              // 0x0510(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoTextWrap;                                      // 0x0514(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_515[0x3];                                      // 0x0515(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WrapTextAt;                                        // 0x0518(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Text(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Text_C">();
	}
	static class UWBP_Text_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Text_C>();
	}
};
static_assert(alignof(UWBP_Text_C) == 0x000010, "Wrong alignment on UWBP_Text_C");
static_assert(sizeof(UWBP_Text_C) == 0x000520, "Wrong size on UWBP_Text_C");
static_assert(offsetof(UWBP_Text_C, UberGraphFrame) == 0x000380, "Member 'UWBP_Text_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Text_C, TextColor) == 0x000388, "Member 'UWBP_Text_C::TextColor' has a wrong offset!");
static_assert(offsetof(UWBP_Text_C, Font) == 0x0003B0, "Member 'UWBP_Text_C::Font' has a wrong offset!");
static_assert(offsetof(UWBP_Text_C, StrikeBrush) == 0x000410, "Member 'UWBP_Text_C::StrikeBrush' has a wrong offset!");
static_assert(offsetof(UWBP_Text_C, ShadowOffset) == 0x0004E0, "Member 'UWBP_Text_C::ShadowOffset' has a wrong offset!");
static_assert(offsetof(UWBP_Text_C, ShadowColor) == 0x0004E8, "Member 'UWBP_Text_C::ShadowColor' has a wrong offset!");
static_assert(offsetof(UWBP_Text_C, MinDesiredWidth) == 0x0004F8, "Member 'UWBP_Text_C::MinDesiredWidth' has a wrong offset!");
static_assert(offsetof(UWBP_Text_C, TransformPolicy) == 0x0004FC, "Member 'UWBP_Text_C::TransformPolicy' has a wrong offset!");
static_assert(offsetof(UWBP_Text_C, Justification) == 0x0004FD, "Member 'UWBP_Text_C::Justification' has a wrong offset!");
static_assert(offsetof(UWBP_Text_C, Margin) == 0x000500, "Member 'UWBP_Text_C::Margin' has a wrong offset!");
static_assert(offsetof(UWBP_Text_C, LineHeightPercentage) == 0x000510, "Member 'UWBP_Text_C::LineHeightPercentage' has a wrong offset!");
static_assert(offsetof(UWBP_Text_C, AutoTextWrap) == 0x000514, "Member 'UWBP_Text_C::AutoTextWrap' has a wrong offset!");
static_assert(offsetof(UWBP_Text_C, WrapTextAt) == 0x000518, "Member 'UWBP_Text_C::WrapTextAt' has a wrong offset!");

}

