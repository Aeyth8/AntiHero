#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActionParkourJump

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ActionParkourJump.BP_ActionParkourJump_C.ExecuteUbergraph_BP_ActionParkourJump
// 0x00A0 (0x00A0 - 0x0000)
struct BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_nextAction;                           // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterParam*                        CallFunc_BP_GetParam_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_type;                                 // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_event;                                // 0x0030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BP_GetActionName_ReturnValue;             // 0x0038(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BP_GetDestHeight_ReturnValue;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue_1;  // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue_1;            // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterBattle*                       CallFunc_BP_GetOwnerCharacterBattle_ReturnValue;   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BP_GetMoveDirection_ReturnValue;          // 0x006C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BP_GetForwardDirectionForBaseActionMovement_ReturnValue; // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue_2;  // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_prevAction;                           // 0x0090(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterState*                        CallFunc_BP_GetOwnerState_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump) == 0x000008, "Wrong alignment on BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump");
static_assert(sizeof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump) == 0x0000A0, "Wrong size on BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump");
static_assert(offsetof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump, EntryPoint) == 0x000000, "Member 'BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump, CallFunc_BP_GetOwnerMovementBattle_ReturnValue) == 0x000008, "Member 'BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump::CallFunc_BP_GetOwnerMovementBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump, K2Node_Event_nextAction) == 0x000010, "Member 'BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump::K2Node_Event_nextAction' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump, CallFunc_BP_GetAnimation_ReturnValue) == 0x000018, "Member 'BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump::CallFunc_BP_GetAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump, CallFunc_BP_GetParam_ReturnValue) == 0x000020, "Member 'BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump::CallFunc_BP_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump, K2Node_Event_type) == 0x000028, "Member 'BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump::K2Node_Event_type' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump, K2Node_Event_event) == 0x000030, "Member 'BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump::K2Node_Event_event' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump, CallFunc_BP_GetActionName_ReturnValue) == 0x000038, "Member 'BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump::CallFunc_BP_GetActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000040, "Member 'BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump, CallFunc_BP_GetDestHeight_ReturnValue) == 0x000044, "Member 'BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump::CallFunc_BP_GetDestHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump, CallFunc_BP_GetOwnerMovementBattle_ReturnValue_1) == 0x000048, "Member 'BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump::CallFunc_BP_GetOwnerMovementBattle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump, CallFunc_Add_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump, CallFunc_BP_GetAnimation_ReturnValue_1) == 0x000058, "Member 'BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump::CallFunc_BP_GetAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump, CallFunc_BP_GetOwnerCharacterBattle_ReturnValue) == 0x000060, "Member 'BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump::CallFunc_BP_GetOwnerCharacterBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump, CallFunc_IsLocallyControlled_ReturnValue) == 0x000068, "Member 'BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump, CallFunc_BP_GetMoveDirection_ReturnValue) == 0x00006C, "Member 'BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump::CallFunc_BP_GetMoveDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump, CallFunc_BP_GetForwardDirectionForBaseActionMovement_ReturnValue) == 0x000078, "Member 'BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump::CallFunc_BP_GetForwardDirectionForBaseActionMovement_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump, CallFunc_BP_GetOwnerMovementBattle_ReturnValue_2) == 0x000088, "Member 'BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump::CallFunc_BP_GetOwnerMovementBattle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump, K2Node_Event_prevAction) == 0x000090, "Member 'BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump::K2Node_Event_prevAction' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump, CallFunc_BP_GetOwnerState_ReturnValue) == 0x000098, "Member 'BP_ActionParkourJump_C_ExecuteUbergraph_BP_ActionParkourJump::CallFunc_BP_GetOwnerState_ReturnValue' has a wrong offset!");

// Function BP_ActionParkourJump.BP_ActionParkourJump_C.BP_OnBeginAction
// 0x0008 (0x0008 - 0x0000)
struct BP_ActionParkourJump_C_BP_OnBeginAction final
{
public:
	class FName                                   PrevAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionParkourJump_C_BP_OnBeginAction) == 0x000004, "Wrong alignment on BP_ActionParkourJump_C_BP_OnBeginAction");
static_assert(sizeof(BP_ActionParkourJump_C_BP_OnBeginAction) == 0x000008, "Wrong size on BP_ActionParkourJump_C_BP_OnBeginAction");
static_assert(offsetof(BP_ActionParkourJump_C_BP_OnBeginAction, PrevAction) == 0x000000, "Member 'BP_ActionParkourJump_C_BP_OnBeginAction::PrevAction' has a wrong offset!");

// Function BP_ActionParkourJump.BP_ActionParkourJump_C.BP_OnAnimNotify
// 0x0010 (0x0010 - 0x0000)
struct BP_ActionParkourJump_C_BP_OnAnimNotify final
{
public:
	class FName                                   Type;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Event;                                             // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionParkourJump_C_BP_OnAnimNotify) == 0x000004, "Wrong alignment on BP_ActionParkourJump_C_BP_OnAnimNotify");
static_assert(sizeof(BP_ActionParkourJump_C_BP_OnAnimNotify) == 0x000010, "Wrong size on BP_ActionParkourJump_C_BP_OnAnimNotify");
static_assert(offsetof(BP_ActionParkourJump_C_BP_OnAnimNotify, Type) == 0x000000, "Member 'BP_ActionParkourJump_C_BP_OnAnimNotify::Type' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_BP_OnAnimNotify, Event) == 0x000008, "Member 'BP_ActionParkourJump_C_BP_OnAnimNotify::Event' has a wrong offset!");

// Function BP_ActionParkourJump.BP_ActionParkourJump_C.BP_OnEndAction
// 0x0008 (0x0008 - 0x0000)
struct BP_ActionParkourJump_C_BP_OnEndAction final
{
public:
	class FName                                   NextAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionParkourJump_C_BP_OnEndAction) == 0x000004, "Wrong alignment on BP_ActionParkourJump_C_BP_OnEndAction");
static_assert(sizeof(BP_ActionParkourJump_C_BP_OnEndAction) == 0x000008, "Wrong size on BP_ActionParkourJump_C_BP_OnEndAction");
static_assert(offsetof(BP_ActionParkourJump_C_BP_OnEndAction, NextAction) == 0x000000, "Member 'BP_ActionParkourJump_C_BP_OnEndAction::NextAction' has a wrong offset!");

// Function BP_ActionParkourJump.BP_ActionParkourJump_C.Set Gravity
// 0x0008 (0x0008 - 0x0000)
struct BP_ActionParkourJump_C_Set_Gravity final
{
public:
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue;    // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionParkourJump_C_Set_Gravity) == 0x000008, "Wrong alignment on BP_ActionParkourJump_C_Set_Gravity");
static_assert(sizeof(BP_ActionParkourJump_C_Set_Gravity) == 0x000008, "Wrong size on BP_ActionParkourJump_C_Set_Gravity");
static_assert(offsetof(BP_ActionParkourJump_C_Set_Gravity, CallFunc_BP_GetOwnerMovementBattle_ReturnValue) == 0x000000, "Member 'BP_ActionParkourJump_C_Set_Gravity::CallFunc_BP_GetOwnerMovementBattle_ReturnValue' has a wrong offset!");

// Function BP_ActionParkourJump.BP_ActionParkourJump_C.GetMovementDirection
// 0x0050 (0x0050 - 0x0000)
struct BP_ActionParkourJump_C_GetMovementDirection final
{
public:
	struct FVector                                NewParam;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterBattle*                       CallFunc_BP_GetOwnerCharacterBattle_ReturnValue;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterCommandComponent*             CallFunc_BP_GetOwnerCommand_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BP_GetMoveDirection_ReturnValue;          // 0x002C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetMoveRate_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionParkourJump_C_GetMovementDirection) == 0x000008, "Wrong alignment on BP_ActionParkourJump_C_GetMovementDirection");
static_assert(sizeof(BP_ActionParkourJump_C_GetMovementDirection) == 0x000050, "Wrong size on BP_ActionParkourJump_C_GetMovementDirection");
static_assert(offsetof(BP_ActionParkourJump_C_GetMovementDirection, NewParam) == 0x000000, "Member 'BP_ActionParkourJump_C_GetMovementDirection::NewParam' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_GetMovementDirection, Temp_bool_Variable) == 0x00000C, "Member 'BP_ActionParkourJump_C_GetMovementDirection::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_GetMovementDirection, CallFunc_BP_GetOwnerCharacterBattle_ReturnValue) == 0x000010, "Member 'BP_ActionParkourJump_C_GetMovementDirection::CallFunc_BP_GetOwnerCharacterBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_GetMovementDirection, CallFunc_BP_GetOwnerCommand_ReturnValue) == 0x000018, "Member 'BP_ActionParkourJump_C_GetMovementDirection::CallFunc_BP_GetOwnerCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_GetMovementDirection, CallFunc_GetActorForwardVector_ReturnValue) == 0x000020, "Member 'BP_ActionParkourJump_C_GetMovementDirection::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_GetMovementDirection, CallFunc_BP_GetMoveDirection_ReturnValue) == 0x00002C, "Member 'BP_ActionParkourJump_C_GetMovementDirection::CallFunc_BP_GetMoveDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_GetMovementDirection, CallFunc_BP_GetMoveRate_ReturnValue) == 0x000038, "Member 'BP_ActionParkourJump_C_GetMovementDirection::CallFunc_BP_GetMoveRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_GetMovementDirection, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_ActionParkourJump_C_GetMovementDirection::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_GetMovementDirection, K2Node_Select_Default) == 0x000040, "Member 'BP_ActionParkourJump_C_GetMovementDirection::K2Node_Select_Default' has a wrong offset!");

// Function BP_ActionParkourJump.BP_ActionParkourJump_C.BP_IsEnableShiftAction
// 0x000C (0x000C - 0x0000)
struct BP_ActionParkourJump_C_BP_IsEnableShiftAction final
{
public:
	class FName                                   NextAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ActionParkourJump_C_BP_IsEnableShiftAction) == 0x000004, "Wrong alignment on BP_ActionParkourJump_C_BP_IsEnableShiftAction");
static_assert(sizeof(BP_ActionParkourJump_C_BP_IsEnableShiftAction) == 0x00000C, "Wrong size on BP_ActionParkourJump_C_BP_IsEnableShiftAction");
static_assert(offsetof(BP_ActionParkourJump_C_BP_IsEnableShiftAction, NextAction) == 0x000000, "Member 'BP_ActionParkourJump_C_BP_IsEnableShiftAction::NextAction' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_BP_IsEnableShiftAction, ReturnValue) == 0x000008, "Member 'BP_ActionParkourJump_C_BP_IsEnableShiftAction::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionParkourJump_C_BP_IsEnableShiftAction, K2Node_SwitchName_CmpSuccess) == 0x000009, "Member 'BP_ActionParkourJump_C_BP_IsEnableShiftAction::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

}

