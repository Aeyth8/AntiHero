#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActionFailedWallThrough

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_ActionFailedWallThrough.BP_ActionFailedWallThrough_C.ExecuteUbergraph_BP_ActionFailedWallThrough
// 0x0028 (0x0028 - 0x0000)
struct BP_ActionFailedWallThrough_C_ExecuteUbergraph_BP_ActionFailedWallThrough final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterBattle*                       CallFunc_BP_GetOwnerCharacterBattle_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_prevAction;                           // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_nextAction;                           // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionFailedWallThrough_C_ExecuteUbergraph_BP_ActionFailedWallThrough) == 0x000008, "Wrong alignment on BP_ActionFailedWallThrough_C_ExecuteUbergraph_BP_ActionFailedWallThrough");
static_assert(sizeof(BP_ActionFailedWallThrough_C_ExecuteUbergraph_BP_ActionFailedWallThrough) == 0x000028, "Wrong size on BP_ActionFailedWallThrough_C_ExecuteUbergraph_BP_ActionFailedWallThrough");
static_assert(offsetof(BP_ActionFailedWallThrough_C_ExecuteUbergraph_BP_ActionFailedWallThrough, EntryPoint) == 0x000000, "Member 'BP_ActionFailedWallThrough_C_ExecuteUbergraph_BP_ActionFailedWallThrough::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ActionFailedWallThrough_C_ExecuteUbergraph_BP_ActionFailedWallThrough, CallFunc_BP_GetOwnerCharacterBattle_ReturnValue) == 0x000008, "Member 'BP_ActionFailedWallThrough_C_ExecuteUbergraph_BP_ActionFailedWallThrough::CallFunc_BP_GetOwnerCharacterBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionFailedWallThrough_C_ExecuteUbergraph_BP_ActionFailedWallThrough, K2Node_Event_prevAction) == 0x000010, "Member 'BP_ActionFailedWallThrough_C_ExecuteUbergraph_BP_ActionFailedWallThrough::K2Node_Event_prevAction' has a wrong offset!");
static_assert(offsetof(BP_ActionFailedWallThrough_C_ExecuteUbergraph_BP_ActionFailedWallThrough, CallFunc_BP_GetAnimation_ReturnValue) == 0x000018, "Member 'BP_ActionFailedWallThrough_C_ExecuteUbergraph_BP_ActionFailedWallThrough::CallFunc_BP_GetAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionFailedWallThrough_C_ExecuteUbergraph_BP_ActionFailedWallThrough, K2Node_Event_nextAction) == 0x000020, "Member 'BP_ActionFailedWallThrough_C_ExecuteUbergraph_BP_ActionFailedWallThrough::K2Node_Event_nextAction' has a wrong offset!");

// Function BP_ActionFailedWallThrough.BP_ActionFailedWallThrough_C.BP_OnEndAction
// 0x0008 (0x0008 - 0x0000)
struct BP_ActionFailedWallThrough_C_BP_OnEndAction final
{
public:
	class FName                                   NextAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionFailedWallThrough_C_BP_OnEndAction) == 0x000004, "Wrong alignment on BP_ActionFailedWallThrough_C_BP_OnEndAction");
static_assert(sizeof(BP_ActionFailedWallThrough_C_BP_OnEndAction) == 0x000008, "Wrong size on BP_ActionFailedWallThrough_C_BP_OnEndAction");
static_assert(offsetof(BP_ActionFailedWallThrough_C_BP_OnEndAction, NextAction) == 0x000000, "Member 'BP_ActionFailedWallThrough_C_BP_OnEndAction::NextAction' has a wrong offset!");

// Function BP_ActionFailedWallThrough.BP_ActionFailedWallThrough_C.BP_OnBeginAction
// 0x0008 (0x0008 - 0x0000)
struct BP_ActionFailedWallThrough_C_BP_OnBeginAction final
{
public:
	class FName                                   PrevAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionFailedWallThrough_C_BP_OnBeginAction) == 0x000004, "Wrong alignment on BP_ActionFailedWallThrough_C_BP_OnBeginAction");
static_assert(sizeof(BP_ActionFailedWallThrough_C_BP_OnBeginAction) == 0x000008, "Wrong size on BP_ActionFailedWallThrough_C_BP_OnBeginAction");
static_assert(offsetof(BP_ActionFailedWallThrough_C_BP_OnBeginAction, PrevAction) == 0x000000, "Member 'BP_ActionFailedWallThrough_C_BP_OnBeginAction::PrevAction' has a wrong offset!");

// Function BP_ActionFailedWallThrough.BP_ActionFailedWallThrough_C.BP_IsEnableShiftAction
// 0x000C (0x000C - 0x0000)
struct BP_ActionFailedWallThrough_C_BP_IsEnableShiftAction final
{
public:
	class FName                                   NextAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ActionFailedWallThrough_C_BP_IsEnableShiftAction) == 0x000004, "Wrong alignment on BP_ActionFailedWallThrough_C_BP_IsEnableShiftAction");
static_assert(sizeof(BP_ActionFailedWallThrough_C_BP_IsEnableShiftAction) == 0x00000C, "Wrong size on BP_ActionFailedWallThrough_C_BP_IsEnableShiftAction");
static_assert(offsetof(BP_ActionFailedWallThrough_C_BP_IsEnableShiftAction, NextAction) == 0x000000, "Member 'BP_ActionFailedWallThrough_C_BP_IsEnableShiftAction::NextAction' has a wrong offset!");
static_assert(offsetof(BP_ActionFailedWallThrough_C_BP_IsEnableShiftAction, ReturnValue) == 0x000008, "Member 'BP_ActionFailedWallThrough_C_BP_IsEnableShiftAction::ReturnValue' has a wrong offset!");

}

