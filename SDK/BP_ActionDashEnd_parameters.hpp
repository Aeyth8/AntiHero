#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActionDashEnd

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ActionDashEnd.BP_ActionDashEnd_C.ExecuteUbergraph_BP_ActionDashEnd
// 0x0030 (0x0030 - 0x0000)
struct BP_ActionDashEnd_C_ExecuteUbergraph_BP_ActionDashEnd final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterState*                        CallFunc_BP_GetOwnerState_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterCommandComponent*             CallFunc_BP_GetOwnerCommand_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_prevAction;                           // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionDashEnd_C_ExecuteUbergraph_BP_ActionDashEnd) == 0x000008, "Wrong alignment on BP_ActionDashEnd_C_ExecuteUbergraph_BP_ActionDashEnd");
static_assert(sizeof(BP_ActionDashEnd_C_ExecuteUbergraph_BP_ActionDashEnd) == 0x000030, "Wrong size on BP_ActionDashEnd_C_ExecuteUbergraph_BP_ActionDashEnd");
static_assert(offsetof(BP_ActionDashEnd_C_ExecuteUbergraph_BP_ActionDashEnd, EntryPoint) == 0x000000, "Member 'BP_ActionDashEnd_C_ExecuteUbergraph_BP_ActionDashEnd::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ActionDashEnd_C_ExecuteUbergraph_BP_ActionDashEnd, CallFunc_BP_GetAnimation_ReturnValue) == 0x000008, "Member 'BP_ActionDashEnd_C_ExecuteUbergraph_BP_ActionDashEnd::CallFunc_BP_GetAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDashEnd_C_ExecuteUbergraph_BP_ActionDashEnd, CallFunc_BP_GetOwnerMovementBattle_ReturnValue) == 0x000010, "Member 'BP_ActionDashEnd_C_ExecuteUbergraph_BP_ActionDashEnd::CallFunc_BP_GetOwnerMovementBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDashEnd_C_ExecuteUbergraph_BP_ActionDashEnd, CallFunc_BP_GetOwnerState_ReturnValue) == 0x000018, "Member 'BP_ActionDashEnd_C_ExecuteUbergraph_BP_ActionDashEnd::CallFunc_BP_GetOwnerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDashEnd_C_ExecuteUbergraph_BP_ActionDashEnd, CallFunc_BP_GetOwnerCommand_ReturnValue) == 0x000020, "Member 'BP_ActionDashEnd_C_ExecuteUbergraph_BP_ActionDashEnd::CallFunc_BP_GetOwnerCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDashEnd_C_ExecuteUbergraph_BP_ActionDashEnd, K2Node_Event_prevAction) == 0x000028, "Member 'BP_ActionDashEnd_C_ExecuteUbergraph_BP_ActionDashEnd::K2Node_Event_prevAction' has a wrong offset!");

// Function BP_ActionDashEnd.BP_ActionDashEnd_C.BP_OnBeginAction
// 0x0008 (0x0008 - 0x0000)
struct BP_ActionDashEnd_C_BP_OnBeginAction final
{
public:
	class FName                                   PrevAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionDashEnd_C_BP_OnBeginAction) == 0x000004, "Wrong alignment on BP_ActionDashEnd_C_BP_OnBeginAction");
static_assert(sizeof(BP_ActionDashEnd_C_BP_OnBeginAction) == 0x000008, "Wrong size on BP_ActionDashEnd_C_BP_OnBeginAction");
static_assert(offsetof(BP_ActionDashEnd_C_BP_OnBeginAction, PrevAction) == 0x000000, "Member 'BP_ActionDashEnd_C_BP_OnBeginAction::PrevAction' has a wrong offset!");

// Function BP_ActionDashEnd.BP_ActionDashEnd_C.GetDestMoveDirection
// 0x0050 (0x0050 - 0x0000)
struct BP_ActionDashEnd_C_GetDestMoveDirection final
{
public:
	struct FVector                                NewParam;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterBattle*                       CallFunc_BP_GetOwnerCharacterBattle_ReturnValue;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterCommandComponent*             CallFunc_BP_GetOwnerCommand_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BP_GetMoveDirection_ReturnValue;          // 0x002C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetMoveRate_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0040(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionDashEnd_C_GetDestMoveDirection) == 0x000008, "Wrong alignment on BP_ActionDashEnd_C_GetDestMoveDirection");
static_assert(sizeof(BP_ActionDashEnd_C_GetDestMoveDirection) == 0x000050, "Wrong size on BP_ActionDashEnd_C_GetDestMoveDirection");
static_assert(offsetof(BP_ActionDashEnd_C_GetDestMoveDirection, NewParam) == 0x000000, "Member 'BP_ActionDashEnd_C_GetDestMoveDirection::NewParam' has a wrong offset!");
static_assert(offsetof(BP_ActionDashEnd_C_GetDestMoveDirection, Temp_bool_Variable) == 0x00000C, "Member 'BP_ActionDashEnd_C_GetDestMoveDirection::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionDashEnd_C_GetDestMoveDirection, CallFunc_BP_GetOwnerCharacterBattle_ReturnValue) == 0x000010, "Member 'BP_ActionDashEnd_C_GetDestMoveDirection::CallFunc_BP_GetOwnerCharacterBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDashEnd_C_GetDestMoveDirection, CallFunc_BP_GetOwnerCommand_ReturnValue) == 0x000018, "Member 'BP_ActionDashEnd_C_GetDestMoveDirection::CallFunc_BP_GetOwnerCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDashEnd_C_GetDestMoveDirection, CallFunc_GetActorForwardVector_ReturnValue) == 0x000020, "Member 'BP_ActionDashEnd_C_GetDestMoveDirection::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDashEnd_C_GetDestMoveDirection, CallFunc_BP_GetMoveDirection_ReturnValue) == 0x00002C, "Member 'BP_ActionDashEnd_C_GetDestMoveDirection::CallFunc_BP_GetMoveDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDashEnd_C_GetDestMoveDirection, CallFunc_BP_GetMoveRate_ReturnValue) == 0x000038, "Member 'BP_ActionDashEnd_C_GetDestMoveDirection::CallFunc_BP_GetMoveRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDashEnd_C_GetDestMoveDirection, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_ActionDashEnd_C_GetDestMoveDirection::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDashEnd_C_GetDestMoveDirection, K2Node_Select_Default) == 0x000040, "Member 'BP_ActionDashEnd_C_GetDestMoveDirection::K2Node_Select_Default' has a wrong offset!");

// Function BP_ActionDashEnd.BP_ActionDashEnd_C.UpdateMoveDirection
// 0x0020 (0x0020 - 0x0000)
struct BP_ActionDashEnd_C_UpdateMoveDirection final
{
public:
	struct FVector                                CallFunc_GetDestMoveDirection_NewParam;            // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterParam*                        CallFunc_BP_GetParam_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetDeltaSeconds_ReturnValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionDashEnd_C_UpdateMoveDirection) == 0x000008, "Wrong alignment on BP_ActionDashEnd_C_UpdateMoveDirection");
static_assert(sizeof(BP_ActionDashEnd_C_UpdateMoveDirection) == 0x000020, "Wrong size on BP_ActionDashEnd_C_UpdateMoveDirection");
static_assert(offsetof(BP_ActionDashEnd_C_UpdateMoveDirection, CallFunc_GetDestMoveDirection_NewParam) == 0x000000, "Member 'BP_ActionDashEnd_C_UpdateMoveDirection::CallFunc_GetDestMoveDirection_NewParam' has a wrong offset!");
static_assert(offsetof(BP_ActionDashEnd_C_UpdateMoveDirection, CallFunc_BP_GetParam_ReturnValue) == 0x000010, "Member 'BP_ActionDashEnd_C_UpdateMoveDirection::CallFunc_BP_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDashEnd_C_UpdateMoveDirection, CallFunc_BP_GetDeltaSeconds_ReturnValue) == 0x000018, "Member 'BP_ActionDashEnd_C_UpdateMoveDirection::CallFunc_BP_GetDeltaSeconds_ReturnValue' has a wrong offset!");

// Function BP_ActionDashEnd.BP_ActionDashEnd_C.UpdateCharacterDirection
// 0x0018 (0x0018 - 0x0000)
struct BP_ActionDashEnd_C_UpdateCharacterDirection final
{
public:
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue;    // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BP_GetMoveDirection_ReturnValue;          // 0x0008(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionDashEnd_C_UpdateCharacterDirection) == 0x000008, "Wrong alignment on BP_ActionDashEnd_C_UpdateCharacterDirection");
static_assert(sizeof(BP_ActionDashEnd_C_UpdateCharacterDirection) == 0x000018, "Wrong size on BP_ActionDashEnd_C_UpdateCharacterDirection");
static_assert(offsetof(BP_ActionDashEnd_C_UpdateCharacterDirection, CallFunc_BP_GetOwnerMovementBattle_ReturnValue) == 0x000000, "Member 'BP_ActionDashEnd_C_UpdateCharacterDirection::CallFunc_BP_GetOwnerMovementBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDashEnd_C_UpdateCharacterDirection, CallFunc_BP_GetMoveDirection_ReturnValue) == 0x000008, "Member 'BP_ActionDashEnd_C_UpdateCharacterDirection::CallFunc_BP_GetMoveDirection_ReturnValue' has a wrong offset!");

// Function BP_ActionDashEnd.BP_ActionDashEnd_C.BP_IsEnableShiftAction
// 0x000C (0x000C - 0x0000)
struct BP_ActionDashEnd_C_BP_IsEnableShiftAction final
{
public:
	class FName                                   NextAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ActionDashEnd_C_BP_IsEnableShiftAction) == 0x000004, "Wrong alignment on BP_ActionDashEnd_C_BP_IsEnableShiftAction");
static_assert(sizeof(BP_ActionDashEnd_C_BP_IsEnableShiftAction) == 0x00000C, "Wrong size on BP_ActionDashEnd_C_BP_IsEnableShiftAction");
static_assert(offsetof(BP_ActionDashEnd_C_BP_IsEnableShiftAction, NextAction) == 0x000000, "Member 'BP_ActionDashEnd_C_BP_IsEnableShiftAction::NextAction' has a wrong offset!");
static_assert(offsetof(BP_ActionDashEnd_C_BP_IsEnableShiftAction, ReturnValue) == 0x000008, "Member 'BP_ActionDashEnd_C_BP_IsEnableShiftAction::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDashEnd_C_BP_IsEnableShiftAction, K2Node_SwitchName_CmpSuccess) == 0x000009, "Member 'BP_ActionDashEnd_C_BP_IsEnableShiftAction::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

}

