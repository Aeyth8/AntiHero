#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActionRideOverWall

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ActionRideOverWall.BP_ActionRideOverWall_C.ExecuteUbergraph_BP_ActionRideOverWall
// 0x0080 (0x0080 - 0x0000)
struct BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterState*                        CallFunc_BP_GetOwnerState_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_prevAction;                           // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterState*                        CallFunc_BP_GetOwnerState_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue_1;  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_type;                                 // 0x0038(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_event;                                // 0x0040(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BP_GetActionName_ReturnValue;             // 0x0048(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BP_GetMoveDirection_ReturnValue;          // 0x0054(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterBattle*                       CallFunc_BP_GetOwnerCharacterBattle_ReturnValue;   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_nextAction;                           // 0x0068(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall) == 0x000008, "Wrong alignment on BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall");
static_assert(sizeof(BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall) == 0x000080, "Wrong size on BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall");
static_assert(offsetof(BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall, EntryPoint) == 0x000000, "Member 'BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall, CallFunc_BP_GetOwnerState_ReturnValue) == 0x000008, "Member 'BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall::CallFunc_BP_GetOwnerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall, K2Node_Event_prevAction) == 0x000010, "Member 'BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall::K2Node_Event_prevAction' has a wrong offset!");
static_assert(offsetof(BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall, CallFunc_BP_GetAnimation_ReturnValue) == 0x000018, "Member 'BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall::CallFunc_BP_GetAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall, CallFunc_BP_GetOwnerMovementBattle_ReturnValue) == 0x000020, "Member 'BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall::CallFunc_BP_GetOwnerMovementBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall, CallFunc_BP_GetOwnerState_ReturnValue_1) == 0x000028, "Member 'BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall::CallFunc_BP_GetOwnerState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall, CallFunc_BP_GetOwnerMovementBattle_ReturnValue_1) == 0x000030, "Member 'BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall::CallFunc_BP_GetOwnerMovementBattle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall, K2Node_Event_type) == 0x000038, "Member 'BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall::K2Node_Event_type' has a wrong offset!");
static_assert(offsetof(BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall, K2Node_Event_event) == 0x000040, "Member 'BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall::K2Node_Event_event' has a wrong offset!");
static_assert(offsetof(BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall, CallFunc_BP_GetActionName_ReturnValue) == 0x000048, "Member 'BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall::CallFunc_BP_GetActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000050, "Member 'BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall, CallFunc_BP_GetMoveDirection_ReturnValue) == 0x000054, "Member 'BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall::CallFunc_BP_GetMoveDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall, CallFunc_BP_GetOwnerCharacterBattle_ReturnValue) == 0x000060, "Member 'BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall::CallFunc_BP_GetOwnerCharacterBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall, K2Node_Event_nextAction) == 0x000068, "Member 'BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall::K2Node_Event_nextAction' has a wrong offset!");
static_assert(offsetof(BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall, CallFunc_GetActorForwardVector_ReturnValue) == 0x000070, "Member 'BP_ActionRideOverWall_C_ExecuteUbergraph_BP_ActionRideOverWall::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");

// Function BP_ActionRideOverWall.BP_ActionRideOverWall_C.BP_OnEndAction
// 0x0008 (0x0008 - 0x0000)
struct BP_ActionRideOverWall_C_BP_OnEndAction final
{
public:
	class FName                                   NextAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRideOverWall_C_BP_OnEndAction) == 0x000004, "Wrong alignment on BP_ActionRideOverWall_C_BP_OnEndAction");
static_assert(sizeof(BP_ActionRideOverWall_C_BP_OnEndAction) == 0x000008, "Wrong size on BP_ActionRideOverWall_C_BP_OnEndAction");
static_assert(offsetof(BP_ActionRideOverWall_C_BP_OnEndAction, NextAction) == 0x000000, "Member 'BP_ActionRideOverWall_C_BP_OnEndAction::NextAction' has a wrong offset!");

// Function BP_ActionRideOverWall.BP_ActionRideOverWall_C.BP_OnAnimNotify
// 0x0010 (0x0010 - 0x0000)
struct BP_ActionRideOverWall_C_BP_OnAnimNotify final
{
public:
	class FName                                   Type;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Event;                                             // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRideOverWall_C_BP_OnAnimNotify) == 0x000004, "Wrong alignment on BP_ActionRideOverWall_C_BP_OnAnimNotify");
static_assert(sizeof(BP_ActionRideOverWall_C_BP_OnAnimNotify) == 0x000010, "Wrong size on BP_ActionRideOverWall_C_BP_OnAnimNotify");
static_assert(offsetof(BP_ActionRideOverWall_C_BP_OnAnimNotify, Type) == 0x000000, "Member 'BP_ActionRideOverWall_C_BP_OnAnimNotify::Type' has a wrong offset!");
static_assert(offsetof(BP_ActionRideOverWall_C_BP_OnAnimNotify, Event) == 0x000008, "Member 'BP_ActionRideOverWall_C_BP_OnAnimNotify::Event' has a wrong offset!");

// Function BP_ActionRideOverWall.BP_ActionRideOverWall_C.BP_OnBeginAction
// 0x0008 (0x0008 - 0x0000)
struct BP_ActionRideOverWall_C_BP_OnBeginAction final
{
public:
	class FName                                   PrevAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRideOverWall_C_BP_OnBeginAction) == 0x000004, "Wrong alignment on BP_ActionRideOverWall_C_BP_OnBeginAction");
static_assert(sizeof(BP_ActionRideOverWall_C_BP_OnBeginAction) == 0x000008, "Wrong size on BP_ActionRideOverWall_C_BP_OnBeginAction");
static_assert(offsetof(BP_ActionRideOverWall_C_BP_OnBeginAction, PrevAction) == 0x000000, "Member 'BP_ActionRideOverWall_C_BP_OnBeginAction::PrevAction' has a wrong offset!");

// Function BP_ActionRideOverWall.BP_ActionRideOverWall_C.SetMovementSpeed
// 0x0020 (0x0020 - 0x0000)
struct BP_ActionRideOverWall_C_SetMovementSpeed final
{
public:
	class ACharacterBattle*                       CallFunc_BP_GetOwnerCharacterBattle_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionRideOverWall_C_SetMovementSpeed) == 0x000008, "Wrong alignment on BP_ActionRideOverWall_C_SetMovementSpeed");
static_assert(sizeof(BP_ActionRideOverWall_C_SetMovementSpeed) == 0x000020, "Wrong size on BP_ActionRideOverWall_C_SetMovementSpeed");
static_assert(offsetof(BP_ActionRideOverWall_C_SetMovementSpeed, CallFunc_BP_GetOwnerCharacterBattle_ReturnValue) == 0x000000, "Member 'BP_ActionRideOverWall_C_SetMovementSpeed::CallFunc_BP_GetOwnerCharacterBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRideOverWall_C_SetMovementSpeed, CallFunc_BP_GetOwnerMovementBattle_ReturnValue) == 0x000008, "Member 'BP_ActionRideOverWall_C_SetMovementSpeed::CallFunc_BP_GetOwnerMovementBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRideOverWall_C_SetMovementSpeed, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000010, "Member 'BP_ActionRideOverWall_C_SetMovementSpeed::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRideOverWall_C_SetMovementSpeed, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000014, "Member 'BP_ActionRideOverWall_C_SetMovementSpeed::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRideOverWall_C_SetMovementSpeed, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_ActionRideOverWall_C_SetMovementSpeed::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ActionRideOverWall.BP_ActionRideOverWall_C.BP_IsEnableShiftAction
// 0x000C (0x000C - 0x0000)
struct BP_ActionRideOverWall_C_BP_IsEnableShiftAction final
{
public:
	class FName                                   NextAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ActionRideOverWall_C_BP_IsEnableShiftAction) == 0x000004, "Wrong alignment on BP_ActionRideOverWall_C_BP_IsEnableShiftAction");
static_assert(sizeof(BP_ActionRideOverWall_C_BP_IsEnableShiftAction) == 0x00000C, "Wrong size on BP_ActionRideOverWall_C_BP_IsEnableShiftAction");
static_assert(offsetof(BP_ActionRideOverWall_C_BP_IsEnableShiftAction, NextAction) == 0x000000, "Member 'BP_ActionRideOverWall_C_BP_IsEnableShiftAction::NextAction' has a wrong offset!");
static_assert(offsetof(BP_ActionRideOverWall_C_BP_IsEnableShiftAction, ReturnValue) == 0x000008, "Member 'BP_ActionRideOverWall_C_BP_IsEnableShiftAction::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionRideOverWall_C_BP_IsEnableShiftAction, K2Node_SwitchName_CmpSuccess) == 0x000009, "Member 'BP_ActionRideOverWall_C_BP_IsEnableShiftAction::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

}

