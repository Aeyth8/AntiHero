#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CommonModule

#include "Basic.hpp"

#include "CommonModule_structs.hpp"


namespace SDK::Params
{

// Function CommonModule.CommonStatics.FindSubLevel
// 0x0018 (0x0018 - 0x0000)
struct CommonStatics_FindSubLevel final
{
public:
	class UWorld*                                 World;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LevelName;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelStreaming*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonStatics_FindSubLevel) == 0x000008, "Wrong alignment on CommonStatics_FindSubLevel");
static_assert(sizeof(CommonStatics_FindSubLevel) == 0x000018, "Wrong size on CommonStatics_FindSubLevel");
static_assert(offsetof(CommonStatics_FindSubLevel, World) == 0x000000, "Member 'CommonStatics_FindSubLevel::World' has a wrong offset!");
static_assert(offsetof(CommonStatics_FindSubLevel, LevelName) == 0x000008, "Member 'CommonStatics_FindSubLevel::LevelName' has a wrong offset!");
static_assert(offsetof(CommonStatics_FindSubLevel, ReturnValue) == 0x000010, "Member 'CommonStatics_FindSubLevel::ReturnValue' has a wrong offset!");

// Function CommonModule.CommonStatics.GetCurrentMapName
// 0x0018 (0x0018 - 0x0000)
struct CommonStatics_GetCurrentMapName final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonStatics_GetCurrentMapName) == 0x000008, "Wrong alignment on CommonStatics_GetCurrentMapName");
static_assert(sizeof(CommonStatics_GetCurrentMapName) == 0x000018, "Wrong size on CommonStatics_GetCurrentMapName");
static_assert(offsetof(CommonStatics_GetCurrentMapName, WorldContextObject) == 0x000000, "Member 'CommonStatics_GetCurrentMapName::WorldContextObject' has a wrong offset!");
static_assert(offsetof(CommonStatics_GetCurrentMapName, ReturnValue) == 0x000008, "Member 'CommonStatics_GetCurrentMapName::ReturnValue' has a wrong offset!");

// Function CommonModule.CommonStatics.SetLevelVisible
// 0x0018 (0x0018 - 0x0000)
struct CommonStatics_SetLevelVisible final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LevelName;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVisible;                                          // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonStatics_SetLevelVisible) == 0x000008, "Wrong alignment on CommonStatics_SetLevelVisible");
static_assert(sizeof(CommonStatics_SetLevelVisible) == 0x000018, "Wrong size on CommonStatics_SetLevelVisible");
static_assert(offsetof(CommonStatics_SetLevelVisible, WorldContextObject) == 0x000000, "Member 'CommonStatics_SetLevelVisible::WorldContextObject' has a wrong offset!");
static_assert(offsetof(CommonStatics_SetLevelVisible, LevelName) == 0x000008, "Member 'CommonStatics_SetLevelVisible::LevelName' has a wrong offset!");
static_assert(offsetof(CommonStatics_SetLevelVisible, bVisible) == 0x000010, "Member 'CommonStatics_SetLevelVisible::bVisible' has a wrong offset!");

// Function CommonModule.DevelopActor.BP_OnChangedDevelopMenu
// 0x0001 (0x0001 - 0x0000)
struct DevelopActor_BP_OnChangedDevelopMenu final
{
public:
	bool                                          bOpen;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopActor_BP_OnChangedDevelopMenu) == 0x000001, "Wrong alignment on DevelopActor_BP_OnChangedDevelopMenu");
static_assert(sizeof(DevelopActor_BP_OnChangedDevelopMenu) == 0x000001, "Wrong size on DevelopActor_BP_OnChangedDevelopMenu");
static_assert(offsetof(DevelopActor_BP_OnChangedDevelopMenu, bOpen) == 0x000000, "Member 'DevelopActor_BP_OnChangedDevelopMenu::bOpen' has a wrong offset!");

// Function CommonModule.DevelopActor.BP_OnChangedDevelopPause
// 0x0001 (0x0001 - 0x0000)
struct DevelopActor_BP_OnChangedDevelopPause final
{
public:
	bool                                          bPause;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopActor_BP_OnChangedDevelopPause) == 0x000001, "Wrong alignment on DevelopActor_BP_OnChangedDevelopPause");
static_assert(sizeof(DevelopActor_BP_OnChangedDevelopPause) == 0x000001, "Wrong size on DevelopActor_BP_OnChangedDevelopPause");
static_assert(offsetof(DevelopActor_BP_OnChangedDevelopPause, bPause) == 0x000000, "Member 'DevelopActor_BP_OnChangedDevelopPause::bPause' has a wrong offset!");

// Function CommonModule.DevelopActor.MulticastOpenDevelopMenu
// 0x0020 (0x0020 - 0x0000)
struct DevelopActor_MulticastOpenDevelopMenu final
{
public:
	bool                                          bPause;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class APlayerController*                PauseOwner;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PauseOwnerName;                                    // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopActor_MulticastOpenDevelopMenu) == 0x000008, "Wrong alignment on DevelopActor_MulticastOpenDevelopMenu");
static_assert(sizeof(DevelopActor_MulticastOpenDevelopMenu) == 0x000020, "Wrong size on DevelopActor_MulticastOpenDevelopMenu");
static_assert(offsetof(DevelopActor_MulticastOpenDevelopMenu, bPause) == 0x000000, "Member 'DevelopActor_MulticastOpenDevelopMenu::bPause' has a wrong offset!");
static_assert(offsetof(DevelopActor_MulticastOpenDevelopMenu, PauseOwner) == 0x000008, "Member 'DevelopActor_MulticastOpenDevelopMenu::PauseOwner' has a wrong offset!");
static_assert(offsetof(DevelopActor_MulticastOpenDevelopMenu, PauseOwnerName) == 0x000010, "Member 'DevelopActor_MulticastOpenDevelopMenu::PauseOwnerName' has a wrong offset!");

// Function CommonModule.DevelopActor.MulticastSetDevPause
// 0x0002 (0x0002 - 0x0000)
struct DevelopActor_MulticastSetDevPause final
{
public:
	bool                                          bPause;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStep;                                             // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DevelopActor_MulticastSetDevPause) == 0x000001, "Wrong alignment on DevelopActor_MulticastSetDevPause");
static_assert(sizeof(DevelopActor_MulticastSetDevPause) == 0x000002, "Wrong size on DevelopActor_MulticastSetDevPause");
static_assert(offsetof(DevelopActor_MulticastSetDevPause, bPause) == 0x000000, "Member 'DevelopActor_MulticastSetDevPause::bPause' has a wrong offset!");
static_assert(offsetof(DevelopActor_MulticastSetDevPause, bStep) == 0x000001, "Member 'DevelopActor_MulticastSetDevPause::bStep' has a wrong offset!");

// Function CommonModule.DevelopCharacterSelector.ConvertStringToEnum
// 0x0018 (0x0018 - 0x0000)
struct DevelopCharacterSelector_ConvertStringToEnum final
{
public:
	class FString                                 CharacterIdString;                                 // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECharacterId                                  ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DevelopCharacterSelector_ConvertStringToEnum) == 0x000008, "Wrong alignment on DevelopCharacterSelector_ConvertStringToEnum");
static_assert(sizeof(DevelopCharacterSelector_ConvertStringToEnum) == 0x000018, "Wrong size on DevelopCharacterSelector_ConvertStringToEnum");
static_assert(offsetof(DevelopCharacterSelector_ConvertStringToEnum, CharacterIdString) == 0x000000, "Member 'DevelopCharacterSelector_ConvertStringToEnum::CharacterIdString' has a wrong offset!");
static_assert(offsetof(DevelopCharacterSelector_ConvertStringToEnum, ReturnValue) == 0x000010, "Member 'DevelopCharacterSelector_ConvertStringToEnum::ReturnValue' has a wrong offset!");

}

