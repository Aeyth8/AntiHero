#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActionDamageAirRecover

#include "Basic.hpp"

#include "InGameModule_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ActionDamageAirRecover.BP_ActionDamageAirRecover_C.ExecuteUbergraph_BP_ActionDamageAirRecover
// 0x0190 (0x0190 - 0x0000)
struct BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageInfo                            CallFunc_BP_GetDamageInfo_ReturnValue;             // 0x0008(0x0080)(ConstParm, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMovementComponentBattle*               CallFunc_BP_GetOwnerMovementBattle_ReturnValue;    // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterState*                        CallFunc_BP_GetOwnerState_ReturnValue;             // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_prevAction;                           // 0x00B0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDamageInfo                            CallFunc_BP_GetDamageInfo_ReturnValue_1;           // 0x00B8(0x0080)(ConstParm, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterDamageComponent*              CallFunc_BP_GetOwnerDamage_ReturnValue;            // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BP_GetDamageDirection_ReturnValue;        // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0164(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterDamageComponent*              CallFunc_BP_GetOwnerDamage_ReturnValue_1;          // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_nextAction;                           // 0x0178(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterState*                        CallFunc_BP_GetOwnerState_ReturnValue_1;           // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimation*                             CallFunc_BP_GetAnimation_ReturnValue_1;            // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover) == 0x000008, "Wrong alignment on BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover");
static_assert(sizeof(BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover) == 0x000190, "Wrong size on BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover");
static_assert(offsetof(BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover, EntryPoint) == 0x000000, "Member 'BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover, CallFunc_BP_GetDamageInfo_ReturnValue) == 0x000008, "Member 'BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover::CallFunc_BP_GetDamageInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00008C, "Member 'BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover, CallFunc_BP_GetOwnerMovementBattle_ReturnValue) == 0x000098, "Member 'BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover::CallFunc_BP_GetOwnerMovementBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover, CallFunc_BP_GetAnimation_ReturnValue) == 0x0000A0, "Member 'BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover::CallFunc_BP_GetAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover, CallFunc_BP_GetOwnerState_ReturnValue) == 0x0000A8, "Member 'BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover::CallFunc_BP_GetOwnerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover, K2Node_Event_prevAction) == 0x0000B0, "Member 'BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover::K2Node_Event_prevAction' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover, CallFunc_BP_GetDamageInfo_ReturnValue_1) == 0x0000B8, "Member 'BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover::CallFunc_BP_GetDamageInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover, Temp_bool_Variable) == 0x000138, "Member 'BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover, CallFunc_BP_GetOwnerDamage_ReturnValue) == 0x000140, "Member 'BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover::CallFunc_BP_GetOwnerDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000148, "Member 'BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover, CallFunc_BP_GetDamageDirection_ReturnValue) == 0x00014C, "Member 'BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover::CallFunc_BP_GetDamageDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000158, "Member 'BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover, K2Node_Select_Default) == 0x000164, "Member 'BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover, CallFunc_BP_GetOwnerDamage_ReturnValue_1) == 0x000170, "Member 'BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover::CallFunc_BP_GetOwnerDamage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover, K2Node_Event_nextAction) == 0x000178, "Member 'BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover::K2Node_Event_nextAction' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover, CallFunc_BP_GetOwnerState_ReturnValue_1) == 0x000180, "Member 'BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover::CallFunc_BP_GetOwnerState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover, CallFunc_BP_GetAnimation_ReturnValue_1) == 0x000188, "Member 'BP_ActionDamageAirRecover_C_ExecuteUbergraph_BP_ActionDamageAirRecover::CallFunc_BP_GetAnimation_ReturnValue_1' has a wrong offset!");

// Function BP_ActionDamageAirRecover.BP_ActionDamageAirRecover_C.BP_OnEndAction
// 0x0008 (0x0008 - 0x0000)
struct BP_ActionDamageAirRecover_C_BP_OnEndAction final
{
public:
	class FName                                   NextAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionDamageAirRecover_C_BP_OnEndAction) == 0x000004, "Wrong alignment on BP_ActionDamageAirRecover_C_BP_OnEndAction");
static_assert(sizeof(BP_ActionDamageAirRecover_C_BP_OnEndAction) == 0x000008, "Wrong size on BP_ActionDamageAirRecover_C_BP_OnEndAction");
static_assert(offsetof(BP_ActionDamageAirRecover_C_BP_OnEndAction, NextAction) == 0x000000, "Member 'BP_ActionDamageAirRecover_C_BP_OnEndAction::NextAction' has a wrong offset!");

// Function BP_ActionDamageAirRecover.BP_ActionDamageAirRecover_C.BP_OnBeginAction
// 0x0008 (0x0008 - 0x0000)
struct BP_ActionDamageAirRecover_C_BP_OnBeginAction final
{
public:
	class FName                                   PrevAction;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionDamageAirRecover_C_BP_OnBeginAction) == 0x000004, "Wrong alignment on BP_ActionDamageAirRecover_C_BP_OnBeginAction");
static_assert(sizeof(BP_ActionDamageAirRecover_C_BP_OnBeginAction) == 0x000008, "Wrong size on BP_ActionDamageAirRecover_C_BP_OnBeginAction");
static_assert(offsetof(BP_ActionDamageAirRecover_C_BP_OnBeginAction, PrevAction) == 0x000000, "Member 'BP_ActionDamageAirRecover_C_BP_OnBeginAction::PrevAction' has a wrong offset!");

}

