#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OutGameModule

#include "Basic.hpp"

#include "UIFramework_structs.hpp"
#include "UIFramework_classes.hpp"
#include "CommonModule_structs.hpp"
#include "GameModule_structs.hpp"
#include "GameModule_classes.hpp"
#include "OutGameModule_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"
#include "MasterDataModule_structs.hpp"
#include "BackendSubsystem_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "InputCore_structs.hpp"
#include "Slate_structs.hpp"
#include "BykingUnrealModule_structs.hpp"


namespace SDK
{

// Class OutGameModule.AboutDataUsage
// 0x0000 (0x0350 - 0x0350)
class UAboutDataUsage final : public UWidgetBase
{
public:
	void RequestFetch();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AboutDataUsage">();
	}
	static class UAboutDataUsage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAboutDataUsage>();
	}
};
static_assert(alignof(UAboutDataUsage) == 0x000008, "Wrong alignment on UAboutDataUsage");
static_assert(sizeof(UAboutDataUsage) == 0x000350, "Wrong size on UAboutDataUsage");

// Class OutGameModule.PlayMenuHamburgerListEntryObject
// 0x0020 (0x0050 - 0x0030)
class UPlayMenuHamburgerListEntryObject final : public UListViewEntryObjectBase
{
public:
	class FText                                   _listNameText;                                     // 0x0030(0x0018)(BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPublic)
	bool                                          _useFade;                                          // 0x0048(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMdPlayMenuHamburgerMenuList                  MenuType;                                          // 0x0049(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          _isEnable;                                         // 0x004A(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          _bNonDownArrow;                                    // 0x004B(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuHamburgerListEntryObject">();
	}
	static class UPlayMenuHamburgerListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuHamburgerListEntryObject>();
	}
};
static_assert(alignof(UPlayMenuHamburgerListEntryObject) == 0x000008, "Wrong alignment on UPlayMenuHamburgerListEntryObject");
static_assert(sizeof(UPlayMenuHamburgerListEntryObject) == 0x000050, "Wrong size on UPlayMenuHamburgerListEntryObject");
static_assert(offsetof(UPlayMenuHamburgerListEntryObject, _listNameText) == 0x000030, "Member 'UPlayMenuHamburgerListEntryObject::_listNameText' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerListEntryObject, _useFade) == 0x000048, "Member 'UPlayMenuHamburgerListEntryObject::_useFade' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerListEntryObject, MenuType) == 0x000049, "Member 'UPlayMenuHamburgerListEntryObject::MenuType' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerListEntryObject, _isEnable) == 0x00004A, "Member 'UPlayMenuHamburgerListEntryObject::_isEnable' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerListEntryObject, _bNonDownArrow) == 0x00004B, "Member 'UPlayMenuHamburgerListEntryObject::_bNonDownArrow' has a wrong offset!");

// Class OutGameModule.AccountLinkageWidget
// 0x0048 (0x0398 - 0x0350)
class UAccountLinkageWidget : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetSwitcher*                        _linkageSwitcher;                                  // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _otherWindowFrame;                                 // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _imageQrCodeDynamic;                               // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _linkableText;                                     // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindowFrame*              _linkableWindowFrame;                              // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _linkedWindowFrame;                                // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _linkedConformWindowFrame;                         // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnClickedBlockBGLinkableWindow();
	void OnClickedBlockBGLinkedConfirmWindow();
	void OnClickedBlockBGLinkedWindow();
	void OnClickedBlockBGMaintenanceWindow();
	void OnClosedLinkableWindow();
	void OnClosedLinkedConfirmWindow();
	void OnClosedLinkedWindow();
	void OnClosedMaintenanceWindow();
	void OnDecideLinkableWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnDecideLinkedConfirmWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnDecideLinkedWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnDecideMaintenanceWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnLoadCompletedCheckBnIdStatus(int32 RequestId);
	void OnLoadCompletedLoadBnIdQrCodeImage(int32 RequestId);
	void OnReceivedCloseWebApiErrorWindow();
	void OnReceivedWebApiError();
	void OnUpdateCompletedResetBnIdLink(int32 RequestId);
	void OpenNetworkWaiting();
	void RequestCheckBnIdStatus();
	void RequestLoadBnIdQrCodeImage();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AccountLinkageWidget">();
	}
	static class UAccountLinkageWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAccountLinkageWidget>();
	}
};
static_assert(alignof(UAccountLinkageWidget) == 0x000008, "Wrong alignment on UAccountLinkageWidget");
static_assert(sizeof(UAccountLinkageWidget) == 0x000398, "Wrong size on UAccountLinkageWidget");
static_assert(offsetof(UAccountLinkageWidget, _linkageSwitcher) == 0x000360, "Member 'UAccountLinkageWidget::_linkageSwitcher' has a wrong offset!");
static_assert(offsetof(UAccountLinkageWidget, _otherWindowFrame) == 0x000368, "Member 'UAccountLinkageWidget::_otherWindowFrame' has a wrong offset!");
static_assert(offsetof(UAccountLinkageWidget, _imageQrCodeDynamic) == 0x000370, "Member 'UAccountLinkageWidget::_imageQrCodeDynamic' has a wrong offset!");
static_assert(offsetof(UAccountLinkageWidget, _linkableText) == 0x000378, "Member 'UAccountLinkageWidget::_linkableText' has a wrong offset!");
static_assert(offsetof(UAccountLinkageWidget, _linkableWindowFrame) == 0x000380, "Member 'UAccountLinkageWidget::_linkableWindowFrame' has a wrong offset!");
static_assert(offsetof(UAccountLinkageWidget, _linkedWindowFrame) == 0x000388, "Member 'UAccountLinkageWidget::_linkedWindowFrame' has a wrong offset!");
static_assert(offsetof(UAccountLinkageWidget, _linkedConformWindowFrame) == 0x000390, "Member 'UAccountLinkageWidget::_linkedConformWindowFrame' has a wrong offset!");

// Class OutGameModule.AccountSelectWidget
// 0x0008 (0x0358 - 0x0350)
class UAccountSelectWidget final : public UWidgetBase
{
public:
	class UWidgetGeneralWindow*                   _popupWindowWidget;                                // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void ClosePopup(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnClosedFailedPopup();
	void OnClosedSuccessPopup();
	void OnErrorFadeOut();
	void OnErrorWindowClosed();
	void OnFadeOut();
	void OnNativeFadeIn();
	void OnNativeFadeOut();
	void OnOpenPopup();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AccountSelectWidget">();
	}
	static class UAccountSelectWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAccountSelectWidget>();
	}
};
static_assert(alignof(UAccountSelectWidget) == 0x000008, "Wrong alignment on UAccountSelectWidget");
static_assert(sizeof(UAccountSelectWidget) == 0x000358, "Wrong size on UAccountSelectWidget");
static_assert(offsetof(UAccountSelectWidget, _popupWindowWidget) == 0x000350, "Member 'UAccountSelectWidget::_popupWindowWidget' has a wrong offset!");

// Class OutGameModule.PlayMenuBattleRuleWidget
// 0x0148 (0x05D0 - 0x0488)
class UPlayMenuBattleRuleWidget final : public UWidgetButton
{
public:
	bool                                          _bIsGrayOut;                                       // 0x0488(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 _stageImage;                                       // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _characterImage;                                   // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAdjustTextWidget*                      _battleRuleAdjustText;                             // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _battleRuleTextBG;                                 // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _battleRuleModeTex;                                // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _ruleBgImage;                                      // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _ruleBgdot;                                        // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _battleMemberNumText;                              // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _battleMemberMinNumText;                           // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _fromImage;                                        // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                           _timerPanel;                                       // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTimeWidget*                            _playModeTimer;                                    // 0x04E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPaperFlipbook*                         _stageFB;                                          // 0x04F0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EPlayModeModeCategory, struct FBattleInfo> _modeCategoryInfo;                                 // 0x04F8(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<EMdGameMode, struct FBattleInfo>         _modeOverrideGameModeCategoryInfo;                 // 0x0548(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class USoundAtomCue*                          _pressAtomCue;                                     // 0x0598(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundAtomCue*                          _focusAtomCue;                                     // 0x05A0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundAtomCue*                          _pressUnSelectedAtomCue;                           // 0x05A8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPlayModeModeCategory                         _debguCategoryColor;                               // 0x05B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5B1[0x7];                                      // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         _atomComp;                                         // 0x05B8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5C0[0x10];                                     // 0x05C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void GetSelectedBattleRuleStageData(int32* StageCode);
	void OnChangeBattleRule();
	void OnChangeBattleSequence(EBattleStartSequenceType Sequence);
	void OnGrayOutEvent(bool bIsGrayOut);
	void OnPressButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnSquadInfoChanged();
	void OnSquadNumChanged(int32 SquadNum);
	void OnUpdateTutorial();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuBattleRuleWidget">();
	}
	static class UPlayMenuBattleRuleWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuBattleRuleWidget>();
	}
};
static_assert(alignof(UPlayMenuBattleRuleWidget) == 0x000008, "Wrong alignment on UPlayMenuBattleRuleWidget");
static_assert(sizeof(UPlayMenuBattleRuleWidget) == 0x0005D0, "Wrong size on UPlayMenuBattleRuleWidget");
static_assert(offsetof(UPlayMenuBattleRuleWidget, _bIsGrayOut) == 0x000488, "Member 'UPlayMenuBattleRuleWidget::_bIsGrayOut' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleRuleWidget, _stageImage) == 0x000490, "Member 'UPlayMenuBattleRuleWidget::_stageImage' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleRuleWidget, _characterImage) == 0x000498, "Member 'UPlayMenuBattleRuleWidget::_characterImage' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleRuleWidget, _battleRuleAdjustText) == 0x0004A0, "Member 'UPlayMenuBattleRuleWidget::_battleRuleAdjustText' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleRuleWidget, _battleRuleTextBG) == 0x0004A8, "Member 'UPlayMenuBattleRuleWidget::_battleRuleTextBG' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleRuleWidget, _battleRuleModeTex) == 0x0004B0, "Member 'UPlayMenuBattleRuleWidget::_battleRuleModeTex' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleRuleWidget, _ruleBgImage) == 0x0004B8, "Member 'UPlayMenuBattleRuleWidget::_ruleBgImage' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleRuleWidget, _ruleBgdot) == 0x0004C0, "Member 'UPlayMenuBattleRuleWidget::_ruleBgdot' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleRuleWidget, _battleMemberNumText) == 0x0004C8, "Member 'UPlayMenuBattleRuleWidget::_battleMemberNumText' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleRuleWidget, _battleMemberMinNumText) == 0x0004D0, "Member 'UPlayMenuBattleRuleWidget::_battleMemberMinNumText' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleRuleWidget, _fromImage) == 0x0004D8, "Member 'UPlayMenuBattleRuleWidget::_fromImage' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleRuleWidget, _timerPanel) == 0x0004E0, "Member 'UPlayMenuBattleRuleWidget::_timerPanel' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleRuleWidget, _playModeTimer) == 0x0004E8, "Member 'UPlayMenuBattleRuleWidget::_playModeTimer' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleRuleWidget, _stageFB) == 0x0004F0, "Member 'UPlayMenuBattleRuleWidget::_stageFB' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleRuleWidget, _modeCategoryInfo) == 0x0004F8, "Member 'UPlayMenuBattleRuleWidget::_modeCategoryInfo' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleRuleWidget, _modeOverrideGameModeCategoryInfo) == 0x000548, "Member 'UPlayMenuBattleRuleWidget::_modeOverrideGameModeCategoryInfo' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleRuleWidget, _pressAtomCue) == 0x000598, "Member 'UPlayMenuBattleRuleWidget::_pressAtomCue' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleRuleWidget, _focusAtomCue) == 0x0005A0, "Member 'UPlayMenuBattleRuleWidget::_focusAtomCue' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleRuleWidget, _pressUnSelectedAtomCue) == 0x0005A8, "Member 'UPlayMenuBattleRuleWidget::_pressUnSelectedAtomCue' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleRuleWidget, _debguCategoryColor) == 0x0005B0, "Member 'UPlayMenuBattleRuleWidget::_debguCategoryColor' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleRuleWidget, _atomComp) == 0x0005B8, "Member 'UPlayMenuBattleRuleWidget::_atomComp' has a wrong offset!");

// Class OutGameModule.AnimationOutGame
// 0x0010 (0x0720 - 0x0710)
class UAnimationOutGame final : public UAnimation
{
public:
	uint8                                         Pad_710[0x10];                                     // 0x0710(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_PlayAnimationOutGame(EAnimOutGameId ID, float PlayRate, float BlendInTime);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimationOutGame">();
	}
	static class UAnimationOutGame* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimationOutGame>();
	}
};
static_assert(alignof(UAnimationOutGame) == 0x000010, "Wrong alignment on UAnimationOutGame");
static_assert(sizeof(UAnimationOutGame) == 0x000720, "Wrong size on UAnimationOutGame");

// Class OutGameModule.AvatarCreateAppWidget
// 0x00A8 (0x0490 - 0x03E8)
class UAvatarCreateAppWidget : public UAppWidget
{
public:
	FMulticastInlineDelegateProperty_             _onDecideDelegate;                                 // 0x03E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F8[0x20];                                     // 0x03F8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomTileView*                        _tileView;                                         // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bUseIconPositionOverride;                         // 0x0420(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_421[0x3];                                      // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              _iconPosition;                                     // 0x0424(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAnchorData                            CategoryAnchor;                                    // 0x042C(0x0028)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAnchorData                            SelectedItemAnchor;                                // 0x0454(0x0028)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_47C[0x14];                                     // 0x047C(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UAvatarCreateBaseListEntryObject* BP_GetEntryObject();
	void BP_SetFocusItem(int32 FocusIndex);
	void BP_SetFocusTop();
	void DoCustomWidgetNavigation(EUINavigation UiNavigation);
	void OnDecideEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnPressEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnRemoveFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateAppWidget">();
	}
	static class UAvatarCreateAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateAppWidget>();
	}
};
static_assert(alignof(UAvatarCreateAppWidget) == 0x000008, "Wrong alignment on UAvatarCreateAppWidget");
static_assert(sizeof(UAvatarCreateAppWidget) == 0x000490, "Wrong size on UAvatarCreateAppWidget");
static_assert(offsetof(UAvatarCreateAppWidget, _onDecideDelegate) == 0x0003E8, "Member 'UAvatarCreateAppWidget::_onDecideDelegate' has a wrong offset!");
static_assert(offsetof(UAvatarCreateAppWidget, _tileView) == 0x000418, "Member 'UAvatarCreateAppWidget::_tileView' has a wrong offset!");
static_assert(offsetof(UAvatarCreateAppWidget, _bUseIconPositionOverride) == 0x000420, "Member 'UAvatarCreateAppWidget::_bUseIconPositionOverride' has a wrong offset!");
static_assert(offsetof(UAvatarCreateAppWidget, _iconPosition) == 0x000424, "Member 'UAvatarCreateAppWidget::_iconPosition' has a wrong offset!");
static_assert(offsetof(UAvatarCreateAppWidget, CategoryAnchor) == 0x00042C, "Member 'UAvatarCreateAppWidget::CategoryAnchor' has a wrong offset!");
static_assert(offsetof(UAvatarCreateAppWidget, SelectedItemAnchor) == 0x000454, "Member 'UAvatarCreateAppWidget::SelectedItemAnchor' has a wrong offset!");

// Class OutGameModule.PlayMenuMaintenance
// 0x0020 (0x0370 - 0x0350)
class UPlayMenuMaintenance final : public UWidgetBase
{
public:
	class UAdjustTextWidget*                      _adjustText;                                       // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _alwaysDisplayMinutes;                             // 0x0358(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _delayDelate;                                      // 0x035C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _bDebugMaintenanceTimeMinutes;                     // 0x0360(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           _rentalRecoveryHandle;                             // 0x0368(0x0008)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnFinishedScrollEvent();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuMaintenance">();
	}
	static class UPlayMenuMaintenance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuMaintenance>();
	}
};
static_assert(alignof(UPlayMenuMaintenance) == 0x000008, "Wrong alignment on UPlayMenuMaintenance");
static_assert(sizeof(UPlayMenuMaintenance) == 0x000370, "Wrong size on UPlayMenuMaintenance");
static_assert(offsetof(UPlayMenuMaintenance, _adjustText) == 0x000350, "Member 'UPlayMenuMaintenance::_adjustText' has a wrong offset!");
static_assert(offsetof(UPlayMenuMaintenance, _alwaysDisplayMinutes) == 0x000358, "Member 'UPlayMenuMaintenance::_alwaysDisplayMinutes' has a wrong offset!");
static_assert(offsetof(UPlayMenuMaintenance, _delayDelate) == 0x00035C, "Member 'UPlayMenuMaintenance::_delayDelate' has a wrong offset!");
static_assert(offsetof(UPlayMenuMaintenance, _bDebugMaintenanceTimeMinutes) == 0x000360, "Member 'UPlayMenuMaintenance::_bDebugMaintenanceTimeMinutes' has a wrong offset!");
static_assert(offsetof(UPlayMenuMaintenance, _rentalRecoveryHandle) == 0x000368, "Member 'UPlayMenuMaintenance::_rentalRecoveryHandle' has a wrong offset!");

// Class OutGameModule.AvatarCreateSlotWidgetBase
// 0x0150 (0x04A0 - 0x0350)
class UAvatarCreateSlotWidgetBase : public UWidgetBase
{
public:
	class UTextBlock*                             _itemTextBlock;                                    // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _selectedTextBlock;                                // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScaleBox*                              _itemTextScaleBox;                                 // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScaleBox*                              _selectedScaleBox;                                 // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScaleBox*                              _guideScaleBox;                                    // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 _image;                                            // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 _speakerIcon;                                      // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetButton*                          _speakerButton;                                    // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_390[0xF8];                                     // 0x0390(0x00F8)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           _imageDataImage;                                   // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USoundAtomCue*                          _sound;                                            // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAtomComponent*                         Conponent;                                         // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class UAvatarCreateSlotWidgetBase* BP_SetuptImageWidget(const struct FAvatarCreateImageData& ImageData);
	class UAvatarCreateSlotWidgetBase* BP_SetuptMenuWidget(const struct FAvatarCreateMenuData& MenuData);
	void BP_SetVoiceData(const struct FAvatarCreateVoiceData& VoiceData);
	void BP_UpdateImageStyle();
	bool BP_UpdateSoundWidgetDiplay(bool Hidden);
	void BP_UpdateStyle();
	void OnPressButton(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateSlotWidgetBase">();
	}
	static class UAvatarCreateSlotWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateSlotWidgetBase>();
	}
};
static_assert(alignof(UAvatarCreateSlotWidgetBase) == 0x000008, "Wrong alignment on UAvatarCreateSlotWidgetBase");
static_assert(sizeof(UAvatarCreateSlotWidgetBase) == 0x0004A0, "Wrong size on UAvatarCreateSlotWidgetBase");
static_assert(offsetof(UAvatarCreateSlotWidgetBase, _itemTextBlock) == 0x000350, "Member 'UAvatarCreateSlotWidgetBase::_itemTextBlock' has a wrong offset!");
static_assert(offsetof(UAvatarCreateSlotWidgetBase, _selectedTextBlock) == 0x000358, "Member 'UAvatarCreateSlotWidgetBase::_selectedTextBlock' has a wrong offset!");
static_assert(offsetof(UAvatarCreateSlotWidgetBase, _itemTextScaleBox) == 0x000360, "Member 'UAvatarCreateSlotWidgetBase::_itemTextScaleBox' has a wrong offset!");
static_assert(offsetof(UAvatarCreateSlotWidgetBase, _selectedScaleBox) == 0x000368, "Member 'UAvatarCreateSlotWidgetBase::_selectedScaleBox' has a wrong offset!");
static_assert(offsetof(UAvatarCreateSlotWidgetBase, _guideScaleBox) == 0x000370, "Member 'UAvatarCreateSlotWidgetBase::_guideScaleBox' has a wrong offset!");
static_assert(offsetof(UAvatarCreateSlotWidgetBase, _image) == 0x000378, "Member 'UAvatarCreateSlotWidgetBase::_image' has a wrong offset!");
static_assert(offsetof(UAvatarCreateSlotWidgetBase, _speakerIcon) == 0x000380, "Member 'UAvatarCreateSlotWidgetBase::_speakerIcon' has a wrong offset!");
static_assert(offsetof(UAvatarCreateSlotWidgetBase, _speakerButton) == 0x000388, "Member 'UAvatarCreateSlotWidgetBase::_speakerButton' has a wrong offset!");
static_assert(offsetof(UAvatarCreateSlotWidgetBase, _imageDataImage) == 0x000488, "Member 'UAvatarCreateSlotWidgetBase::_imageDataImage' has a wrong offset!");
static_assert(offsetof(UAvatarCreateSlotWidgetBase, _sound) == 0x000490, "Member 'UAvatarCreateSlotWidgetBase::_sound' has a wrong offset!");
static_assert(offsetof(UAvatarCreateSlotWidgetBase, Conponent) == 0x000498, "Member 'UAvatarCreateSlotWidgetBase::Conponent' has a wrong offset!");

// Class OutGameModule.AvatarCreateBattleStyleSlotWidget
// 0x0008 (0x04A8 - 0x04A0)
class UAvatarCreateBattleStyleSlotWidget final : public UAvatarCreateSlotWidgetBase
{
public:
	uint8                                         Pad_4A0[0x8];                                      // 0x04A0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UPaperSprite* BP_GetBattleStlyeImage(ECharacterId CharaID) const;
	class FText BP_GetBattleStlyeText(ECharacterId CharaID) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateBattleStyleSlotWidget">();
	}
	static class UAvatarCreateBattleStyleSlotWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateBattleStyleSlotWidget>();
	}
};
static_assert(alignof(UAvatarCreateBattleStyleSlotWidget) == 0x000008, "Wrong alignment on UAvatarCreateBattleStyleSlotWidget");
static_assert(sizeof(UAvatarCreateBattleStyleSlotWidget) == 0x0004A8, "Wrong size on UAvatarCreateBattleStyleSlotWidget");

// Class OutGameModule.PlayMenuRequestMessage
// 0x0000 (0x0350 - 0x0350)
class UPlayMenuRequestMessage final : public UWidgetBase
{
public:
	void OnNewInviteFlag(bool Flag);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuRequestMessage">();
	}
	static class UPlayMenuRequestMessage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuRequestMessage>();
	}
};
static_assert(alignof(UPlayMenuRequestMessage) == 0x000008, "Wrong alignment on UPlayMenuRequestMessage");
static_assert(sizeof(UPlayMenuRequestMessage) == 0x000350, "Wrong size on UPlayMenuRequestMessage");

// Class OutGameModule.AvatarCreateBattleStyleWidget
// 0x0038 (0x04C8 - 0x0490)
class UAvatarCreateBattleStyleWidget final : public UAvatarCreateAppWidget
{
public:
	class UWidgetButton*                          _cancelButton;                                     // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _selectedWindowBackGround;                         // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _selectedWindowFram;                               // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _selectedWindowTopBar;                             // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClippingWidget*                        _header;                                           // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _blockBackGround;                                  // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bLevelLoad;                                       // 0x04C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CloseWindow();
	void OnDecideButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	struct FEventReply OnMouseButtonDownBackGround(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnNegativeButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnPressButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateBattleStyleWidget">();
	}
	static class UAvatarCreateBattleStyleWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateBattleStyleWidget>();
	}
};
static_assert(alignof(UAvatarCreateBattleStyleWidget) == 0x000008, "Wrong alignment on UAvatarCreateBattleStyleWidget");
static_assert(sizeof(UAvatarCreateBattleStyleWidget) == 0x0004C8, "Wrong size on UAvatarCreateBattleStyleWidget");
static_assert(offsetof(UAvatarCreateBattleStyleWidget, _cancelButton) == 0x000490, "Member 'UAvatarCreateBattleStyleWidget::_cancelButton' has a wrong offset!");
static_assert(offsetof(UAvatarCreateBattleStyleWidget, _selectedWindowBackGround) == 0x000498, "Member 'UAvatarCreateBattleStyleWidget::_selectedWindowBackGround' has a wrong offset!");
static_assert(offsetof(UAvatarCreateBattleStyleWidget, _selectedWindowFram) == 0x0004A0, "Member 'UAvatarCreateBattleStyleWidget::_selectedWindowFram' has a wrong offset!");
static_assert(offsetof(UAvatarCreateBattleStyleWidget, _selectedWindowTopBar) == 0x0004A8, "Member 'UAvatarCreateBattleStyleWidget::_selectedWindowTopBar' has a wrong offset!");
static_assert(offsetof(UAvatarCreateBattleStyleWidget, _header) == 0x0004B0, "Member 'UAvatarCreateBattleStyleWidget::_header' has a wrong offset!");
static_assert(offsetof(UAvatarCreateBattleStyleWidget, _blockBackGround) == 0x0004B8, "Member 'UAvatarCreateBattleStyleWidget::_blockBackGround' has a wrong offset!");
static_assert(offsetof(UAvatarCreateBattleStyleWidget, _bLevelLoad) == 0x0004C0, "Member 'UAvatarCreateBattleStyleWidget::_bLevelLoad' has a wrong offset!");

// Class OutGameModule.AvatarCreateButtonWidget
// 0x0028 (0x0378 - 0x0350)
class UAvatarCreateButtonWidget final : public UWidgetBase
{
public:
	class UAvatarCreateBaseListEntryObject*       _entryObject;                                      // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNamedSlot*                             _buttonFunctionNamedSlot;                          // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNamedSlot*                             _buttonImageNamedSlot;                             // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                           _buttonImage;                                      // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _checkImage;                                       // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class UAvatarCreateFunctionSlotWidget* BP_GetFunctionSlotWidget();
	void BP_SetEntryObject(class UAvatarCreateBaseListEntryObject* Item);
	void BP_SetupButtonStyle(float ProgressRate, const struct FLinearColor& ProgressColor, const struct FSlateColor& Color, ESlateVisibility ImageVisibility, class UUserWidget* NamedSlotWidget, class UUserWidget* NamedFunctionSlotWidget);

	class UAvatarCreateBaseListEntryObject* BP_GetEntryObject() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateButtonWidget">();
	}
	static class UAvatarCreateButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateButtonWidget>();
	}
};
static_assert(alignof(UAvatarCreateButtonWidget) == 0x000008, "Wrong alignment on UAvatarCreateButtonWidget");
static_assert(sizeof(UAvatarCreateButtonWidget) == 0x000378, "Wrong size on UAvatarCreateButtonWidget");
static_assert(offsetof(UAvatarCreateButtonWidget, _entryObject) == 0x000350, "Member 'UAvatarCreateButtonWidget::_entryObject' has a wrong offset!");
static_assert(offsetof(UAvatarCreateButtonWidget, _buttonFunctionNamedSlot) == 0x000358, "Member 'UAvatarCreateButtonWidget::_buttonFunctionNamedSlot' has a wrong offset!");
static_assert(offsetof(UAvatarCreateButtonWidget, _buttonImageNamedSlot) == 0x000360, "Member 'UAvatarCreateButtonWidget::_buttonImageNamedSlot' has a wrong offset!");
static_assert(offsetof(UAvatarCreateButtonWidget, _buttonImage) == 0x000368, "Member 'UAvatarCreateButtonWidget::_buttonImage' has a wrong offset!");
static_assert(offsetof(UAvatarCreateButtonWidget, _checkImage) == 0x000370, "Member 'UAvatarCreateButtonWidget::_checkImage' has a wrong offset!");

// Class OutGameModule.PlayMenuMyADDisplay
// 0x0010 (0x0360 - 0x0350)
class UPlayMenuMyADDisplay final : public UWidgetBase
{
public:
	class UMyADDisplayWidget*                     _displayAD;                                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _playerName;                                       // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuMyADDisplay">();
	}
	static class UPlayMenuMyADDisplay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuMyADDisplay>();
	}
};
static_assert(alignof(UPlayMenuMyADDisplay) == 0x000008, "Wrong alignment on UPlayMenuMyADDisplay");
static_assert(sizeof(UPlayMenuMyADDisplay) == 0x000360, "Wrong size on UPlayMenuMyADDisplay");
static_assert(offsetof(UPlayMenuMyADDisplay, _displayAD) == 0x000350, "Member 'UPlayMenuMyADDisplay::_displayAD' has a wrong offset!");
static_assert(offsetof(UPlayMenuMyADDisplay, _playerName) == 0x000358, "Member 'UPlayMenuMyADDisplay::_playerName' has a wrong offset!");

// Class OutGameModule.AvatarCreateColorButtonWidget
// 0x0028 (0x04B0 - 0x0488)
class UAvatarCreateColorButtonWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 _equipImage;                                       // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 _backImage;                                        // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAvatarCreateDetailColorListEntryObject* _entryObject;                                      // 0x04A0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4A8[0x8];                                      // 0x04A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateColorButtonWidget">();
	}
	static class UAvatarCreateColorButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateColorButtonWidget>();
	}
};
static_assert(alignof(UAvatarCreateColorButtonWidget) == 0x000008, "Wrong alignment on UAvatarCreateColorButtonWidget");
static_assert(sizeof(UAvatarCreateColorButtonWidget) == 0x0004B0, "Wrong size on UAvatarCreateColorButtonWidget");
static_assert(offsetof(UAvatarCreateColorButtonWidget, _equipImage) == 0x000490, "Member 'UAvatarCreateColorButtonWidget::_equipImage' has a wrong offset!");
static_assert(offsetof(UAvatarCreateColorButtonWidget, _backImage) == 0x000498, "Member 'UAvatarCreateColorButtonWidget::_backImage' has a wrong offset!");
static_assert(offsetof(UAvatarCreateColorButtonWidget, _entryObject) == 0x0004A0, "Member 'UAvatarCreateColorButtonWidget::_entryObject' has a wrong offset!");

// Class OutGameModule.AvatarCreateColorListWidget
// 0x0080 (0x0480 - 0x0400)
class UAvatarCreateColorListWidget final : public UCustomTileViewHasWidget
{
public:
	TMap<EAvatarDetailedAppearanceColorSettingItem, EAvatarColorParts> _colorParts;                                       // 0x0400(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	class UAvatarCreateColorButtonWidget*         _colorDisplayButton;                               // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAvatarCreateColorButtonWidget*         _colorDisplayButton2;                              // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isOpenedPalette;                                  // 0x0460(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 _blackBack;                                        // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_470[0x10];                                     // 0x0470(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClosePalette();
	void DoCustomWidgetNavigation(EUINavigation UiNavigation);
	void OnAddFocusPaletteButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideDisplayButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecidePaletteButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnPressDisplayButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnPressPaletteButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateColorListWidget">();
	}
	static class UAvatarCreateColorListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateColorListWidget>();
	}
};
static_assert(alignof(UAvatarCreateColorListWidget) == 0x000008, "Wrong alignment on UAvatarCreateColorListWidget");
static_assert(sizeof(UAvatarCreateColorListWidget) == 0x000480, "Wrong size on UAvatarCreateColorListWidget");
static_assert(offsetof(UAvatarCreateColorListWidget, _colorParts) == 0x000400, "Member 'UAvatarCreateColorListWidget::_colorParts' has a wrong offset!");
static_assert(offsetof(UAvatarCreateColorListWidget, _colorDisplayButton) == 0x000450, "Member 'UAvatarCreateColorListWidget::_colorDisplayButton' has a wrong offset!");
static_assert(offsetof(UAvatarCreateColorListWidget, _colorDisplayButton2) == 0x000458, "Member 'UAvatarCreateColorListWidget::_colorDisplayButton2' has a wrong offset!");
static_assert(offsetof(UAvatarCreateColorListWidget, _isOpenedPalette) == 0x000460, "Member 'UAvatarCreateColorListWidget::_isOpenedPalette' has a wrong offset!");
static_assert(offsetof(UAvatarCreateColorListWidget, _blackBack) == 0x000468, "Member 'UAvatarCreateColorListWidget::_blackBack' has a wrong offset!");

// Class OutGameModule.PlayMenuHamburgerWidget
// 0x0070 (0x0470 - 0x0400)
class UPlayMenuHamburgerWidget final : public UCustomTileViewHasWidget
{
public:
	class UTileView*                              _debugTileView;                                    // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _debugButton;                                      // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _debugserver;                                      // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundAtomCue*                          _openAtomCue;                                      // 0x0418(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayMenuHamburgerLargeIconWidget*      _largeIcon01;                                      // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayMenuHamburgerLargeIconWidget*      _largeIcon02;                                      // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayMenuHamburgerLargeIconWidget*      _largeIcon03;                                      // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayMenuHamburgerLargeIconWidget*      _largeIcon04;                                      // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralEmptyWindow*              _emptyWindow;                                      // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _titleReturnWindow;                                // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UReturnButtonWidget*                    _returnButton;                                     // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_458[0x10];                                     // 0x0458(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	EMdPlayMenuHamburgerMenuList                  _selectMenuList;                                   // 0x0468(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CallDebugMenuCosmosWebApi();
	void CallDebugMenuMasterData();
	void CallDebugMenuVoiceChat();
	void CloseEmptyWindow();
	int32 GetLargeIconFocusIndex();
	void NonOnlineMatchingStartBattle(const class FString& StageName);
	void OnButtonSelectEvent(EMdPlayMenuHamburgerMenuList Type, bool UseFade);
	void OnCancelEmptyWindow(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnChangeBattleSequence(EBattleStartSequenceType Sequence);
	void OnClose();
	void OnClosedEmptyWindow();
	void OnCloseEvent();
	void OnDebugHoveredChangedEvent(class UObject* Item, bool bHovered);
	void OnDecidePopupWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnDecideReturnButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnFinishedFadeOut();
	void OnFinishedFadeOutEvent();
	void OnFinishedFadeOutReturnTitle();
	void OnOutsideButtonDownEmptyWindow();
	void OnReturnTitleFinishedFadeOut();
	void OnSelectEvent(class UUserWidget* Widget);
	void OnTileHoveredChangedEvent(class UObject* Item, bool bHovered);
	void OntileViewNavigationDown();
	void OntileViewNavigationUp(int32 CurrentIndex);
	void OpenTitleConfirmationWindow();
	bool SetNextLargeIconFocus(bool Right);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuHamburgerWidget">();
	}
	static class UPlayMenuHamburgerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuHamburgerWidget>();
	}
};
static_assert(alignof(UPlayMenuHamburgerWidget) == 0x000008, "Wrong alignment on UPlayMenuHamburgerWidget");
static_assert(sizeof(UPlayMenuHamburgerWidget) == 0x000470, "Wrong size on UPlayMenuHamburgerWidget");
static_assert(offsetof(UPlayMenuHamburgerWidget, _debugTileView) == 0x000400, "Member 'UPlayMenuHamburgerWidget::_debugTileView' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerWidget, _debugButton) == 0x000408, "Member 'UPlayMenuHamburgerWidget::_debugButton' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerWidget, _debugserver) == 0x000410, "Member 'UPlayMenuHamburgerWidget::_debugserver' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerWidget, _openAtomCue) == 0x000418, "Member 'UPlayMenuHamburgerWidget::_openAtomCue' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerWidget, _largeIcon01) == 0x000420, "Member 'UPlayMenuHamburgerWidget::_largeIcon01' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerWidget, _largeIcon02) == 0x000428, "Member 'UPlayMenuHamburgerWidget::_largeIcon02' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerWidget, _largeIcon03) == 0x000430, "Member 'UPlayMenuHamburgerWidget::_largeIcon03' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerWidget, _largeIcon04) == 0x000438, "Member 'UPlayMenuHamburgerWidget::_largeIcon04' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerWidget, _emptyWindow) == 0x000440, "Member 'UPlayMenuHamburgerWidget::_emptyWindow' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerWidget, _titleReturnWindow) == 0x000448, "Member 'UPlayMenuHamburgerWidget::_titleReturnWindow' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerWidget, _returnButton) == 0x000450, "Member 'UPlayMenuHamburgerWidget::_returnButton' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerWidget, _selectMenuList) == 0x000468, "Member 'UPlayMenuHamburgerWidget::_selectMenuList' has a wrong offset!");

// Class OutGameModule.AvatarCreateDetailSettingTopWidget
// 0x0028 (0x0410 - 0x03E8)
class UAvatarCreateDetailSettingTopWidget final : public UAppWidget
{
public:
	class UAvatarCreateDetailSettingWidget*       _base;                                             // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAvatarCreateDetailSettingWidget*       _color;                                            // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTabWidget*                             _tabWidget;                                        // 0x03F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _tabSwitcher;                                      // 0x0400(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_408[0x8];                                      // 0x0408(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_SetFocusList();
	void ChangeTab(int32 NextTab);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateDetailSettingTopWidget">();
	}
	static class UAvatarCreateDetailSettingTopWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateDetailSettingTopWidget>();
	}
};
static_assert(alignof(UAvatarCreateDetailSettingTopWidget) == 0x000008, "Wrong alignment on UAvatarCreateDetailSettingTopWidget");
static_assert(sizeof(UAvatarCreateDetailSettingTopWidget) == 0x000410, "Wrong size on UAvatarCreateDetailSettingTopWidget");
static_assert(offsetof(UAvatarCreateDetailSettingTopWidget, _base) == 0x0003E8, "Member 'UAvatarCreateDetailSettingTopWidget::_base' has a wrong offset!");
static_assert(offsetof(UAvatarCreateDetailSettingTopWidget, _color) == 0x0003F0, "Member 'UAvatarCreateDetailSettingTopWidget::_color' has a wrong offset!");
static_assert(offsetof(UAvatarCreateDetailSettingTopWidget, _tabWidget) == 0x0003F8, "Member 'UAvatarCreateDetailSettingTopWidget::_tabWidget' has a wrong offset!");
static_assert(offsetof(UAvatarCreateDetailSettingTopWidget, _tabSwitcher) == 0x000400, "Member 'UAvatarCreateDetailSettingTopWidget::_tabSwitcher' has a wrong offset!");

// Class OutGameModule.AvatarCreateDetailSettingWidget
// 0x0018 (0x04A8 - 0x0490)
class UAvatarCreateDetailSettingWidget final : public UAvatarCreateAppWidget
{
public:
	FMulticastInlineDelegateProperty_             _OnOpenList;                                       // 0x0490(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UAvatarCreateSelectMenuWidget*          _selectMenuWidget;                                 // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void CallOnOpenList(bool Hidden);
	TArray<float> GetSliderValue(EAvatarDetailedAppearanceSettingBaseItem baseItem);
	void OnOpenListDelegate__DelegateSignature(bool Hidden);
	void SetCaptureSceneCamera();
	void SetCaptureType(ESceneCaptureAvatarTypeId ID, int32 bodyScaleIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateDetailSettingWidget">();
	}
	static class UAvatarCreateDetailSettingWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateDetailSettingWidget>();
	}
};
static_assert(alignof(UAvatarCreateDetailSettingWidget) == 0x000008, "Wrong alignment on UAvatarCreateDetailSettingWidget");
static_assert(sizeof(UAvatarCreateDetailSettingWidget) == 0x0004A8, "Wrong size on UAvatarCreateDetailSettingWidget");
static_assert(offsetof(UAvatarCreateDetailSettingWidget, _OnOpenList) == 0x000490, "Member 'UAvatarCreateDetailSettingWidget::_OnOpenList' has a wrong offset!");
static_assert(offsetof(UAvatarCreateDetailSettingWidget, _selectMenuWidget) == 0x0004A0, "Member 'UAvatarCreateDetailSettingWidget::_selectMenuWidget' has a wrong offset!");

// Class OutGameModule.PlayMenuRankingEliteWidget
// 0x0040 (0x0390 - 0x0350)
class UPlayMenuRankingEliteWidget final : public UWidgetBase
{
public:
	class UTextBlock*                             _seasonText;                                       // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _reagueOld;                                        // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _reagueNew;                                        // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetButton*                          _emptyButton;                                      // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_             _onCloseDelegate;                                  // 0x0370(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_380[0x10];                                     // 0x0380(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CloseDelegate__DelegateSignature();
	void OnPressEmptyButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuRankingEliteWidget">();
	}
	static class UPlayMenuRankingEliteWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuRankingEliteWidget>();
	}
};
static_assert(alignof(UPlayMenuRankingEliteWidget) == 0x000008, "Wrong alignment on UPlayMenuRankingEliteWidget");
static_assert(sizeof(UPlayMenuRankingEliteWidget) == 0x000390, "Wrong size on UPlayMenuRankingEliteWidget");
static_assert(offsetof(UPlayMenuRankingEliteWidget, _seasonText) == 0x000350, "Member 'UPlayMenuRankingEliteWidget::_seasonText' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingEliteWidget, _reagueOld) == 0x000358, "Member 'UPlayMenuRankingEliteWidget::_reagueOld' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingEliteWidget, _reagueNew) == 0x000360, "Member 'UPlayMenuRankingEliteWidget::_reagueNew' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingEliteWidget, _emptyButton) == 0x000368, "Member 'UPlayMenuRankingEliteWidget::_emptyButton' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingEliteWidget, _onCloseDelegate) == 0x000370, "Member 'UPlayMenuRankingEliteWidget::_onCloseDelegate' has a wrong offset!");

// Class OutGameModule.AvatarCreateFunctionSlotWidget
// 0x0020 (0x04C0 - 0x04A0)
class UAvatarCreateFunctionSlotWidget final : public UAvatarCreateSlotWidgetBase
{
public:
	FMulticastInlineDelegateProperty_             _onChangedValueDelegate;                           // 0x04A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             _onChangedIndexDelegate;                           // 0x04B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	bool BP_InputWidget(bool Left);
	class UAvatarCreateFunctionSlotWidget* BP_SetupCarouselWidget(const struct FAvatarCreateCarouselData& Data);
	class UAvatarCreateFunctionSlotWidget* BP_SetupColorPaletteWidget(const struct FAvatarColorPaletteData& Data);
	class UAvatarCreateFunctionSlotWidget* BP_SetupSliderWidget(const struct FAvatarCreateSliderData& Data);
	class UAvatarCreateFunctionSlotWidget* BP_UpdateColorPaletteWidget(const struct FAvatarColorPaletteData& Data);
	void OnChangedIndexEventDispatcher__DelegateSignature(int32 Index_0);
	void OnChangedValueEventDispatcher__DelegateSignature(float Value, int32 Index_0);
	void OnUpdateStyle();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateFunctionSlotWidget">();
	}
	static class UAvatarCreateFunctionSlotWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateFunctionSlotWidget>();
	}
};
static_assert(alignof(UAvatarCreateFunctionSlotWidget) == 0x000008, "Wrong alignment on UAvatarCreateFunctionSlotWidget");
static_assert(sizeof(UAvatarCreateFunctionSlotWidget) == 0x0004C0, "Wrong size on UAvatarCreateFunctionSlotWidget");
static_assert(offsetof(UAvatarCreateFunctionSlotWidget, _onChangedValueDelegate) == 0x0004A0, "Member 'UAvatarCreateFunctionSlotWidget::_onChangedValueDelegate' has a wrong offset!");
static_assert(offsetof(UAvatarCreateFunctionSlotWidget, _onChangedIndexDelegate) == 0x0004B0, "Member 'UAvatarCreateFunctionSlotWidget::_onChangedIndexDelegate' has a wrong offset!");

// Class OutGameModule.AvatarCreateBaseListEntryObject
// 0x0058 (0x0088 - 0x0030)
class UAvatarCreateBaseListEntryObject : public UListViewEntryObjectBase
{
public:
	EAvatarSlotType                               _slotType;                                         // 0x0030(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchorData                            _categoryAnchor;                                   // 0x0034(0x0028)(BlueprintVisible, NoDestructor, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	struct FAnchorData                            _selectItemAnchor;                                 // 0x005C(0x0028)(BlueprintVisible, NoDestructor, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateBaseListEntryObject">();
	}
	static class UAvatarCreateBaseListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateBaseListEntryObject>();
	}
};
static_assert(alignof(UAvatarCreateBaseListEntryObject) == 0x000008, "Wrong alignment on UAvatarCreateBaseListEntryObject");
static_assert(sizeof(UAvatarCreateBaseListEntryObject) == 0x000088, "Wrong size on UAvatarCreateBaseListEntryObject");
static_assert(offsetof(UAvatarCreateBaseListEntryObject, _slotType) == 0x000030, "Member 'UAvatarCreateBaseListEntryObject::_slotType' has a wrong offset!");
static_assert(offsetof(UAvatarCreateBaseListEntryObject, _categoryAnchor) == 0x000034, "Member 'UAvatarCreateBaseListEntryObject::_categoryAnchor' has a wrong offset!");
static_assert(offsetof(UAvatarCreateBaseListEntryObject, _selectItemAnchor) == 0x00005C, "Member 'UAvatarCreateBaseListEntryObject::_selectItemAnchor' has a wrong offset!");

// Class OutGameModule.SeasonPassLicenceTab
// 0x0030 (0x0380 - 0x0350)
class USeasonPassLicenceTab final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomScrollBox*                       _stockItemList;                                    // 0x0360(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomScrollBox*                       _currentScrollBox;                                 // 0x0368(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USeasonPassStockList*                   _stockList;                                        // 0x0370(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTimeWidget*                            _seasonPassTimer;                                  // 0x0378(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_CreateStockItem(int32 Index_0, int32 Stockindex, class USeasonPassStockEntry* Entry);
	void BP_FocusStockList(bool IsUp, int32 Stockindex);
	TArray<class USeasonPassListObject*> BP_GetStockList();
	void BP_OpenGetItemWindow();
	void BP_ReceiveStockList(const struct FDateTime& ExpireAt);
	void BP_SetStockList(int32 SwitcherNumber);
	void SetUpListStockList();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassLicenceTab">();
	}
	static class USeasonPassLicenceTab* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassLicenceTab>();
	}
};
static_assert(alignof(USeasonPassLicenceTab) == 0x000008, "Wrong alignment on USeasonPassLicenceTab");
static_assert(sizeof(USeasonPassLicenceTab) == 0x000380, "Wrong size on USeasonPassLicenceTab");
static_assert(offsetof(USeasonPassLicenceTab, _stockItemList) == 0x000360, "Member 'USeasonPassLicenceTab::_stockItemList' has a wrong offset!");
static_assert(offsetof(USeasonPassLicenceTab, _currentScrollBox) == 0x000368, "Member 'USeasonPassLicenceTab::_currentScrollBox' has a wrong offset!");
static_assert(offsetof(USeasonPassLicenceTab, _stockList) == 0x000370, "Member 'USeasonPassLicenceTab::_stockList' has a wrong offset!");
static_assert(offsetof(USeasonPassLicenceTab, _seasonPassTimer) == 0x000378, "Member 'USeasonPassLicenceTab::_seasonPassTimer' has a wrong offset!");

// Class OutGameModule.AvatarCreateSelectMenuListEntryObject
// 0x0000 (0x0088 - 0x0088)
class UAvatarCreateSelectMenuListEntryObject final : public UAvatarCreateBaseListEntryObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateSelectMenuListEntryObject">();
	}
	static class UAvatarCreateSelectMenuListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateSelectMenuListEntryObject>();
	}
};
static_assert(alignof(UAvatarCreateSelectMenuListEntryObject) == 0x000008, "Wrong alignment on UAvatarCreateSelectMenuListEntryObject");
static_assert(sizeof(UAvatarCreateSelectMenuListEntryObject) == 0x000088, "Wrong size on UAvatarCreateSelectMenuListEntryObject");

// Class OutGameModule.AvatarCreateMenuListEntryObject
// 0x0008 (0x0090 - 0x0088)
class UAvatarCreateMenuListEntryObject final : public UAvatarCreateBaseListEntryObject
{
public:
	EAvatarMenuType                               _menuType;                                         // 0x0088(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateMenuListEntryObject">();
	}
	static class UAvatarCreateMenuListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateMenuListEntryObject>();
	}
};
static_assert(alignof(UAvatarCreateMenuListEntryObject) == 0x000008, "Wrong alignment on UAvatarCreateMenuListEntryObject");
static_assert(sizeof(UAvatarCreateMenuListEntryObject) == 0x000090, "Wrong size on UAvatarCreateMenuListEntryObject");
static_assert(offsetof(UAvatarCreateMenuListEntryObject, _menuType) == 0x000088, "Member 'UAvatarCreateMenuListEntryObject::_menuType' has a wrong offset!");

// Class OutGameModule.SeasonPassDayEntry
// 0x0020 (0x0370 - 0x0350)
class USeasonPassDayEntry final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             _dayNumber;                                        // 0x0360(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _back;                                             // 0x0368(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_SetDayText(int32 Day);
	void BP_SetImageSize(int32 CombineItem);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassDayEntry">();
	}
	static class USeasonPassDayEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassDayEntry>();
	}
};
static_assert(alignof(USeasonPassDayEntry) == 0x000008, "Wrong alignment on USeasonPassDayEntry");
static_assert(sizeof(USeasonPassDayEntry) == 0x000370, "Wrong size on USeasonPassDayEntry");
static_assert(offsetof(USeasonPassDayEntry, _dayNumber) == 0x000360, "Member 'USeasonPassDayEntry::_dayNumber' has a wrong offset!");
static_assert(offsetof(USeasonPassDayEntry, _back) == 0x000368, "Member 'USeasonPassDayEntry::_back' has a wrong offset!");

// Class OutGameModule.AvatarCreateBattleStyleListEntryObject
// 0x0008 (0x0090 - 0x0088)
class UAvatarCreateBattleStyleListEntryObject final : public UAvatarCreateBaseListEntryObject
{
public:
	ECharacterId                                  _charaId;                                          // 0x0088(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateBattleStyleListEntryObject">();
	}
	static class UAvatarCreateBattleStyleListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateBattleStyleListEntryObject>();
	}
};
static_assert(alignof(UAvatarCreateBattleStyleListEntryObject) == 0x000008, "Wrong alignment on UAvatarCreateBattleStyleListEntryObject");
static_assert(sizeof(UAvatarCreateBattleStyleListEntryObject) == 0x000090, "Wrong size on UAvatarCreateBattleStyleListEntryObject");
static_assert(offsetof(UAvatarCreateBattleStyleListEntryObject, _charaId) == 0x000088, "Member 'UAvatarCreateBattleStyleListEntryObject::_charaId' has a wrong offset!");

// Class OutGameModule.AvatarCreateBaseSettingsListEntryObject
// 0x0018 (0x00A0 - 0x0088)
class UAvatarCreateBaseSettingsListEntryObject final : public UAvatarCreateBaseListEntryObject
{
public:
	EAvatarDetailedAppearanceSettingBaseItem      _type;                                             // 0x0088(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 _sliderValue;                                      // 0x0090(0x0010)(BlueprintVisible, ZeroConstructor, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateBaseSettingsListEntryObject">();
	}
	static class UAvatarCreateBaseSettingsListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateBaseSettingsListEntryObject>();
	}
};
static_assert(alignof(UAvatarCreateBaseSettingsListEntryObject) == 0x000008, "Wrong alignment on UAvatarCreateBaseSettingsListEntryObject");
static_assert(sizeof(UAvatarCreateBaseSettingsListEntryObject) == 0x0000A0, "Wrong size on UAvatarCreateBaseSettingsListEntryObject");
static_assert(offsetof(UAvatarCreateBaseSettingsListEntryObject, _type) == 0x000088, "Member 'UAvatarCreateBaseSettingsListEntryObject::_type' has a wrong offset!");
static_assert(offsetof(UAvatarCreateBaseSettingsListEntryObject, _sliderValue) == 0x000090, "Member 'UAvatarCreateBaseSettingsListEntryObject::_sliderValue' has a wrong offset!");

// Class OutGameModule.PlayMenuPlayerStatusVariationIconWidget
// 0x0008 (0x0358 - 0x0350)
class UPlayMenuPlayerStatusVariationIconWidget final : public UWidgetBase
{
public:
	class UCanvasPanel*                           _basePanel;                                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void UpdateIcon(ECharacterId CharacterId, int32 VaritaionNo);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuPlayerStatusVariationIconWidget">();
	}
	static class UPlayMenuPlayerStatusVariationIconWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuPlayerStatusVariationIconWidget>();
	}
};
static_assert(alignof(UPlayMenuPlayerStatusVariationIconWidget) == 0x000008, "Wrong alignment on UPlayMenuPlayerStatusVariationIconWidget");
static_assert(sizeof(UPlayMenuPlayerStatusVariationIconWidget) == 0x000358, "Wrong size on UPlayMenuPlayerStatusVariationIconWidget");
static_assert(offsetof(UPlayMenuPlayerStatusVariationIconWidget, _basePanel) == 0x000350, "Member 'UPlayMenuPlayerStatusVariationIconWidget::_basePanel' has a wrong offset!");

// Class OutGameModule.AvatarCreateDetailSettingsListEntryObject
// 0x0008 (0x0090 - 0x0088)
class UAvatarCreateDetailSettingsListEntryObject : public UAvatarCreateBaseListEntryObject
{
public:
	EAvatarDetailedAppearanceSettingDetailItem    _type;                                             // 0x0088(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateDetailSettingsListEntryObject">();
	}
	static class UAvatarCreateDetailSettingsListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateDetailSettingsListEntryObject>();
	}
};
static_assert(alignof(UAvatarCreateDetailSettingsListEntryObject) == 0x000008, "Wrong alignment on UAvatarCreateDetailSettingsListEntryObject");
static_assert(sizeof(UAvatarCreateDetailSettingsListEntryObject) == 0x000090, "Wrong size on UAvatarCreateDetailSettingsListEntryObject");
static_assert(offsetof(UAvatarCreateDetailSettingsListEntryObject, _type) == 0x000088, "Member 'UAvatarCreateDetailSettingsListEntryObject::_type' has a wrong offset!");

// Class OutGameModule.AvatarCreateDetailSettingsItemListEntryObject
// 0x0008 (0x0098 - 0x0090)
class UAvatarCreateDetailSettingsItemListEntryObject final : public UAvatarCreateDetailSettingsListEntryObject
{
public:
	int32                                         _columNum;                                         // 0x0090(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateDetailSettingsItemListEntryObject">();
	}
	static class UAvatarCreateDetailSettingsItemListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateDetailSettingsItemListEntryObject>();
	}
};
static_assert(alignof(UAvatarCreateDetailSettingsItemListEntryObject) == 0x000008, "Wrong alignment on UAvatarCreateDetailSettingsItemListEntryObject");
static_assert(sizeof(UAvatarCreateDetailSettingsItemListEntryObject) == 0x000098, "Wrong size on UAvatarCreateDetailSettingsItemListEntryObject");
static_assert(offsetof(UAvatarCreateDetailSettingsItemListEntryObject, _columNum) == 0x000090, "Member 'UAvatarCreateDetailSettingsItemListEntryObject::_columNum' has a wrong offset!");

// Class OutGameModule.SeasonPassGetItemWidget
// 0x0000 (0x0350 - 0x0350)
class USeasonPassGetItemWidget final : public UWidgetBase
{
public:
	void BP_CallMainMenuFetchEvent();
	void BP_OnItemGetDisPlayOpen();
	void BP_OnItemGetDispPlayClose();
	void CallMainMenuFetchEvent();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassGetItemWidget">();
	}
	static class USeasonPassGetItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassGetItemWidget>();
	}
};
static_assert(alignof(USeasonPassGetItemWidget) == 0x000008, "Wrong alignment on USeasonPassGetItemWidget");
static_assert(sizeof(USeasonPassGetItemWidget) == 0x000350, "Wrong size on USeasonPassGetItemWidget");

// Class OutGameModule.AvatarCreateDetailColorListEntryObject
// 0x0010 (0x0098 - 0x0088)
class UAvatarCreateDetailColorListEntryObject final : public UAvatarCreateBaseListEntryObject
{
public:
	EAvatarDetailedAppearanceColorSettingItem     _type;                                             // 0x0088(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EAvatarColorParts                             _parts;                                            // 0x0089(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _maxNum;                                           // 0x008C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _columNum;                                         // 0x0090(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateDetailColorListEntryObject">();
	}
	static class UAvatarCreateDetailColorListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateDetailColorListEntryObject>();
	}
};
static_assert(alignof(UAvatarCreateDetailColorListEntryObject) == 0x000008, "Wrong alignment on UAvatarCreateDetailColorListEntryObject");
static_assert(sizeof(UAvatarCreateDetailColorListEntryObject) == 0x000098, "Wrong size on UAvatarCreateDetailColorListEntryObject");
static_assert(offsetof(UAvatarCreateDetailColorListEntryObject, _type) == 0x000088, "Member 'UAvatarCreateDetailColorListEntryObject::_type' has a wrong offset!");
static_assert(offsetof(UAvatarCreateDetailColorListEntryObject, _parts) == 0x000089, "Member 'UAvatarCreateDetailColorListEntryObject::_parts' has a wrong offset!");
static_assert(offsetof(UAvatarCreateDetailColorListEntryObject, _maxNum) == 0x00008C, "Member 'UAvatarCreateDetailColorListEntryObject::_maxNum' has a wrong offset!");
static_assert(offsetof(UAvatarCreateDetailColorListEntryObject, _columNum) == 0x000090, "Member 'UAvatarCreateDetailColorListEntryObject::_columNum' has a wrong offset!");

// Class OutGameModule.AvatarCreateSlotHasWidget
// 0x0020 (0x04A8 - 0x0488)
class UAvatarCreateSlotHasWidget : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAvatarCreateBaseListEntryObject*       _entryObject;                                      // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetBase*                            _button;                                           // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4A0[0x8];                                      // 0x04A0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_RemoveDecideDelegate(bool Enable);
	void BP_SetEntryObject(class UAvatarCreateBaseListEntryObject* Item);

	class UAvatarCreateBaseListEntryObject* BP_GetEntryObject() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateSlotHasWidget">();
	}
	static class UAvatarCreateSlotHasWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateSlotHasWidget>();
	}
};
static_assert(alignof(UAvatarCreateSlotHasWidget) == 0x000008, "Wrong alignment on UAvatarCreateSlotHasWidget");
static_assert(sizeof(UAvatarCreateSlotHasWidget) == 0x0004A8, "Wrong size on UAvatarCreateSlotHasWidget");
static_assert(offsetof(UAvatarCreateSlotHasWidget, _entryObject) == 0x000490, "Member 'UAvatarCreateSlotHasWidget::_entryObject' has a wrong offset!");
static_assert(offsetof(UAvatarCreateSlotHasWidget, _button) == 0x000498, "Member 'UAvatarCreateSlotHasWidget::_button' has a wrong offset!");

// Class OutGameModule.RankingEmblemWidget
// 0x0020 (0x0370 - 0x0350)
class URankingEmblemWidget final : public UWidgetBase
{
public:
	class UWidgetSwitcher*                        _swicher;                                          // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _nowMember;                                        // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _maxMember;                                        // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProfileDisplayEmblemWidget*            _playerEmblem;                                     // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankingEmblemWidget">();
	}
	static class URankingEmblemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankingEmblemWidget>();
	}
};
static_assert(alignof(URankingEmblemWidget) == 0x000008, "Wrong alignment on URankingEmblemWidget");
static_assert(sizeof(URankingEmblemWidget) == 0x000370, "Wrong size on URankingEmblemWidget");
static_assert(offsetof(URankingEmblemWidget, _swicher) == 0x000350, "Member 'URankingEmblemWidget::_swicher' has a wrong offset!");
static_assert(offsetof(URankingEmblemWidget, _nowMember) == 0x000358, "Member 'URankingEmblemWidget::_nowMember' has a wrong offset!");
static_assert(offsetof(URankingEmblemWidget, _maxMember) == 0x000360, "Member 'URankingEmblemWidget::_maxMember' has a wrong offset!");
static_assert(offsetof(URankingEmblemWidget, _playerEmblem) == 0x000368, "Member 'URankingEmblemWidget::_playerEmblem' has a wrong offset!");

// Class OutGameModule.AvatarCreateMenuWidget
// 0x0000 (0x04A8 - 0x04A8)
class UAvatarCreateMenuWidget final : public UAvatarCreateSlotHasWidget
{
public:
	class UAvatarCreateButtonWidget* BP_GetMenuButton();
	void OnSetupBaseSettingsList();
	void OnSetupBattleStyleList();
	void OnSetupColorSettingsList();
	void OnSetupDetailSettingsList();
	void OnSetupMenuList();
	void OnSetupPlayForPowerList();
	void OnSetupSelectMenuList();
	void OnSetupVoiceList();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateMenuWidget">();
	}
	static class UAvatarCreateMenuWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateMenuWidget>();
	}
};
static_assert(alignof(UAvatarCreateMenuWidget) == 0x000008, "Wrong alignment on UAvatarCreateMenuWidget");
static_assert(sizeof(UAvatarCreateMenuWidget) == 0x0004A8, "Wrong size on UAvatarCreateMenuWidget");

// Class OutGameModule.AvatarCreatePartsButtonWidget
// 0x0028 (0x04B0 - 0x0488)
class UAvatarCreatePartsButtonWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x10];                                     // 0x0488(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 _backImage;                                        // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 _equipImage;                                       // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _debugDisplay;                                     // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreatePartsButtonWidget">();
	}
	static class UAvatarCreatePartsButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreatePartsButtonWidget>();
	}
};
static_assert(alignof(UAvatarCreatePartsButtonWidget) == 0x000008, "Wrong alignment on UAvatarCreatePartsButtonWidget");
static_assert(sizeof(UAvatarCreatePartsButtonWidget) == 0x0004B0, "Wrong size on UAvatarCreatePartsButtonWidget");
static_assert(offsetof(UAvatarCreatePartsButtonWidget, _backImage) == 0x000498, "Member 'UAvatarCreatePartsButtonWidget::_backImage' has a wrong offset!");
static_assert(offsetof(UAvatarCreatePartsButtonWidget, _equipImage) == 0x0004A0, "Member 'UAvatarCreatePartsButtonWidget::_equipImage' has a wrong offset!");
static_assert(offsetof(UAvatarCreatePartsButtonWidget, _debugDisplay) == 0x0004A8, "Member 'UAvatarCreatePartsButtonWidget::_debugDisplay' has a wrong offset!");

// Class OutGameModule.CharacterPanel
// 0x0030 (0x04B8 - 0x0488)
class UCharacterPanel : public UWidgetButton
{
public:
	class FString                                 _tag;                                              // 0x0488(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     _renderTargetMaterial;                             // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               _renderTargetMaterialInst;                         // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASceneCaptureCreator*                   _sceneCaptureCreator;                              // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _charaImage;                                       // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_SetCharacter(const ECharacterId CharacterId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CharacterPanel">();
	}
	static class UCharacterPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterPanel>();
	}
};
static_assert(alignof(UCharacterPanel) == 0x000008, "Wrong alignment on UCharacterPanel");
static_assert(sizeof(UCharacterPanel) == 0x0004B8, "Wrong size on UCharacterPanel");
static_assert(offsetof(UCharacterPanel, _tag) == 0x000488, "Member 'UCharacterPanel::_tag' has a wrong offset!");
static_assert(offsetof(UCharacterPanel, _renderTargetMaterial) == 0x000498, "Member 'UCharacterPanel::_renderTargetMaterial' has a wrong offset!");
static_assert(offsetof(UCharacterPanel, _renderTargetMaterialInst) == 0x0004A0, "Member 'UCharacterPanel::_renderTargetMaterialInst' has a wrong offset!");
static_assert(offsetof(UCharacterPanel, _sceneCaptureCreator) == 0x0004A8, "Member 'UCharacterPanel::_sceneCaptureCreator' has a wrong offset!");
static_assert(offsetof(UCharacterPanel, _charaImage) == 0x0004B0, "Member 'UCharacterPanel::_charaImage' has a wrong offset!");

// Class OutGameModule.PlayerNameCharacterPanel
// 0x0008 (0x04C0 - 0x04B8)
class UPlayerNameCharacterPanel : public UCharacterPanel
{
public:
	class UTextBlock*                             _nameText;                                         // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_SetName(const class FString& Name_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayerNameCharacterPanel">();
	}
	static class UPlayerNameCharacterPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerNameCharacterPanel>();
	}
};
static_assert(alignof(UPlayerNameCharacterPanel) == 0x000008, "Wrong alignment on UPlayerNameCharacterPanel");
static_assert(sizeof(UPlayerNameCharacterPanel) == 0x0004C0, "Wrong size on UPlayerNameCharacterPanel");
static_assert(offsetof(UPlayerNameCharacterPanel, _nameText) == 0x0004B8, "Member 'UPlayerNameCharacterPanel::_nameText' has a wrong offset!");

// Class OutGameModule.RankingCharacterPanel
// 0x0018 (0x04D8 - 0x04C0)
class URankingCharacterPanel final : public UPlayerNameCharacterPanel
{
public:
	class UTextBlock*                             _point;                                            // 0x04C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C8[0x10];                                     // 0x04C8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankingCharacterPanel">();
	}
	static class URankingCharacterPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankingCharacterPanel>();
	}
};
static_assert(alignof(URankingCharacterPanel) == 0x000008, "Wrong alignment on URankingCharacterPanel");
static_assert(sizeof(URankingCharacterPanel) == 0x0004D8, "Wrong size on URankingCharacterPanel");
static_assert(offsetof(URankingCharacterPanel, _point) == 0x0004C0, "Member 'URankingCharacterPanel::_point' has a wrong offset!");

// Class OutGameModule.AvatarCreatePartsListWidget
// 0x0058 (0x0458 - 0x0400)
class UAvatarCreatePartsListWidget final : public UCustomTileViewHasWidget
{
public:
	TMap<EAvatarDetailedAppearanceSettingDetailItem, EAvatarFaceParts> _detailParts;                                      // 0x0400(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	class UAvatarCreateDetailSettingsItemListEntryObject* _entryObject;                                      // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnAddFocusButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreatePartsListWidget">();
	}
	static class UAvatarCreatePartsListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreatePartsListWidget>();
	}
};
static_assert(alignof(UAvatarCreatePartsListWidget) == 0x000008, "Wrong alignment on UAvatarCreatePartsListWidget");
static_assert(sizeof(UAvatarCreatePartsListWidget) == 0x000458, "Wrong size on UAvatarCreatePartsListWidget");
static_assert(offsetof(UAvatarCreatePartsListWidget, _detailParts) == 0x000400, "Member 'UAvatarCreatePartsListWidget::_detailParts' has a wrong offset!");
static_assert(offsetof(UAvatarCreatePartsListWidget, _entryObject) == 0x000450, "Member 'UAvatarCreatePartsListWidget::_entryObject' has a wrong offset!");

// Class OutGameModule.AvatarCreateSelectMenuWidget
// 0x0010 (0x04A0 - 0x0490)
class UAvatarCreateSelectMenuWidget final : public UAvatarCreateAppWidget
{
public:
	class USceneCaptureCharacterWidget*           _characterImage;                                   // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        _bandSwitcher;                                     // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BP_SetCaptureType(ESceneCaptureAvatarTypeId ID, int32 bodyScaleIndex);
	void OnChangedAvatarSettings(int32 Type);
	void OnChangedCustomizeAvatar();
	void SetUpChara();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateSelectMenuWidget">();
	}
	static class UAvatarCreateSelectMenuWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateSelectMenuWidget>();
	}
};
static_assert(alignof(UAvatarCreateSelectMenuWidget) == 0x000008, "Wrong alignment on UAvatarCreateSelectMenuWidget");
static_assert(sizeof(UAvatarCreateSelectMenuWidget) == 0x0004A0, "Wrong size on UAvatarCreateSelectMenuWidget");
static_assert(offsetof(UAvatarCreateSelectMenuWidget, _characterImage) == 0x000490, "Member 'UAvatarCreateSelectMenuWidget::_characterImage' has a wrong offset!");
static_assert(offsetof(UAvatarCreateSelectMenuWidget, _bandSwitcher) == 0x000498, "Member 'UAvatarCreateSelectMenuWidget::_bandSwitcher' has a wrong offset!");

// Class OutGameModule.PlayMenuWidget
// 0x0060 (0x0448 - 0x03E8)
class UPlayMenuWidget final : public UAppWidget
{
public:
	class UPlayMenuBattleRuleWidget*              _mainMenuBattleRule;                               // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayMenuBattleStartWidget*             _playMenuBattleStartWidget;                        // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayMenuShortcutList*                  _playMenuShortcutList;                             // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayMenuPlayerStatusWidget*            _playMenuPlayerStatus;                             // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayMenuMyAD*                          _playMenuMyAD;                                     // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTutorialIconWidget*                    _tutorialIcon;                                     // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCustomMatchReadyWidget*                _customMatchReady;                                 // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayMenuBannerListWidget*              _playMenuBannerList;                               // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             _onLevelShownMissionDelegate;                      // 0x0428(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_438[0x8];                                      // 0x0438(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreamingDynamic*                 _missionSubLevelStreamingDynamic;                  // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BattleStartPress();
	void ChangeBattleSequence(EBattleStartSequenceType Sequence);
	class UWidget* DoCustomNavigationBattleRule(EUINavigation UiNavigation);
	class UWidget* DoCustomNavigationMyAD(EUINavigation UiNavigation);
	bool GetOpenSubLevel();
	void LevelShownMissionDelegate__DelegateSignature();
	void LoadInGameAssets();
	void OnBattleStartPress();
	void OnChangeBattleSequence(EBattleStartSequenceType Sequence);
	void OnCloseTutorialWindow(ETutorialPopupScene Scene);
	void OnDecideMainMenuBattleRuleEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnLevelHiddenMissionSubLevel();
	void OnLevelShownMissionSubLevel();
	void OnMissionTutorialEvent();
	void OnOpenCharacterSelect();
	void OnOpenMenuList(int32 Index_0);
	void OnOpenMissionFadeOut();
	void OnOpenSubLevelBattleRule();
	void OnPopupGeneralWindowClosed();
	void OnTeamUpUpdatedEvent();
	class ULevelStreamingDynamic* OpenMission();
	void PlayCharaSequenceSelectionAnimation();
	void PlayCloseCharacterSelectAnimation();
	void PlayOpenCharacterSelectAnimation();
	void ResetStandbyVoiceTimer();
	void SequenceTimerEvent();
	void SetFocusBattleRule();
	void SetFocusPlayerStatusWidget();
	void SetPlayerStatusFocuse();
	void SetStopBGMFlag();
	void SetUseStandbyVoice(bool bUse);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuWidget">();
	}
	static class UPlayMenuWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuWidget>();
	}
};
static_assert(alignof(UPlayMenuWidget) == 0x000008, "Wrong alignment on UPlayMenuWidget");
static_assert(sizeof(UPlayMenuWidget) == 0x000448, "Wrong size on UPlayMenuWidget");
static_assert(offsetof(UPlayMenuWidget, _mainMenuBattleRule) == 0x0003E8, "Member 'UPlayMenuWidget::_mainMenuBattleRule' has a wrong offset!");
static_assert(offsetof(UPlayMenuWidget, _playMenuBattleStartWidget) == 0x0003F0, "Member 'UPlayMenuWidget::_playMenuBattleStartWidget' has a wrong offset!");
static_assert(offsetof(UPlayMenuWidget, _playMenuShortcutList) == 0x0003F8, "Member 'UPlayMenuWidget::_playMenuShortcutList' has a wrong offset!");
static_assert(offsetof(UPlayMenuWidget, _playMenuPlayerStatus) == 0x000400, "Member 'UPlayMenuWidget::_playMenuPlayerStatus' has a wrong offset!");
static_assert(offsetof(UPlayMenuWidget, _playMenuMyAD) == 0x000408, "Member 'UPlayMenuWidget::_playMenuMyAD' has a wrong offset!");
static_assert(offsetof(UPlayMenuWidget, _tutorialIcon) == 0x000410, "Member 'UPlayMenuWidget::_tutorialIcon' has a wrong offset!");
static_assert(offsetof(UPlayMenuWidget, _customMatchReady) == 0x000418, "Member 'UPlayMenuWidget::_customMatchReady' has a wrong offset!");
static_assert(offsetof(UPlayMenuWidget, _playMenuBannerList) == 0x000420, "Member 'UPlayMenuWidget::_playMenuBannerList' has a wrong offset!");
static_assert(offsetof(UPlayMenuWidget, _onLevelShownMissionDelegate) == 0x000428, "Member 'UPlayMenuWidget::_onLevelShownMissionDelegate' has a wrong offset!");
static_assert(offsetof(UPlayMenuWidget, _missionSubLevelStreamingDynamic) == 0x000440, "Member 'UPlayMenuWidget::_missionSubLevelStreamingDynamic' has a wrong offset!");

// Class OutGameModule.AvatarCreateWidget
// 0x0060 (0x04F0 - 0x0490)
class UAvatarCreateWidget final : public UAvatarCreateAppWidget
{
public:
	TMap<EAvatarMenuType, TSoftObjectPtr<class UWorld>> _subLevelMap;                                      // 0x0490(0x0050)(Edit, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _saveButton;                                       // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4E8[0x8];                                      // 0x04E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DoCustomSaveButtonNavigation(EUINavigation UiNavigation);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AvatarCreateWidget">();
	}
	static class UAvatarCreateWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarCreateWidget>();
	}
};
static_assert(alignof(UAvatarCreateWidget) == 0x000008, "Wrong alignment on UAvatarCreateWidget");
static_assert(sizeof(UAvatarCreateWidget) == 0x0004F0, "Wrong size on UAvatarCreateWidget");
static_assert(offsetof(UAvatarCreateWidget, _subLevelMap) == 0x000490, "Member 'UAvatarCreateWidget::_subLevelMap' has a wrong offset!");
static_assert(offsetof(UAvatarCreateWidget, _saveButton) == 0x0004E0, "Member 'UAvatarCreateWidget::_saveButton' has a wrong offset!");

// Class OutGameModule.BaseSettingWidget
// 0x0020 (0x0370 - 0x0350)
class UBaseSettingWidget : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x20];                                     // 0x0350(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class FText GetActionNameSettingText(EKeyConfigurableCommand Command, bool IsDerived);

	void OnSaveAndApplyValues__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BaseSettingWidget">();
	}
	static class UBaseSettingWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseSettingWidget>();
	}
};
static_assert(alignof(UBaseSettingWidget) == 0x000008, "Wrong alignment on UBaseSettingWidget");
static_assert(sizeof(UBaseSettingWidget) == 0x000370, "Wrong size on UBaseSettingWidget");

// Class OutGameModule.RankingDetailsEntryObjectBase
// 0x0090 (0x00C0 - 0x0030)
class URankingDetailsEntryObjectBase : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x90];                                      // 0x0030(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankingDetailsEntryObjectBase">();
	}
	static class URankingDetailsEntryObjectBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankingDetailsEntryObjectBase>();
	}
};
static_assert(alignof(URankingDetailsEntryObjectBase) == 0x000008, "Wrong alignment on URankingDetailsEntryObjectBase");
static_assert(sizeof(URankingDetailsEntryObjectBase) == 0x0000C0, "Wrong size on URankingDetailsEntryObjectBase");

// Class OutGameModule.BattleRecordObject
// 0x0050 (0x0080 - 0x0030)
class UBattleRecordObject final : public UListViewEntryObjectBase
{
public:
	EBattleRecordFramType                         _framType;                                         // 0x0030(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattleRecordData                      _recordData;                                       // 0x0038(0x0048)(BlueprintVisible, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)

public:
	void BP_SetBattleRecordData(const struct FBattleRecordData& Data);
	void BP_SetFramType(const EBattleRecordFramType Type);

	const struct FBattleRecordData BP_GetBattleRecord() const;
	const EBattleRecordFramType BP_GetFramType() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattleRecordObject">();
	}
	static class UBattleRecordObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleRecordObject>();
	}
};
static_assert(alignof(UBattleRecordObject) == 0x000008, "Wrong alignment on UBattleRecordObject");
static_assert(sizeof(UBattleRecordObject) == 0x000080, "Wrong size on UBattleRecordObject");
static_assert(offsetof(UBattleRecordObject, _framType) == 0x000030, "Member 'UBattleRecordObject::_framType' has a wrong offset!");
static_assert(offsetof(UBattleRecordObject, _recordData) == 0x000038, "Member 'UBattleRecordObject::_recordData' has a wrong offset!");

// Class OutGameModule.BattleRecordItemWidget
// 0x0058 (0x03A8 - 0x0350)
class UBattleRecordItemWidget final : public UWidgetBase
{
public:
	class UBattleRecordObject*                    _itemObj;                                          // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _textWidget;                                       // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _pointTotal;                                       // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _pointTotal_L;                                     // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _pointTotalUnit;                                   // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _pointSeason;                                      // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _pointSeason_L;                                    // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _pointSeasonUnit;                                  // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _detailTotalCanvasPanel;                           // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _detailSeasonCanvasPanel;                          // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3A0[0x8];                                      // 0x03A0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_ChangeItemData(class UObject* Item);
	void UpdateText();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattleRecordItemWidget">();
	}
	static class UBattleRecordItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleRecordItemWidget>();
	}
};
static_assert(alignof(UBattleRecordItemWidget) == 0x000008, "Wrong alignment on UBattleRecordItemWidget");
static_assert(sizeof(UBattleRecordItemWidget) == 0x0003A8, "Wrong size on UBattleRecordItemWidget");
static_assert(offsetof(UBattleRecordItemWidget, _itemObj) == 0x000350, "Member 'UBattleRecordItemWidget::_itemObj' has a wrong offset!");
static_assert(offsetof(UBattleRecordItemWidget, _textWidget) == 0x000358, "Member 'UBattleRecordItemWidget::_textWidget' has a wrong offset!");
static_assert(offsetof(UBattleRecordItemWidget, _pointTotal) == 0x000360, "Member 'UBattleRecordItemWidget::_pointTotal' has a wrong offset!");
static_assert(offsetof(UBattleRecordItemWidget, _pointTotal_L) == 0x000368, "Member 'UBattleRecordItemWidget::_pointTotal_L' has a wrong offset!");
static_assert(offsetof(UBattleRecordItemWidget, _pointTotalUnit) == 0x000370, "Member 'UBattleRecordItemWidget::_pointTotalUnit' has a wrong offset!");
static_assert(offsetof(UBattleRecordItemWidget, _pointSeason) == 0x000378, "Member 'UBattleRecordItemWidget::_pointSeason' has a wrong offset!");
static_assert(offsetof(UBattleRecordItemWidget, _pointSeason_L) == 0x000380, "Member 'UBattleRecordItemWidget::_pointSeason_L' has a wrong offset!");
static_assert(offsetof(UBattleRecordItemWidget, _pointSeasonUnit) == 0x000388, "Member 'UBattleRecordItemWidget::_pointSeasonUnit' has a wrong offset!");
static_assert(offsetof(UBattleRecordItemWidget, _detailTotalCanvasPanel) == 0x000390, "Member 'UBattleRecordItemWidget::_detailTotalCanvasPanel' has a wrong offset!");
static_assert(offsetof(UBattleRecordItemWidget, _detailSeasonCanvasPanel) == 0x000398, "Member 'UBattleRecordItemWidget::_detailSeasonCanvasPanel' has a wrong offset!");

// Class OutGameModule.RankingRemunerationScoreWidget
// 0x0058 (0x03A8 - 0x0350)
class URankingRemunerationScoreWidget final : public UWidgetBase
{
public:
	class URankingRemunerationEntryObject*        _entryObject;                                      // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _nowBorder;                                        // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _uptoBorder;                                       // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _rankingBorder;                                    // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        _borderType;                                       // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProfileDisplayRankWidget*              _profileRank;                                      // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 _rankImageOne;                                     // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 _rankImageLeft;                                    // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 _rankImageRight;                                   // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCanvasPanel*                           _nowBorderWindow;                                  // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCanvasPanel*                           _nextBorderWindow;                                 // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void SetBorderText(int32 Top, int32 Under);
	void SetLeagueText(int32 LeagueCode);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankingRemunerationScoreWidget">();
	}
	static class URankingRemunerationScoreWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankingRemunerationScoreWidget>();
	}
};
static_assert(alignof(URankingRemunerationScoreWidget) == 0x000008, "Wrong alignment on URankingRemunerationScoreWidget");
static_assert(sizeof(URankingRemunerationScoreWidget) == 0x0003A8, "Wrong size on URankingRemunerationScoreWidget");
static_assert(offsetof(URankingRemunerationScoreWidget, _entryObject) == 0x000350, "Member 'URankingRemunerationScoreWidget::_entryObject' has a wrong offset!");
static_assert(offsetof(URankingRemunerationScoreWidget, _nowBorder) == 0x000358, "Member 'URankingRemunerationScoreWidget::_nowBorder' has a wrong offset!");
static_assert(offsetof(URankingRemunerationScoreWidget, _uptoBorder) == 0x000360, "Member 'URankingRemunerationScoreWidget::_uptoBorder' has a wrong offset!");
static_assert(offsetof(URankingRemunerationScoreWidget, _rankingBorder) == 0x000368, "Member 'URankingRemunerationScoreWidget::_rankingBorder' has a wrong offset!");
static_assert(offsetof(URankingRemunerationScoreWidget, _borderType) == 0x000370, "Member 'URankingRemunerationScoreWidget::_borderType' has a wrong offset!");
static_assert(offsetof(URankingRemunerationScoreWidget, _profileRank) == 0x000378, "Member 'URankingRemunerationScoreWidget::_profileRank' has a wrong offset!");
static_assert(offsetof(URankingRemunerationScoreWidget, _rankImageOne) == 0x000380, "Member 'URankingRemunerationScoreWidget::_rankImageOne' has a wrong offset!");
static_assert(offsetof(URankingRemunerationScoreWidget, _rankImageLeft) == 0x000388, "Member 'URankingRemunerationScoreWidget::_rankImageLeft' has a wrong offset!");
static_assert(offsetof(URankingRemunerationScoreWidget, _rankImageRight) == 0x000390, "Member 'URankingRemunerationScoreWidget::_rankImageRight' has a wrong offset!");
static_assert(offsetof(URankingRemunerationScoreWidget, _nowBorderWindow) == 0x000398, "Member 'URankingRemunerationScoreWidget::_nowBorderWindow' has a wrong offset!");
static_assert(offsetof(URankingRemunerationScoreWidget, _nextBorderWindow) == 0x0003A0, "Member 'URankingRemunerationScoreWidget::_nextBorderWindow' has a wrong offset!");

// Class OutGameModule.BattleRecordAppWidget
// 0x0090 (0x0478 - 0x03E8)
class UBattleRecordAppWidget final : public UAppWidget
{
public:
	uint8                                         Pad_3E8[0x4];                                      // 0x03E8(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _maxIndex;                                         // 0x03EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bMySelf;                                          // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAdjustTextWidget*                      _seasonTitle;                                      // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _pagePrevPanel;                                    // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _pagePrevButton;                                   // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _pageNextPanel;                                    // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _pageNextButton;                                   // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                            _dummyWidget;                                      // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _window;                                           // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                             _scrollBox;                                        // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UBattleRecordItemWidget*>        _recordWidgetList;                                 // 0x0438(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _hideWindow;                                       // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULoadIconWidget*                        _networkLoadingIcon;                               // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isDebugHiddenFlag;                                // 0x0458(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_459[0x3];                                      // 0x0459(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _scrollSpeed;                                      // 0x045C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_460[0x8];                                      // 0x0460(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattleRecordObject*                    _selectedItem;                                     // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_470[0x8];                                      // 0x0470(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnChangeTab();
	class UWidget* NavigationCustom(EUINavigation NavigationType);
	void OnDecideNextButtonDelegate(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecidePrevButtonDelegate(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnFinishFetchDataEvent(int32 RequestId);
	void OnFinishHiddenFetchDataEvent();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattleRecordAppWidget">();
	}
	static class UBattleRecordAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleRecordAppWidget>();
	}
};
static_assert(alignof(UBattleRecordAppWidget) == 0x000008, "Wrong alignment on UBattleRecordAppWidget");
static_assert(sizeof(UBattleRecordAppWidget) == 0x000478, "Wrong size on UBattleRecordAppWidget");
static_assert(offsetof(UBattleRecordAppWidget, _maxIndex) == 0x0003EC, "Member 'UBattleRecordAppWidget::_maxIndex' has a wrong offset!");
static_assert(offsetof(UBattleRecordAppWidget, _bMySelf) == 0x0003F0, "Member 'UBattleRecordAppWidget::_bMySelf' has a wrong offset!");
static_assert(offsetof(UBattleRecordAppWidget, _seasonTitle) == 0x0003F8, "Member 'UBattleRecordAppWidget::_seasonTitle' has a wrong offset!");
static_assert(offsetof(UBattleRecordAppWidget, _pagePrevPanel) == 0x000400, "Member 'UBattleRecordAppWidget::_pagePrevPanel' has a wrong offset!");
static_assert(offsetof(UBattleRecordAppWidget, _pagePrevButton) == 0x000408, "Member 'UBattleRecordAppWidget::_pagePrevButton' has a wrong offset!");
static_assert(offsetof(UBattleRecordAppWidget, _pageNextPanel) == 0x000410, "Member 'UBattleRecordAppWidget::_pageNextPanel' has a wrong offset!");
static_assert(offsetof(UBattleRecordAppWidget, _pageNextButton) == 0x000418, "Member 'UBattleRecordAppWidget::_pageNextButton' has a wrong offset!");
static_assert(offsetof(UBattleRecordAppWidget, _dummyWidget) == 0x000420, "Member 'UBattleRecordAppWidget::_dummyWidget' has a wrong offset!");
static_assert(offsetof(UBattleRecordAppWidget, _window) == 0x000428, "Member 'UBattleRecordAppWidget::_window' has a wrong offset!");
static_assert(offsetof(UBattleRecordAppWidget, _scrollBox) == 0x000430, "Member 'UBattleRecordAppWidget::_scrollBox' has a wrong offset!");
static_assert(offsetof(UBattleRecordAppWidget, _recordWidgetList) == 0x000438, "Member 'UBattleRecordAppWidget::_recordWidgetList' has a wrong offset!");
static_assert(offsetof(UBattleRecordAppWidget, _hideWindow) == 0x000448, "Member 'UBattleRecordAppWidget::_hideWindow' has a wrong offset!");
static_assert(offsetof(UBattleRecordAppWidget, _networkLoadingIcon) == 0x000450, "Member 'UBattleRecordAppWidget::_networkLoadingIcon' has a wrong offset!");
static_assert(offsetof(UBattleRecordAppWidget, _isDebugHiddenFlag) == 0x000458, "Member 'UBattleRecordAppWidget::_isDebugHiddenFlag' has a wrong offset!");
static_assert(offsetof(UBattleRecordAppWidget, _scrollSpeed) == 0x00045C, "Member 'UBattleRecordAppWidget::_scrollSpeed' has a wrong offset!");
static_assert(offsetof(UBattleRecordAppWidget, _selectedItem) == 0x000468, "Member 'UBattleRecordAppWidget::_selectedItem' has a wrong offset!");

// Class OutGameModule.ProgressFinishDelegateWidget
// 0x0010 (0x0360 - 0x0350)
class UProgressFinishDelegateWidget : public UWidgetBase
{
public:
	FMulticastInlineDelegateProperty_             _finishProgressDelegate;                           // 0x0350(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void FinishProgress();
	void FinishProgressDelegate__DelegateSignature(class UWidget* Widget);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProgressFinishDelegateWidget">();
	}
	static class UProgressFinishDelegateWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProgressFinishDelegateWidget>();
	}
};
static_assert(alignof(UProgressFinishDelegateWidget) == 0x000008, "Wrong alignment on UProgressFinishDelegateWidget");
static_assert(sizeof(UProgressFinishDelegateWidget) == 0x000360, "Wrong size on UProgressFinishDelegateWidget");
static_assert(offsetof(UProgressFinishDelegateWidget, _finishProgressDelegate) == 0x000350, "Member 'UProgressFinishDelegateWidget::_finishProgressDelegate' has a wrong offset!");

// Class OutGameModule.RankingEventWidget
// 0x0030 (0x0380 - 0x0350)
class URankingEventWidget final : public UWidgetBase
{
public:
	class UDetailsRankingContents*                _billboardRanking;                                 // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDetailsEventContents*                  _eventRanking;                                     // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        _swicher;                                          // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        _rankingSwicher;                                   // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEventItemWidget*                       _eventItem;                                        // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnCompleteEvent(int32 ID);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankingEventWidget">();
	}
	static class URankingEventWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankingEventWidget>();
	}
};
static_assert(alignof(URankingEventWidget) == 0x000008, "Wrong alignment on URankingEventWidget");
static_assert(sizeof(URankingEventWidget) == 0x000380, "Wrong size on URankingEventWidget");
static_assert(offsetof(URankingEventWidget, _billboardRanking) == 0x000350, "Member 'URankingEventWidget::_billboardRanking' has a wrong offset!");
static_assert(offsetof(URankingEventWidget, _eventRanking) == 0x000358, "Member 'URankingEventWidget::_eventRanking' has a wrong offset!");
static_assert(offsetof(URankingEventWidget, _swicher) == 0x000360, "Member 'URankingEventWidget::_swicher' has a wrong offset!");
static_assert(offsetof(URankingEventWidget, _rankingSwicher) == 0x000368, "Member 'URankingEventWidget::_rankingSwicher' has a wrong offset!");
static_assert(offsetof(URankingEventWidget, _eventItem) == 0x000370, "Member 'URankingEventWidget::_eventItem' has a wrong offset!");

// Class OutGameModule.BattleRewardDirectingItemWidget
// 0x0040 (0x03A0 - 0x0360)
class UBattleRewardDirectingItemWidget final : public UProgressFinishDelegateWidget
{
public:
	class FText                                   _testNameText;                                     // 0x0360(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                   _typeText;                                         // 0x0378(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class UTextBlock*                             _type;                                             // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _name;                                             // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattleRewardDirectingItemWidget">();
	}
	static class UBattleRewardDirectingItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleRewardDirectingItemWidget>();
	}
};
static_assert(alignof(UBattleRewardDirectingItemWidget) == 0x000008, "Wrong alignment on UBattleRewardDirectingItemWidget");
static_assert(sizeof(UBattleRewardDirectingItemWidget) == 0x0003A0, "Wrong size on UBattleRewardDirectingItemWidget");
static_assert(offsetof(UBattleRewardDirectingItemWidget, _testNameText) == 0x000360, "Member 'UBattleRewardDirectingItemWidget::_testNameText' has a wrong offset!");
static_assert(offsetof(UBattleRewardDirectingItemWidget, _typeText) == 0x000378, "Member 'UBattleRewardDirectingItemWidget::_typeText' has a wrong offset!");
static_assert(offsetof(UBattleRewardDirectingItemWidget, _type) == 0x000390, "Member 'UBattleRewardDirectingItemWidget::_type' has a wrong offset!");
static_assert(offsetof(UBattleRewardDirectingItemWidget, _name) == 0x000398, "Member 'UBattleRewardDirectingItemWidget::_name' has a wrong offset!");

// Class OutGameModule.ResultRewardDirectingWidget
// 0x0010 (0x03F8 - 0x03E8)
class UResultRewardDirectingWidget : public UAppWidget
{
public:
	FMulticastInlineDelegateProperty_             _finishProgressDelegate;                           // 0x03E8(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)

public:
	void FinishProgress();
	void FinishProgressDelegate__DelegateSignature(class UWidget* Widget);
	void Skip(const class UObject* Object);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ResultRewardDirectingWidget">();
	}
	static class UResultRewardDirectingWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResultRewardDirectingWidget>();
	}
};
static_assert(alignof(UResultRewardDirectingWidget) == 0x000008, "Wrong alignment on UResultRewardDirectingWidget");
static_assert(sizeof(UResultRewardDirectingWidget) == 0x0003F8, "Wrong size on UResultRewardDirectingWidget");
static_assert(offsetof(UResultRewardDirectingWidget, _finishProgressDelegate) == 0x0003E8, "Member 'UResultRewardDirectingWidget::_finishProgressDelegate' has a wrong offset!");

// Class OutGameModule.RankingDetailsBase
// 0x0050 (0x04D8 - 0x0488)
class URankingDetailsBase : public UWidgetButton
{
public:
	TSoftObjectPtr<class UWorld>                  _subLevel;                                         // 0x0488(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  _guildSubLevel;                                    // 0x04B0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankingDetailsBase">();
	}
	static class URankingDetailsBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankingDetailsBase>();
	}
};
static_assert(alignof(URankingDetailsBase) == 0x000008, "Wrong alignment on URankingDetailsBase");
static_assert(sizeof(URankingDetailsBase) == 0x0004D8, "Wrong size on URankingDetailsBase");
static_assert(offsetof(URankingDetailsBase, _subLevel) == 0x000488, "Member 'URankingDetailsBase::_subLevel' has a wrong offset!");
static_assert(offsetof(URankingDetailsBase, _guildSubLevel) == 0x0004B0, "Member 'URankingDetailsBase::_guildSubLevel' has a wrong offset!");

// Class OutGameModule.RankingDetails
// 0x0080 (0x0558 - 0x04D8)
class URankingDetails final : public URankingDetailsBase
{
public:
	int32                                         _topThreshold;                                     // 0x04D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetSwitcher*                        _rankNumberTopSwicher;                             // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _bigRank;                                          // 0x04E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _smallRank;                                        // 0x04F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _playerName;                                       // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URankingPointWidget*                    _rankingPoint;                                     // 0x0500(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URankingPointWidget*                    _rankingPoint_normal;                              // 0x0508(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _switcher_Base;                                    // 0x0510(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _switcher_Rank;                                    // 0x0518(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _switcher_Point;                                   // 0x0520(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URankingEmblemWidget*                   _rankingEmblem;                                    // 0x0528(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _youStamp;                                         // 0x0530(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGuildEmblemIconImage*                  _guildEmblemImage;                                 // 0x0538(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProfileDisplayRankWidget*              _profileRank;                                      // 0x0540(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _playerRankImage;                                  // 0x0548(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URankingDetailsEntryObjectBase*         _rankingEntryObject;                               // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnDecideButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OpenMyGuildLevel();
	void OpenMyProfileLevel();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankingDetails">();
	}
	static class URankingDetails* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankingDetails>();
	}
};
static_assert(alignof(URankingDetails) == 0x000008, "Wrong alignment on URankingDetails");
static_assert(sizeof(URankingDetails) == 0x000558, "Wrong size on URankingDetails");
static_assert(offsetof(URankingDetails, _topThreshold) == 0x0004D8, "Member 'URankingDetails::_topThreshold' has a wrong offset!");
static_assert(offsetof(URankingDetails, _rankNumberTopSwicher) == 0x0004E0, "Member 'URankingDetails::_rankNumberTopSwicher' has a wrong offset!");
static_assert(offsetof(URankingDetails, _bigRank) == 0x0004E8, "Member 'URankingDetails::_bigRank' has a wrong offset!");
static_assert(offsetof(URankingDetails, _smallRank) == 0x0004F0, "Member 'URankingDetails::_smallRank' has a wrong offset!");
static_assert(offsetof(URankingDetails, _playerName) == 0x0004F8, "Member 'URankingDetails::_playerName' has a wrong offset!");
static_assert(offsetof(URankingDetails, _rankingPoint) == 0x000500, "Member 'URankingDetails::_rankingPoint' has a wrong offset!");
static_assert(offsetof(URankingDetails, _rankingPoint_normal) == 0x000508, "Member 'URankingDetails::_rankingPoint_normal' has a wrong offset!");
static_assert(offsetof(URankingDetails, _switcher_Base) == 0x000510, "Member 'URankingDetails::_switcher_Base' has a wrong offset!");
static_assert(offsetof(URankingDetails, _switcher_Rank) == 0x000518, "Member 'URankingDetails::_switcher_Rank' has a wrong offset!");
static_assert(offsetof(URankingDetails, _switcher_Point) == 0x000520, "Member 'URankingDetails::_switcher_Point' has a wrong offset!");
static_assert(offsetof(URankingDetails, _rankingEmblem) == 0x000528, "Member 'URankingDetails::_rankingEmblem' has a wrong offset!");
static_assert(offsetof(URankingDetails, _youStamp) == 0x000530, "Member 'URankingDetails::_youStamp' has a wrong offset!");
static_assert(offsetof(URankingDetails, _guildEmblemImage) == 0x000538, "Member 'URankingDetails::_guildEmblemImage' has a wrong offset!");
static_assert(offsetof(URankingDetails, _profileRank) == 0x000540, "Member 'URankingDetails::_profileRank' has a wrong offset!");
static_assert(offsetof(URankingDetails, _playerRankImage) == 0x000548, "Member 'URankingDetails::_playerRankImage' has a wrong offset!");
static_assert(offsetof(URankingDetails, _rankingEntryObject) == 0x000550, "Member 'URankingDetails::_rankingEntryObject' has a wrong offset!");

// Class OutGameModule.BattleRewardDirectingWidget
// 0x0070 (0x0468 - 0x03F8)
class UBattleRewardDirectingWidget final : public UResultRewardDirectingWidget
{
public:
	class FText                                   _rankUpText;                                       // 0x03F8(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                   _levelUpText;                                      // 0x0410(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class UTextBlock*                             _title;                                            // 0x0428(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattleRewardDirectingItemWidget*       _freeItem;                                         // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattleRewardDirectingItemWidget*       _premiumItem;                                      // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpacer*                                _space;                                            // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _preLevel;                                         // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _level;                                            // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _animOpen;                                         // 0x0458(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _animClose;                                        // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattleRewardDirectingWidget">();
	}
	static class UBattleRewardDirectingWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleRewardDirectingWidget>();
	}
};
static_assert(alignof(UBattleRewardDirectingWidget) == 0x000008, "Wrong alignment on UBattleRewardDirectingWidget");
static_assert(sizeof(UBattleRewardDirectingWidget) == 0x000468, "Wrong size on UBattleRewardDirectingWidget");
static_assert(offsetof(UBattleRewardDirectingWidget, _rankUpText) == 0x0003F8, "Member 'UBattleRewardDirectingWidget::_rankUpText' has a wrong offset!");
static_assert(offsetof(UBattleRewardDirectingWidget, _levelUpText) == 0x000410, "Member 'UBattleRewardDirectingWidget::_levelUpText' has a wrong offset!");
static_assert(offsetof(UBattleRewardDirectingWidget, _title) == 0x000428, "Member 'UBattleRewardDirectingWidget::_title' has a wrong offset!");
static_assert(offsetof(UBattleRewardDirectingWidget, _freeItem) == 0x000430, "Member 'UBattleRewardDirectingWidget::_freeItem' has a wrong offset!");
static_assert(offsetof(UBattleRewardDirectingWidget, _premiumItem) == 0x000438, "Member 'UBattleRewardDirectingWidget::_premiumItem' has a wrong offset!");
static_assert(offsetof(UBattleRewardDirectingWidget, _space) == 0x000440, "Member 'UBattleRewardDirectingWidget::_space' has a wrong offset!");
static_assert(offsetof(UBattleRewardDirectingWidget, _preLevel) == 0x000448, "Member 'UBattleRewardDirectingWidget::_preLevel' has a wrong offset!");
static_assert(offsetof(UBattleRewardDirectingWidget, _level) == 0x000450, "Member 'UBattleRewardDirectingWidget::_level' has a wrong offset!");
static_assert(offsetof(UBattleRewardDirectingWidget, _animOpen) == 0x000458, "Member 'UBattleRewardDirectingWidget::_animOpen' has a wrong offset!");
static_assert(offsetof(UBattleRewardDirectingWidget, _animClose) == 0x000460, "Member 'UBattleRewardDirectingWidget::_animClose' has a wrong offset!");

// Class OutGameModule.BattleRewardSpeechBubbleWidget
// 0x0080 (0x03D0 - 0x0350)
class UBattleRewardSpeechBubbleWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EMdBonusExpTargetType, struct FBonusTypeInfo> _bonusInfoList;                                    // 0x0360(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	class UTextBlock*                             _name;                                             // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UResultRewardAddValueWidget*            _percent;                                          // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _bgImage;                                          // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _aniIn;                                            // 0x03C8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void AnimationDelegate__DelegateSignature();
	void Open();

	void AddNextWidget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattleRewardSpeechBubbleWidget">();
	}
	static class UBattleRewardSpeechBubbleWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleRewardSpeechBubbleWidget>();
	}
};
static_assert(alignof(UBattleRewardSpeechBubbleWidget) == 0x000008, "Wrong alignment on UBattleRewardSpeechBubbleWidget");
static_assert(sizeof(UBattleRewardSpeechBubbleWidget) == 0x0003D0, "Wrong size on UBattleRewardSpeechBubbleWidget");
static_assert(offsetof(UBattleRewardSpeechBubbleWidget, _bonusInfoList) == 0x000360, "Member 'UBattleRewardSpeechBubbleWidget::_bonusInfoList' has a wrong offset!");
static_assert(offsetof(UBattleRewardSpeechBubbleWidget, _name) == 0x0003B0, "Member 'UBattleRewardSpeechBubbleWidget::_name' has a wrong offset!");
static_assert(offsetof(UBattleRewardSpeechBubbleWidget, _percent) == 0x0003B8, "Member 'UBattleRewardSpeechBubbleWidget::_percent' has a wrong offset!");
static_assert(offsetof(UBattleRewardSpeechBubbleWidget, _bgImage) == 0x0003C0, "Member 'UBattleRewardSpeechBubbleWidget::_bgImage' has a wrong offset!");
static_assert(offsetof(UBattleRewardSpeechBubbleWidget, _aniIn) == 0x0003C8, "Member 'UBattleRewardSpeechBubbleWidget::_aniIn' has a wrong offset!");

// Class OutGameModule.RankingRemunerationEntryObject
// 0x0068 (0x0098 - 0x0030)
class URankingRemunerationEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x68];                                      // 0x0030(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankingRemunerationEntryObject">();
	}
	static class URankingRemunerationEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankingRemunerationEntryObject>();
	}
};
static_assert(alignof(URankingRemunerationEntryObject) == 0x000008, "Wrong alignment on URankingRemunerationEntryObject");
static_assert(sizeof(URankingRemunerationEntryObject) == 0x000098, "Wrong size on URankingRemunerationEntryObject");

// Class OutGameModule.BattleRewardSwitcherWidget
// 0x0070 (0x03D0 - 0x0360)
class UBattleRewardSwitcherWidget final : public UProgressFinishDelegateWidget
{
public:
	uint8                                         Pad_360[0x10];                                     // 0x0360(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanel*                           _rewardPanel;                                      // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattleRewardWidget*                    _battleRewardWidget;                               // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpecialLicenseRewardWidget*            _specialLicenseRewardWidget;                       // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBattleRewardWidget>        _battleRewardClass;                                // 0x0388(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBattleRewardWidget>        _battleRewardGuildClass;                           // 0x0390(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class USpecialLicenseRewardWidget> _specialLicenseRewardWidgetClass;                  // 0x0398(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScoreProgressBarWidget*                _scoreProgressBar;                                 // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _totalScore;                                       // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _loadingIcon;                                      // 0x03B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USequenceController*                    _sequenceController;                               // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _aniOpen;                                          // 0x03C0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C8[0x8];                                      // 0x03C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnFinishedBattleReward(class UWidget* Widget);
	void OnFinishedSpecialLicenseReward(class UWidget* Widget);
	void OpenWidget();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattleRewardSwitcherWidget">();
	}
	static class UBattleRewardSwitcherWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleRewardSwitcherWidget>();
	}
};
static_assert(alignof(UBattleRewardSwitcherWidget) == 0x000008, "Wrong alignment on UBattleRewardSwitcherWidget");
static_assert(sizeof(UBattleRewardSwitcherWidget) == 0x0003D0, "Wrong size on UBattleRewardSwitcherWidget");
static_assert(offsetof(UBattleRewardSwitcherWidget, _rewardPanel) == 0x000370, "Member 'UBattleRewardSwitcherWidget::_rewardPanel' has a wrong offset!");
static_assert(offsetof(UBattleRewardSwitcherWidget, _battleRewardWidget) == 0x000378, "Member 'UBattleRewardSwitcherWidget::_battleRewardWidget' has a wrong offset!");
static_assert(offsetof(UBattleRewardSwitcherWidget, _specialLicenseRewardWidget) == 0x000380, "Member 'UBattleRewardSwitcherWidget::_specialLicenseRewardWidget' has a wrong offset!");
static_assert(offsetof(UBattleRewardSwitcherWidget, _battleRewardClass) == 0x000388, "Member 'UBattleRewardSwitcherWidget::_battleRewardClass' has a wrong offset!");
static_assert(offsetof(UBattleRewardSwitcherWidget, _battleRewardGuildClass) == 0x000390, "Member 'UBattleRewardSwitcherWidget::_battleRewardGuildClass' has a wrong offset!");
static_assert(offsetof(UBattleRewardSwitcherWidget, _specialLicenseRewardWidgetClass) == 0x000398, "Member 'UBattleRewardSwitcherWidget::_specialLicenseRewardWidgetClass' has a wrong offset!");
static_assert(offsetof(UBattleRewardSwitcherWidget, _scoreProgressBar) == 0x0003A0, "Member 'UBattleRewardSwitcherWidget::_scoreProgressBar' has a wrong offset!");
static_assert(offsetof(UBattleRewardSwitcherWidget, _totalScore) == 0x0003A8, "Member 'UBattleRewardSwitcherWidget::_totalScore' has a wrong offset!");
static_assert(offsetof(UBattleRewardSwitcherWidget, _loadingIcon) == 0x0003B0, "Member 'UBattleRewardSwitcherWidget::_loadingIcon' has a wrong offset!");
static_assert(offsetof(UBattleRewardSwitcherWidget, _sequenceController) == 0x0003B8, "Member 'UBattleRewardSwitcherWidget::_sequenceController' has a wrong offset!");
static_assert(offsetof(UBattleRewardSwitcherWidget, _aniOpen) == 0x0003C0, "Member 'UBattleRewardSwitcherWidget::_aniOpen' has a wrong offset!");

// Class OutGameModule.BattleRewardWidgetBase
// 0x0030 (0x0390 - 0x0360)
class UBattleRewardWidgetBase : public UProgressFinishDelegateWidget
{
public:
	int32                                         _bonusNum1;                                        // 0x0360(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _bonusNum2;                                        // 0x0364(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBattleRewardSpeechBubbleWidget> _bonusWidgetClass;                                 // 0x0368(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USequenceController*                    _sequenceController;                               // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_378[0x18];                                     // 0x0378(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Close();
	void Play();
	void Setup();
	void SetupDelegate__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattleRewardWidgetBase">();
	}
	static class UBattleRewardWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleRewardWidgetBase>();
	}
};
static_assert(alignof(UBattleRewardWidgetBase) == 0x000008, "Wrong alignment on UBattleRewardWidgetBase");
static_assert(sizeof(UBattleRewardWidgetBase) == 0x000390, "Wrong size on UBattleRewardWidgetBase");
static_assert(offsetof(UBattleRewardWidgetBase, _bonusNum1) == 0x000360, "Member 'UBattleRewardWidgetBase::_bonusNum1' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidgetBase, _bonusNum2) == 0x000364, "Member 'UBattleRewardWidgetBase::_bonusNum2' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidgetBase, _bonusWidgetClass) == 0x000368, "Member 'UBattleRewardWidgetBase::_bonusWidgetClass' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidgetBase, _sequenceController) == 0x000370, "Member 'UBattleRewardWidgetBase::_sequenceController' has a wrong offset!");

// Class OutGameModule.RankNumberWidget
// 0x0090 (0x03E0 - 0x0350)
class URankNumberWidget final : public UWidgetBase
{
public:
	struct FSlateColor                            _color;                                            // 0x0350(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FSlateFontInfo                         _font;                                             // 0x0378(0x0058)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _unitText;                                         // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _valueText;                                        // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void SetValue(const int32& Value);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankNumberWidget">();
	}
	static class URankNumberWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankNumberWidget>();
	}
};
static_assert(alignof(URankNumberWidget) == 0x000008, "Wrong alignment on URankNumberWidget");
static_assert(sizeof(URankNumberWidget) == 0x0003E0, "Wrong size on URankNumberWidget");
static_assert(offsetof(URankNumberWidget, _color) == 0x000350, "Member 'URankNumberWidget::_color' has a wrong offset!");
static_assert(offsetof(URankNumberWidget, _font) == 0x000378, "Member 'URankNumberWidget::_font' has a wrong offset!");
static_assert(offsetof(URankNumberWidget, _unitText) == 0x0003D0, "Member 'URankNumberWidget::_unitText' has a wrong offset!");
static_assert(offsetof(URankNumberWidget, _valueText) == 0x0003D8, "Member 'URankNumberWidget::_valueText' has a wrong offset!");

// Class OutGameModule.BattleRewardWidget
// 0x01A0 (0x0530 - 0x0390)
class UBattleRewardWidget final : public UBattleRewardWidgetBase
{
public:
	class UWidgetLocalizeLayout*                  _passRankText;                                     // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMultipleDigitsWidget*                  _currentPassExpText;                               // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMultipleDigitsWidget*                  _maxPassExpText;                                   // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UResultRewardAddValueWidget*            _addPassExp;                                       // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDeltaProgressBarWidget*                _passExpProgressBar;                               // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconWidget*                        _freeItem;                                         // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconWidget*                        _premiumItem;                                      // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _proGrayPanel;                                     // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _repeatIcon;                                       // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3D8[0x40];                                     // 0x03D8(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetLocalizeLayout*                  _playerLevelText;                                  // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMultipleDigitsWidget*                  _currentPlayerExpText;                             // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMultipleDigitsWidget*                  _maxPlayerExpText;                                 // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UResultRewardAddValueWidget*            _addPlayerExp;                                     // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDeltaProgressBarWidget*                _playerExpProgressBar;                             // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_440[0x28];                                     // 0x0440(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class UMultipleDigitsWidget*                  _guildPoint;                                       // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UResultRewardAddValueWidget*            _addGuildPoint;                                    // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_478[0x8];                                      // 0x0478(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMultipleDigitsWidget*                  _gold;                                             // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UResultRewardAddValueWidget*            _addGold;                                          // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _coinSpeed;                                        // 0x0490(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_494[0xC];                                      // 0x0494(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBox*                         _passRankHorizontalBox1;                           // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         _passRankHorizontalBox2;                           // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         _playerLevelHorizontalBox1;                        // 0x04B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         _playerLevelHorizontalBox2;                        // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         _goldHorizontalBox1;                               // 0x04C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         _goldHorizontalBox2;                               // 0x04C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         _guildPointHorizontalBox1;                         // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         _guildPointHorizontalBox2;                         // 0x04D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>                _rewardDirectingClass;                             // 0x04E0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattleRewardDirectingWidget*           _rewardDirectingWidget;                            // 0x04E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _aniPassExp;                                       // 0x04F0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _aniPlayerExp;                                     // 0x04F8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _aniGuildPoint;                                    // 0x0500(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _aniGold;                                          // 0x0508(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _addValueSpeed;                                    // 0x0510(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_514[0x1C];                                     // 0x0514(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FinishDirectingPlayerLevel(class UWidget* Widget);
	void FinishProgressPlayerLevel(class UProgressBarWidget* ProgressBar);
	void FinishProgressSeasonPass(class UProgressBarWidget* ProgressBar);
	void LevelUpPlayerLevel(const int32 LevelCount);
	void LevelUpSeasonPass(const int32 LevelCount);
	void NextSequence();
	void ProgressGold(const float DeltaTime);
	void ProgressGuildPoint(const float DeltaTime);
	void ProgressPlayerLevel(const float& NowValue, const float& MaxValue);
	void ProgressSeasonPass(const float& NowValue, const float& MaxValue);
	void TickDelegate__DelegateSignature(const float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattleRewardWidget">();
	}
	static class UBattleRewardWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleRewardWidget>();
	}
};
static_assert(alignof(UBattleRewardWidget) == 0x000008, "Wrong alignment on UBattleRewardWidget");
static_assert(sizeof(UBattleRewardWidget) == 0x000530, "Wrong size on UBattleRewardWidget");
static_assert(offsetof(UBattleRewardWidget, _passRankText) == 0x000390, "Member 'UBattleRewardWidget::_passRankText' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _currentPassExpText) == 0x000398, "Member 'UBattleRewardWidget::_currentPassExpText' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _maxPassExpText) == 0x0003A0, "Member 'UBattleRewardWidget::_maxPassExpText' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _addPassExp) == 0x0003A8, "Member 'UBattleRewardWidget::_addPassExp' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _passExpProgressBar) == 0x0003B0, "Member 'UBattleRewardWidget::_passExpProgressBar' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _freeItem) == 0x0003B8, "Member 'UBattleRewardWidget::_freeItem' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _premiumItem) == 0x0003C0, "Member 'UBattleRewardWidget::_premiumItem' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _proGrayPanel) == 0x0003C8, "Member 'UBattleRewardWidget::_proGrayPanel' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _repeatIcon) == 0x0003D0, "Member 'UBattleRewardWidget::_repeatIcon' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _playerLevelText) == 0x000418, "Member 'UBattleRewardWidget::_playerLevelText' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _currentPlayerExpText) == 0x000420, "Member 'UBattleRewardWidget::_currentPlayerExpText' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _maxPlayerExpText) == 0x000428, "Member 'UBattleRewardWidget::_maxPlayerExpText' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _addPlayerExp) == 0x000430, "Member 'UBattleRewardWidget::_addPlayerExp' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _playerExpProgressBar) == 0x000438, "Member 'UBattleRewardWidget::_playerExpProgressBar' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _guildPoint) == 0x000468, "Member 'UBattleRewardWidget::_guildPoint' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _addGuildPoint) == 0x000470, "Member 'UBattleRewardWidget::_addGuildPoint' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _gold) == 0x000480, "Member 'UBattleRewardWidget::_gold' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _addGold) == 0x000488, "Member 'UBattleRewardWidget::_addGold' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _coinSpeed) == 0x000490, "Member 'UBattleRewardWidget::_coinSpeed' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _passRankHorizontalBox1) == 0x0004A0, "Member 'UBattleRewardWidget::_passRankHorizontalBox1' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _passRankHorizontalBox2) == 0x0004A8, "Member 'UBattleRewardWidget::_passRankHorizontalBox2' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _playerLevelHorizontalBox1) == 0x0004B0, "Member 'UBattleRewardWidget::_playerLevelHorizontalBox1' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _playerLevelHorizontalBox2) == 0x0004B8, "Member 'UBattleRewardWidget::_playerLevelHorizontalBox2' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _goldHorizontalBox1) == 0x0004C0, "Member 'UBattleRewardWidget::_goldHorizontalBox1' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _goldHorizontalBox2) == 0x0004C8, "Member 'UBattleRewardWidget::_goldHorizontalBox2' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _guildPointHorizontalBox1) == 0x0004D0, "Member 'UBattleRewardWidget::_guildPointHorizontalBox1' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _guildPointHorizontalBox2) == 0x0004D8, "Member 'UBattleRewardWidget::_guildPointHorizontalBox2' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _rewardDirectingClass) == 0x0004E0, "Member 'UBattleRewardWidget::_rewardDirectingClass' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _rewardDirectingWidget) == 0x0004E8, "Member 'UBattleRewardWidget::_rewardDirectingWidget' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _aniPassExp) == 0x0004F0, "Member 'UBattleRewardWidget::_aniPassExp' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _aniPlayerExp) == 0x0004F8, "Member 'UBattleRewardWidget::_aniPlayerExp' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _aniGuildPoint) == 0x000500, "Member 'UBattleRewardWidget::_aniGuildPoint' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _aniGold) == 0x000508, "Member 'UBattleRewardWidget::_aniGold' has a wrong offset!");
static_assert(offsetof(UBattleRewardWidget, _addValueSpeed) == 0x000510, "Member 'UBattleRewardWidget::_addValueSpeed' has a wrong offset!");

// Class OutGameModule.BattleRuleCategoryEntryWidget
// 0x0080 (0x03D0 - 0x0350)
class UBattleRuleCategoryEntryWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x8];                                      // 0x0350(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPlayModeModeCategory, struct FBattleRuleCategoryInfo> _categoryInfo;                                     // 0x0358(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UCanvasPanel*                           _canvas;                                           // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UListView*                              _listView;                                         // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _numText;                                          // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                        _numberSwitcher;                                   // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C8[0x8];                                      // 0x03C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattleRuleCategoryEntryWidget">();
	}
	static class UBattleRuleCategoryEntryWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleRuleCategoryEntryWidget>();
	}
};
static_assert(alignof(UBattleRuleCategoryEntryWidget) == 0x000008, "Wrong alignment on UBattleRuleCategoryEntryWidget");
static_assert(sizeof(UBattleRuleCategoryEntryWidget) == 0x0003D0, "Wrong size on UBattleRuleCategoryEntryWidget");
static_assert(offsetof(UBattleRuleCategoryEntryWidget, _categoryInfo) == 0x000358, "Member 'UBattleRuleCategoryEntryWidget::_categoryInfo' has a wrong offset!");
static_assert(offsetof(UBattleRuleCategoryEntryWidget, _canvas) == 0x0003A8, "Member 'UBattleRuleCategoryEntryWidget::_canvas' has a wrong offset!");
static_assert(offsetof(UBattleRuleCategoryEntryWidget, _listView) == 0x0003B0, "Member 'UBattleRuleCategoryEntryWidget::_listView' has a wrong offset!");
static_assert(offsetof(UBattleRuleCategoryEntryWidget, _numText) == 0x0003B8, "Member 'UBattleRuleCategoryEntryWidget::_numText' has a wrong offset!");
static_assert(offsetof(UBattleRuleCategoryEntryWidget, _numberSwitcher) == 0x0003C0, "Member 'UBattleRuleCategoryEntryWidget::_numberSwitcher' has a wrong offset!");

// Class OutGameModule.RankingRemunerationSelectionWidget
// 0x0030 (0x0418 - 0x03E8)
class URankingRemunerationSelectionWidget final : public UAppWidget
{
public:
	class UListView*                              _listView;                                         // 0x03E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bMvpRankReward;                                   // 0x03F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3F1[0x17];                                     // 0x03F1(0x0017)(Fixing Size After Last Property [ Dumper-7 ])
	class URankingRemunerationEntryObject*        _selectObject;                                     // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URankingRemunerationItemListWidget*     _selectWidget;                                     // 0x0410(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void DoCustomSelectWidgetNavigation(EUINavigation UiNavigation);
	void OnAddedToFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankingRemunerationSelectionWidget">();
	}
	static class URankingRemunerationSelectionWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankingRemunerationSelectionWidget>();
	}
};
static_assert(alignof(URankingRemunerationSelectionWidget) == 0x000008, "Wrong alignment on URankingRemunerationSelectionWidget");
static_assert(sizeof(URankingRemunerationSelectionWidget) == 0x000418, "Wrong size on URankingRemunerationSelectionWidget");
static_assert(offsetof(URankingRemunerationSelectionWidget, _listView) == 0x0003E8, "Member 'URankingRemunerationSelectionWidget::_listView' has a wrong offset!");
static_assert(offsetof(URankingRemunerationSelectionWidget, _bMvpRankReward) == 0x0003F0, "Member 'URankingRemunerationSelectionWidget::_bMvpRankReward' has a wrong offset!");
static_assert(offsetof(URankingRemunerationSelectionWidget, _selectObject) == 0x000408, "Member 'URankingRemunerationSelectionWidget::_selectObject' has a wrong offset!");
static_assert(offsetof(URankingRemunerationSelectionWidget, _selectWidget) == 0x000410, "Member 'URankingRemunerationSelectionWidget::_selectWidget' has a wrong offset!");

// Class OutGameModule.BattleRuleDetailsEntryWidget
// 0x0170 (0x05F8 - 0x0488)
class UBattleRuleDetailsEntryWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPlayModeModeCategory, struct FBattleRuleDetailsInfo> _detailsInfo;                                      // 0x0490(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<EMdGameMode, struct FBattleRuleDetailsInfo> _detailsGameModeInfo;                              // 0x04E0(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FLinearColor                           _grayColor;                                        // 0x0530(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   _tutorialCategoryText;                             // 0x0540(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UAdjustTextWidget*                      _gameModeNameText;                                 // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAdjustTextWidget*                      _categoryNameText;                                 // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                        _unitswitcher;                                     // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTimeWidget*                            _gameModeTimer;                                    // 0x0570(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _numberOfPeopleTextJp;                             // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _numberOfPeopleMinTextJp;                          // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _fromImageJp;                                      // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _numberOfPeopleText;                               // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _numberOfPeopleMinText;                            // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _fromImage;                                        // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                           _isSelectPanel;                                    // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         _listIndex;                                        // 0x05B0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5B4[0x4];                                      // 0x05B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanel*                           _rulePanel;                                        // 0x05B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _bgImage;                                          // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _bgDotImage;                                       // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _ruleBgImage;                                      // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFocusAnimationWidget*                  _focusAnimationListItem;                           // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5E0[0x8];                                      // 0x05E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattleRuleListEntryObject*             _currentBattleRuleObject;                          // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EPlayModeModeCategory                         _debguCategoryColor;                               // 0x05F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5F1[0x7];                                      // 0x05F1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPressButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattleRuleDetailsEntryWidget">();
	}
	static class UBattleRuleDetailsEntryWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleRuleDetailsEntryWidget>();
	}
};
static_assert(alignof(UBattleRuleDetailsEntryWidget) == 0x000008, "Wrong alignment on UBattleRuleDetailsEntryWidget");
static_assert(sizeof(UBattleRuleDetailsEntryWidget) == 0x0005F8, "Wrong size on UBattleRuleDetailsEntryWidget");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _detailsInfo) == 0x000490, "Member 'UBattleRuleDetailsEntryWidget::_detailsInfo' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _detailsGameModeInfo) == 0x0004E0, "Member 'UBattleRuleDetailsEntryWidget::_detailsGameModeInfo' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _grayColor) == 0x000530, "Member 'UBattleRuleDetailsEntryWidget::_grayColor' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _tutorialCategoryText) == 0x000540, "Member 'UBattleRuleDetailsEntryWidget::_tutorialCategoryText' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _gameModeNameText) == 0x000558, "Member 'UBattleRuleDetailsEntryWidget::_gameModeNameText' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _categoryNameText) == 0x000560, "Member 'UBattleRuleDetailsEntryWidget::_categoryNameText' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _unitswitcher) == 0x000568, "Member 'UBattleRuleDetailsEntryWidget::_unitswitcher' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _gameModeTimer) == 0x000570, "Member 'UBattleRuleDetailsEntryWidget::_gameModeTimer' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _numberOfPeopleTextJp) == 0x000578, "Member 'UBattleRuleDetailsEntryWidget::_numberOfPeopleTextJp' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _numberOfPeopleMinTextJp) == 0x000580, "Member 'UBattleRuleDetailsEntryWidget::_numberOfPeopleMinTextJp' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _fromImageJp) == 0x000588, "Member 'UBattleRuleDetailsEntryWidget::_fromImageJp' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _numberOfPeopleText) == 0x000590, "Member 'UBattleRuleDetailsEntryWidget::_numberOfPeopleText' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _numberOfPeopleMinText) == 0x000598, "Member 'UBattleRuleDetailsEntryWidget::_numberOfPeopleMinText' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _fromImage) == 0x0005A0, "Member 'UBattleRuleDetailsEntryWidget::_fromImage' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _isSelectPanel) == 0x0005A8, "Member 'UBattleRuleDetailsEntryWidget::_isSelectPanel' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _listIndex) == 0x0005B0, "Member 'UBattleRuleDetailsEntryWidget::_listIndex' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _rulePanel) == 0x0005B8, "Member 'UBattleRuleDetailsEntryWidget::_rulePanel' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _bgImage) == 0x0005C0, "Member 'UBattleRuleDetailsEntryWidget::_bgImage' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _bgDotImage) == 0x0005C8, "Member 'UBattleRuleDetailsEntryWidget::_bgDotImage' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _ruleBgImage) == 0x0005D0, "Member 'UBattleRuleDetailsEntryWidget::_ruleBgImage' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _focusAnimationListItem) == 0x0005D8, "Member 'UBattleRuleDetailsEntryWidget::_focusAnimationListItem' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _currentBattleRuleObject) == 0x0005E8, "Member 'UBattleRuleDetailsEntryWidget::_currentBattleRuleObject' has a wrong offset!");
static_assert(offsetof(UBattleRuleDetailsEntryWidget, _debguCategoryColor) == 0x0005F0, "Member 'UBattleRuleDetailsEntryWidget::_debguCategoryColor' has a wrong offset!");

// Class OutGameModule.BattleRuleListEntryObject
// 0x0008 (0x0038 - 0x0030)
class UBattleRuleListEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x4];                                       // 0x0030(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _bIsSelected;                                      // 0x0034(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattleRuleListEntryObject">();
	}
	static class UBattleRuleListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleRuleListEntryObject>();
	}
};
static_assert(alignof(UBattleRuleListEntryObject) == 0x000008, "Wrong alignment on UBattleRuleListEntryObject");
static_assert(sizeof(UBattleRuleListEntryObject) == 0x000038, "Wrong size on UBattleRuleListEntryObject");
static_assert(offsetof(UBattleRuleListEntryObject, _bIsSelected) == 0x000034, "Member 'UBattleRuleListEntryObject::_bIsSelected' has a wrong offset!");

// Class OutGameModule.RankingPointWidget
// 0x0028 (0x0378 - 0x0350)
class URankingPointWidget final : public UWidgetBase
{
public:
	class UWidgetSwitcher*                        _switcher;                                         // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _billboardPoint;                                   // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _mvpPoint;                                         // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _topOfficePoint;                                   // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _EliteOfficePoint;                                 // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankingPointWidget">();
	}
	static class URankingPointWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankingPointWidget>();
	}
};
static_assert(alignof(URankingPointWidget) == 0x000008, "Wrong alignment on URankingPointWidget");
static_assert(sizeof(URankingPointWidget) == 0x000378, "Wrong size on URankingPointWidget");
static_assert(offsetof(URankingPointWidget, _switcher) == 0x000350, "Member 'URankingPointWidget::_switcher' has a wrong offset!");
static_assert(offsetof(URankingPointWidget, _billboardPoint) == 0x000358, "Member 'URankingPointWidget::_billboardPoint' has a wrong offset!");
static_assert(offsetof(URankingPointWidget, _mvpPoint) == 0x000360, "Member 'URankingPointWidget::_mvpPoint' has a wrong offset!");
static_assert(offsetof(URankingPointWidget, _topOfficePoint) == 0x000368, "Member 'URankingPointWidget::_topOfficePoint' has a wrong offset!");
static_assert(offsetof(URankingPointWidget, _EliteOfficePoint) == 0x000370, "Member 'URankingPointWidget::_EliteOfficePoint' has a wrong offset!");

// Class OutGameModule.BattleRuleCategoryListEntryObject
// 0x0010 (0x0040 - 0x0030)
class UBattleRuleCategoryListEntryObject final : public UListViewEntryObjectBase
{
public:
	EPlayModeModeCategory                         _category;                                         // 0x0030(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _focusIndex;                                       // 0x0034(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         _battleRuleNum;                                    // 0x0038(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattleRuleCategoryListEntryObject">();
	}
	static class UBattleRuleCategoryListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleRuleCategoryListEntryObject>();
	}
};
static_assert(alignof(UBattleRuleCategoryListEntryObject) == 0x000008, "Wrong alignment on UBattleRuleCategoryListEntryObject");
static_assert(sizeof(UBattleRuleCategoryListEntryObject) == 0x000040, "Wrong size on UBattleRuleCategoryListEntryObject");
static_assert(offsetof(UBattleRuleCategoryListEntryObject, _category) == 0x000030, "Member 'UBattleRuleCategoryListEntryObject::_category' has a wrong offset!");
static_assert(offsetof(UBattleRuleCategoryListEntryObject, _focusIndex) == 0x000034, "Member 'UBattleRuleCategoryListEntryObject::_focusIndex' has a wrong offset!");
static_assert(offsetof(UBattleRuleCategoryListEntryObject, _battleRuleNum) == 0x000038, "Member 'UBattleRuleCategoryListEntryObject::_battleRuleNum' has a wrong offset!");

// Class OutGameModule.BattleRuleCategoryCountListEntryObject
// 0x0008 (0x0038 - 0x0030)
class UBattleRuleCategoryCountListEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattleRuleCategoryCountListEntryObject">();
	}
	static class UBattleRuleCategoryCountListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleRuleCategoryCountListEntryObject>();
	}
};
static_assert(alignof(UBattleRuleCategoryCountListEntryObject) == 0x000008, "Wrong alignment on UBattleRuleCategoryCountListEntryObject");
static_assert(sizeof(UBattleRuleCategoryCountListEntryObject) == 0x000038, "Wrong size on UBattleRuleCategoryCountListEntryObject");

// Class OutGameModule.RankMatchRewardDirectingWidget
// 0x0030 (0x0428 - 0x03F8)
class URankMatchRewardDirectingWidget final : public UResultRewardDirectingWidget
{
public:
	class UPaperFlipbook*                         _rankFB;                                           // 0x03F8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _preRankImage;                                     // 0x0400(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _rankImage;                                        // 0x0408(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _animOpenRankUp;                                   // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _animOpenRankDown;                                 // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _animClose;                                        // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnFinish(class UWidget* Widget);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankMatchRewardDirectingWidget">();
	}
	static class URankMatchRewardDirectingWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankMatchRewardDirectingWidget>();
	}
};
static_assert(alignof(URankMatchRewardDirectingWidget) == 0x000008, "Wrong alignment on URankMatchRewardDirectingWidget");
static_assert(sizeof(URankMatchRewardDirectingWidget) == 0x000428, "Wrong size on URankMatchRewardDirectingWidget");
static_assert(offsetof(URankMatchRewardDirectingWidget, _rankFB) == 0x0003F8, "Member 'URankMatchRewardDirectingWidget::_rankFB' has a wrong offset!");
static_assert(offsetof(URankMatchRewardDirectingWidget, _preRankImage) == 0x000400, "Member 'URankMatchRewardDirectingWidget::_preRankImage' has a wrong offset!");
static_assert(offsetof(URankMatchRewardDirectingWidget, _rankImage) == 0x000408, "Member 'URankMatchRewardDirectingWidget::_rankImage' has a wrong offset!");
static_assert(offsetof(URankMatchRewardDirectingWidget, _animOpenRankUp) == 0x000410, "Member 'URankMatchRewardDirectingWidget::_animOpenRankUp' has a wrong offset!");
static_assert(offsetof(URankMatchRewardDirectingWidget, _animOpenRankDown) == 0x000418, "Member 'URankMatchRewardDirectingWidget::_animOpenRankDown' has a wrong offset!");
static_assert(offsetof(URankMatchRewardDirectingWidget, _animClose) == 0x000420, "Member 'URankMatchRewardDirectingWidget::_animClose' has a wrong offset!");

// Class OutGameModule.BattleRuleStageWidget
// 0x0118 (0x0468 - 0x0350)
class UBattleRuleStageWidget final : public UWidgetBase
{
public:
	class UPaperFlipbook*                         _stageFB;                                          // 0x0350(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EPlayModeModeCategory, struct FBattleRuleStageInfo> _stageInfo;                                        // 0x0358(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<EMdGameMode, struct FBattleRuleStageInfo> _stageOverrideInfo;                                // 0x03A8(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EPlayModeModeCategory                         _debguCategoryColor;                               // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             _stageName;                                        // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _stageExplanation;                                 // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _ruleExplanationText;                              // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTimeWidget*                            _playModeTimer;                                    // 0x0418(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _stageRotationPanel;                               // 0x0420(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _stageNamePlate;                                   // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _stageNameDotImage;                                // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _timerPlate;                                       // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _illustratePlate;                                  // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _stageImage;                                       // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _characterImage;                                   // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_458[0x8];                                      // 0x0458(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattleRuleListEntryObject*             _currentBattleRuleObject;                          // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void SetRuleStageData(class UBattleRuleListEntryObject* battleRuleListObject);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattleRuleStageWidget">();
	}
	static class UBattleRuleStageWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleRuleStageWidget>();
	}
};
static_assert(alignof(UBattleRuleStageWidget) == 0x000008, "Wrong alignment on UBattleRuleStageWidget");
static_assert(sizeof(UBattleRuleStageWidget) == 0x000468, "Wrong size on UBattleRuleStageWidget");
static_assert(offsetof(UBattleRuleStageWidget, _stageFB) == 0x000350, "Member 'UBattleRuleStageWidget::_stageFB' has a wrong offset!");
static_assert(offsetof(UBattleRuleStageWidget, _stageInfo) == 0x000358, "Member 'UBattleRuleStageWidget::_stageInfo' has a wrong offset!");
static_assert(offsetof(UBattleRuleStageWidget, _stageOverrideInfo) == 0x0003A8, "Member 'UBattleRuleStageWidget::_stageOverrideInfo' has a wrong offset!");
static_assert(offsetof(UBattleRuleStageWidget, _debguCategoryColor) == 0x0003F8, "Member 'UBattleRuleStageWidget::_debguCategoryColor' has a wrong offset!");
static_assert(offsetof(UBattleRuleStageWidget, _stageName) == 0x000400, "Member 'UBattleRuleStageWidget::_stageName' has a wrong offset!");
static_assert(offsetof(UBattleRuleStageWidget, _stageExplanation) == 0x000408, "Member 'UBattleRuleStageWidget::_stageExplanation' has a wrong offset!");
static_assert(offsetof(UBattleRuleStageWidget, _ruleExplanationText) == 0x000410, "Member 'UBattleRuleStageWidget::_ruleExplanationText' has a wrong offset!");
static_assert(offsetof(UBattleRuleStageWidget, _playModeTimer) == 0x000418, "Member 'UBattleRuleStageWidget::_playModeTimer' has a wrong offset!");
static_assert(offsetof(UBattleRuleStageWidget, _stageRotationPanel) == 0x000420, "Member 'UBattleRuleStageWidget::_stageRotationPanel' has a wrong offset!");
static_assert(offsetof(UBattleRuleStageWidget, _stageNamePlate) == 0x000428, "Member 'UBattleRuleStageWidget::_stageNamePlate' has a wrong offset!");
static_assert(offsetof(UBattleRuleStageWidget, _stageNameDotImage) == 0x000430, "Member 'UBattleRuleStageWidget::_stageNameDotImage' has a wrong offset!");
static_assert(offsetof(UBattleRuleStageWidget, _timerPlate) == 0x000438, "Member 'UBattleRuleStageWidget::_timerPlate' has a wrong offset!");
static_assert(offsetof(UBattleRuleStageWidget, _illustratePlate) == 0x000440, "Member 'UBattleRuleStageWidget::_illustratePlate' has a wrong offset!");
static_assert(offsetof(UBattleRuleStageWidget, _stageImage) == 0x000448, "Member 'UBattleRuleStageWidget::_stageImage' has a wrong offset!");
static_assert(offsetof(UBattleRuleStageWidget, _characterImage) == 0x000450, "Member 'UBattleRuleStageWidget::_characterImage' has a wrong offset!");
static_assert(offsetof(UBattleRuleStageWidget, _currentBattleRuleObject) == 0x000460, "Member 'UBattleRuleStageWidget::_currentBattleRuleObject' has a wrong offset!");

// Class OutGameModule.BattleRuleWidget
// 0x0110 (0x0460 - 0x0350)
class UBattleRuleWidget final : public UWidgetInputControl
{
public:
	TMap<EPlayModeModeCategory, int32>            _drawCategoryInfoMap;                              // 0x0350(0x0050)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UCustomTileView*                        _playModeRuleTileView;                             // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBattleRuleStageWidget*                 _battleRuleStage;                                  // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         _selectListIndex;                                  // 0x03B0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B4[0x14];                                     // 0x03B4(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetGeneralEmptyWindow*              _widgetGeneralEmptyWindow;                         // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _returnButton;                                     // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _eventEndPopup;                                    // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                  _gameModeEndPopUpLevel;                            // 0x03E0(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelStreamingDynamic*                 _gameModeEndPopUpLevelStreaming;                   // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                  _stagePopUpLevel;                                  // 0x0410(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelStreamingDynamic*                 _stagePopUpLevelStreaming;                         // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_440[0x20];                                     // 0x0440(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CloseBattleRuleWindow();
	void OnChangeBattleRule();
	void OnClosedWindow();
	void OnDecide(int32 Index_0);
	void OnDecideBattleRuleDelegate__DelegateSignature(int32 Index_0);
	void OnDecideListButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideReturnButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnLevelHidden();
	void OnPressReturnButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattleRuleWidget">();
	}
	static class UBattleRuleWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleRuleWidget>();
	}
};
static_assert(alignof(UBattleRuleWidget) == 0x000008, "Wrong alignment on UBattleRuleWidget");
static_assert(sizeof(UBattleRuleWidget) == 0x000460, "Wrong size on UBattleRuleWidget");
static_assert(offsetof(UBattleRuleWidget, _drawCategoryInfoMap) == 0x000350, "Member 'UBattleRuleWidget::_drawCategoryInfoMap' has a wrong offset!");
static_assert(offsetof(UBattleRuleWidget, _playModeRuleTileView) == 0x0003A0, "Member 'UBattleRuleWidget::_playModeRuleTileView' has a wrong offset!");
static_assert(offsetof(UBattleRuleWidget, _battleRuleStage) == 0x0003A8, "Member 'UBattleRuleWidget::_battleRuleStage' has a wrong offset!");
static_assert(offsetof(UBattleRuleWidget, _selectListIndex) == 0x0003B0, "Member 'UBattleRuleWidget::_selectListIndex' has a wrong offset!");
static_assert(offsetof(UBattleRuleWidget, _widgetGeneralEmptyWindow) == 0x0003C8, "Member 'UBattleRuleWidget::_widgetGeneralEmptyWindow' has a wrong offset!");
static_assert(offsetof(UBattleRuleWidget, _returnButton) == 0x0003D0, "Member 'UBattleRuleWidget::_returnButton' has a wrong offset!");
static_assert(offsetof(UBattleRuleWidget, _eventEndPopup) == 0x0003D8, "Member 'UBattleRuleWidget::_eventEndPopup' has a wrong offset!");
static_assert(offsetof(UBattleRuleWidget, _gameModeEndPopUpLevel) == 0x0003E0, "Member 'UBattleRuleWidget::_gameModeEndPopUpLevel' has a wrong offset!");
static_assert(offsetof(UBattleRuleWidget, _gameModeEndPopUpLevelStreaming) == 0x000408, "Member 'UBattleRuleWidget::_gameModeEndPopUpLevelStreaming' has a wrong offset!");
static_assert(offsetof(UBattleRuleWidget, _stagePopUpLevel) == 0x000410, "Member 'UBattleRuleWidget::_stagePopUpLevel' has a wrong offset!");
static_assert(offsetof(UBattleRuleWidget, _stagePopUpLevelStreaming) == 0x000438, "Member 'UBattleRuleWidget::_stagePopUpLevelStreaming' has a wrong offset!");

// Class OutGameModule.BillboardObject
// 0x0068 (0x0098 - 0x0030)
class UBillboardObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x68];                                      // 0x0030(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BillboardObject">();
	}
	static class UBillboardObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBillboardObject>();
	}
};
static_assert(alignof(UBillboardObject) == 0x000008, "Wrong alignment on UBillboardObject");
static_assert(sizeof(UBillboardObject) == 0x000098, "Wrong size on UBillboardObject");

// Class OutGameModule.BillboardItemWidget
// 0x0050 (0x0680 - 0x0630)
class UBillboardItemWidget final : public UPlatformWidgetButton
{
public:
	uint8                                         Pad_630[0x8];                                      // 0x0630(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UBillboardObject*                       _item;                                             // 0x0638(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _characterIcon;                                    // 0x0640(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _name;                                             // 0x0648(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _otherCount;                                       // 0x0650(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTimeWidget*                            _timeWidget;                                       // 0x0658(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _message;                                          // 0x0660(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetLocalizeLayout*                  _dailyNum;                                         // 0x0668(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusAnimationWidget*                  _focusIcon;                                        // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetBase*                            _inputIcon;                                        // 0x0678(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BillboardItemWidget">();
	}
	static class UBillboardItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBillboardItemWidget>();
	}
};
static_assert(alignof(UBillboardItemWidget) == 0x000008, "Wrong alignment on UBillboardItemWidget");
static_assert(sizeof(UBillboardItemWidget) == 0x000680, "Wrong size on UBillboardItemWidget");
static_assert(offsetof(UBillboardItemWidget, _item) == 0x000638, "Member 'UBillboardItemWidget::_item' has a wrong offset!");
static_assert(offsetof(UBillboardItemWidget, _characterIcon) == 0x000640, "Member 'UBillboardItemWidget::_characterIcon' has a wrong offset!");
static_assert(offsetof(UBillboardItemWidget, _name) == 0x000648, "Member 'UBillboardItemWidget::_name' has a wrong offset!");
static_assert(offsetof(UBillboardItemWidget, _otherCount) == 0x000650, "Member 'UBillboardItemWidget::_otherCount' has a wrong offset!");
static_assert(offsetof(UBillboardItemWidget, _timeWidget) == 0x000658, "Member 'UBillboardItemWidget::_timeWidget' has a wrong offset!");
static_assert(offsetof(UBillboardItemWidget, _message) == 0x000660, "Member 'UBillboardItemWidget::_message' has a wrong offset!");
static_assert(offsetof(UBillboardItemWidget, _dailyNum) == 0x000668, "Member 'UBillboardItemWidget::_dailyNum' has a wrong offset!");
static_assert(offsetof(UBillboardItemWidget, _focusIcon) == 0x000670, "Member 'UBillboardItemWidget::_focusIcon' has a wrong offset!");
static_assert(offsetof(UBillboardItemWidget, _inputIcon) == 0x000678, "Member 'UBillboardItemWidget::_inputIcon' has a wrong offset!");

// Class OutGameModule.PackItemEntryObject
// 0x0028 (0x0058 - 0x0030)
class UPackItemEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x28];                                      // 0x0030(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PackItemEntryObject">();
	}
	static class UPackItemEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPackItemEntryObject>();
	}
};
static_assert(alignof(UPackItemEntryObject) == 0x000008, "Wrong alignment on UPackItemEntryObject");
static_assert(sizeof(UPackItemEntryObject) == 0x000058, "Wrong size on UPackItemEntryObject");

// Class OutGameModule.BillboardAppWidget
// 0x0040 (0x0440 - 0x0400)
class UBillboardAppWidget final : public UCustomTileViewHasWidget
{
public:
	uint8                                         Pad_400[0x8];                                      // 0x0400(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanel*                           _window;                                           // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBillboardDisplayWidget*                _billboardDisplaySeason;                           // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBillboardDisplayWidget*                _billboardDisplayDaily;                            // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetBase*                            _emptyDisplay;                                     // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _dummyButton;                                      // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULoadIconWidget*                        _networkLoadingIcon;                               // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBillboardObject*                       _selectedItem;                                     // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BP_OnChangeTab();
	void BP_OnTryChangeTab();
	void OnAddedToFocusButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnDecideButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnFinishFetchDataEvent(int32 RequestId);
	void OnPressButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnRemovedFromFocusButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BillboardAppWidget">();
	}
	static class UBillboardAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBillboardAppWidget>();
	}
};
static_assert(alignof(UBillboardAppWidget) == 0x000008, "Wrong alignment on UBillboardAppWidget");
static_assert(sizeof(UBillboardAppWidget) == 0x000440, "Wrong size on UBillboardAppWidget");
static_assert(offsetof(UBillboardAppWidget, _window) == 0x000408, "Member 'UBillboardAppWidget::_window' has a wrong offset!");
static_assert(offsetof(UBillboardAppWidget, _billboardDisplaySeason) == 0x000410, "Member 'UBillboardAppWidget::_billboardDisplaySeason' has a wrong offset!");
static_assert(offsetof(UBillboardAppWidget, _billboardDisplayDaily) == 0x000418, "Member 'UBillboardAppWidget::_billboardDisplayDaily' has a wrong offset!");
static_assert(offsetof(UBillboardAppWidget, _emptyDisplay) == 0x000420, "Member 'UBillboardAppWidget::_emptyDisplay' has a wrong offset!");
static_assert(offsetof(UBillboardAppWidget, _dummyButton) == 0x000428, "Member 'UBillboardAppWidget::_dummyButton' has a wrong offset!");
static_assert(offsetof(UBillboardAppWidget, _networkLoadingIcon) == 0x000430, "Member 'UBillboardAppWidget::_networkLoadingIcon' has a wrong offset!");
static_assert(offsetof(UBillboardAppWidget, _selectedItem) == 0x000438, "Member 'UBillboardAppWidget::_selectedItem' has a wrong offset!");

// Class OutGameModule.BillboardDisplayWidget
// 0x0040 (0x0390 - 0x0350)
class UBillboardDisplayWidget final : public UWidgetBase
{
public:
	class UWidgetLocalizeLayout*                  _sum;                                              // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetLocalizeLayout*                  _daily;                                            // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _dailyPlus;                                        // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _defaultPanel;                                     // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _rankerPanel;                                      // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetLocalizeLayout*                  _rank;                                             // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _ranker;                                           // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _rankerSwitcher;                                   // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_SetupDaily(int32 Val) const;
	void BP_SetupRank(int32 Val) const;
	void BP_SetupSum(int32 Val) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BillboardDisplayWidget">();
	}
	static class UBillboardDisplayWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBillboardDisplayWidget>();
	}
};
static_assert(alignof(UBillboardDisplayWidget) == 0x000008, "Wrong alignment on UBillboardDisplayWidget");
static_assert(sizeof(UBillboardDisplayWidget) == 0x000390, "Wrong size on UBillboardDisplayWidget");
static_assert(offsetof(UBillboardDisplayWidget, _sum) == 0x000350, "Member 'UBillboardDisplayWidget::_sum' has a wrong offset!");
static_assert(offsetof(UBillboardDisplayWidget, _daily) == 0x000358, "Member 'UBillboardDisplayWidget::_daily' has a wrong offset!");
static_assert(offsetof(UBillboardDisplayWidget, _dailyPlus) == 0x000360, "Member 'UBillboardDisplayWidget::_dailyPlus' has a wrong offset!");
static_assert(offsetof(UBillboardDisplayWidget, _defaultPanel) == 0x000368, "Member 'UBillboardDisplayWidget::_defaultPanel' has a wrong offset!");
static_assert(offsetof(UBillboardDisplayWidget, _rankerPanel) == 0x000370, "Member 'UBillboardDisplayWidget::_rankerPanel' has a wrong offset!");
static_assert(offsetof(UBillboardDisplayWidget, _rank) == 0x000378, "Member 'UBillboardDisplayWidget::_rank' has a wrong offset!");
static_assert(offsetof(UBillboardDisplayWidget, _ranker) == 0x000380, "Member 'UBillboardDisplayWidget::_ranker' has a wrong offset!");
static_assert(offsetof(UBillboardDisplayWidget, _rankerSwitcher) == 0x000388, "Member 'UBillboardDisplayWidget::_rankerSwitcher' has a wrong offset!");

// Class OutGameModule.RankingRemunerationWidgetBase
// 0x0020 (0x0370 - 0x0350)
class URankingRemunerationWidgetBase : public UWidgetBase
{
public:
	class UWidgetButton*                          _cancelButton;                                     // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URankingRemunerationSelectionWidget*    _remunerationSelect;                               // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URankingRemunerationSeasonWidget*       _seasonText;                                       // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _officePanel;                                      // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void DoCustomSelectWidgetNavigation(EUINavigation UiNavigation);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankingRemunerationWidgetBase">();
	}
	static class URankingRemunerationWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankingRemunerationWidgetBase>();
	}
};
static_assert(alignof(URankingRemunerationWidgetBase) == 0x000008, "Wrong alignment on URankingRemunerationWidgetBase");
static_assert(sizeof(URankingRemunerationWidgetBase) == 0x000370, "Wrong size on URankingRemunerationWidgetBase");
static_assert(offsetof(URankingRemunerationWidgetBase, _cancelButton) == 0x000350, "Member 'URankingRemunerationWidgetBase::_cancelButton' has a wrong offset!");
static_assert(offsetof(URankingRemunerationWidgetBase, _remunerationSelect) == 0x000358, "Member 'URankingRemunerationWidgetBase::_remunerationSelect' has a wrong offset!");
static_assert(offsetof(URankingRemunerationWidgetBase, _seasonText) == 0x000360, "Member 'URankingRemunerationWidgetBase::_seasonText' has a wrong offset!");
static_assert(offsetof(URankingRemunerationWidgetBase, _officePanel) == 0x000368, "Member 'URankingRemunerationWidgetBase::_officePanel' has a wrong offset!");

// Class OutGameModule.RankingRemunerationTabWidget
// 0x0010 (0x0380 - 0x0370)
class URankingRemunerationTabWidget final : public URankingRemunerationWidgetBase
{
public:
	class UTabWidget*                             _tab;                                              // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        _swicher;                                          // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void ChangeTab(int32 NewSelectTab);
	void OnTryChangeTab(int32 NewSelectTab);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankingRemunerationTabWidget">();
	}
	static class URankingRemunerationTabWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankingRemunerationTabWidget>();
	}
};
static_assert(alignof(URankingRemunerationTabWidget) == 0x000008, "Wrong alignment on URankingRemunerationTabWidget");
static_assert(sizeof(URankingRemunerationTabWidget) == 0x000380, "Wrong size on URankingRemunerationTabWidget");
static_assert(offsetof(URankingRemunerationTabWidget, _tab) == 0x000370, "Member 'URankingRemunerationTabWidget::_tab' has a wrong offset!");
static_assert(offsetof(URankingRemunerationTabWidget, _swicher) == 0x000378, "Member 'URankingRemunerationTabWidget::_swicher' has a wrong offset!");

// Class OutGameModule.BootWidget
// 0x0068 (0x03B8 - 0x0350)
class UBootWidget final : public UWidgetBase
{
public:
	class UWidgetSwitcher*                        _phaseSwitcher;                                    // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _logoImage;                                        // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBootLogoStepData>              _logoStepData;                                     // 0x0360(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UTextBlock*                             _waringText;                                       // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_378[0x40];                                     // 0x0378(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CallEnterEvent();
	EBootWidgetNextLevel GetNextLevel();
	bool IsOpenAccountSelect();
	void NextLogoStep(bool* IsMax);
	void OnChangePhase(const EBootWidgetPhaseType Phase);
	void OnErrorWindowClosed();
	void OnErrorWindowOpen();
	void SetPhase(EBootWidgetPhaseType Phase);

	bool IsOpenErrorWindow() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BootWidget">();
	}
	static class UBootWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBootWidget>();
	}
};
static_assert(alignof(UBootWidget) == 0x000008, "Wrong alignment on UBootWidget");
static_assert(sizeof(UBootWidget) == 0x0003B8, "Wrong size on UBootWidget");
static_assert(offsetof(UBootWidget, _phaseSwitcher) == 0x000350, "Member 'UBootWidget::_phaseSwitcher' has a wrong offset!");
static_assert(offsetof(UBootWidget, _logoImage) == 0x000358, "Member 'UBootWidget::_logoImage' has a wrong offset!");
static_assert(offsetof(UBootWidget, _logoStepData) == 0x000360, "Member 'UBootWidget::_logoStepData' has a wrong offset!");
static_assert(offsetof(UBootWidget, _waringText) == 0x000370, "Member 'UBootWidget::_waringText' has a wrong offset!");

// Class OutGameModule.BrowserTransWindowWidget
// 0x0050 (0x0438 - 0x03E8)
class UBrowserTransWindowWidget final : public UAppWidget
{
public:
	TMap<ETitleCodeRegion, class FString>         _browserURLMaps;                                   // 0x03E8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

public:
	void OpenBrowser();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BrowserTransWindowWidget">();
	}
	static class UBrowserTransWindowWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBrowserTransWindowWidget>();
	}
};
static_assert(alignof(UBrowserTransWindowWidget) == 0x000008, "Wrong alignment on UBrowserTransWindowWidget");
static_assert(sizeof(UBrowserTransWindowWidget) == 0x000438, "Wrong size on UBrowserTransWindowWidget");
static_assert(offsetof(UBrowserTransWindowWidget, _browserURLMaps) == 0x0003E8, "Member 'UBrowserTransWindowWidget::_browserURLMaps' has a wrong offset!");

// Class OutGameModule.PlayerControllerOutGame
// 0x0000 (0x0610 - 0x0610)
class APlayerControllerOutGame final : public APlayerControllerGame
{
public:
	void ChangedOperationController();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayerControllerOutGame">();
	}
	static class APlayerControllerOutGame* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerControllerOutGame>();
	}
};
static_assert(alignof(APlayerControllerOutGame) == 0x000008, "Wrong alignment on APlayerControllerOutGame");
static_assert(sizeof(APlayerControllerOutGame) == 0x000610, "Wrong size on APlayerControllerOutGame");

// Class OutGameModule.BuyItemWidget
// 0x0068 (0x04F0 - 0x0488)
class UBuyItemWidget final : public UWidgetButton
{
public:
	class FText                                   _itemName;                                         // 0x0488(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                   _itemDescription;                                  // 0x04A0(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _window;                                           // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _itemText;                                         // 0x04C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAdjustTextWidget*                      _itemAdjustText;                                   // 0x04C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _itemDescriptionText;                              // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAdjustTextWidget*                      _itemDescriptionAdjustText;                        // 0x04D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCoinWidget*                            _itemCoin;                                         // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                         _realityHorizontalBox;                             // 0x04E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BuyItemWidget">();
	}
	static class UBuyItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBuyItemWidget>();
	}
};
static_assert(alignof(UBuyItemWidget) == 0x000008, "Wrong alignment on UBuyItemWidget");
static_assert(sizeof(UBuyItemWidget) == 0x0004F0, "Wrong size on UBuyItemWidget");
static_assert(offsetof(UBuyItemWidget, _itemName) == 0x000488, "Member 'UBuyItemWidget::_itemName' has a wrong offset!");
static_assert(offsetof(UBuyItemWidget, _itemDescription) == 0x0004A0, "Member 'UBuyItemWidget::_itemDescription' has a wrong offset!");
static_assert(offsetof(UBuyItemWidget, _window) == 0x0004B8, "Member 'UBuyItemWidget::_window' has a wrong offset!");
static_assert(offsetof(UBuyItemWidget, _itemText) == 0x0004C0, "Member 'UBuyItemWidget::_itemText' has a wrong offset!");
static_assert(offsetof(UBuyItemWidget, _itemAdjustText) == 0x0004C8, "Member 'UBuyItemWidget::_itemAdjustText' has a wrong offset!");
static_assert(offsetof(UBuyItemWidget, _itemDescriptionText) == 0x0004D0, "Member 'UBuyItemWidget::_itemDescriptionText' has a wrong offset!");
static_assert(offsetof(UBuyItemWidget, _itemDescriptionAdjustText) == 0x0004D8, "Member 'UBuyItemWidget::_itemDescriptionAdjustText' has a wrong offset!");
static_assert(offsetof(UBuyItemWidget, _itemCoin) == 0x0004E0, "Member 'UBuyItemWidget::_itemCoin' has a wrong offset!");
static_assert(offsetof(UBuyItemWidget, _realityHorizontalBox) == 0x0004E8, "Member 'UBuyItemWidget::_realityHorizontalBox' has a wrong offset!");

// Class OutGameModule.SwitcherControllerWidget
// 0x0058 (0x03A8 - 0x0350)
class USwitcherControllerWidget : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnSwichTabWidget;                                  // 0x0360(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnTryChangeTab;                                    // 0x0370(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UWidgetSwitcher*>                _tabContents;                                      // 0x0380(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                          _bGameSequenceSpecifyTabIndex;                     // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               _backGround;                                       // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bTabSwitchSE;                                     // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bKeyBind;                                         // 0x03A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bTabSwitchDisable;                                // 0x03A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3A3[0x1];                                      // 0x03A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _selectTab;                                        // 0x03A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	int32 BP_GetSelectedTabIndex();
	void BP_SwitchAfter();
	void BP_SwitchBefore();
	void OnPressTab(class UAppWidget* Button, EWidgetInputType InputType);
	void OnSwitchAfter(class UAppWidget* Button, EWidgetInputType InputType);
	void OnSwitchBefore(class UAppWidget* Button, EWidgetInputType InputType);
	void OnSwitchTabEventDelegate__DelegateSignature(int32 NewSelectTab);
	void SetupTabWidget();
	void SwitchAfter();
	void SwitchBefore();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SwitcherControllerWidget">();
	}
	static class USwitcherControllerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USwitcherControllerWidget>();
	}
};
static_assert(alignof(USwitcherControllerWidget) == 0x000008, "Wrong alignment on USwitcherControllerWidget");
static_assert(sizeof(USwitcherControllerWidget) == 0x0003A8, "Wrong size on USwitcherControllerWidget");
static_assert(offsetof(USwitcherControllerWidget, OnSwichTabWidget) == 0x000360, "Member 'USwitcherControllerWidget::OnSwichTabWidget' has a wrong offset!");
static_assert(offsetof(USwitcherControllerWidget, OnTryChangeTab) == 0x000370, "Member 'USwitcherControllerWidget::OnTryChangeTab' has a wrong offset!");
static_assert(offsetof(USwitcherControllerWidget, _tabContents) == 0x000380, "Member 'USwitcherControllerWidget::_tabContents' has a wrong offset!");
static_assert(offsetof(USwitcherControllerWidget, _bGameSequenceSpecifyTabIndex) == 0x000390, "Member 'USwitcherControllerWidget::_bGameSequenceSpecifyTabIndex' has a wrong offset!");
static_assert(offsetof(USwitcherControllerWidget, _backGround) == 0x000398, "Member 'USwitcherControllerWidget::_backGround' has a wrong offset!");
static_assert(offsetof(USwitcherControllerWidget, _bTabSwitchSE) == 0x0003A0, "Member 'USwitcherControllerWidget::_bTabSwitchSE' has a wrong offset!");
static_assert(offsetof(USwitcherControllerWidget, _bKeyBind) == 0x0003A1, "Member 'USwitcherControllerWidget::_bKeyBind' has a wrong offset!");
static_assert(offsetof(USwitcherControllerWidget, _bTabSwitchDisable) == 0x0003A2, "Member 'USwitcherControllerWidget::_bTabSwitchDisable' has a wrong offset!");
static_assert(offsetof(USwitcherControllerWidget, _selectTab) == 0x0003A4, "Member 'USwitcherControllerWidget::_selectTab' has a wrong offset!");

// Class OutGameModule.ResultScoreRatioDetailsWidget
// 0x0038 (0x0388 - 0x0350)
class UResultScoreRatioDetailsWidget final : public UWidgetBase
{
public:
	struct FLinearColor                           _color;                                            // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _contents;                                         // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                _backGround;                                       // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _title;                                            // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _count;                                            // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _ratio;                                            // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ResultScoreRatioDetailsWidget">();
	}
	static class UResultScoreRatioDetailsWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResultScoreRatioDetailsWidget>();
	}
};
static_assert(alignof(UResultScoreRatioDetailsWidget) == 0x000008, "Wrong alignment on UResultScoreRatioDetailsWidget");
static_assert(sizeof(UResultScoreRatioDetailsWidget) == 0x000388, "Wrong size on UResultScoreRatioDetailsWidget");
static_assert(offsetof(UResultScoreRatioDetailsWidget, _color) == 0x000350, "Member 'UResultScoreRatioDetailsWidget::_color' has a wrong offset!");
static_assert(offsetof(UResultScoreRatioDetailsWidget, _contents) == 0x000360, "Member 'UResultScoreRatioDetailsWidget::_contents' has a wrong offset!");
static_assert(offsetof(UResultScoreRatioDetailsWidget, _backGround) == 0x000368, "Member 'UResultScoreRatioDetailsWidget::_backGround' has a wrong offset!");
static_assert(offsetof(UResultScoreRatioDetailsWidget, _title) == 0x000370, "Member 'UResultScoreRatioDetailsWidget::_title' has a wrong offset!");
static_assert(offsetof(UResultScoreRatioDetailsWidget, _count) == 0x000378, "Member 'UResultScoreRatioDetailsWidget::_count' has a wrong offset!");
static_assert(offsetof(UResultScoreRatioDetailsWidget, _ratio) == 0x000380, "Member 'UResultScoreRatioDetailsWidget::_ratio' has a wrong offset!");

// Class OutGameModule.CalloutTabWidget
// 0x0028 (0x03D0 - 0x03A8)
class UCalloutTabWidget final : public USwitcherControllerWidget
{
public:
	class UScrollBox*                             _headerList;                                       // 0x03A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNamedSlot*                             _arrowSlot;                                        // 0x03B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B8[0x18];                                     // 0x03B8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnSwitchTab(class UAppWidget* Button, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CalloutTabWidget">();
	}
	static class UCalloutTabWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCalloutTabWidget>();
	}
};
static_assert(alignof(UCalloutTabWidget) == 0x000008, "Wrong alignment on UCalloutTabWidget");
static_assert(sizeof(UCalloutTabWidget) == 0x0003D0, "Wrong size on UCalloutTabWidget");
static_assert(offsetof(UCalloutTabWidget, _headerList) == 0x0003A8, "Member 'UCalloutTabWidget::_headerList' has a wrong offset!");
static_assert(offsetof(UCalloutTabWidget, _arrowSlot) == 0x0003B0, "Member 'UCalloutTabWidget::_arrowSlot' has a wrong offset!");

// Class OutGameModule.CameraActorOutGame
// 0x00F0 (0x0310 - 0x0220)
class ACameraActorOutGame : public AActor
{
public:
	EOutCameraType                                _cameraType;                                       // 0x0220(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECharacterOutGameSpawnPointType               _type;                                             // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECharacterOutGameSpawnPointType               _oldSizeType;                                      // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_223[0x1];                                      // 0x0223(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                _oldLocation;                                      // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<ECharacterOutGameSpawnPointType, struct FCameraActorOutGameListInfo> _cameraListMap;                                    // 0x0230(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMap<ECharacterId, struct FCameraActorOutGameListInfo> _customCameraListMap;                              // 0x0280(0x0050)(Edit, NativeAccessSpecifierPublic)
	class UDataTable*                             _spawnPointTypeTable;                              // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            _cameraCurve;                                      // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECharacterId                                  _characterId;                                      // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpringArmComponent*                    _springArm;                                        // 0x02E8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCameraComponentForOffCenterProjection* _camera;                                           // 0x02F0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F8[0x18];                                     // 0x02F8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CameraActorOutGame">();
	}
	static class ACameraActorOutGame* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACameraActorOutGame>();
	}
};
static_assert(alignof(ACameraActorOutGame) == 0x000008, "Wrong alignment on ACameraActorOutGame");
static_assert(sizeof(ACameraActorOutGame) == 0x000310, "Wrong size on ACameraActorOutGame");
static_assert(offsetof(ACameraActorOutGame, _cameraType) == 0x000220, "Member 'ACameraActorOutGame::_cameraType' has a wrong offset!");
static_assert(offsetof(ACameraActorOutGame, _type) == 0x000221, "Member 'ACameraActorOutGame::_type' has a wrong offset!");
static_assert(offsetof(ACameraActorOutGame, _oldSizeType) == 0x000222, "Member 'ACameraActorOutGame::_oldSizeType' has a wrong offset!");
static_assert(offsetof(ACameraActorOutGame, _oldLocation) == 0x000224, "Member 'ACameraActorOutGame::_oldLocation' has a wrong offset!");
static_assert(offsetof(ACameraActorOutGame, _cameraListMap) == 0x000230, "Member 'ACameraActorOutGame::_cameraListMap' has a wrong offset!");
static_assert(offsetof(ACameraActorOutGame, _customCameraListMap) == 0x000280, "Member 'ACameraActorOutGame::_customCameraListMap' has a wrong offset!");
static_assert(offsetof(ACameraActorOutGame, _spawnPointTypeTable) == 0x0002D0, "Member 'ACameraActorOutGame::_spawnPointTypeTable' has a wrong offset!");
static_assert(offsetof(ACameraActorOutGame, _cameraCurve) == 0x0002D8, "Member 'ACameraActorOutGame::_cameraCurve' has a wrong offset!");
static_assert(offsetof(ACameraActorOutGame, _characterId) == 0x0002E0, "Member 'ACameraActorOutGame::_characterId' has a wrong offset!");
static_assert(offsetof(ACameraActorOutGame, _springArm) == 0x0002E8, "Member 'ACameraActorOutGame::_springArm' has a wrong offset!");
static_assert(offsetof(ACameraActorOutGame, _camera) == 0x0002F0, "Member 'ACameraActorOutGame::_camera' has a wrong offset!");

// Class OutGameModule.ResultRewardAddValueWidget
// 0x00A8 (0x03F8 - 0x0350)
class UResultRewardAddValueWidget final : public UWidgetBase
{
public:
	bool                                          _bZeroDisp;                                        // 0x0350(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bComma;                                           // 0x0351(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_352[0x2];                                      // 0x0352(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _testValue;                                        // 0x0354(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 _unit;                                             // 0x0358(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _plusColor;                                        // 0x0368(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _minusColor;                                       // 0x0378(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateFontInfo                         _font;                                             // 0x0388(0x0058)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _unitSize;                                         // 0x03E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             _value;                                            // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _unitText;                                         // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ResultRewardAddValueWidget">();
	}
	static class UResultRewardAddValueWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResultRewardAddValueWidget>();
	}
};
static_assert(alignof(UResultRewardAddValueWidget) == 0x000008, "Wrong alignment on UResultRewardAddValueWidget");
static_assert(sizeof(UResultRewardAddValueWidget) == 0x0003F8, "Wrong size on UResultRewardAddValueWidget");
static_assert(offsetof(UResultRewardAddValueWidget, _bZeroDisp) == 0x000350, "Member 'UResultRewardAddValueWidget::_bZeroDisp' has a wrong offset!");
static_assert(offsetof(UResultRewardAddValueWidget, _bComma) == 0x000351, "Member 'UResultRewardAddValueWidget::_bComma' has a wrong offset!");
static_assert(offsetof(UResultRewardAddValueWidget, _testValue) == 0x000354, "Member 'UResultRewardAddValueWidget::_testValue' has a wrong offset!");
static_assert(offsetof(UResultRewardAddValueWidget, _unit) == 0x000358, "Member 'UResultRewardAddValueWidget::_unit' has a wrong offset!");
static_assert(offsetof(UResultRewardAddValueWidget, _plusColor) == 0x000368, "Member 'UResultRewardAddValueWidget::_plusColor' has a wrong offset!");
static_assert(offsetof(UResultRewardAddValueWidget, _minusColor) == 0x000378, "Member 'UResultRewardAddValueWidget::_minusColor' has a wrong offset!");
static_assert(offsetof(UResultRewardAddValueWidget, _font) == 0x000388, "Member 'UResultRewardAddValueWidget::_font' has a wrong offset!");
static_assert(offsetof(UResultRewardAddValueWidget, _unitSize) == 0x0003E0, "Member 'UResultRewardAddValueWidget::_unitSize' has a wrong offset!");
static_assert(offsetof(UResultRewardAddValueWidget, _value) == 0x0003E8, "Member 'UResultRewardAddValueWidget::_value' has a wrong offset!");
static_assert(offsetof(UResultRewardAddValueWidget, _unitText) == 0x0003F0, "Member 'UResultRewardAddValueWidget::_unitText' has a wrong offset!");

// Class OutGameModule.CameraActorAvatarCreate
// 0x0050 (0x0360 - 0x0310)
class ACameraActorAvatarCreate final : public ACameraActorOutGame
{
public:
	bool                                          bCanInputValue;                                    // 0x0310(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bLimitVecotr2D;                                    // 0x0311(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_312[0x2];                                      // 0x0312(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _maxVector2D;                                      // 0x0314(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _minimumVector2D;                                  // 0x0318(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_31C[0x44];                                     // 0x031C(0x0044)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_ResetCamera();
	void BP_SetCanInputValue(bool Val);

	uint8 BP_GetCanInputValue() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CameraActorAvatarCreate">();
	}
	static class ACameraActorAvatarCreate* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACameraActorAvatarCreate>();
	}
};
static_assert(alignof(ACameraActorAvatarCreate) == 0x000008, "Wrong alignment on ACameraActorAvatarCreate");
static_assert(sizeof(ACameraActorAvatarCreate) == 0x000360, "Wrong size on ACameraActorAvatarCreate");
static_assert(offsetof(ACameraActorAvatarCreate, bCanInputValue) == 0x000310, "Member 'ACameraActorAvatarCreate::bCanInputValue' has a wrong offset!");
static_assert(offsetof(ACameraActorAvatarCreate, bLimitVecotr2D) == 0x000311, "Member 'ACameraActorAvatarCreate::bLimitVecotr2D' has a wrong offset!");
static_assert(offsetof(ACameraActorAvatarCreate, _maxVector2D) == 0x000314, "Member 'ACameraActorAvatarCreate::_maxVector2D' has a wrong offset!");
static_assert(offsetof(ACameraActorAvatarCreate, _minimumVector2D) == 0x000318, "Member 'ACameraActorAvatarCreate::_minimumVector2D' has a wrong offset!");

// Class OutGameModule.CharacterOutGame
// 0x0070 (0x0538 - 0x04C8)
class ACharacterOutGame : public ACharacterGame
{
public:
	uint8                                         Pad_4C8[0x20];                                     // 0x04C8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bMySelf;                                           // 0x04E8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECharacterId                                  _outGameCharacterId;                               // 0x04E9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4EA[0x2];                                      // 0x04EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _outGameCharacterCostumeCode;                      // 0x04EC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _outGameCharacterAura;                             // 0x04F0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _outGameCharacterAuraDisplayTarget;                // 0x04F4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _outGameCharacterAuraDisplayArea;                  // 0x04F8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EOutGameCharacterAnimationType                _startAnimationType;                               // 0x04FC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4FD[0x3];                                      // 0x04FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         _standbyVoiceAtomComponent;                        // 0x0500(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_508[0x30];                                     // 0x0508(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAuraEffectLoadedDelegate__DelegateSignature();
	void OnChangedLODDelegate__DelegateSignature();
	void PlayCharacterAppearAnimation();
	void PlaySelectAnimation();
	void PlaySequenceSelectionAnimation();
	void ResetAccessory();
	void ResetAvatarCustomize();
	void ResetCostume();
	void ResetCustomizeColor();

	class UAnimationOutGame* GetAnimation() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CharacterOutGame">();
	}
	static class ACharacterOutGame* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACharacterOutGame>();
	}
};
static_assert(alignof(ACharacterOutGame) == 0x000008, "Wrong alignment on ACharacterOutGame");
static_assert(sizeof(ACharacterOutGame) == 0x000538, "Wrong size on ACharacterOutGame");
static_assert(offsetof(ACharacterOutGame, bMySelf) == 0x0004E8, "Member 'ACharacterOutGame::bMySelf' has a wrong offset!");
static_assert(offsetof(ACharacterOutGame, _outGameCharacterId) == 0x0004E9, "Member 'ACharacterOutGame::_outGameCharacterId' has a wrong offset!");
static_assert(offsetof(ACharacterOutGame, _outGameCharacterCostumeCode) == 0x0004EC, "Member 'ACharacterOutGame::_outGameCharacterCostumeCode' has a wrong offset!");
static_assert(offsetof(ACharacterOutGame, _outGameCharacterAura) == 0x0004F0, "Member 'ACharacterOutGame::_outGameCharacterAura' has a wrong offset!");
static_assert(offsetof(ACharacterOutGame, _outGameCharacterAuraDisplayTarget) == 0x0004F4, "Member 'ACharacterOutGame::_outGameCharacterAuraDisplayTarget' has a wrong offset!");
static_assert(offsetof(ACharacterOutGame, _outGameCharacterAuraDisplayArea) == 0x0004F8, "Member 'ACharacterOutGame::_outGameCharacterAuraDisplayArea' has a wrong offset!");
static_assert(offsetof(ACharacterOutGame, _startAnimationType) == 0x0004FC, "Member 'ACharacterOutGame::_startAnimationType' has a wrong offset!");
static_assert(offsetof(ACharacterOutGame, _standbyVoiceAtomComponent) == 0x000500, "Member 'ACharacterOutGame::_standbyVoiceAtomComponent' has a wrong offset!");

// Class OutGameModule.RentalWidget
// 0x0058 (0x03A8 - 0x0350)
class URentalWidget final : public UWidgetBase
{
public:
	int32                                         _slotIndex;                                        // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetButton*                          _button;                                           // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _baseCanvasPanel;                                  // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _textSwitcher;                                     // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _iconSwitcher;                                     // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _gachaText;                                        // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _seasonPassText;                                   // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         _countTextBody;                                    // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _countTextBlock;                                   // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         _textBlock;                                        // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         _ticketText;                                       // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnChangedSelectedCharacterEvent(bool UnLocked, bool EnableRental);
	void OnRentalPointUpdatedEvent(int32 Value);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RentalWidget">();
	}
	static class URentalWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URentalWidget>();
	}
};
static_assert(alignof(URentalWidget) == 0x000008, "Wrong alignment on URentalWidget");
static_assert(sizeof(URentalWidget) == 0x0003A8, "Wrong size on URentalWidget");
static_assert(offsetof(URentalWidget, _slotIndex) == 0x000350, "Member 'URentalWidget::_slotIndex' has a wrong offset!");
static_assert(offsetof(URentalWidget, _button) == 0x000358, "Member 'URentalWidget::_button' has a wrong offset!");
static_assert(offsetof(URentalWidget, _baseCanvasPanel) == 0x000360, "Member 'URentalWidget::_baseCanvasPanel' has a wrong offset!");
static_assert(offsetof(URentalWidget, _textSwitcher) == 0x000368, "Member 'URentalWidget::_textSwitcher' has a wrong offset!");
static_assert(offsetof(URentalWidget, _iconSwitcher) == 0x000370, "Member 'URentalWidget::_iconSwitcher' has a wrong offset!");
static_assert(offsetof(URentalWidget, _gachaText) == 0x000378, "Member 'URentalWidget::_gachaText' has a wrong offset!");
static_assert(offsetof(URentalWidget, _seasonPassText) == 0x000380, "Member 'URentalWidget::_seasonPassText' has a wrong offset!");
static_assert(offsetof(URentalWidget, _countTextBody) == 0x000388, "Member 'URentalWidget::_countTextBody' has a wrong offset!");
static_assert(offsetof(URentalWidget, _countTextBlock) == 0x000390, "Member 'URentalWidget::_countTextBlock' has a wrong offset!");
static_assert(offsetof(URentalWidget, _textBlock) == 0x000398, "Member 'URentalWidget::_textBlock' has a wrong offset!");
static_assert(offsetof(URentalWidget, _ticketText) == 0x0003A0, "Member 'URentalWidget::_ticketText' has a wrong offset!");

// Class OutGameModule.CharacterAvatarCreate
// 0x0000 (0x0538 - 0x0538)
class ACharacterAvatarCreate final : public ACharacterOutGame
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CharacterAvatarCreate">();
	}
	static class ACharacterAvatarCreate* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACharacterAvatarCreate>();
	}
};
static_assert(alignof(ACharacterAvatarCreate) == 0x000008, "Wrong alignment on ACharacterAvatarCreate");
static_assert(sizeof(ACharacterAvatarCreate) == 0x000538, "Wrong size on ACharacterAvatarCreate");

// Class OutGameModule.CharacterCustomize
// 0x0000 (0x0538 - 0x0538)
class ACharacterCustomize final : public ACharacterOutGame
{
public:
	void BP_ResetCharaTransform();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CharacterCustomize">();
	}
	static class ACharacterCustomize* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACharacterCustomize>();
	}
};
static_assert(alignof(ACharacterCustomize) == 0x000008, "Wrong alignment on ACharacterCustomize");
static_assert(sizeof(ACharacterCustomize) == 0x000538, "Wrong size on ACharacterCustomize");

// Class OutGameModule.ResultScoreWindowBase
// 0x0088 (0x03D8 - 0x0350)
class UResultScoreWindowBase : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 _blockBG;                                          // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_368[0x50];                                     // 0x0368(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	class UAdjustTextWidget*                      _scoreTitle;                                       // 0x03B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _score;                                            // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _closeButton;                                      // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralEmptyWindow*              _window;                                           // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void CloseEnd();
	void OnClose();
	void OnDecideClose(class UAppWidget* Button, EWidgetInputType InputType);
	void OnOpen();
	void OnOutsideButtonDownEventDelegate__DelegateSignature();
	struct FEventReply OnPressBlockBG(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ResultScoreWindowBase">();
	}
	static class UResultScoreWindowBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResultScoreWindowBase>();
	}
};
static_assert(alignof(UResultScoreWindowBase) == 0x000008, "Wrong alignment on UResultScoreWindowBase");
static_assert(sizeof(UResultScoreWindowBase) == 0x0003D8, "Wrong size on UResultScoreWindowBase");
static_assert(offsetof(UResultScoreWindowBase, _blockBG) == 0x000360, "Member 'UResultScoreWindowBase::_blockBG' has a wrong offset!");
static_assert(offsetof(UResultScoreWindowBase, _scoreTitle) == 0x0003B8, "Member 'UResultScoreWindowBase::_scoreTitle' has a wrong offset!");
static_assert(offsetof(UResultScoreWindowBase, _score) == 0x0003C0, "Member 'UResultScoreWindowBase::_score' has a wrong offset!");
static_assert(offsetof(UResultScoreWindowBase, _closeButton) == 0x0003C8, "Member 'UResultScoreWindowBase::_closeButton' has a wrong offset!");
static_assert(offsetof(UResultScoreWindowBase, _window) == 0x0003D0, "Member 'UResultScoreWindowBase::_window' has a wrong offset!");

// Class OutGameModule.ResultScoreWindow
// 0x0008 (0x03E0 - 0x03D8)
class UResultScoreWindow : public UResultScoreWindowBase
{
public:
	class UTextBlock*                             _details;                                          // 0x03D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ResultScoreWindow">();
	}
	static class UResultScoreWindow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResultScoreWindow>();
	}
};
static_assert(alignof(UResultScoreWindow) == 0x000008, "Wrong alignment on UResultScoreWindow");
static_assert(sizeof(UResultScoreWindow) == 0x0003E0, "Wrong size on UResultScoreWindow");
static_assert(offsetof(UResultScoreWindow, _details) == 0x0003D8, "Member 'UResultScoreWindow::_details' has a wrong offset!");

// Class OutGameModule.CharacterIconButtonWidget
// 0x0018 (0x04A0 - 0x0488)
class UCharacterIconButtonWidget : public UWidgetButton
{
public:
	class UImage*                                 _image;                                            // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     _material;                                         // 0x0490(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECharacterId                                  _characterId;                                      // 0x0498(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EFaceIconTypeId                               _category;                                         // 0x0499(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_49A[0x6];                                      // 0x049A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_SetIconImge(ECharacterId CharaID, EFaceIconTypeId Category, bool bMatchSize);

	EFaceIconTypeId BP_GetCategory() const;
	ECharacterId BP_GetCharacterId() const;
	class UImage* BP_GetImage() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CharacterIconButtonWidget">();
	}
	static class UCharacterIconButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterIconButtonWidget>();
	}
};
static_assert(alignof(UCharacterIconButtonWidget) == 0x000008, "Wrong alignment on UCharacterIconButtonWidget");
static_assert(sizeof(UCharacterIconButtonWidget) == 0x0004A0, "Wrong size on UCharacterIconButtonWidget");
static_assert(offsetof(UCharacterIconButtonWidget, _image) == 0x000488, "Member 'UCharacterIconButtonWidget::_image' has a wrong offset!");
static_assert(offsetof(UCharacterIconButtonWidget, _material) == 0x000490, "Member 'UCharacterIconButtonWidget::_material' has a wrong offset!");
static_assert(offsetof(UCharacterIconButtonWidget, _characterId) == 0x000498, "Member 'UCharacterIconButtonWidget::_characterId' has a wrong offset!");
static_assert(offsetof(UCharacterIconButtonWidget, _category) == 0x000499, "Member 'UCharacterIconButtonWidget::_category' has a wrong offset!");

// Class OutGameModule.CharacterOutGameSpawnPoint
// 0x0008 (0x0228 - 0x0220)
class ACharacterOutGameSpawnPoint final : public AActor
{
public:
	int32                                         _squadNumber;                                      // 0x0220(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECharacterOutGameSpawnPointType               _type;                                             // 0x0224(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CharacterOutGameSpawnPoint">();
	}
	static class ACharacterOutGameSpawnPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACharacterOutGameSpawnPoint>();
	}
};
static_assert(alignof(ACharacterOutGameSpawnPoint) == 0x000008, "Wrong alignment on ACharacterOutGameSpawnPoint");
static_assert(sizeof(ACharacterOutGameSpawnPoint) == 0x000228, "Wrong size on ACharacterOutGameSpawnPoint");
static_assert(offsetof(ACharacterOutGameSpawnPoint, _squadNumber) == 0x000220, "Member 'ACharacterOutGameSpawnPoint::_squadNumber' has a wrong offset!");
static_assert(offsetof(ACharacterOutGameSpawnPoint, _type) == 0x000224, "Member 'ACharacterOutGameSpawnPoint::_type' has a wrong offset!");

// Class OutGameModule.SceneCaptureCreatorBase
// 0x0130 (0x0350 - 0x0220)
class alignas(0x10) ASceneCaptureCreatorBase : public AActor
{
public:
	FMulticastInlineDelegateProperty_             _onFinishSetupEventDispatcher;                     // 0x0220(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             _onFinishCharaSetupEventDispatcher;                // 0x0230(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          _bFinishSetup;                                     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bWaitPlayerState;                                 // 0x0241(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_242[0x6];                                      // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneCaptureComponent2D*               _sceneCaptureComponent;                            // 0x0248(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneCaptureComponent2D*               _sceneCaptureAlphaComponent;                       // 0x0250(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESceneCaptureTypeId                           _sceneCaptureTypeId;                               // 0x0258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_259[0x37];                                     // 0x0259(0x0037)(Fixing Size After Last Property [ Dumper-7 ])
	class USpringArmComponent*                    _springArm;                                        // 0x0290(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_298[0x20];                                     // 0x0298(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _baseTargetArmLength;                              // 0x02B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCanInputValue;                                    // 0x02BC(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bLimitOffset;                                      // 0x02BD(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2BE[0x2];                                      // 0x02BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _maxVector2D;                                      // 0x02C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _minimumVector2D;                                  // 0x02C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ACharacterOutGame>          _spawnCharaClass;                                  // 0x02C8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bstopChara;                                       // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _waitTimer;                                        // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _filedOfView;                                      // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2DC[0x34];                                     // 0x02DC(0x0034)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialParameterCollection*           _materialParameterCollection;                      // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _bgColor;                                          // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     _ppMaterialSwitch;                                 // 0x0330(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     _ppAlphaMaterialSwitch;                            // 0x0338(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bHierarchyCapture;                                // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_341[0xF];                                      // 0x0341(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_RequestChangeCharaPos(ESceneCaptureTypeId Type);
	void BP_SetCaptureActorHiddenInGame(bool NewHidden);
	void BP_SetCaptureEveryFram(bool Everyfram);
	void BP_SetCaptureFieldOfView(float Value);
	class UTexture* GetTextureTarget();
	class UTexture* GetTextureTargetAlpha();
	void OnFinishSetupEventDispatcher__DelegateSignature();
	void PostCharacterStart();
	void ReCreateChara();
	void SetBgColor(const struct FLinearColor& bgColor);
	void SetDefaultBgColor();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SceneCaptureCreatorBase">();
	}
	static class ASceneCaptureCreatorBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASceneCaptureCreatorBase>();
	}
};
static_assert(alignof(ASceneCaptureCreatorBase) == 0x000010, "Wrong alignment on ASceneCaptureCreatorBase");
static_assert(sizeof(ASceneCaptureCreatorBase) == 0x000350, "Wrong size on ASceneCaptureCreatorBase");
static_assert(offsetof(ASceneCaptureCreatorBase, _onFinishSetupEventDispatcher) == 0x000220, "Member 'ASceneCaptureCreatorBase::_onFinishSetupEventDispatcher' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorBase, _onFinishCharaSetupEventDispatcher) == 0x000230, "Member 'ASceneCaptureCreatorBase::_onFinishCharaSetupEventDispatcher' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorBase, _bFinishSetup) == 0x000240, "Member 'ASceneCaptureCreatorBase::_bFinishSetup' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorBase, _bWaitPlayerState) == 0x000241, "Member 'ASceneCaptureCreatorBase::_bWaitPlayerState' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorBase, _sceneCaptureComponent) == 0x000248, "Member 'ASceneCaptureCreatorBase::_sceneCaptureComponent' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorBase, _sceneCaptureAlphaComponent) == 0x000250, "Member 'ASceneCaptureCreatorBase::_sceneCaptureAlphaComponent' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorBase, _sceneCaptureTypeId) == 0x000258, "Member 'ASceneCaptureCreatorBase::_sceneCaptureTypeId' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorBase, _springArm) == 0x000290, "Member 'ASceneCaptureCreatorBase::_springArm' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorBase, _baseTargetArmLength) == 0x0002B8, "Member 'ASceneCaptureCreatorBase::_baseTargetArmLength' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorBase, bCanInputValue) == 0x0002BC, "Member 'ASceneCaptureCreatorBase::bCanInputValue' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorBase, bLimitOffset) == 0x0002BD, "Member 'ASceneCaptureCreatorBase::bLimitOffset' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorBase, _maxVector2D) == 0x0002C0, "Member 'ASceneCaptureCreatorBase::_maxVector2D' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorBase, _minimumVector2D) == 0x0002C4, "Member 'ASceneCaptureCreatorBase::_minimumVector2D' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorBase, _spawnCharaClass) == 0x0002C8, "Member 'ASceneCaptureCreatorBase::_spawnCharaClass' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorBase, _bstopChara) == 0x0002D0, "Member 'ASceneCaptureCreatorBase::_bstopChara' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorBase, _waitTimer) == 0x0002D4, "Member 'ASceneCaptureCreatorBase::_waitTimer' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorBase, _filedOfView) == 0x0002D8, "Member 'ASceneCaptureCreatorBase::_filedOfView' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorBase, _materialParameterCollection) == 0x000310, "Member 'ASceneCaptureCreatorBase::_materialParameterCollection' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorBase, _bgColor) == 0x000318, "Member 'ASceneCaptureCreatorBase::_bgColor' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorBase, _ppMaterialSwitch) == 0x000330, "Member 'ASceneCaptureCreatorBase::_ppMaterialSwitch' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorBase, _ppAlphaMaterialSwitch) == 0x000338, "Member 'ASceneCaptureCreatorBase::_ppAlphaMaterialSwitch' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorBase, _bHierarchyCapture) == 0x000340, "Member 'ASceneCaptureCreatorBase::_bHierarchyCapture' has a wrong offset!");

// Class OutGameModule.CharacterSelectAppWidgetBase
// 0x0128 (0x0478 - 0x0350)
class UCharacterSelectAppWidgetBase : public UWidgetBase
{
public:
	class UPlatformWidgetButton*                  _releaseButton;                                    // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _releaseEffect;                                    // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _subMenuButton;                                    // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSubMenu*                         _subMenu;                                          // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSubMenu*                         _subMenu_avatar;                                   // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _characterNameText;                                // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _characterRomanAlphabetPanel;                      // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _characterRomanAlphabetText;                       // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _avatarBattleStyleText;                            // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _characterRoleIcon;                                // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _characterRoleBackImage;                           // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _characterRoleText;                                // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _cancelButton;                                     // 0x03B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _decideButton;                                     // 0x03B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetMatrixSelection*                 _heroAssignWidget;                                 // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetMatrixSelection*                 _villainAssignWidget;                              // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomScrollBox*                       _customScrollBox;                                  // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _variationName;                                    // 0x03D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACharacterOutGame*                      _character;                                        // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharacterSelectCharaButtonWidget*      _selectedWidget;                                   // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URentalWidget*                          _releaseDisplay1st;                                // 0x03F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URentalWidget*                          _releaseDisplay2nd;                                // 0x03F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URentalWidget*                          _releaseDisplay3rd;                                // 0x0400(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPaperFlipbook*                         _backgroundImageFB;                                // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_410[0x20];                                     // 0x0410(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ECharacterId>                          _debugSelectedCharacterIds;                        // 0x0430(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UCharacterSelectCharaButtonWidget*> _iconWidgetList;                                   // 0x0440(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UPlayerDatabaseWork*                    _playerDatabaseWork;                               // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameSequenceWork*                      _gameSequenceWork;                                 // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBackendSubsystem*                      _backendSubsystem;                                 // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_468[0x10];                                     // 0x0468(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cancel();
	void DoAutoPlayModeUpdateCharacter();
	class UWidget* DoCustomCharacterSelectWidgetNavigation(EUINavigation UiNavigation);
	class UWidget* DoCustomNavigationButton(EUINavigation UiNavigation);
	void OnAddedToFocusButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnAddItemEvent(const struct FDbItemCategoryParam& Item, const int32 Quantity);
	void OnClosedSubMenuWidget(bool UseSe);
	void OnDecideCancelButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnDecideDecideButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnDecideIconButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnDecideReleaseButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnDecideSubMenuButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnDecideSubMenuEvent(int32 Value);
	void OnDecideSubMenuEvent_avatar(int32 Value);
	void OnFinishOfflineFetchDataEvent();
	void OnFinishReceivedOnLoadCompleteEvent();
	void OnFinishReceivedOnUpdateCompleteEvent();
	void OnNegativePressIconButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnNegativeWaitFetchPressIconButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnPressCancelButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnPressIconButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnPressReleaseButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnPressSubMenuButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnRemovedFromFocusButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnRentalPointUpdatedEvent(int32 Value);
	void ReceivedOnLoadCompleteEvent(int32 RequestId);
	void ReceivedOnUpdateCompleteEvent(int32 RequestId);
	void SetBindWaitLoadComplete(class UCharacterSelectCharaButtonWidget* IconWidget);

	bool BP_GetOpenWidget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CharacterSelectAppWidgetBase">();
	}
	static class UCharacterSelectAppWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterSelectAppWidgetBase>();
	}
};
static_assert(alignof(UCharacterSelectAppWidgetBase) == 0x000008, "Wrong alignment on UCharacterSelectAppWidgetBase");
static_assert(sizeof(UCharacterSelectAppWidgetBase) == 0x000478, "Wrong size on UCharacterSelectAppWidgetBase");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _releaseButton) == 0x000350, "Member 'UCharacterSelectAppWidgetBase::_releaseButton' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _releaseEffect) == 0x000358, "Member 'UCharacterSelectAppWidgetBase::_releaseEffect' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _subMenuButton) == 0x000360, "Member 'UCharacterSelectAppWidgetBase::_subMenuButton' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _subMenu) == 0x000368, "Member 'UCharacterSelectAppWidgetBase::_subMenu' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _subMenu_avatar) == 0x000370, "Member 'UCharacterSelectAppWidgetBase::_subMenu_avatar' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _characterNameText) == 0x000378, "Member 'UCharacterSelectAppWidgetBase::_characterNameText' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _characterRomanAlphabetPanel) == 0x000380, "Member 'UCharacterSelectAppWidgetBase::_characterRomanAlphabetPanel' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _characterRomanAlphabetText) == 0x000388, "Member 'UCharacterSelectAppWidgetBase::_characterRomanAlphabetText' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _avatarBattleStyleText) == 0x000390, "Member 'UCharacterSelectAppWidgetBase::_avatarBattleStyleText' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _characterRoleIcon) == 0x000398, "Member 'UCharacterSelectAppWidgetBase::_characterRoleIcon' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _characterRoleBackImage) == 0x0003A0, "Member 'UCharacterSelectAppWidgetBase::_characterRoleBackImage' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _characterRoleText) == 0x0003A8, "Member 'UCharacterSelectAppWidgetBase::_characterRoleText' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _cancelButton) == 0x0003B0, "Member 'UCharacterSelectAppWidgetBase::_cancelButton' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _decideButton) == 0x0003B8, "Member 'UCharacterSelectAppWidgetBase::_decideButton' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _heroAssignWidget) == 0x0003C0, "Member 'UCharacterSelectAppWidgetBase::_heroAssignWidget' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _villainAssignWidget) == 0x0003C8, "Member 'UCharacterSelectAppWidgetBase::_villainAssignWidget' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _customScrollBox) == 0x0003D0, "Member 'UCharacterSelectAppWidgetBase::_customScrollBox' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _variationName) == 0x0003D8, "Member 'UCharacterSelectAppWidgetBase::_variationName' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _character) == 0x0003E0, "Member 'UCharacterSelectAppWidgetBase::_character' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _selectedWidget) == 0x0003E8, "Member 'UCharacterSelectAppWidgetBase::_selectedWidget' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _releaseDisplay1st) == 0x0003F0, "Member 'UCharacterSelectAppWidgetBase::_releaseDisplay1st' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _releaseDisplay2nd) == 0x0003F8, "Member 'UCharacterSelectAppWidgetBase::_releaseDisplay2nd' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _releaseDisplay3rd) == 0x000400, "Member 'UCharacterSelectAppWidgetBase::_releaseDisplay3rd' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _backgroundImageFB) == 0x000408, "Member 'UCharacterSelectAppWidgetBase::_backgroundImageFB' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _debugSelectedCharacterIds) == 0x000430, "Member 'UCharacterSelectAppWidgetBase::_debugSelectedCharacterIds' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _iconWidgetList) == 0x000440, "Member 'UCharacterSelectAppWidgetBase::_iconWidgetList' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _playerDatabaseWork) == 0x000450, "Member 'UCharacterSelectAppWidgetBase::_playerDatabaseWork' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _gameSequenceWork) == 0x000458, "Member 'UCharacterSelectAppWidgetBase::_gameSequenceWork' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidgetBase, _backendSubsystem) == 0x000460, "Member 'UCharacterSelectAppWidgetBase::_backendSubsystem' has a wrong offset!");

// Class OutGameModule.ResultScoreWidget
// 0x0070 (0x03D0 - 0x0360)
class UResultScoreWidget final : public UProgressFinishDelegateWidget
{
public:
	uint8                                         Pad_360[0x10];                                     // 0x0360(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        _tabContents;                                      // 0x0370(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UPaperFlipbook*                         _resultScoreRankFB;                                // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UResultScoreList*                       _resultBattleScoreList;                            // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UResultScoreList*                       _resultSupportScoreList;                           // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _score;                                            // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _scoreRank;                                        // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScoreProgressBarWidget*                _scoreProgressBar;                                 // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B0[0x20];                                     // 0x03B0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FinishAddList(class UResultScoreList* List);
	void FinishProgressAnimation(class UProgressBarWidget* ProgressBar);
	void OpenWidget();
	void Progress(const float& NowValue, const float& MaxValue);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ResultScoreWidget">();
	}
	static class UResultScoreWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResultScoreWidget>();
	}
};
static_assert(alignof(UResultScoreWidget) == 0x000008, "Wrong alignment on UResultScoreWidget");
static_assert(sizeof(UResultScoreWidget) == 0x0003D0, "Wrong size on UResultScoreWidget");
static_assert(offsetof(UResultScoreWidget, _tabContents) == 0x000370, "Member 'UResultScoreWidget::_tabContents' has a wrong offset!");
static_assert(offsetof(UResultScoreWidget, _resultScoreRankFB) == 0x000380, "Member 'UResultScoreWidget::_resultScoreRankFB' has a wrong offset!");
static_assert(offsetof(UResultScoreWidget, _resultBattleScoreList) == 0x000388, "Member 'UResultScoreWidget::_resultBattleScoreList' has a wrong offset!");
static_assert(offsetof(UResultScoreWidget, _resultSupportScoreList) == 0x000390, "Member 'UResultScoreWidget::_resultSupportScoreList' has a wrong offset!");
static_assert(offsetof(UResultScoreWidget, _score) == 0x000398, "Member 'UResultScoreWidget::_score' has a wrong offset!");
static_assert(offsetof(UResultScoreWidget, _scoreRank) == 0x0003A0, "Member 'UResultScoreWidget::_scoreRank' has a wrong offset!");
static_assert(offsetof(UResultScoreWidget, _scoreProgressBar) == 0x0003A8, "Member 'UResultScoreWidget::_scoreProgressBar' has a wrong offset!");

// Class OutGameModule.CharacterSelectAppWidget
// 0x00A8 (0x0520 - 0x0478)
class UCharacterSelectAppWidget final : public UCharacterSelectAppWidgetBase
{
public:
	TSoftObjectPtr<class UWorld>                  _shopPopupLevel;                                   // 0x0478(0x0028)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                  _techniqueDetailsPopupLevel;                       // 0x04A0(0x0028)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                  _variationPopupLevel;                              // 0x04C8(0x0028)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                  _avatarBattleStylePopupLevel;                      // 0x04F0(0x0028)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                            _interfaceHasWidget;                               // 0x0518(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class UUserWidget* BP_SetKeyfocus();
	class UUserWidget* BP_SetSelectedKeyfocus();
	void DoAutoPlayModeAfterUpdateCharacter();
	void OnChangeTab(int32 Index_0);
	void OnFinishedShopBuy();
	void OnPopupLevelHidden();
	void OnPopupOpenBuyLevelHidden();
	void OnSquadChanged(int32 SquadNum);
	void OnSquadInfoChanged();
	void OnSubLevelShown();
	void OnUpdateVariationCompleteEvent(int32 CharacterCode, int32 Variation);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CharacterSelectAppWidget">();
	}
	static class UCharacterSelectAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterSelectAppWidget>();
	}
};
static_assert(alignof(UCharacterSelectAppWidget) == 0x000008, "Wrong alignment on UCharacterSelectAppWidget");
static_assert(sizeof(UCharacterSelectAppWidget) == 0x000520, "Wrong size on UCharacterSelectAppWidget");
static_assert(offsetof(UCharacterSelectAppWidget, _shopPopupLevel) == 0x000478, "Member 'UCharacterSelectAppWidget::_shopPopupLevel' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidget, _techniqueDetailsPopupLevel) == 0x0004A0, "Member 'UCharacterSelectAppWidget::_techniqueDetailsPopupLevel' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidget, _variationPopupLevel) == 0x0004C8, "Member 'UCharacterSelectAppWidget::_variationPopupLevel' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidget, _avatarBattleStylePopupLevel) == 0x0004F0, "Member 'UCharacterSelectAppWidget::_avatarBattleStylePopupLevel' has a wrong offset!");
static_assert(offsetof(UCharacterSelectAppWidget, _interfaceHasWidget) == 0x000518, "Member 'UCharacterSelectAppWidget::_interfaceHasWidget' has a wrong offset!");

// Class OutGameModule.CharacterSelectCharaButtonWidget
// 0x00D8 (0x0578 - 0x04A0)
class UCharacterSelectCharaButtonWidget final : public UCharacterIconButtonWidget
{
public:
	uint8                                         Pad_4A0[0x8];                                      // 0x04A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperFlipbook*                         _ImageFB;                                          // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPaperFlipbook*                         _backgroundImageFB;                                // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bMySelf;                                          // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             _indexText;                                        // 0x04C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _equipIcon;                                        // 0x04C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _focusIcon;                                        // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _lockIcon;                                         // 0x04D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _duplicateIconWindow;                              // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _charaWindow;                                      // 0x04E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _lockWindow;                                       // 0x04F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _fetchwindow;                                      // 0x04F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _newWindow;                                        // 0x0500(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _characterRoleIcon;                                // 0x0508(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _characterRoleBackImage;                           // 0x0510(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<EMdAbilityType, struct FLinearColor>     _baseColor;                                        // 0x0518(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FLinearColor                           _framColor;                                        // 0x0568(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnUpdateVariationCompleteEvent(int32 CharacterCode, int32 Variation);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CharacterSelectCharaButtonWidget">();
	}
	static class UCharacterSelectCharaButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterSelectCharaButtonWidget>();
	}
};
static_assert(alignof(UCharacterSelectCharaButtonWidget) == 0x000008, "Wrong alignment on UCharacterSelectCharaButtonWidget");
static_assert(sizeof(UCharacterSelectCharaButtonWidget) == 0x000578, "Wrong size on UCharacterSelectCharaButtonWidget");
static_assert(offsetof(UCharacterSelectCharaButtonWidget, _ImageFB) == 0x0004A8, "Member 'UCharacterSelectCharaButtonWidget::_ImageFB' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaButtonWidget, _backgroundImageFB) == 0x0004B0, "Member 'UCharacterSelectCharaButtonWidget::_backgroundImageFB' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaButtonWidget, _bMySelf) == 0x0004B8, "Member 'UCharacterSelectCharaButtonWidget::_bMySelf' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaButtonWidget, _indexText) == 0x0004C0, "Member 'UCharacterSelectCharaButtonWidget::_indexText' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaButtonWidget, _equipIcon) == 0x0004C8, "Member 'UCharacterSelectCharaButtonWidget::_equipIcon' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaButtonWidget, _focusIcon) == 0x0004D0, "Member 'UCharacterSelectCharaButtonWidget::_focusIcon' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaButtonWidget, _lockIcon) == 0x0004D8, "Member 'UCharacterSelectCharaButtonWidget::_lockIcon' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaButtonWidget, _duplicateIconWindow) == 0x0004E0, "Member 'UCharacterSelectCharaButtonWidget::_duplicateIconWindow' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaButtonWidget, _charaWindow) == 0x0004E8, "Member 'UCharacterSelectCharaButtonWidget::_charaWindow' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaButtonWidget, _lockWindow) == 0x0004F0, "Member 'UCharacterSelectCharaButtonWidget::_lockWindow' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaButtonWidget, _fetchwindow) == 0x0004F8, "Member 'UCharacterSelectCharaButtonWidget::_fetchwindow' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaButtonWidget, _newWindow) == 0x000500, "Member 'UCharacterSelectCharaButtonWidget::_newWindow' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaButtonWidget, _characterRoleIcon) == 0x000508, "Member 'UCharacterSelectCharaButtonWidget::_characterRoleIcon' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaButtonWidget, _characterRoleBackImage) == 0x000510, "Member 'UCharacterSelectCharaButtonWidget::_characterRoleBackImage' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaButtonWidget, _baseColor) == 0x000518, "Member 'UCharacterSelectCharaButtonWidget::_baseColor' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaButtonWidget, _framColor) == 0x000568, "Member 'UCharacterSelectCharaButtonWidget::_framColor' has a wrong offset!");

// Class OutGameModule.ResultScoreList
// 0x0040 (0x0390 - 0x0350)
class UResultScoreList final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             _nextAddWidgetDelegate;                            // 0x0360(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                _detailsClass;                                     // 0x0370(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                             _list;                                             // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_380[0x10];                                     // 0x0380(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AnimationDelegate__DelegateSignature();
	void FinishAnimation(class UWidgetAnimation* Animation);
	void FinishDetailAnimationDelegate__DelegateSignature(class UResultScoreList* List);
	void Open();
	void PlayAdd();
	void ScrollListEvent(float Progress);
	void SetDetailsFocus(class UResultScoreList* List);
	void SetDetailsFocusable(class UResultScoreList* List);

	void AddNextWidget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ResultScoreList">();
	}
	static class UResultScoreList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResultScoreList>();
	}
};
static_assert(alignof(UResultScoreList) == 0x000008, "Wrong alignment on UResultScoreList");
static_assert(sizeof(UResultScoreList) == 0x000390, "Wrong size on UResultScoreList");
static_assert(offsetof(UResultScoreList, _nextAddWidgetDelegate) == 0x000360, "Member 'UResultScoreList::_nextAddWidgetDelegate' has a wrong offset!");
static_assert(offsetof(UResultScoreList, _detailsClass) == 0x000370, "Member 'UResultScoreList::_detailsClass' has a wrong offset!");
static_assert(offsetof(UResultScoreList, _list) == 0x000378, "Member 'UResultScoreList::_list' has a wrong offset!");

// Class OutGameModule.CharacterSelectCharaStatusWidget
// 0x0050 (0x03A0 - 0x0350)
class UCharacterSelectCharaStatusWidget final : public UWidgetBase
{
public:
	class USpecialActionWidget*                   _specialAction1;                                   // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USpecialActionWidget*                   _specialAction2;                                   // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAbilityWidget*                         _abilityWidget1;                                   // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetBase*                            _abilityIconWidget1;                               // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAbilityWidget*                         _abilityWidget2;                                   // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetBase*                            _abilityIconWidget2;                               // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAbilityWidget*                         _abilityWidget3;                                   // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetBase*                            _abilityIconWidget3;                               // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URoleWidget*                            _role;                                             // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACharacterOutGame*                      _character;                                        // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class UWidgetBase* GetAbilityIconWidget1();
	class UWidgetBase* GetAbilityIconWidget2();
	class UWidgetBase* GetAbilityIconWidget3();
	void ShowCharacterAbilityIcon(ECharacterId CharacterId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CharacterSelectCharaStatusWidget">();
	}
	static class UCharacterSelectCharaStatusWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterSelectCharaStatusWidget>();
	}
};
static_assert(alignof(UCharacterSelectCharaStatusWidget) == 0x000008, "Wrong alignment on UCharacterSelectCharaStatusWidget");
static_assert(sizeof(UCharacterSelectCharaStatusWidget) == 0x0003A0, "Wrong size on UCharacterSelectCharaStatusWidget");
static_assert(offsetof(UCharacterSelectCharaStatusWidget, _specialAction1) == 0x000350, "Member 'UCharacterSelectCharaStatusWidget::_specialAction1' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaStatusWidget, _specialAction2) == 0x000358, "Member 'UCharacterSelectCharaStatusWidget::_specialAction2' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaStatusWidget, _abilityWidget1) == 0x000360, "Member 'UCharacterSelectCharaStatusWidget::_abilityWidget1' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaStatusWidget, _abilityIconWidget1) == 0x000368, "Member 'UCharacterSelectCharaStatusWidget::_abilityIconWidget1' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaStatusWidget, _abilityWidget2) == 0x000370, "Member 'UCharacterSelectCharaStatusWidget::_abilityWidget2' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaStatusWidget, _abilityIconWidget2) == 0x000378, "Member 'UCharacterSelectCharaStatusWidget::_abilityIconWidget2' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaStatusWidget, _abilityWidget3) == 0x000380, "Member 'UCharacterSelectCharaStatusWidget::_abilityWidget3' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaStatusWidget, _abilityIconWidget3) == 0x000388, "Member 'UCharacterSelectCharaStatusWidget::_abilityIconWidget3' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaStatusWidget, _role) == 0x000390, "Member 'UCharacterSelectCharaStatusWidget::_role' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaStatusWidget, _character) == 0x000398, "Member 'UCharacterSelectCharaStatusWidget::_character' has a wrong offset!");

// Class OutGameModule.CharacterSelectCategoryListEntryObject
// 0x0020 (0x0050 - 0x0030)
class UCharacterSelectCategoryListEntryObject final : public UListViewEntryObjectBase
{
public:
	EMdCharacterCategory                          _type;                                             // 0x0030(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _selectedIndex;                                    // 0x0034(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _baseIndex;                                        // 0x0038(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bCharacterSelect;                                 // 0x003C(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCharacterSelectCharaListEntryObject*> _panelList;                                        // 0x0040(0x0010)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CharacterSelectCategoryListEntryObject">();
	}
	static class UCharacterSelectCategoryListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterSelectCategoryListEntryObject>();
	}
};
static_assert(alignof(UCharacterSelectCategoryListEntryObject) == 0x000008, "Wrong alignment on UCharacterSelectCategoryListEntryObject");
static_assert(sizeof(UCharacterSelectCategoryListEntryObject) == 0x000050, "Wrong size on UCharacterSelectCategoryListEntryObject");
static_assert(offsetof(UCharacterSelectCategoryListEntryObject, _type) == 0x000030, "Member 'UCharacterSelectCategoryListEntryObject::_type' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCategoryListEntryObject, _selectedIndex) == 0x000034, "Member 'UCharacterSelectCategoryListEntryObject::_selectedIndex' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCategoryListEntryObject, _baseIndex) == 0x000038, "Member 'UCharacterSelectCategoryListEntryObject::_baseIndex' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCategoryListEntryObject, _bCharacterSelect) == 0x00003C, "Member 'UCharacterSelectCategoryListEntryObject::_bCharacterSelect' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCategoryListEntryObject, _panelList) == 0x000040, "Member 'UCharacterSelectCategoryListEntryObject::_panelList' has a wrong offset!");

// Class OutGameModule.SceneCaptureCharacterLockWidget
// 0x0030 (0x02A8 - 0x0278)
class USceneCaptureCharacterLockWidget final : public UUserWidget
{
public:
	FMulticastInlineDelegateProperty_             OnLockWidgetKeyButtonDown;                         // 0x0278(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnLockWidgetMouseButtonDown;                       // 0x0288(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnLockWidgetMouseButtonUp;                         // 0x0298(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SceneCaptureCharacterLockWidget">();
	}
	static class USceneCaptureCharacterLockWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USceneCaptureCharacterLockWidget>();
	}
};
static_assert(alignof(USceneCaptureCharacterLockWidget) == 0x000008, "Wrong alignment on USceneCaptureCharacterLockWidget");
static_assert(sizeof(USceneCaptureCharacterLockWidget) == 0x0002A8, "Wrong size on USceneCaptureCharacterLockWidget");
static_assert(offsetof(USceneCaptureCharacterLockWidget, OnLockWidgetKeyButtonDown) == 0x000278, "Member 'USceneCaptureCharacterLockWidget::OnLockWidgetKeyButtonDown' has a wrong offset!");
static_assert(offsetof(USceneCaptureCharacterLockWidget, OnLockWidgetMouseButtonDown) == 0x000288, "Member 'USceneCaptureCharacterLockWidget::OnLockWidgetMouseButtonDown' has a wrong offset!");
static_assert(offsetof(USceneCaptureCharacterLockWidget, OnLockWidgetMouseButtonUp) == 0x000298, "Member 'USceneCaptureCharacterLockWidget::OnLockWidgetMouseButtonUp' has a wrong offset!");

// Class OutGameModule.CharacterSelectCharaListEntryObject
// 0x0008 (0x0038 - 0x0030)
class UCharacterSelectCharaListEntryObject final : public UListViewEntryObjectBase
{
public:
	EMdCharacterCategory                          _type;                                             // 0x0030(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bCharacterSelect;                                 // 0x0031(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CharacterSelectCharaListEntryObject">();
	}
	static class UCharacterSelectCharaListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterSelectCharaListEntryObject>();
	}
};
static_assert(alignof(UCharacterSelectCharaListEntryObject) == 0x000008, "Wrong alignment on UCharacterSelectCharaListEntryObject");
static_assert(sizeof(UCharacterSelectCharaListEntryObject) == 0x000038, "Wrong size on UCharacterSelectCharaListEntryObject");
static_assert(offsetof(UCharacterSelectCharaListEntryObject, _type) == 0x000030, "Member 'UCharacterSelectCharaListEntryObject::_type' has a wrong offset!");
static_assert(offsetof(UCharacterSelectCharaListEntryObject, _bCharacterSelect) == 0x000031, "Member 'UCharacterSelectCharaListEntryObject::_bCharacterSelect' has a wrong offset!");

// Class OutGameModule.CharacterSelectTrainingAppWidget
// 0x0000 (0x0478 - 0x0478)
class UCharacterSelectTrainingAppWidget final : public UCharacterSelectAppWidgetBase
{
public:
	void BP_CloseLevel();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CharacterSelectTrainingAppWidget">();
	}
	static class UCharacterSelectTrainingAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterSelectTrainingAppWidget>();
	}
};
static_assert(alignof(UCharacterSelectTrainingAppWidget) == 0x000008, "Wrong alignment on UCharacterSelectTrainingAppWidget");
static_assert(sizeof(UCharacterSelectTrainingAppWidget) == 0x000478, "Wrong size on UCharacterSelectTrainingAppWidget");

// Class OutGameModule.SeasonPassAboutLicenseCell
// 0x0058 (0x03A8 - 0x0350)
class USeasonPassAboutLicenseCell final : public UWidgetBase
{
public:
	class UHorizontalBox*                         _rankBox;                                          // 0x0350(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _bg;                                               // 0x0358(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_360[0x48];                                     // 0x0360(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_SetUpBbColor(const struct FLinearColor& Color);
	class FText BP_SetUpItemText(EMdRarityItemCategory ItemCategory, const class FText& Name_0, const class FText& CharaName);
	void BP_SetUpRarity(int32 ItemRarity);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassAboutLicenseCell">();
	}
	static class USeasonPassAboutLicenseCell* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassAboutLicenseCell>();
	}
};
static_assert(alignof(USeasonPassAboutLicenseCell) == 0x000008, "Wrong alignment on USeasonPassAboutLicenseCell");
static_assert(sizeof(USeasonPassAboutLicenseCell) == 0x0003A8, "Wrong size on USeasonPassAboutLicenseCell");
static_assert(offsetof(USeasonPassAboutLicenseCell, _rankBox) == 0x000350, "Member 'USeasonPassAboutLicenseCell::_rankBox' has a wrong offset!");
static_assert(offsetof(USeasonPassAboutLicenseCell, _bg) == 0x000358, "Member 'USeasonPassAboutLicenseCell::_bg' has a wrong offset!");

// Class OutGameModule.CharacterSequencerOutGame
// 0x0038 (0x0570 - 0x0538)
class ACharacterSequencerOutGame final : public ACharacterOutGame
{
public:
	ECharacterId                                  _sequenceCharacterId;                              // 0x0538(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_539[0x3];                                      // 0x0539(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _sequenceCostumeCode;                              // 0x053C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_540[0x30];                                     // 0x0540(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Move(const struct FVector& Pos);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CharacterSequencerOutGame">();
	}
	static class ACharacterSequencerOutGame* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACharacterSequencerOutGame>();
	}
};
static_assert(alignof(ACharacterSequencerOutGame) == 0x000008, "Wrong alignment on ACharacterSequencerOutGame");
static_assert(sizeof(ACharacterSequencerOutGame) == 0x000570, "Wrong size on ACharacterSequencerOutGame");
static_assert(offsetof(ACharacterSequencerOutGame, _sequenceCharacterId) == 0x000538, "Member 'ACharacterSequencerOutGame::_sequenceCharacterId' has a wrong offset!");
static_assert(offsetof(ACharacterSequencerOutGame, _sequenceCostumeCode) == 0x00053C, "Member 'ACharacterSequencerOutGame::_sequenceCostumeCode' has a wrong offset!");

// Class OutGameModule.CoinWidget
// 0x00B0 (0x0400 - 0x0350)
class UCoinWidget : public UWidgetBase
{
public:
	class URichTextBlock*                         _imageText;                                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _image;                                            // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _numText;                                          // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _typeText;                                         // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _typeAdjustText;                                   // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _num;                                              // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bMySelf;                                          // 0x037C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_37D[0x3];                                      // 0x037D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperFlipbook*                         _spriteFlipbook;                                   // 0x0380(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bUseRitchText;                                    // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECurrencyType                                 _type;                                             // 0x0389(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_38A[0x6];                                      // 0x038A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            _numColor;                                         // 0x0390(0x0028)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                            _numNotEnuoghColor;                                // 0x03B8(0x0028)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                   _typeTextMessage;                                  // 0x03E0(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                          _bLimitNumView;                                    // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_UpdateCoinWidgete();
	void OnCoinChanged();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CoinWidget">();
	}
	static class UCoinWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCoinWidget>();
	}
};
static_assert(alignof(UCoinWidget) == 0x000008, "Wrong alignment on UCoinWidget");
static_assert(sizeof(UCoinWidget) == 0x000400, "Wrong size on UCoinWidget");
static_assert(offsetof(UCoinWidget, _imageText) == 0x000350, "Member 'UCoinWidget::_imageText' has a wrong offset!");
static_assert(offsetof(UCoinWidget, _image) == 0x000358, "Member 'UCoinWidget::_image' has a wrong offset!");
static_assert(offsetof(UCoinWidget, _numText) == 0x000360, "Member 'UCoinWidget::_numText' has a wrong offset!");
static_assert(offsetof(UCoinWidget, _typeText) == 0x000368, "Member 'UCoinWidget::_typeText' has a wrong offset!");
static_assert(offsetof(UCoinWidget, _typeAdjustText) == 0x000370, "Member 'UCoinWidget::_typeAdjustText' has a wrong offset!");
static_assert(offsetof(UCoinWidget, _num) == 0x000378, "Member 'UCoinWidget::_num' has a wrong offset!");
static_assert(offsetof(UCoinWidget, _bMySelf) == 0x00037C, "Member 'UCoinWidget::_bMySelf' has a wrong offset!");
static_assert(offsetof(UCoinWidget, _spriteFlipbook) == 0x000380, "Member 'UCoinWidget::_spriteFlipbook' has a wrong offset!");
static_assert(offsetof(UCoinWidget, _bUseRitchText) == 0x000388, "Member 'UCoinWidget::_bUseRitchText' has a wrong offset!");
static_assert(offsetof(UCoinWidget, _type) == 0x000389, "Member 'UCoinWidget::_type' has a wrong offset!");
static_assert(offsetof(UCoinWidget, _numColor) == 0x000390, "Member 'UCoinWidget::_numColor' has a wrong offset!");
static_assert(offsetof(UCoinWidget, _numNotEnuoghColor) == 0x0003B8, "Member 'UCoinWidget::_numNotEnuoghColor' has a wrong offset!");
static_assert(offsetof(UCoinWidget, _typeTextMessage) == 0x0003E0, "Member 'UCoinWidget::_typeTextMessage' has a wrong offset!");
static_assert(offsetof(UCoinWidget, _bLimitNumView) == 0x0003F8, "Member 'UCoinWidget::_bLimitNumView' has a wrong offset!");

// Class OutGameModule.SceneCaptureCreator
// 0x0030 (0x0380 - 0x0350)
class ASceneCaptureCreator : public ASceneCaptureCreatorBase
{
public:
	bool                                          _bMySelf;                                          // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECharacterId                                  _outGameCharacterId;                               // 0x0351(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_352[0x2];                                      // 0x0352(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _outGameCostumeCode;                               // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _outGameAura;                                      // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 _uniqueTag;                                        // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACharacterOutGame*                      _sceneCaptureChara;                                // 0x0370(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	ECharacterId BP_GetCaptureCharaId();
	void BP_SpawnChara(bool MySelf, ECharacterId CharaID, int32 CostumeCode, int32 AuraLevel);
	void OnAuraEffectLoadedDelegate();
	void OnSetupMaterialDelegate();

	class ACharacterOutGame* BP_GetSceneCaptureChara() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SceneCaptureCreator">();
	}
	static class ASceneCaptureCreator* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASceneCaptureCreator>();
	}
};
static_assert(alignof(ASceneCaptureCreator) == 0x000010, "Wrong alignment on ASceneCaptureCreator");
static_assert(sizeof(ASceneCaptureCreator) == 0x000380, "Wrong size on ASceneCaptureCreator");
static_assert(offsetof(ASceneCaptureCreator, _bMySelf) == 0x000350, "Member 'ASceneCaptureCreator::_bMySelf' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreator, _outGameCharacterId) == 0x000351, "Member 'ASceneCaptureCreator::_outGameCharacterId' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreator, _outGameCostumeCode) == 0x000354, "Member 'ASceneCaptureCreator::_outGameCostumeCode' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreator, _outGameAura) == 0x000358, "Member 'ASceneCaptureCreator::_outGameAura' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreator, _uniqueTag) == 0x000360, "Member 'ASceneCaptureCreator::_uniqueTag' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreator, _sceneCaptureChara) == 0x000370, "Member 'ASceneCaptureCreator::_sceneCaptureChara' has a wrong offset!");

// Class OutGameModule.SceneCaptureCreatorAvatar
// 0x0000 (0x0380 - 0x0380)
class ASceneCaptureCreatorAvatar final : public ASceneCaptureCreator
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SceneCaptureCreatorAvatar">();
	}
	static class ASceneCaptureCreatorAvatar* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASceneCaptureCreatorAvatar>();
	}
};
static_assert(alignof(ASceneCaptureCreatorAvatar) == 0x000010, "Wrong alignment on ASceneCaptureCreatorAvatar");
static_assert(sizeof(ASceneCaptureCreatorAvatar) == 0x000380, "Wrong size on ASceneCaptureCreatorAvatar");

// Class OutGameModule.ConsentWidget
// 0x0090 (0x0478 - 0x03E8)
class UConsentWidget : public UAppWidget
{
public:
	FMulticastInlineDelegateProperty_             OnPressAgreeDelegate;                              // 0x03E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FText                                   _headerText;                                       // 0x03F8(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                   _titleText;                                        // 0x0410(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                   _mainText;                                         // 0x0428(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class UWidgetGeneralEmptyWindow*              _popupWindow;                                      // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetText*                            _header;                                           // 0x0448(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _title;                                            // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _main;                                             // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _agreeButton;                                      // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _disagreeButton;                                   // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_470[0x8];                                      // 0x0470(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Close();
	void OnCancelAgreeFreeTextPopupWindow(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnClosedAgreeFreeTextPopupWindow();
	void OnInputEventDelegate__DelegateSignature(bool bAgree);
	void OnOpendAgreeFreeTextPopupWindow();
	void OnPressWindowAgreeFreeTextPopupWindow(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnPressWindowDisAgreeFreeTextPopupWindow(class UAppWidget* Widget, EWidgetInputType InputType);
	void Open();
	void SetUpConsentWindow();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConsentWidget">();
	}
	static class UConsentWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConsentWidget>();
	}
};
static_assert(alignof(UConsentWidget) == 0x000008, "Wrong alignment on UConsentWidget");
static_assert(sizeof(UConsentWidget) == 0x000478, "Wrong size on UConsentWidget");
static_assert(offsetof(UConsentWidget, OnPressAgreeDelegate) == 0x0003E8, "Member 'UConsentWidget::OnPressAgreeDelegate' has a wrong offset!");
static_assert(offsetof(UConsentWidget, _headerText) == 0x0003F8, "Member 'UConsentWidget::_headerText' has a wrong offset!");
static_assert(offsetof(UConsentWidget, _titleText) == 0x000410, "Member 'UConsentWidget::_titleText' has a wrong offset!");
static_assert(offsetof(UConsentWidget, _mainText) == 0x000428, "Member 'UConsentWidget::_mainText' has a wrong offset!");
static_assert(offsetof(UConsentWidget, _popupWindow) == 0x000440, "Member 'UConsentWidget::_popupWindow' has a wrong offset!");
static_assert(offsetof(UConsentWidget, _header) == 0x000448, "Member 'UConsentWidget::_header' has a wrong offset!");
static_assert(offsetof(UConsentWidget, _title) == 0x000450, "Member 'UConsentWidget::_title' has a wrong offset!");
static_assert(offsetof(UConsentWidget, _main) == 0x000458, "Member 'UConsentWidget::_main' has a wrong offset!");
static_assert(offsetof(UConsentWidget, _agreeButton) == 0x000460, "Member 'UConsentWidget::_agreeButton' has a wrong offset!");
static_assert(offsetof(UConsentWidget, _disagreeButton) == 0x000468, "Member 'UConsentWidget::_disagreeButton' has a wrong offset!");

// Class OutGameModule.ContactListBaseWidget
// 0x0078 (0x03C8 - 0x0350)
class UContactListBaseWidget : public UWidgetBase
{
public:
	FMulticastInlineDelegateProperty_             OnAllReadFlagDelegate;                             // 0x0350(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             _onListViewFocusDelegate;                          // 0x0360(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_370[0x10];                                     // 0x0370(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	ECosmosInviteTarget                           _listFilterType;                                   // 0x0380(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContactListParameters>         _contactListParams;                                // 0x0388(0x0010)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	EContactListEntryType                         _widgetType;                                       // 0x0398(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomTileView*                        _listView;                                         // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSubMenu*                         _subMenu;                                          // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _listSwitcher;                                     // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B8[0x10];                                     // 0x03B8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CreateListView(EContactListEntryType Type, bool bSetFocus);
	class UObject* GetListViewSelectObject();
	void GetPresent(int32 IndexParam);
	bool IsActiveSubMenu();
	int32 IsUnreadListParams();
	void ListSwitcherUpdate(bool IsFetch);
	void OnAllReadFlag(bool NewFlag);
	void OnAllReadFlagDelegate__DelegateSignature(bool bIsAllReadFlag);
	void OnCreatedListViewDelegate__DelegateSignature();
	void OnDecideListButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnHoveredChangedEvent(class UObject* Item, bool bHovered);
	void OnListButtonEvent();
	void OnListViewFocusDelegate__DelegateSignature();
	void OnPressListButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnSubmenuCloseFinished();
	void OnSubMenuDecide(int32 Index_0);
	void OnSubMenuOpen(bool UseSe);
	void OnUpdateList();
	bool RemoveListParams(int32 IndexParam);
	int32 RemoveReadListParams();
	void SetListParamItem(int32 IndexParam, const struct FContactListParameters& Item);
	void SetListViewFocus(int32 Index_0);
	void SetReadFlag(int32 IndexParam, bool Read);

	TArray<struct FContactListParameters> GetFilterListParams(ECosmosInviteTarget Type) const;
	int32 GetListIndex(int32 IndexParam) const;
	struct FContactListParameters GetListParamItem(int32 IndexParam) const;
	TArray<struct FContactListParameters> GetListParams() const;
	int32 GetListViewSelectIndex() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ContactListBaseWidget">();
	}
	static class UContactListBaseWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UContactListBaseWidget>();
	}
};
static_assert(alignof(UContactListBaseWidget) == 0x000008, "Wrong alignment on UContactListBaseWidget");
static_assert(sizeof(UContactListBaseWidget) == 0x0003C8, "Wrong size on UContactListBaseWidget");
static_assert(offsetof(UContactListBaseWidget, OnAllReadFlagDelegate) == 0x000350, "Member 'UContactListBaseWidget::OnAllReadFlagDelegate' has a wrong offset!");
static_assert(offsetof(UContactListBaseWidget, _onListViewFocusDelegate) == 0x000360, "Member 'UContactListBaseWidget::_onListViewFocusDelegate' has a wrong offset!");
static_assert(offsetof(UContactListBaseWidget, _listFilterType) == 0x000380, "Member 'UContactListBaseWidget::_listFilterType' has a wrong offset!");
static_assert(offsetof(UContactListBaseWidget, _contactListParams) == 0x000388, "Member 'UContactListBaseWidget::_contactListParams' has a wrong offset!");
static_assert(offsetof(UContactListBaseWidget, _widgetType) == 0x000398, "Member 'UContactListBaseWidget::_widgetType' has a wrong offset!");
static_assert(offsetof(UContactListBaseWidget, _listView) == 0x0003A0, "Member 'UContactListBaseWidget::_listView' has a wrong offset!");
static_assert(offsetof(UContactListBaseWidget, _subMenu) == 0x0003A8, "Member 'UContactListBaseWidget::_subMenu' has a wrong offset!");
static_assert(offsetof(UContactListBaseWidget, _listSwitcher) == 0x0003B0, "Member 'UContactListBaseWidget::_listSwitcher' has a wrong offset!");

// Class OutGameModule.ProgressDelegateWidget
// 0x0010 (0x0370 - 0x0360)
class UProgressDelegateWidget : public UProgressFinishDelegateWidget
{
public:
	FMulticastInlineDelegateProperty_             _progressDelegate;                                 // 0x0360(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void Progress();
	void ProgressDelegate__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProgressDelegateWidget">();
	}
	static class UProgressDelegateWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProgressDelegateWidget>();
	}
};
static_assert(alignof(UProgressDelegateWidget) == 0x000008, "Wrong alignment on UProgressDelegateWidget");
static_assert(sizeof(UProgressDelegateWidget) == 0x000370, "Wrong size on UProgressDelegateWidget");
static_assert(offsetof(UProgressDelegateWidget, _progressDelegate) == 0x000360, "Member 'UProgressDelegateWidget::_progressDelegate' has a wrong offset!");

// Class OutGameModule.RPDetailsWidget
// 0x0068 (0x03D8 - 0x0370)
class URPDetailsWidget final : public UProgressDelegateWidget
{
public:
	struct FLinearColor                           _plusColor;                                        // 0x0370(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _minusColor;                                       // 0x0380(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _calcValueSpeed;                                   // 0x0390(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _rpSpeed;                                          // 0x0394(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _title;                                            // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URPWidget*                              _calcValue;                                        // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMultipleDigitsWidget*                  _rp;                                               // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                _borderBase;                                       // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B8[0x20];                                     // 0x03B8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ProgressCalcValue(const float DeltaTime);
	void ProgressRP(const float DeltaTime);
	void TickDelegate__DelegateSignature(const float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RPDetailsWidget">();
	}
	static class URPDetailsWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URPDetailsWidget>();
	}
};
static_assert(alignof(URPDetailsWidget) == 0x000008, "Wrong alignment on URPDetailsWidget");
static_assert(sizeof(URPDetailsWidget) == 0x0003D8, "Wrong size on URPDetailsWidget");
static_assert(offsetof(URPDetailsWidget, _plusColor) == 0x000370, "Member 'URPDetailsWidget::_plusColor' has a wrong offset!");
static_assert(offsetof(URPDetailsWidget, _minusColor) == 0x000380, "Member 'URPDetailsWidget::_minusColor' has a wrong offset!");
static_assert(offsetof(URPDetailsWidget, _calcValueSpeed) == 0x000390, "Member 'URPDetailsWidget::_calcValueSpeed' has a wrong offset!");
static_assert(offsetof(URPDetailsWidget, _rpSpeed) == 0x000394, "Member 'URPDetailsWidget::_rpSpeed' has a wrong offset!");
static_assert(offsetof(URPDetailsWidget, _title) == 0x000398, "Member 'URPDetailsWidget::_title' has a wrong offset!");
static_assert(offsetof(URPDetailsWidget, _calcValue) == 0x0003A0, "Member 'URPDetailsWidget::_calcValue' has a wrong offset!");
static_assert(offsetof(URPDetailsWidget, _rp) == 0x0003A8, "Member 'URPDetailsWidget::_rp' has a wrong offset!");
static_assert(offsetof(URPDetailsWidget, _borderBase) == 0x0003B0, "Member 'URPDetailsWidget::_borderBase' has a wrong offset!");

// Class OutGameModule.ContactInvitationWidget
// 0x0308 (0x06D0 - 0x03C8)
class UContactInvitationWidget final : public UContactListBaseWidget
{
public:
	ECosmosInviteTarget                           _listInvitationType;                               // 0x03C8(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ECosmosInviteTarget, class FText>        _invitationFilterTextMap;                          // 0x03D0(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   _squadConsentTitleText;                            // 0x0420(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   _squadDeleteTitleText;                             // 0x0438(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   _squadJoinNGTitleText;                             // 0x0450(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   _guildConsentTitleText;                            // 0x0468(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   _guildDeleteTitleText;                             // 0x0480(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   _guildJoinedTitleText;                             // 0x0498(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnOtherPlayersCallDelegate;                        // 0x04B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C0[0x20];                                     // 0x04C0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             _filterTextBlock;                                  // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetGeneralWindow*                   _generalWindowClose;                               // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetGeneralWindow*                   _generalWindowDelete;                              // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 _selectInviteId;                                   // 0x04F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_508[0x90];                                     // 0x0508(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           _subMenuSquadTexts;                                // 0x0598(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FText>                           _subMenuGuildTexts;                                // 0x05A8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FText>                           _subMenuGuildJoinedTexts;                          // 0x05B8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C8[0x8];                                      // 0x05C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           _subMenuFriendTexts;                               // 0x05D0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class ULevelStreamingDynamic*                 _spawnLevelStreamingDynamic;                       // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5E8[0x80];                                     // 0x05E8(0x0080)(Fixing Size After Last Property [ Dumper-7 ])
	class UDbpNotice*                             _noticeData;                                       // 0x0668(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_670[0x60];                                     // 0x0670(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ChangeFilter();
	void ChangeFilterType();
	void LoadInvitationReaction();
	void LoadSquadReceivedInvitationReaction();
	void NextPage();
	void OnChangedFriendStatus(const class FString& ID, EFriendStatus Status);
	void OnChangeIdleStatusEvent(bool Idle, int32 StateSetting);
	void OnClosedWindow();
	void OnDecideClosedWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnDecideDeleteWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnEmptyButtonFocusDelegate__DelegateSignature();
	void OnLevelHiddenFriendRequest();
	void OnLevelShownFriendRequest();
	void OnLoadCompleteEvent(int32 RequestId);
	void OnOpenWindowCloseDelegate__DelegateSignature(const class FText& NameText);
	void OnOtherPlayersCallDelegate__DelegateSignature(const class FString& TargetUserId);
	void OnReceivedCloseWebApiErrorWindow();
	void OnReceivedUpdateWebApiError();
	void OnTeamUpJoinEvent();
	void OnTeamUpJoinEvent_SelectInviteId();
	void OnTeamUpLeaveEvent();
	void OnUpdateCompleteEvent(int32 RequestId);
	void OpenGuildDetail();
	void PrevPage();
	void UpdateFilterText();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ContactInvitationWidget">();
	}
	static class UContactInvitationWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UContactInvitationWidget>();
	}
};
static_assert(alignof(UContactInvitationWidget) == 0x000008, "Wrong alignment on UContactInvitationWidget");
static_assert(sizeof(UContactInvitationWidget) == 0x0006D0, "Wrong size on UContactInvitationWidget");
static_assert(offsetof(UContactInvitationWidget, _listInvitationType) == 0x0003C8, "Member 'UContactInvitationWidget::_listInvitationType' has a wrong offset!");
static_assert(offsetof(UContactInvitationWidget, _invitationFilterTextMap) == 0x0003D0, "Member 'UContactInvitationWidget::_invitationFilterTextMap' has a wrong offset!");
static_assert(offsetof(UContactInvitationWidget, _squadConsentTitleText) == 0x000420, "Member 'UContactInvitationWidget::_squadConsentTitleText' has a wrong offset!");
static_assert(offsetof(UContactInvitationWidget, _squadDeleteTitleText) == 0x000438, "Member 'UContactInvitationWidget::_squadDeleteTitleText' has a wrong offset!");
static_assert(offsetof(UContactInvitationWidget, _squadJoinNGTitleText) == 0x000450, "Member 'UContactInvitationWidget::_squadJoinNGTitleText' has a wrong offset!");
static_assert(offsetof(UContactInvitationWidget, _guildConsentTitleText) == 0x000468, "Member 'UContactInvitationWidget::_guildConsentTitleText' has a wrong offset!");
static_assert(offsetof(UContactInvitationWidget, _guildDeleteTitleText) == 0x000480, "Member 'UContactInvitationWidget::_guildDeleteTitleText' has a wrong offset!");
static_assert(offsetof(UContactInvitationWidget, _guildJoinedTitleText) == 0x000498, "Member 'UContactInvitationWidget::_guildJoinedTitleText' has a wrong offset!");
static_assert(offsetof(UContactInvitationWidget, OnOtherPlayersCallDelegate) == 0x0004B0, "Member 'UContactInvitationWidget::OnOtherPlayersCallDelegate' has a wrong offset!");
static_assert(offsetof(UContactInvitationWidget, _filterTextBlock) == 0x0004E0, "Member 'UContactInvitationWidget::_filterTextBlock' has a wrong offset!");
static_assert(offsetof(UContactInvitationWidget, _generalWindowClose) == 0x0004E8, "Member 'UContactInvitationWidget::_generalWindowClose' has a wrong offset!");
static_assert(offsetof(UContactInvitationWidget, _generalWindowDelete) == 0x0004F0, "Member 'UContactInvitationWidget::_generalWindowDelete' has a wrong offset!");
static_assert(offsetof(UContactInvitationWidget, _selectInviteId) == 0x0004F8, "Member 'UContactInvitationWidget::_selectInviteId' has a wrong offset!");
static_assert(offsetof(UContactInvitationWidget, _subMenuSquadTexts) == 0x000598, "Member 'UContactInvitationWidget::_subMenuSquadTexts' has a wrong offset!");
static_assert(offsetof(UContactInvitationWidget, _subMenuGuildTexts) == 0x0005A8, "Member 'UContactInvitationWidget::_subMenuGuildTexts' has a wrong offset!");
static_assert(offsetof(UContactInvitationWidget, _subMenuGuildJoinedTexts) == 0x0005B8, "Member 'UContactInvitationWidget::_subMenuGuildJoinedTexts' has a wrong offset!");
static_assert(offsetof(UContactInvitationWidget, _subMenuFriendTexts) == 0x0005D0, "Member 'UContactInvitationWidget::_subMenuFriendTexts' has a wrong offset!");
static_assert(offsetof(UContactInvitationWidget, _spawnLevelStreamingDynamic) == 0x0005E0, "Member 'UContactInvitationWidget::_spawnLevelStreamingDynamic' has a wrong offset!");
static_assert(offsetof(UContactInvitationWidget, _noticeData) == 0x000668, "Member 'UContactInvitationWidget::_noticeData' has a wrong offset!");

// Class OutGameModule.ContactListEntryObject
// 0x00A8 (0x00D8 - 0x0030)
class UContactListEntryObject final : public UListViewEntryObjectBase
{
public:
	EContactListEntryType                         _type;                                             // 0x0030(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECosmosInviteTarget                           _invitationType;                                   // 0x0031(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 _inviteId;                                         // 0x0038(0x0010)(BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 _noticeId;                                         // 0x0048(0x0010)(BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 _squadId;                                          // 0x0058(0x0010)(BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_68[0x4A];                                      // 0x0068(0x004A)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _bTopFlag;                                         // 0x00B2(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          _bBottomFlag;                                      // 0x00B3(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B4[0x24];                                      // 0x00B4(0x0024)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ContactListEntryObject">();
	}
	static class UContactListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UContactListEntryObject>();
	}
};
static_assert(alignof(UContactListEntryObject) == 0x000008, "Wrong alignment on UContactListEntryObject");
static_assert(sizeof(UContactListEntryObject) == 0x0000D8, "Wrong size on UContactListEntryObject");
static_assert(offsetof(UContactListEntryObject, _type) == 0x000030, "Member 'UContactListEntryObject::_type' has a wrong offset!");
static_assert(offsetof(UContactListEntryObject, _invitationType) == 0x000031, "Member 'UContactListEntryObject::_invitationType' has a wrong offset!");
static_assert(offsetof(UContactListEntryObject, _inviteId) == 0x000038, "Member 'UContactListEntryObject::_inviteId' has a wrong offset!");
static_assert(offsetof(UContactListEntryObject, _noticeId) == 0x000048, "Member 'UContactListEntryObject::_noticeId' has a wrong offset!");
static_assert(offsetof(UContactListEntryObject, _squadId) == 0x000058, "Member 'UContactListEntryObject::_squadId' has a wrong offset!");
static_assert(offsetof(UContactListEntryObject, _bTopFlag) == 0x0000B2, "Member 'UContactListEntryObject::_bTopFlag' has a wrong offset!");
static_assert(offsetof(UContactListEntryObject, _bBottomFlag) == 0x0000B3, "Member 'UContactListEntryObject::_bBottomFlag' has a wrong offset!");

// Class OutGameModule.SeasonEntry
// 0x00D8 (0x0428 - 0x0350)
class USeasonEntry final : public UWidgetBase
{
public:
	int32                                         _imageSizeX;                                       // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         _imageSizeY;                                       // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _rankCursor;                                       // 0x0358(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _rankHeader;                                       // 0x0360(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _entryBack;                                        // 0x0368(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _rankNumber;                                       // 0x0370(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpacer*                                _bgSpacer;                                         // 0x0378(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpacer*                                _entrySpacer;                                      // 0x0380(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemSeasonType                               _focusItemType;                                    // 0x0388(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_389[0x77];                                     // 0x0389(0x0077)(Fixing Size After Last Property [ Dumper-7 ])
	class USeasonPassEntry*                       _itemEntry;                                        // 0x0400(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USeasonPassEntry*                       _premiumItemEntry;                                 // 0x0408(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _freeBGPanel;                                      // 0x0410(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _premiumBGPanel;                                   // 0x0418(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USeasonPassRankEntry*                   _entryBG;                                          // 0x0420(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_SetImageSize(int32 SizeY, int32 CombineItem, float EntrySpacing);
	void BP_SetUpSpecialLicenseBG();
	void CallOpenPurchasePopup(class UWidget* TargetWidget);
	void SetItemData(const struct FDbSeasonPassParam& Param, int32 Index_0, bool IsLast);
	void SetSpecialItemData(const struct FDbSpecialLicenseParam& Param, int32 Index_0);
	void SetUpSeasonEvent();
	void SetUpSeasonPass();

	int32 GetItemIndex() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonEntry">();
	}
	static class USeasonEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonEntry>();
	}
};
static_assert(alignof(USeasonEntry) == 0x000008, "Wrong alignment on USeasonEntry");
static_assert(sizeof(USeasonEntry) == 0x000428, "Wrong size on USeasonEntry");
static_assert(offsetof(USeasonEntry, _imageSizeX) == 0x000350, "Member 'USeasonEntry::_imageSizeX' has a wrong offset!");
static_assert(offsetof(USeasonEntry, _imageSizeY) == 0x000354, "Member 'USeasonEntry::_imageSizeY' has a wrong offset!");
static_assert(offsetof(USeasonEntry, _rankCursor) == 0x000358, "Member 'USeasonEntry::_rankCursor' has a wrong offset!");
static_assert(offsetof(USeasonEntry, _rankHeader) == 0x000360, "Member 'USeasonEntry::_rankHeader' has a wrong offset!");
static_assert(offsetof(USeasonEntry, _entryBack) == 0x000368, "Member 'USeasonEntry::_entryBack' has a wrong offset!");
static_assert(offsetof(USeasonEntry, _rankNumber) == 0x000370, "Member 'USeasonEntry::_rankNumber' has a wrong offset!");
static_assert(offsetof(USeasonEntry, _bgSpacer) == 0x000378, "Member 'USeasonEntry::_bgSpacer' has a wrong offset!");
static_assert(offsetof(USeasonEntry, _entrySpacer) == 0x000380, "Member 'USeasonEntry::_entrySpacer' has a wrong offset!");
static_assert(offsetof(USeasonEntry, _focusItemType) == 0x000388, "Member 'USeasonEntry::_focusItemType' has a wrong offset!");
static_assert(offsetof(USeasonEntry, _itemEntry) == 0x000400, "Member 'USeasonEntry::_itemEntry' has a wrong offset!");
static_assert(offsetof(USeasonEntry, _premiumItemEntry) == 0x000408, "Member 'USeasonEntry::_premiumItemEntry' has a wrong offset!");
static_assert(offsetof(USeasonEntry, _freeBGPanel) == 0x000410, "Member 'USeasonEntry::_freeBGPanel' has a wrong offset!");
static_assert(offsetof(USeasonEntry, _premiumBGPanel) == 0x000418, "Member 'USeasonEntry::_premiumBGPanel' has a wrong offset!");
static_assert(offsetof(USeasonEntry, _entryBG) == 0x000420, "Member 'USeasonEntry::_entryBG' has a wrong offset!");

// Class OutGameModule.ContactListEntryWidget
// 0x0040 (0x0670 - 0x0630)
class UContactListEntryWidget final : public UPlatformWidgetButton
{
public:
	uint8                                         Pad_630[0x8];                                      // 0x0630(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UContactListEntryObject*                _entryObject;                                      // 0x0638(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          _presentFlag;                                      // 0x0640(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_641[0x3];                                      // 0x0641(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _listParamIndex;                                   // 0x0644(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTimeWidget*                            _timer;                                            // 0x0648(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _titleText;                                        // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _timeText;                                         // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _readImage;                                        // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _presentImage;                                     // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ContactListEntryWidget">();
	}
	static class UContactListEntryWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UContactListEntryWidget>();
	}
};
static_assert(alignof(UContactListEntryWidget) == 0x000008, "Wrong alignment on UContactListEntryWidget");
static_assert(sizeof(UContactListEntryWidget) == 0x000670, "Wrong size on UContactListEntryWidget");
static_assert(offsetof(UContactListEntryWidget, _entryObject) == 0x000638, "Member 'UContactListEntryWidget::_entryObject' has a wrong offset!");
static_assert(offsetof(UContactListEntryWidget, _presentFlag) == 0x000640, "Member 'UContactListEntryWidget::_presentFlag' has a wrong offset!");
static_assert(offsetof(UContactListEntryWidget, _listParamIndex) == 0x000644, "Member 'UContactListEntryWidget::_listParamIndex' has a wrong offset!");
static_assert(offsetof(UContactListEntryWidget, _timer) == 0x000648, "Member 'UContactListEntryWidget::_timer' has a wrong offset!");
static_assert(offsetof(UContactListEntryWidget, _titleText) == 0x000650, "Member 'UContactListEntryWidget::_titleText' has a wrong offset!");
static_assert(offsetof(UContactListEntryWidget, _timeText) == 0x000658, "Member 'UContactListEntryWidget::_timeText' has a wrong offset!");
static_assert(offsetof(UContactListEntryWidget, _readImage) == 0x000660, "Member 'UContactListEntryWidget::_readImage' has a wrong offset!");
static_assert(offsetof(UContactListEntryWidget, _presentImage) == 0x000668, "Member 'UContactListEntryWidget::_presentImage' has a wrong offset!");

// Class OutGameModule.ContactNoticePopupWidget
// 0x00A0 (0x03F0 - 0x0350)
class UContactNoticePopupWidget final : public UWidgetBase
{
public:
	FMulticastInlineDelegateProperty_             _onClosePopupDelegate;                             // 0x0350(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FText                                   _presentText;                                      // 0x0360(0x0018)(Edit, NativeAccessSpecifierPublic)
	class FText                                   _closeText;                                        // 0x0378(0x0018)(Edit, NativeAccessSpecifierPublic)
	class UTextBlock*                             _messageText;                                      // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _widgetButton;                                     // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _panelSwitcher;                                    // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconImage*                         _itemIcon;                                         // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _itemIconBG;                                       // 0x03B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _itemNumText;                                      // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _blockBG;                                          // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C8[0x28];                                     // 0x03C8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CloseWindow();
	void OnClosePopupDelegate__DelegateSignature();
	void OnDecidePressButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnItemGetDispPlayClose();
	struct FEventReply OnPressBlockBG(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnUpdateCompleteEvent(int32 RequestId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ContactNoticePopupWidget">();
	}
	static class UContactNoticePopupWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UContactNoticePopupWidget>();
	}
};
static_assert(alignof(UContactNoticePopupWidget) == 0x000008, "Wrong alignment on UContactNoticePopupWidget");
static_assert(sizeof(UContactNoticePopupWidget) == 0x0003F0, "Wrong size on UContactNoticePopupWidget");
static_assert(offsetof(UContactNoticePopupWidget, _onClosePopupDelegate) == 0x000350, "Member 'UContactNoticePopupWidget::_onClosePopupDelegate' has a wrong offset!");
static_assert(offsetof(UContactNoticePopupWidget, _presentText) == 0x000360, "Member 'UContactNoticePopupWidget::_presentText' has a wrong offset!");
static_assert(offsetof(UContactNoticePopupWidget, _closeText) == 0x000378, "Member 'UContactNoticePopupWidget::_closeText' has a wrong offset!");
static_assert(offsetof(UContactNoticePopupWidget, _messageText) == 0x000390, "Member 'UContactNoticePopupWidget::_messageText' has a wrong offset!");
static_assert(offsetof(UContactNoticePopupWidget, _widgetButton) == 0x000398, "Member 'UContactNoticePopupWidget::_widgetButton' has a wrong offset!");
static_assert(offsetof(UContactNoticePopupWidget, _panelSwitcher) == 0x0003A0, "Member 'UContactNoticePopupWidget::_panelSwitcher' has a wrong offset!");
static_assert(offsetof(UContactNoticePopupWidget, _itemIcon) == 0x0003A8, "Member 'UContactNoticePopupWidget::_itemIcon' has a wrong offset!");
static_assert(offsetof(UContactNoticePopupWidget, _itemIconBG) == 0x0003B0, "Member 'UContactNoticePopupWidget::_itemIconBG' has a wrong offset!");
static_assert(offsetof(UContactNoticePopupWidget, _itemNumText) == 0x0003B8, "Member 'UContactNoticePopupWidget::_itemNumText' has a wrong offset!");
static_assert(offsetof(UContactNoticePopupWidget, _blockBG) == 0x0003C0, "Member 'UContactNoticePopupWidget::_blockBG' has a wrong offset!");

// Class OutGameModule.ContactNoticeWidget
// 0x00E8 (0x04B0 - 0x03C8)
class UContactNoticeWidget final : public UContactListBaseWidget
{
public:
	bool                                          _presentFlag;                                      // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 _selectId;                                         // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UContactNoticePopupWidget*              _contactNoticePopup;                               // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetGeneralWindow*                   _readDeleteWindow;                                 // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetGeneralWindow*                   _oneButtonGeneralWindow;                           // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetGeneralWindow*                   _readAllDeleteCloseWindow;                         // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FText>                           _subMenuPresentTexts;                              // 0x0400(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FText>                           _subMenuSelectTexts;                               // 0x0410(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                   _readDeleteWindowText;                             // 0x0420(0x0018)(Edit, NativeAccessSpecifierPublic)
	int32                                         _allReadDeleteCount;                               // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnReadDeleteWindowCloseDelegate;                   // 0x0440(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UWidgetGeneralWindow*                   _generalWindowDelete;                              // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_458[0x58];                                     // 0x0458(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CallReadDeleteAll();
	class UWidget* DoCustomNavigationButton(EUINavigation UiNavigation);
	void NextPage();
	void OnChangeIdleStatusEvent(bool Idle, int32 StateSetting);
	void OnClosedReadAllDeleteWindow();
	void OnClosedReadDeleteWindow();
	void OnClosePopup();
	void OnDecideOneButtonGeneralWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnDecideReadAllDeleteWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnDecideReadDeleteWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnLoadCompleteEvent(int32 RequestId);
	void OnOpenedReadAllDeleteWindow();
	void OnReadDeleteWindowCloseDelegate__DelegateSignature();
	void OnUpdateCompleteEvent(int32 RequestId);
	void OnWindowDeleteDecide(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void PrevPage();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ContactNoticeWidget">();
	}
	static class UContactNoticeWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UContactNoticeWidget>();
	}
};
static_assert(alignof(UContactNoticeWidget) == 0x000008, "Wrong alignment on UContactNoticeWidget");
static_assert(sizeof(UContactNoticeWidget) == 0x0004B0, "Wrong size on UContactNoticeWidget");
static_assert(offsetof(UContactNoticeWidget, _presentFlag) == 0x0003C8, "Member 'UContactNoticeWidget::_presentFlag' has a wrong offset!");
static_assert(offsetof(UContactNoticeWidget, _selectId) == 0x0003D0, "Member 'UContactNoticeWidget::_selectId' has a wrong offset!");
static_assert(offsetof(UContactNoticeWidget, _contactNoticePopup) == 0x0003E0, "Member 'UContactNoticeWidget::_contactNoticePopup' has a wrong offset!");
static_assert(offsetof(UContactNoticeWidget, _readDeleteWindow) == 0x0003E8, "Member 'UContactNoticeWidget::_readDeleteWindow' has a wrong offset!");
static_assert(offsetof(UContactNoticeWidget, _oneButtonGeneralWindow) == 0x0003F0, "Member 'UContactNoticeWidget::_oneButtonGeneralWindow' has a wrong offset!");
static_assert(offsetof(UContactNoticeWidget, _readAllDeleteCloseWindow) == 0x0003F8, "Member 'UContactNoticeWidget::_readAllDeleteCloseWindow' has a wrong offset!");
static_assert(offsetof(UContactNoticeWidget, _subMenuPresentTexts) == 0x000400, "Member 'UContactNoticeWidget::_subMenuPresentTexts' has a wrong offset!");
static_assert(offsetof(UContactNoticeWidget, _subMenuSelectTexts) == 0x000410, "Member 'UContactNoticeWidget::_subMenuSelectTexts' has a wrong offset!");
static_assert(offsetof(UContactNoticeWidget, _readDeleteWindowText) == 0x000420, "Member 'UContactNoticeWidget::_readDeleteWindowText' has a wrong offset!");
static_assert(offsetof(UContactNoticeWidget, _allReadDeleteCount) == 0x000438, "Member 'UContactNoticeWidget::_allReadDeleteCount' has a wrong offset!");
static_assert(offsetof(UContactNoticeWidget, OnReadDeleteWindowCloseDelegate) == 0x000440, "Member 'UContactNoticeWidget::OnReadDeleteWindowCloseDelegate' has a wrong offset!");
static_assert(offsetof(UContactNoticeWidget, _generalWindowDelete) == 0x000450, "Member 'UContactNoticeWidget::_generalWindowDelete' has a wrong offset!");

// Class OutGameModule.ContactWidget
// 0x00C8 (0x0418 - 0x0350)
class UContactWidget final : public UWidgetInputControl
{
public:
	bool                                          _inputLimitFlag;                                   // 0x0350(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetButton*                          _emptyButton;                                      // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTabWidget*                             _wbpTab;                                           // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UContactNoticeWidget*                   _contactNoticeWidget;                              // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UContactInvitationWidget*               _contactInvitationWidget;                          // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _returnButton;                                     // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _allGetButton;                                     // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _allReadDeleteButton;                              // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _nowPageText;                                      // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _maxPageText;                                      // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _page1PrevButton;                                  // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _page1NextButton;                                  // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _sortButton;                                       // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B8[0x60];                                     // 0x03B8(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnClosedWindow();
	void OnDecideAllGetButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideAllReadDeleteButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideNextButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecidePrevButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnEmptyButtonFocus();
	void OnInvitationAllReadFlag(bool bIsAllReadFlag);
	void OnInvitationCreatedListView();
	void OnItemGetDispPlayClose();
	void OnListViewFocus();
	void OnLoadCompleteEvent(int32 RequestId);
	void OnNoticeAllReadFlag(bool bIsAllReadFlag);
	void OnNoticeCreatedListView();
	void OnOtherPlayersCall(const class FString& TargetUserId);
	void OnReadDeleteWindowClose();
	void OnSwichTabWidgetEvent(int32 NewSelectTab);
	void OnUpdateCompleteEvent(int32 RequestId);
	void RequestNoticeReceiveAll();
	void SetActiveListFocus();
	void UpdateAllGetButton();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ContactWidget">();
	}
	static class UContactWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UContactWidget>();
	}
};
static_assert(alignof(UContactWidget) == 0x000008, "Wrong alignment on UContactWidget");
static_assert(sizeof(UContactWidget) == 0x000418, "Wrong size on UContactWidget");
static_assert(offsetof(UContactWidget, _inputLimitFlag) == 0x000350, "Member 'UContactWidget::_inputLimitFlag' has a wrong offset!");
static_assert(offsetof(UContactWidget, _emptyButton) == 0x000358, "Member 'UContactWidget::_emptyButton' has a wrong offset!");
static_assert(offsetof(UContactWidget, _wbpTab) == 0x000360, "Member 'UContactWidget::_wbpTab' has a wrong offset!");
static_assert(offsetof(UContactWidget, _contactNoticeWidget) == 0x000368, "Member 'UContactWidget::_contactNoticeWidget' has a wrong offset!");
static_assert(offsetof(UContactWidget, _contactInvitationWidget) == 0x000370, "Member 'UContactWidget::_contactInvitationWidget' has a wrong offset!");
static_assert(offsetof(UContactWidget, _returnButton) == 0x000378, "Member 'UContactWidget::_returnButton' has a wrong offset!");
static_assert(offsetof(UContactWidget, _allGetButton) == 0x000380, "Member 'UContactWidget::_allGetButton' has a wrong offset!");
static_assert(offsetof(UContactWidget, _allReadDeleteButton) == 0x000388, "Member 'UContactWidget::_allReadDeleteButton' has a wrong offset!");
static_assert(offsetof(UContactWidget, _nowPageText) == 0x000390, "Member 'UContactWidget::_nowPageText' has a wrong offset!");
static_assert(offsetof(UContactWidget, _maxPageText) == 0x000398, "Member 'UContactWidget::_maxPageText' has a wrong offset!");
static_assert(offsetof(UContactWidget, _page1PrevButton) == 0x0003A0, "Member 'UContactWidget::_page1PrevButton' has a wrong offset!");
static_assert(offsetof(UContactWidget, _page1NextButton) == 0x0003A8, "Member 'UContactWidget::_page1NextButton' has a wrong offset!");
static_assert(offsetof(UContactWidget, _sortButton) == 0x0003B0, "Member 'UContactWidget::_sortButton' has a wrong offset!");

// Class OutGameModule.CustomizeAppTopWidget
// 0x00A0 (0x03F0 - 0x0350)
class UCustomizeAppTopWidget final : public UWidgetInputControl
{
public:
	uint8                                         Pad_350[0x20];                                     // 0x0350(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UWorld>                  _presetPopupLevel;                                 // 0x0370(0x0028)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelStreamingDynamic*                 _presetPopupLevelStreamingDynamic;                 // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerDatabaseWork*                    _playerDatabaseWork;                               // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameSequenceWork*                      _gameSequenceWork;                                 // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBackendSubsystem*                      _backendSubsystem;                                 // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTabWidget*                             _tab;                                              // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTabContentsSwitcher*                   _tabWidgetSwitcher;                                // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _presetButton;                                     // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _detailButton;                                     // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCoinWidget*                            _coinWidget1;                                      // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCoinWidget*                            _coinWidget2;                                      // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneCaptureCharacterLockWidget*       _captureLockPanel;                                 // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	bool BP_RequestCloseLevel();
	bool BP_RequestUpdateFetch();
	class UWidget* DoCustomNavigationDetailButton(EUINavigation UiNavigation);
	void OnDecideDetailButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecidePresetButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnFinishReceivedOnUpdateCompleteEvent();
	void OnLevelHidden();
	void ReceivedOnUpdateCompleteEvent(int32 RequestId);
	bool RequestCloseLevel();
	bool RequestUpdateFetch();
	void SetSelectedButtonFocus(ETutorialPopupScene Scence);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeAppTopWidget">();
	}
	static class UCustomizeAppTopWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeAppTopWidget>();
	}
};
static_assert(alignof(UCustomizeAppTopWidget) == 0x000008, "Wrong alignment on UCustomizeAppTopWidget");
static_assert(sizeof(UCustomizeAppTopWidget) == 0x0003F0, "Wrong size on UCustomizeAppTopWidget");
static_assert(offsetof(UCustomizeAppTopWidget, _presetPopupLevel) == 0x000370, "Member 'UCustomizeAppTopWidget::_presetPopupLevel' has a wrong offset!");
static_assert(offsetof(UCustomizeAppTopWidget, _presetPopupLevelStreamingDynamic) == 0x000398, "Member 'UCustomizeAppTopWidget::_presetPopupLevelStreamingDynamic' has a wrong offset!");
static_assert(offsetof(UCustomizeAppTopWidget, _playerDatabaseWork) == 0x0003A0, "Member 'UCustomizeAppTopWidget::_playerDatabaseWork' has a wrong offset!");
static_assert(offsetof(UCustomizeAppTopWidget, _gameSequenceWork) == 0x0003A8, "Member 'UCustomizeAppTopWidget::_gameSequenceWork' has a wrong offset!");
static_assert(offsetof(UCustomizeAppTopWidget, _backendSubsystem) == 0x0003B0, "Member 'UCustomizeAppTopWidget::_backendSubsystem' has a wrong offset!");
static_assert(offsetof(UCustomizeAppTopWidget, _tab) == 0x0003B8, "Member 'UCustomizeAppTopWidget::_tab' has a wrong offset!");
static_assert(offsetof(UCustomizeAppTopWidget, _tabWidgetSwitcher) == 0x0003C0, "Member 'UCustomizeAppTopWidget::_tabWidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UCustomizeAppTopWidget, _presetButton) == 0x0003C8, "Member 'UCustomizeAppTopWidget::_presetButton' has a wrong offset!");
static_assert(offsetof(UCustomizeAppTopWidget, _detailButton) == 0x0003D0, "Member 'UCustomizeAppTopWidget::_detailButton' has a wrong offset!");
static_assert(offsetof(UCustomizeAppTopWidget, _coinWidget1) == 0x0003D8, "Member 'UCustomizeAppTopWidget::_coinWidget1' has a wrong offset!");
static_assert(offsetof(UCustomizeAppTopWidget, _coinWidget2) == 0x0003E0, "Member 'UCustomizeAppTopWidget::_coinWidget2' has a wrong offset!");
static_assert(offsetof(UCustomizeAppTopWidget, _captureLockPanel) == 0x0003E8, "Member 'UCustomizeAppTopWidget::_captureLockPanel' has a wrong offset!");

// Class OutGameModule.CustomizeAppWidget
// 0x00B8 (0x04A0 - 0x03E8)
class UCustomizeAppWidget : public UAppWidget
{
public:
	FMulticastInlineDelegateProperty_             OnActivateEditModeDelegate;                        // 0x03E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UWidgetBase*                            _ownerWidget;                                      // 0x03F8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomTileViewHasWidget*               _selectTileViewHasWidget;                          // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizeSelectButtonWidget*           _selectedButton;                                   // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizeWheelHasWidget*               _wheelHasWidget;                                   // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWheelCommonParts*                      _wheelWidget;                                      // 0x0418(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBuyItemWidget*                         _buyItem;                                          // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizeRealityWidget*                _itemRarityWidget;                                 // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                            _networkLoadingIcon;                               // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _closeButton;                                      // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _mouseClickButton;                                 // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_448[0x10];                                     // 0x0448(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSequenceWork*                      _gameSequenceWork;                                 // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerDatabaseWork*                    _playerDatabaseWork;                               // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBackendSubsystem*                      _backendSubsystem;                                 // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                  _shopPopupLevel;                                   // 0x0470(0x0028)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelStreamingDynamic*                 _shopLevelStreamingDynamic;                        // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class UWidget* DoCustomTileViewHasCustomizeWidgetNavigation(EUINavigation UiNavigation);
	void OnActivateEditModeEventDelegate__DelegateSignature(bool DisplayFlag);
	void OnAddedToFocusButton(class UAppWidget* Widget, EWidgetInputType InputType);
	bool OnCancelButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnChangedPresetLoad();
	bool OnChangeTab();
	void OnDecideButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecidePreviewButton(class UAppWidget* Widget, EWidgetInputType InputType);
	bool OnDownShoulderKey(bool InLeft);
	void OnFinishedNoticeWindow();
	void OnFinishedShopBuy();
	void OnFinishReceivedOnLoadCompleteEvent();
	void OnNegativeButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnPopupLevelHidden();
	void OnPressButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnRemovedFromFocusButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void ReceivedOnLoadCompleteEvent(int32 RequestId);
	bool RequestEquip(class UAppWidget* Widget, EWidgetInputType InputType);
	void SetSelectedButtonFocus();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeAppWidget">();
	}
	static class UCustomizeAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeAppWidget>();
	}
};
static_assert(alignof(UCustomizeAppWidget) == 0x000008, "Wrong alignment on UCustomizeAppWidget");
static_assert(sizeof(UCustomizeAppWidget) == 0x0004A0, "Wrong size on UCustomizeAppWidget");
static_assert(offsetof(UCustomizeAppWidget, OnActivateEditModeDelegate) == 0x0003E8, "Member 'UCustomizeAppWidget::OnActivateEditModeDelegate' has a wrong offset!");
static_assert(offsetof(UCustomizeAppWidget, _ownerWidget) == 0x0003F8, "Member 'UCustomizeAppWidget::_ownerWidget' has a wrong offset!");
static_assert(offsetof(UCustomizeAppWidget, _selectTileViewHasWidget) == 0x000400, "Member 'UCustomizeAppWidget::_selectTileViewHasWidget' has a wrong offset!");
static_assert(offsetof(UCustomizeAppWidget, _selectedButton) == 0x000408, "Member 'UCustomizeAppWidget::_selectedButton' has a wrong offset!");
static_assert(offsetof(UCustomizeAppWidget, _wheelHasWidget) == 0x000410, "Member 'UCustomizeAppWidget::_wheelHasWidget' has a wrong offset!");
static_assert(offsetof(UCustomizeAppWidget, _wheelWidget) == 0x000418, "Member 'UCustomizeAppWidget::_wheelWidget' has a wrong offset!");
static_assert(offsetof(UCustomizeAppWidget, _buyItem) == 0x000420, "Member 'UCustomizeAppWidget::_buyItem' has a wrong offset!");
static_assert(offsetof(UCustomizeAppWidget, _itemRarityWidget) == 0x000428, "Member 'UCustomizeAppWidget::_itemRarityWidget' has a wrong offset!");
static_assert(offsetof(UCustomizeAppWidget, _networkLoadingIcon) == 0x000430, "Member 'UCustomizeAppWidget::_networkLoadingIcon' has a wrong offset!");
static_assert(offsetof(UCustomizeAppWidget, _closeButton) == 0x000438, "Member 'UCustomizeAppWidget::_closeButton' has a wrong offset!");
static_assert(offsetof(UCustomizeAppWidget, _mouseClickButton) == 0x000440, "Member 'UCustomizeAppWidget::_mouseClickButton' has a wrong offset!");
static_assert(offsetof(UCustomizeAppWidget, _gameSequenceWork) == 0x000458, "Member 'UCustomizeAppWidget::_gameSequenceWork' has a wrong offset!");
static_assert(offsetof(UCustomizeAppWidget, _playerDatabaseWork) == 0x000460, "Member 'UCustomizeAppWidget::_playerDatabaseWork' has a wrong offset!");
static_assert(offsetof(UCustomizeAppWidget, _backendSubsystem) == 0x000468, "Member 'UCustomizeAppWidget::_backendSubsystem' has a wrong offset!");
static_assert(offsetof(UCustomizeAppWidget, _shopPopupLevel) == 0x000470, "Member 'UCustomizeAppWidget::_shopPopupLevel' has a wrong offset!");
static_assert(offsetof(UCustomizeAppWidget, _shopLevelStreamingDynamic) == 0x000498, "Member 'UCustomizeAppWidget::_shopLevelStreamingDynamic' has a wrong offset!");

// Class OutGameModule.ProgressBarWidget
// 0x0130 (0x0480 - 0x0350)
class UProgressBarWidget : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x30];                                     // 0x0350(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _maxValue;                                         // 0x0380(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_384[0xC];                                      // 0x0384(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            _bgBrush;                                          // 0x0390(0x00D0)(Edit, Protected, NativeAccessSpecifierProtected)
	class UImage*                                 _bg;                                               // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _aniWidget;                                        // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _aniProgress;                                      // 0x0470(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_478[0x8];                                      // 0x0478(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AnimationFinishDelegate__DelegateSignature(class UProgressBarWidget* ProgressBar);
	void ProgressDelegate__DelegateSignature(const float& NowValue, const float& MaxValue);
	void ProgressTickDelegate__DelegateSignature();
	void ReflectAnimation();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProgressBarWidget">();
	}
	static class UProgressBarWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProgressBarWidget>();
	}
};
static_assert(alignof(UProgressBarWidget) == 0x000010, "Wrong alignment on UProgressBarWidget");
static_assert(sizeof(UProgressBarWidget) == 0x000480, "Wrong size on UProgressBarWidget");
static_assert(offsetof(UProgressBarWidget, _maxValue) == 0x000380, "Member 'UProgressBarWidget::_maxValue' has a wrong offset!");
static_assert(offsetof(UProgressBarWidget, _bgBrush) == 0x000390, "Member 'UProgressBarWidget::_bgBrush' has a wrong offset!");
static_assert(offsetof(UProgressBarWidget, _bg) == 0x000460, "Member 'UProgressBarWidget::_bg' has a wrong offset!");
static_assert(offsetof(UProgressBarWidget, _aniWidget) == 0x000468, "Member 'UProgressBarWidget::_aniWidget' has a wrong offset!");
static_assert(offsetof(UProgressBarWidget, _aniProgress) == 0x000470, "Member 'UProgressBarWidget::_aniProgress' has a wrong offset!");

// Class OutGameModule.StepProgressBarWidget
// 0x0030 (0x04B0 - 0x0480)
class UStepProgressBarWidget : public UProgressBarWidget
{
public:
	float                                         _progressValue;                                    // 0x0480(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _borderValue;                                      // 0x0484(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                _progressMask;                                     // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _mask1;                                            // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _mask2;                                            // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4A8[0x8];                                      // 0x04A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StepProgressBarWidget">();
	}
	static class UStepProgressBarWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStepProgressBarWidget>();
	}
};
static_assert(alignof(UStepProgressBarWidget) == 0x000010, "Wrong alignment on UStepProgressBarWidget");
static_assert(sizeof(UStepProgressBarWidget) == 0x0004B0, "Wrong size on UStepProgressBarWidget");
static_assert(offsetof(UStepProgressBarWidget, _progressValue) == 0x000480, "Member 'UStepProgressBarWidget::_progressValue' has a wrong offset!");
static_assert(offsetof(UStepProgressBarWidget, _borderValue) == 0x000484, "Member 'UStepProgressBarWidget::_borderValue' has a wrong offset!");
static_assert(offsetof(UStepProgressBarWidget, _progressMask) == 0x000490, "Member 'UStepProgressBarWidget::_progressMask' has a wrong offset!");
static_assert(offsetof(UStepProgressBarWidget, _mask1) == 0x000498, "Member 'UStepProgressBarWidget::_mask1' has a wrong offset!");
static_assert(offsetof(UStepProgressBarWidget, _mask2) == 0x0004A0, "Member 'UStepProgressBarWidget::_mask2' has a wrong offset!");

// Class OutGameModule.CustomizeCharacterSelectWidget
// 0x0038 (0x04B0 - 0x0478)
class UCustomizeCharacterSelectWidget final : public UCharacterSelectAppWidgetBase
{
public:
	class ASceneCaptureCreator*                   _sceneCaptureCreator;                              // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneCaptureCharacterWidget*           _characterImage;                                   // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                  _subLevel;                                         // 0x0488(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnFinishedCaptureSetupDelegate();
	void OnFinishedCharaSetupDelegate();
	void OnLevelHiddenCharacterDetail();
	void OnLevelOpenCharacterDetail();
	void OpenCharacterDetailShortcut();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeCharacterSelectWidget">();
	}
	static class UCustomizeCharacterSelectWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeCharacterSelectWidget>();
	}
};
static_assert(alignof(UCustomizeCharacterSelectWidget) == 0x000008, "Wrong alignment on UCustomizeCharacterSelectWidget");
static_assert(sizeof(UCustomizeCharacterSelectWidget) == 0x0004B0, "Wrong size on UCustomizeCharacterSelectWidget");
static_assert(offsetof(UCustomizeCharacterSelectWidget, _sceneCaptureCreator) == 0x000478, "Member 'UCustomizeCharacterSelectWidget::_sceneCaptureCreator' has a wrong offset!");
static_assert(offsetof(UCustomizeCharacterSelectWidget, _characterImage) == 0x000480, "Member 'UCustomizeCharacterSelectWidget::_characterImage' has a wrong offset!");
static_assert(offsetof(UCustomizeCharacterSelectWidget, _subLevel) == 0x000488, "Member 'UCustomizeCharacterSelectWidget::_subLevel' has a wrong offset!");

// Class OutGameModule.CustomizeCostumeAppWidget
// 0x0038 (0x04D8 - 0x04A0)
class UCustomizeCostumeAppWidget final : public UCustomizeAppWidget
{
public:
	class USceneCaptureCharacterWidget*           _characterImage;                                   // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizeCostumeSeriesAppWidget*       _selectScrollBoxHasWidget;                         // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSubMenu*                         _subMenu;                                          // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSubMenu*                         _auraMenu;                                         // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                           _scrollWidgetHandle;                               // 0x04C0(0x0008)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizeCostumeSeriesWidget*          _selectedSeriesWidget;                             // 0x04C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4D0[0x8];                                      // 0x04D0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UWidget* NavigationCustom(EUINavigation NavigationType);
	void OnAuraMenuDecide(int32 Index_0);
	void OnAuraMenuHover(int32 Index_0);
	void OnSubMenuDecide(int32 Index_0);
	void ReceivedOnUpdateCompleteEvent(int32 RequestId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeCostumeAppWidget">();
	}
	static class UCustomizeCostumeAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeCostumeAppWidget>();
	}
};
static_assert(alignof(UCustomizeCostumeAppWidget) == 0x000008, "Wrong alignment on UCustomizeCostumeAppWidget");
static_assert(sizeof(UCustomizeCostumeAppWidget) == 0x0004D8, "Wrong size on UCustomizeCostumeAppWidget");
static_assert(offsetof(UCustomizeCostumeAppWidget, _characterImage) == 0x0004A0, "Member 'UCustomizeCostumeAppWidget::_characterImage' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeAppWidget, _selectScrollBoxHasWidget) == 0x0004A8, "Member 'UCustomizeCostumeAppWidget::_selectScrollBoxHasWidget' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeAppWidget, _subMenu) == 0x0004B0, "Member 'UCustomizeCostumeAppWidget::_subMenu' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeAppWidget, _auraMenu) == 0x0004B8, "Member 'UCustomizeCostumeAppWidget::_auraMenu' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeAppWidget, _scrollWidgetHandle) == 0x0004C0, "Member 'UCustomizeCostumeAppWidget::_scrollWidgetHandle' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeAppWidget, _selectedSeriesWidget) == 0x0004C8, "Member 'UCustomizeCostumeAppWidget::_selectedSeriesWidget' has a wrong offset!");

// Class OutGameModule.CustomizeCostumeAuraWidget
// 0x0010 (0x0360 - 0x0350)
class UCustomizeCostumeAuraWidget final : public UWidgetBase
{
public:
	bool                                          _bUnLockedAura;                                    // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECurrencyType                                 _type;                                             // 0x0351(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_352[0x6];                                      // 0x0352(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URichTextBlock*                         _imageText;                                        // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeCostumeAuraWidget">();
	}
	static class UCustomizeCostumeAuraWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeCostumeAuraWidget>();
	}
};
static_assert(alignof(UCustomizeCostumeAuraWidget) == 0x000008, "Wrong alignment on UCustomizeCostumeAuraWidget");
static_assert(sizeof(UCustomizeCostumeAuraWidget) == 0x000360, "Wrong size on UCustomizeCostumeAuraWidget");
static_assert(offsetof(UCustomizeCostumeAuraWidget, _bUnLockedAura) == 0x000350, "Member 'UCustomizeCostumeAuraWidget::_bUnLockedAura' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeAuraWidget, _type) == 0x000351, "Member 'UCustomizeCostumeAuraWidget::_type' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeAuraWidget, _imageText) == 0x000358, "Member 'UCustomizeCostumeAuraWidget::_imageText' has a wrong offset!");

// Class OutGameModule.CustomizeCostumeAuraListWidget
// 0x0060 (0x03B0 - 0x0350)
class UCustomizeCostumeAuraListWidget final : public UWidgetBase
{
public:
	int32                                         _costumeCode;                                      // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _unLockedAuraLevel;                                // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EMdCharacterAssign                            _characterAssig;                                   // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCustomizeCostumeAuraWidget*>    _auraList;                                         // 0x0360(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _auraPanel;                                        // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizeCostumeAuraWidget*            _aura_1;                                           // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizeCostumeAuraWidget*            _aura_2;                                           // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizeCostumeAuraWidget*            _aura_3;                                           // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizeCostumeAuraWidget*            _aura_4;                                           // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizeCostumeAuraWidget*            _aura_5;                                           // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizeCostumeAuraWidget*            _aura_6;                                           // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _imageSwitcher;                                    // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeCostumeAuraListWidget">();
	}
	static class UCustomizeCostumeAuraListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeCostumeAuraListWidget>();
	}
};
static_assert(alignof(UCustomizeCostumeAuraListWidget) == 0x000008, "Wrong alignment on UCustomizeCostumeAuraListWidget");
static_assert(sizeof(UCustomizeCostumeAuraListWidget) == 0x0003B0, "Wrong size on UCustomizeCostumeAuraListWidget");
static_assert(offsetof(UCustomizeCostumeAuraListWidget, _costumeCode) == 0x000350, "Member 'UCustomizeCostumeAuraListWidget::_costumeCode' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeAuraListWidget, _unLockedAuraLevel) == 0x000354, "Member 'UCustomizeCostumeAuraListWidget::_unLockedAuraLevel' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeAuraListWidget, _characterAssig) == 0x000358, "Member 'UCustomizeCostumeAuraListWidget::_characterAssig' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeAuraListWidget, _auraList) == 0x000360, "Member 'UCustomizeCostumeAuraListWidget::_auraList' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeAuraListWidget, _auraPanel) == 0x000370, "Member 'UCustomizeCostumeAuraListWidget::_auraPanel' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeAuraListWidget, _aura_1) == 0x000378, "Member 'UCustomizeCostumeAuraListWidget::_aura_1' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeAuraListWidget, _aura_2) == 0x000380, "Member 'UCustomizeCostumeAuraListWidget::_aura_2' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeAuraListWidget, _aura_3) == 0x000388, "Member 'UCustomizeCostumeAuraListWidget::_aura_3' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeAuraListWidget, _aura_4) == 0x000390, "Member 'UCustomizeCostumeAuraListWidget::_aura_4' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeAuraListWidget, _aura_5) == 0x000398, "Member 'UCustomizeCostumeAuraListWidget::_aura_5' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeAuraListWidget, _aura_6) == 0x0003A0, "Member 'UCustomizeCostumeAuraListWidget::_aura_6' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeAuraListWidget, _imageSwitcher) == 0x0003A8, "Member 'UCustomizeCostumeAuraListWidget::_imageSwitcher' has a wrong offset!");

// Class OutGameModule.SeasonPassRankList
// 0x0080 (0x03D0 - 0x0350)
class USeasonPassRankList final : public UWidgetBase
{
public:
	class UCustomScrollBox*                       _animationScrollBox;                               // 0x0350(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_358[0x10];                                     // 0x0358(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USeasonPassRankEntry*>           _listItem;                                         // 0x0368(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UGridPanel*                             _rankListPanel;                                    // 0x0378(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGridPanel*                             _rankListNextPanel;                                // 0x0380(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_388[0x20];                                     // 0x0388(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 _rankCursor;                                       // 0x03A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _freePassBG;                                       // 0x03B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _premiumPassBG;                                    // 0x03B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C0[0x10];                                     // 0x03C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 BP_GetCombineItem();
	void BP_SetCombineItem(const TArray<struct FDbSeasonPassParam>& SeasonArray);
	void BP_SetDBRankNumber(int32 Page, int32 ItemMax);
	void BP_SetEntrySpacing(float Spacing);
	void BP_SetLayout(ESeasonType Seasontype, int32 MaxItem, int32 Page, class UGridPanel* Panel);
	void BP_SetUpListBGColor(const struct FColor& PurchaseColor, const struct FColor& DefaultColor);
	void BP_SetUpRankList(int32 EntrySize);
	struct FVector2D GetCursorPos();
	struct FVector2D GetCursorSize();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassRankList">();
	}
	static class USeasonPassRankList* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassRankList>();
	}
};
static_assert(alignof(USeasonPassRankList) == 0x000008, "Wrong alignment on USeasonPassRankList");
static_assert(sizeof(USeasonPassRankList) == 0x0003D0, "Wrong size on USeasonPassRankList");
static_assert(offsetof(USeasonPassRankList, _animationScrollBox) == 0x000350, "Member 'USeasonPassRankList::_animationScrollBox' has a wrong offset!");
static_assert(offsetof(USeasonPassRankList, _listItem) == 0x000368, "Member 'USeasonPassRankList::_listItem' has a wrong offset!");
static_assert(offsetof(USeasonPassRankList, _rankListPanel) == 0x000378, "Member 'USeasonPassRankList::_rankListPanel' has a wrong offset!");
static_assert(offsetof(USeasonPassRankList, _rankListNextPanel) == 0x000380, "Member 'USeasonPassRankList::_rankListNextPanel' has a wrong offset!");
static_assert(offsetof(USeasonPassRankList, _rankCursor) == 0x0003A8, "Member 'USeasonPassRankList::_rankCursor' has a wrong offset!");
static_assert(offsetof(USeasonPassRankList, _freePassBG) == 0x0003B0, "Member 'USeasonPassRankList::_freePassBG' has a wrong offset!");
static_assert(offsetof(USeasonPassRankList, _premiumPassBG) == 0x0003B8, "Member 'USeasonPassRankList::_premiumPassBG' has a wrong offset!");

// Class OutGameModule.CustomizeCostumeSeriesAppWidget
// 0x0028 (0x0378 - 0x0350)
class UCustomizeCostumeSeriesAppWidget final : public UWidgetBase
{
public:
	int32                                         _elementCount;                                     // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          _bAutoCreateWidget;                                // 0x0354(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_355[0x3];                                      // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UScrollBox*                             _scrollBox;                                        // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNamedSlot*                             _templateWidget;                                   // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UWidget*>                        _elementWidgets;                                   // 0x0368(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeCostumeSeriesAppWidget">();
	}
	static class UCustomizeCostumeSeriesAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeCostumeSeriesAppWidget>();
	}
};
static_assert(alignof(UCustomizeCostumeSeriesAppWidget) == 0x000008, "Wrong alignment on UCustomizeCostumeSeriesAppWidget");
static_assert(sizeof(UCustomizeCostumeSeriesAppWidget) == 0x000378, "Wrong size on UCustomizeCostumeSeriesAppWidget");
static_assert(offsetof(UCustomizeCostumeSeriesAppWidget, _elementCount) == 0x000350, "Member 'UCustomizeCostumeSeriesAppWidget::_elementCount' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeSeriesAppWidget, _bAutoCreateWidget) == 0x000354, "Member 'UCustomizeCostumeSeriesAppWidget::_bAutoCreateWidget' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeSeriesAppWidget, _scrollBox) == 0x000358, "Member 'UCustomizeCostumeSeriesAppWidget::_scrollBox' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeSeriesAppWidget, _templateWidget) == 0x000360, "Member 'UCustomizeCostumeSeriesAppWidget::_templateWidget' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeSeriesAppWidget, _elementWidgets) == 0x000368, "Member 'UCustomizeCostumeSeriesAppWidget::_elementWidgets' has a wrong offset!");

// Class OutGameModule.CustomizeCostumeSeriesWidget
// 0x0028 (0x03E8 - 0x03C0)
class UCustomizeCostumeSeriesWidget final : public UWidgetMatrixSelection
{
public:
	class UCanvasPanel*                           _window;                                           // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _headerText;                                       // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizeCostumeAuraListWidget*        _auraList;                                         // 0x03D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _bg_line01;                                        // 0x03D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _bg_line02;                                        // 0x03E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeCostumeSeriesWidget">();
	}
	static class UCustomizeCostumeSeriesWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeCostumeSeriesWidget>();
	}
};
static_assert(alignof(UCustomizeCostumeSeriesWidget) == 0x000008, "Wrong alignment on UCustomizeCostumeSeriesWidget");
static_assert(sizeof(UCustomizeCostumeSeriesWidget) == 0x0003E8, "Wrong size on UCustomizeCostumeSeriesWidget");
static_assert(offsetof(UCustomizeCostumeSeriesWidget, _window) == 0x0003C0, "Member 'UCustomizeCostumeSeriesWidget::_window' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeSeriesWidget, _headerText) == 0x0003C8, "Member 'UCustomizeCostumeSeriesWidget::_headerText' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeSeriesWidget, _auraList) == 0x0003D0, "Member 'UCustomizeCostumeSeriesWidget::_auraList' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeSeriesWidget, _bg_line01) == 0x0003D8, "Member 'UCustomizeCostumeSeriesWidget::_bg_line01' has a wrong offset!");
static_assert(offsetof(UCustomizeCostumeSeriesWidget, _bg_line02) == 0x0003E0, "Member 'UCustomizeCostumeSeriesWidget::_bg_line02' has a wrong offset!");

// Class OutGameModule.SeasonPassLicensePurchaseWindow
// 0x0040 (0x0390 - 0x0350)
class USeasonPassLicensePurchaseWindow final : public UWidgetBase
{
public:
	TArray<struct FItemGetListItemParam>          _freeitemList;                                     // 0x0350(0x0010)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FItemGetListItemParam>          _premiumItemList;                                  // 0x0360(0x0010)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FItemGetListItemParam>          _specialItemList;                                  // 0x0370(0x0010)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                         _prevSeasonRank;                                   // 0x0380(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _prevSeasonExp;                                    // 0x0384(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _currentStockNum;                                  // 0x0388(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 BP_GetBuyExpItemCount(int32 Rank);
	void BP_OpenGetItemWindow(ESeasonType Type);
	void BP_OpenShopPremium(ESeasonType Type);
	void BP_SetUpItemGetWindow(ESeasonType Type);
	void BP_SetUpItemList();
	void OnFadeOutEnd();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassLicensePurchaseWindow">();
	}
	static class USeasonPassLicensePurchaseWindow* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassLicensePurchaseWindow>();
	}
};
static_assert(alignof(USeasonPassLicensePurchaseWindow) == 0x000008, "Wrong alignment on USeasonPassLicensePurchaseWindow");
static_assert(sizeof(USeasonPassLicensePurchaseWindow) == 0x000390, "Wrong size on USeasonPassLicensePurchaseWindow");
static_assert(offsetof(USeasonPassLicensePurchaseWindow, _freeitemList) == 0x000350, "Member 'USeasonPassLicensePurchaseWindow::_freeitemList' has a wrong offset!");
static_assert(offsetof(USeasonPassLicensePurchaseWindow, _premiumItemList) == 0x000360, "Member 'USeasonPassLicensePurchaseWindow::_premiumItemList' has a wrong offset!");
static_assert(offsetof(USeasonPassLicensePurchaseWindow, _specialItemList) == 0x000370, "Member 'USeasonPassLicensePurchaseWindow::_specialItemList' has a wrong offset!");
static_assert(offsetof(USeasonPassLicensePurchaseWindow, _prevSeasonRank) == 0x000380, "Member 'USeasonPassLicensePurchaseWindow::_prevSeasonRank' has a wrong offset!");
static_assert(offsetof(USeasonPassLicensePurchaseWindow, _prevSeasonExp) == 0x000384, "Member 'USeasonPassLicensePurchaseWindow::_prevSeasonExp' has a wrong offset!");
static_assert(offsetof(USeasonPassLicensePurchaseWindow, _currentStockNum) == 0x000388, "Member 'USeasonPassLicensePurchaseWindow::_currentStockNum' has a wrong offset!");

// Class OutGameModule.CustomizeEmblemAppWidget
// 0x0040 (0x04E0 - 0x04A0)
class UCustomizeEmblemAppWidget final : public UCustomizeAppWidget
{
public:
	class UWidgetButton*                          _previewButton;                                    // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _cancelButton;                                     // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                  _previewPopupLevel;                                // 0x04B0(0x0028)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelStreamingDynamic*                 _previewLevelStreamingDynamic;                     // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnAddedToFocusDisplayButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideCancelButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideEquipButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnPreviewLevelHidden();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeEmblemAppWidget">();
	}
	static class UCustomizeEmblemAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeEmblemAppWidget>();
	}
};
static_assert(alignof(UCustomizeEmblemAppWidget) == 0x000008, "Wrong alignment on UCustomizeEmblemAppWidget");
static_assert(sizeof(UCustomizeEmblemAppWidget) == 0x0004E0, "Wrong size on UCustomizeEmblemAppWidget");
static_assert(offsetof(UCustomizeEmblemAppWidget, _previewButton) == 0x0004A0, "Member 'UCustomizeEmblemAppWidget::_previewButton' has a wrong offset!");
static_assert(offsetof(UCustomizeEmblemAppWidget, _cancelButton) == 0x0004A8, "Member 'UCustomizeEmblemAppWidget::_cancelButton' has a wrong offset!");
static_assert(offsetof(UCustomizeEmblemAppWidget, _previewPopupLevel) == 0x0004B0, "Member 'UCustomizeEmblemAppWidget::_previewPopupLevel' has a wrong offset!");
static_assert(offsetof(UCustomizeEmblemAppWidget, _previewLevelStreamingDynamic) == 0x0004D8, "Member 'UCustomizeEmblemAppWidget::_previewLevelStreamingDynamic' has a wrong offset!");

// Class OutGameModule.CustomizeEmblemPreviewAppWidget
// 0x0028 (0x0410 - 0x03E8)
class UCustomizeEmblemPreviewAppWidget final : public UAppWidget
{
public:
	class UWidgetGeneralWindowFrame*              _generalWindowFrame;                               // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFriendListButtonWidget*                _namePlate;                                        // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULoadIconWidget*                        _networkLoadingIcon;                               // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _displayPanel;                                     // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMyADDisplayWidget*                     _previewMyAD;                                      // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnCancelGeneralWindow(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnClickedBlockBGGeneralWindow();
	void OnClosedGeneralWindow();
	void OnDecideGeneralWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool IsLeft);
	void SetPreviewData();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeEmblemPreviewAppWidget">();
	}
	static class UCustomizeEmblemPreviewAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeEmblemPreviewAppWidget>();
	}
};
static_assert(alignof(UCustomizeEmblemPreviewAppWidget) == 0x000008, "Wrong alignment on UCustomizeEmblemPreviewAppWidget");
static_assert(sizeof(UCustomizeEmblemPreviewAppWidget) == 0x000410, "Wrong size on UCustomizeEmblemPreviewAppWidget");
static_assert(offsetof(UCustomizeEmblemPreviewAppWidget, _generalWindowFrame) == 0x0003E8, "Member 'UCustomizeEmblemPreviewAppWidget::_generalWindowFrame' has a wrong offset!");
static_assert(offsetof(UCustomizeEmblemPreviewAppWidget, _namePlate) == 0x0003F0, "Member 'UCustomizeEmblemPreviewAppWidget::_namePlate' has a wrong offset!");
static_assert(offsetof(UCustomizeEmblemPreviewAppWidget, _networkLoadingIcon) == 0x0003F8, "Member 'UCustomizeEmblemPreviewAppWidget::_networkLoadingIcon' has a wrong offset!");
static_assert(offsetof(UCustomizeEmblemPreviewAppWidget, _displayPanel) == 0x000400, "Member 'UCustomizeEmblemPreviewAppWidget::_displayPanel' has a wrong offset!");
static_assert(offsetof(UCustomizeEmblemPreviewAppWidget, _previewMyAD) == 0x000408, "Member 'UCustomizeEmblemPreviewAppWidget::_previewMyAD' has a wrong offset!");

// Class OutGameModule.SeasonPassEntryBase
// 0x0078 (0x06A8 - 0x0630)
class USeasonPassEntryBase : public UPlatformWidgetButton
{
public:
	class UImage*                                 _costumeImage;                                     // 0x0630(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _appealImage;                                      // 0x0638(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _voiceImage;                                       // 0x0640(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _image;                                            // 0x0648(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _currencyImage;                                    // 0x0650(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _charaImage;                                       // 0x0658(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMyADPartsWidget*                       _myADParts;                                        // 0x0660(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusAnimationWidget*                  _focusAnimationListItem;                           // 0x0668(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconWidget*                        _itemIcon;                                         // 0x0670(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USeasonPassListObject*                  _itemObj;                                          // 0x0678(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _switcherItemBG;                                   // 0x0680(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _switcherFlame;                                    // 0x0688(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _switcherText;                                     // 0x0690(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         _rarityStars;                                      // 0x0698(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_6A0[0x8];                                      // 0x06A0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UUserWidget* BP_GetCurretnFocusWidgetBase();
	void BP_SetWidgetImageBase();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassEntryBase">();
	}
	static class USeasonPassEntryBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassEntryBase>();
	}
};
static_assert(alignof(USeasonPassEntryBase) == 0x000008, "Wrong alignment on USeasonPassEntryBase");
static_assert(sizeof(USeasonPassEntryBase) == 0x0006A8, "Wrong size on USeasonPassEntryBase");
static_assert(offsetof(USeasonPassEntryBase, _costumeImage) == 0x000630, "Member 'USeasonPassEntryBase::_costumeImage' has a wrong offset!");
static_assert(offsetof(USeasonPassEntryBase, _appealImage) == 0x000638, "Member 'USeasonPassEntryBase::_appealImage' has a wrong offset!");
static_assert(offsetof(USeasonPassEntryBase, _voiceImage) == 0x000640, "Member 'USeasonPassEntryBase::_voiceImage' has a wrong offset!");
static_assert(offsetof(USeasonPassEntryBase, _image) == 0x000648, "Member 'USeasonPassEntryBase::_image' has a wrong offset!");
static_assert(offsetof(USeasonPassEntryBase, _currencyImage) == 0x000650, "Member 'USeasonPassEntryBase::_currencyImage' has a wrong offset!");
static_assert(offsetof(USeasonPassEntryBase, _charaImage) == 0x000658, "Member 'USeasonPassEntryBase::_charaImage' has a wrong offset!");
static_assert(offsetof(USeasonPassEntryBase, _myADParts) == 0x000660, "Member 'USeasonPassEntryBase::_myADParts' has a wrong offset!");
static_assert(offsetof(USeasonPassEntryBase, _focusAnimationListItem) == 0x000668, "Member 'USeasonPassEntryBase::_focusAnimationListItem' has a wrong offset!");
static_assert(offsetof(USeasonPassEntryBase, _itemIcon) == 0x000670, "Member 'USeasonPassEntryBase::_itemIcon' has a wrong offset!");
static_assert(offsetof(USeasonPassEntryBase, _itemObj) == 0x000678, "Member 'USeasonPassEntryBase::_itemObj' has a wrong offset!");
static_assert(offsetof(USeasonPassEntryBase, _switcherItemBG) == 0x000680, "Member 'USeasonPassEntryBase::_switcherItemBG' has a wrong offset!");
static_assert(offsetof(USeasonPassEntryBase, _switcherFlame) == 0x000688, "Member 'USeasonPassEntryBase::_switcherFlame' has a wrong offset!");
static_assert(offsetof(USeasonPassEntryBase, _switcherText) == 0x000690, "Member 'USeasonPassEntryBase::_switcherText' has a wrong offset!");
static_assert(offsetof(USeasonPassEntryBase, _rarityStars) == 0x000698, "Member 'USeasonPassEntryBase::_rarityStars' has a wrong offset!");

// Class OutGameModule.CustomizeEmblemSelectedWidget
// 0x0028 (0x0428 - 0x0400)
class UCustomizeEmblemSelectedWidget final : public UCustomTileViewHasWidget
{
public:
	class UCustomizeSelectButtonWidget*           _displayLeft;                                      // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizeSelectButtonWidget*           _displayCenter;                                    // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizeSelectButtonWidget*           _displayRight;                                     // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UCustomizeSelectButtonWidget*>   _displayWidgetList;                                // 0x0418(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeEmblemSelectedWidget">();
	}
	static class UCustomizeEmblemSelectedWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeEmblemSelectedWidget>();
	}
};
static_assert(alignof(UCustomizeEmblemSelectedWidget) == 0x000008, "Wrong alignment on UCustomizeEmblemSelectedWidget");
static_assert(sizeof(UCustomizeEmblemSelectedWidget) == 0x000428, "Wrong size on UCustomizeEmblemSelectedWidget");
static_assert(offsetof(UCustomizeEmblemSelectedWidget, _displayLeft) == 0x000400, "Member 'UCustomizeEmblemSelectedWidget::_displayLeft' has a wrong offset!");
static_assert(offsetof(UCustomizeEmblemSelectedWidget, _displayCenter) == 0x000408, "Member 'UCustomizeEmblemSelectedWidget::_displayCenter' has a wrong offset!");
static_assert(offsetof(UCustomizeEmblemSelectedWidget, _displayRight) == 0x000410, "Member 'UCustomizeEmblemSelectedWidget::_displayRight' has a wrong offset!");
static_assert(offsetof(UCustomizeEmblemSelectedWidget, _displayWidgetList) == 0x000418, "Member 'UCustomizeEmblemSelectedWidget::_displayWidgetList' has a wrong offset!");

// Class OutGameModule.CustomizeEmoteAppWidget
// 0x0038 (0x04D8 - 0x04A0)
class UCustomizeEmoteAppWidget final : public UCustomizeAppWidget
{
public:
	class USceneCaptureCharacterWidget*           _characterImage;                                   // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _cancelButton;                                     // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _previewButton;                                    // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               _previewButtonOverlay;                             // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWheelCommonParts*                      _displayWheelWidget;                               // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C8[0x8];                                      // 0x04C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           _onDecideEquipButtonAfterHandle;                   // 0x04D0(0x0008)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnAddedToFocusWheelCancelButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnChangedWheelIndex();
	void OnDecideEquipButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideEquipButtonAfter();
	void OnDecideWheelCancelButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnRemovedFromFocusWheelCancelButton(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeEmoteAppWidget">();
	}
	static class UCustomizeEmoteAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeEmoteAppWidget>();
	}
};
static_assert(alignof(UCustomizeEmoteAppWidget) == 0x000008, "Wrong alignment on UCustomizeEmoteAppWidget");
static_assert(sizeof(UCustomizeEmoteAppWidget) == 0x0004D8, "Wrong size on UCustomizeEmoteAppWidget");
static_assert(offsetof(UCustomizeEmoteAppWidget, _characterImage) == 0x0004A0, "Member 'UCustomizeEmoteAppWidget::_characterImage' has a wrong offset!");
static_assert(offsetof(UCustomizeEmoteAppWidget, _cancelButton) == 0x0004A8, "Member 'UCustomizeEmoteAppWidget::_cancelButton' has a wrong offset!");
static_assert(offsetof(UCustomizeEmoteAppWidget, _previewButton) == 0x0004B0, "Member 'UCustomizeEmoteAppWidget::_previewButton' has a wrong offset!");
static_assert(offsetof(UCustomizeEmoteAppWidget, _previewButtonOverlay) == 0x0004B8, "Member 'UCustomizeEmoteAppWidget::_previewButtonOverlay' has a wrong offset!");
static_assert(offsetof(UCustomizeEmoteAppWidget, _displayWheelWidget) == 0x0004C0, "Member 'UCustomizeEmoteAppWidget::_displayWheelWidget' has a wrong offset!");
static_assert(offsetof(UCustomizeEmoteAppWidget, _onDecideEquipButtonAfterHandle) == 0x0004D0, "Member 'UCustomizeEmoteAppWidget::_onDecideEquipButtonAfterHandle' has a wrong offset!");

// Class OutGameModule.SeasonPassRank
// 0x00A0 (0x03F0 - 0x0350)
class USeasonPassRank final : public UWidgetBase
{
public:
	class UProgressBar*                           _rankProgressBar;                                  // 0x0350(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                           _purchaseProgressBar;                              // 0x0358(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _rankIcon;                                         // 0x0360(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _barImage;                                         // 0x0368(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _rankText;                                         // 0x0370(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _exp;                                              // 0x0378(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _maxExp;                                           // 0x0380(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _iconSwitcher;                                     // 0x0388(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _progressBarSwitcher;                              // 0x0390(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_398[0x8];                                      // 0x0398(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _bPurchaseFlag;                                    // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstance*>              MatArray;                                          // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FLinearColor>                   ColorArray;                                        // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C8[0x28];                                     // 0x03C8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_RankValueSetUp(ESeasonType Type);
	void BP_RequestRankSetUp();
	void BP_SetProgressBar(const float Percent);
	void BP_SetUpDesignGaugeColor(const struct FColor& PurchaseColor, const struct FColor& DefaultColor);
	void BP_SetUpGauge(ESeasonType Type);
	void BP_SetValue(int32 Rank, int32 Exp, ESeasonType Type);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassRank">();
	}
	static class USeasonPassRank* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassRank>();
	}
};
static_assert(alignof(USeasonPassRank) == 0x000008, "Wrong alignment on USeasonPassRank");
static_assert(sizeof(USeasonPassRank) == 0x0003F0, "Wrong size on USeasonPassRank");
static_assert(offsetof(USeasonPassRank, _rankProgressBar) == 0x000350, "Member 'USeasonPassRank::_rankProgressBar' has a wrong offset!");
static_assert(offsetof(USeasonPassRank, _purchaseProgressBar) == 0x000358, "Member 'USeasonPassRank::_purchaseProgressBar' has a wrong offset!");
static_assert(offsetof(USeasonPassRank, _rankIcon) == 0x000360, "Member 'USeasonPassRank::_rankIcon' has a wrong offset!");
static_assert(offsetof(USeasonPassRank, _barImage) == 0x000368, "Member 'USeasonPassRank::_barImage' has a wrong offset!");
static_assert(offsetof(USeasonPassRank, _rankText) == 0x000370, "Member 'USeasonPassRank::_rankText' has a wrong offset!");
static_assert(offsetof(USeasonPassRank, _exp) == 0x000378, "Member 'USeasonPassRank::_exp' has a wrong offset!");
static_assert(offsetof(USeasonPassRank, _maxExp) == 0x000380, "Member 'USeasonPassRank::_maxExp' has a wrong offset!");
static_assert(offsetof(USeasonPassRank, _iconSwitcher) == 0x000388, "Member 'USeasonPassRank::_iconSwitcher' has a wrong offset!");
static_assert(offsetof(USeasonPassRank, _progressBarSwitcher) == 0x000390, "Member 'USeasonPassRank::_progressBarSwitcher' has a wrong offset!");
static_assert(offsetof(USeasonPassRank, _bPurchaseFlag) == 0x0003A0, "Member 'USeasonPassRank::_bPurchaseFlag' has a wrong offset!");
static_assert(offsetof(USeasonPassRank, MatArray) == 0x0003A8, "Member 'USeasonPassRank::MatArray' has a wrong offset!");
static_assert(offsetof(USeasonPassRank, ColorArray) == 0x0003B8, "Member 'USeasonPassRank::ColorArray' has a wrong offset!");

// Class OutGameModule.CustomizeListEntryObject
// 0x0028 (0x0058 - 0x0030)
class UCustomizeListEntryObject : public UListViewEntryObjectBase
{
public:
	class UGameSequenceWork*                      _gameSequenceWork;                                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerDatabaseWork*                    _playerDatabaseWork;                               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBackendSubsystem*                      _backendSubsystem;                                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _maxIndex;                                         // 0x0048(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _removeObjectFlag;                                 // 0x0049(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _maxNum;                                           // 0x004C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _columNum;                                         // 0x0050(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _dbItemCode;                                       // 0x0054(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	bool BP_GetHasFlag();
	class FText BP_GetItemDescription();
	class FText BP_GetItemName(bool bMultiLine);
	int32 BP_GetItemProduct();
	EMdRarity BP_GetRarityId();
	void BP_InitializeCustomizeListEntryObject();

	ECharacterId BP_GetCharacterId() const;
	int32 BP_GetItemCode() const;
	EItemCategory BP_GetType() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeListEntryObject">();
	}
	static class UCustomizeListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeListEntryObject>();
	}
};
static_assert(alignof(UCustomizeListEntryObject) == 0x000008, "Wrong alignment on UCustomizeListEntryObject");
static_assert(sizeof(UCustomizeListEntryObject) == 0x000058, "Wrong size on UCustomizeListEntryObject");
static_assert(offsetof(UCustomizeListEntryObject, _gameSequenceWork) == 0x000030, "Member 'UCustomizeListEntryObject::_gameSequenceWork' has a wrong offset!");
static_assert(offsetof(UCustomizeListEntryObject, _playerDatabaseWork) == 0x000038, "Member 'UCustomizeListEntryObject::_playerDatabaseWork' has a wrong offset!");
static_assert(offsetof(UCustomizeListEntryObject, _backendSubsystem) == 0x000040, "Member 'UCustomizeListEntryObject::_backendSubsystem' has a wrong offset!");
static_assert(offsetof(UCustomizeListEntryObject, _maxIndex) == 0x000048, "Member 'UCustomizeListEntryObject::_maxIndex' has a wrong offset!");
static_assert(offsetof(UCustomizeListEntryObject, _removeObjectFlag) == 0x000049, "Member 'UCustomizeListEntryObject::_removeObjectFlag' has a wrong offset!");
static_assert(offsetof(UCustomizeListEntryObject, _maxNum) == 0x00004C, "Member 'UCustomizeListEntryObject::_maxNum' has a wrong offset!");
static_assert(offsetof(UCustomizeListEntryObject, _columNum) == 0x000050, "Member 'UCustomizeListEntryObject::_columNum' has a wrong offset!");
static_assert(offsetof(UCustomizeListEntryObject, _dbItemCode) == 0x000054, "Member 'UCustomizeListEntryObject::_dbItemCode' has a wrong offset!");

// Class OutGameModule.CustomizeCostumeListEntryObject
// 0x0000 (0x0058 - 0x0058)
class UCustomizeCostumeListEntryObject final : public UCustomizeListEntryObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeCostumeListEntryObject">();
	}
	static class UCustomizeCostumeListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeCostumeListEntryObject>();
	}
};
static_assert(alignof(UCustomizeCostumeListEntryObject) == 0x000008, "Wrong alignment on UCustomizeCostumeListEntryObject");
static_assert(sizeof(UCustomizeCostumeListEntryObject) == 0x000058, "Wrong size on UCustomizeCostumeListEntryObject");

// Class OutGameModule.SettingButtonKeyboardWidget
// 0x0088 (0x0510 - 0x0488)
class USettingButtonKeyboardWidget final : public UWidgetButton
{
public:
	FMulticastInlineDelegateProperty_             _onSwapKeyDelegate;                                // 0x0488(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UTextBlock*                             _tipsTextBlock;                                    // 0x0498(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EKeyConfigurableCommand                       _command;                                          // 0x04A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   _key;                                              // 0x04A8(0x0018)(BlueprintVisible, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformRichTextBlock*                 _buttonImage;                                      // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _commandName;                                      // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _bgSwitcher;                                       // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusAnimationWidget*                  _focusAnimation;                                   // 0x04D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKey                                   _cancelButton;                                     // 0x04E0(0x0018)(BlueprintVisible, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _customColor;                                      // 0x04F8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bIsCustomMode;                                    // 0x0508(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bIsSelected;                                      // 0x0509(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bIsRelease;                                       // 0x050A(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bIsMoveButton;                                    // 0x050B(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_ApplayKey();
	void BP_CancelCustomMode();
	void BP_OnConfigure(const struct FKey& PrevKey);
	void BP_SetBG(ESettingButtonBGType bgType);
	void BP_SetFocusTipText();
	void CancelCustomMode();
	void OnConfigure(const struct FKey& NextKey);
	void OnCustomMode(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SettingButtonKeyboardWidget">();
	}
	static class USettingButtonKeyboardWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USettingButtonKeyboardWidget>();
	}
};
static_assert(alignof(USettingButtonKeyboardWidget) == 0x000008, "Wrong alignment on USettingButtonKeyboardWidget");
static_assert(sizeof(USettingButtonKeyboardWidget) == 0x000510, "Wrong size on USettingButtonKeyboardWidget");
static_assert(offsetof(USettingButtonKeyboardWidget, _onSwapKeyDelegate) == 0x000488, "Member 'USettingButtonKeyboardWidget::_onSwapKeyDelegate' has a wrong offset!");
static_assert(offsetof(USettingButtonKeyboardWidget, _tipsTextBlock) == 0x000498, "Member 'USettingButtonKeyboardWidget::_tipsTextBlock' has a wrong offset!");
static_assert(offsetof(USettingButtonKeyboardWidget, _command) == 0x0004A0, "Member 'USettingButtonKeyboardWidget::_command' has a wrong offset!");
static_assert(offsetof(USettingButtonKeyboardWidget, _key) == 0x0004A8, "Member 'USettingButtonKeyboardWidget::_key' has a wrong offset!");
static_assert(offsetof(USettingButtonKeyboardWidget, _buttonImage) == 0x0004C0, "Member 'USettingButtonKeyboardWidget::_buttonImage' has a wrong offset!");
static_assert(offsetof(USettingButtonKeyboardWidget, _commandName) == 0x0004C8, "Member 'USettingButtonKeyboardWidget::_commandName' has a wrong offset!");
static_assert(offsetof(USettingButtonKeyboardWidget, _bgSwitcher) == 0x0004D0, "Member 'USettingButtonKeyboardWidget::_bgSwitcher' has a wrong offset!");
static_assert(offsetof(USettingButtonKeyboardWidget, _focusAnimation) == 0x0004D8, "Member 'USettingButtonKeyboardWidget::_focusAnimation' has a wrong offset!");
static_assert(offsetof(USettingButtonKeyboardWidget, _cancelButton) == 0x0004E0, "Member 'USettingButtonKeyboardWidget::_cancelButton' has a wrong offset!");
static_assert(offsetof(USettingButtonKeyboardWidget, _customColor) == 0x0004F8, "Member 'USettingButtonKeyboardWidget::_customColor' has a wrong offset!");
static_assert(offsetof(USettingButtonKeyboardWidget, _bIsCustomMode) == 0x000508, "Member 'USettingButtonKeyboardWidget::_bIsCustomMode' has a wrong offset!");
static_assert(offsetof(USettingButtonKeyboardWidget, _bIsSelected) == 0x000509, "Member 'USettingButtonKeyboardWidget::_bIsSelected' has a wrong offset!");
static_assert(offsetof(USettingButtonKeyboardWidget, _bIsRelease) == 0x00050A, "Member 'USettingButtonKeyboardWidget::_bIsRelease' has a wrong offset!");
static_assert(offsetof(USettingButtonKeyboardWidget, _bIsMoveButton) == 0x00050B, "Member 'USettingButtonKeyboardWidget::_bIsMoveButton' has a wrong offset!");

// Class OutGameModule.CustomizeVoiceListEntryObject
// 0x0000 (0x0058 - 0x0058)
class UCustomizeVoiceListEntryObject final : public UCustomizeListEntryObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeVoiceListEntryObject">();
	}
	static class UCustomizeVoiceListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeVoiceListEntryObject>();
	}
};
static_assert(alignof(UCustomizeVoiceListEntryObject) == 0x000008, "Wrong alignment on UCustomizeVoiceListEntryObject");
static_assert(sizeof(UCustomizeVoiceListEntryObject) == 0x000058, "Wrong size on UCustomizeVoiceListEntryObject");

// Class OutGameModule.CustomizeAppealListEntryObject
// 0x0000 (0x0058 - 0x0058)
class UCustomizeAppealListEntryObject final : public UCustomizeListEntryObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeAppealListEntryObject">();
	}
	static class UCustomizeAppealListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeAppealListEntryObject>();
	}
};
static_assert(alignof(UCustomizeAppealListEntryObject) == 0x000008, "Wrong alignment on UCustomizeAppealListEntryObject");
static_assert(sizeof(UCustomizeAppealListEntryObject) == 0x000058, "Wrong size on UCustomizeAppealListEntryObject");

// Class OutGameModule.SeasonPassScrollSlot
// 0x0030 (0x0380 - 0x0350)
class USeasonPassScrollSlot final : public UWidgetBase
{
public:
	FMulticastInlineDelegateProperty_             _OnItemClicked;                                    // 0x0350(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FLinearColor                           _buttonColor;                                      // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_370[0x8];                                      // 0x0370(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 _activeButton;                                     // 0x0378(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	bool BP_GetSelect();
	void BP_SetSelect(bool Select);
	void CallOnItemClicked();
	void OnItemClickedDispather__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassScrollSlot">();
	}
	static class USeasonPassScrollSlot* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassScrollSlot>();
	}
};
static_assert(alignof(USeasonPassScrollSlot) == 0x000008, "Wrong alignment on USeasonPassScrollSlot");
static_assert(sizeof(USeasonPassScrollSlot) == 0x000380, "Wrong size on USeasonPassScrollSlot");
static_assert(offsetof(USeasonPassScrollSlot, _OnItemClicked) == 0x000350, "Member 'USeasonPassScrollSlot::_OnItemClicked' has a wrong offset!");
static_assert(offsetof(USeasonPassScrollSlot, _buttonColor) == 0x000360, "Member 'USeasonPassScrollSlot::_buttonColor' has a wrong offset!");
static_assert(offsetof(USeasonPassScrollSlot, _activeButton) == 0x000378, "Member 'USeasonPassScrollSlot::_activeButton' has a wrong offset!");

// Class OutGameModule.CustomizeEmblemListEntryObject
// 0x0000 (0x0058 - 0x0058)
class UCustomizeEmblemListEntryObject final : public UCustomizeListEntryObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeEmblemListEntryObject">();
	}
	static class UCustomizeEmblemListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeEmblemListEntryObject>();
	}
};
static_assert(alignof(UCustomizeEmblemListEntryObject) == 0x000008, "Wrong alignment on UCustomizeEmblemListEntryObject");
static_assert(sizeof(UCustomizeEmblemListEntryObject) == 0x000058, "Wrong size on UCustomizeEmblemListEntryObject");

// Class OutGameModule.CustomizeMenuAppWidget
// 0x0018 (0x0400 - 0x03E8)
class UCustomizeMenuAppWidget final : public UAppWidget
{
public:
	class UCustomizePanelCustomizeWidget*         _customizeButton;                                  // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizePanelMyADWidget*              _advertiseButton;                                  // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3F8[0x8];                                      // 0x03F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnFadeOutEnd();
	void ReceivedAddToFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void ReceivedDecideEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void ReceivedPressEvent(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeMenuAppWidget">();
	}
	static class UCustomizeMenuAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeMenuAppWidget>();
	}
};
static_assert(alignof(UCustomizeMenuAppWidget) == 0x000008, "Wrong alignment on UCustomizeMenuAppWidget");
static_assert(sizeof(UCustomizeMenuAppWidget) == 0x000400, "Wrong size on UCustomizeMenuAppWidget");
static_assert(offsetof(UCustomizeMenuAppWidget, _customizeButton) == 0x0003E8, "Member 'UCustomizeMenuAppWidget::_customizeButton' has a wrong offset!");
static_assert(offsetof(UCustomizeMenuAppWidget, _advertiseButton) == 0x0003F0, "Member 'UCustomizeMenuAppWidget::_advertiseButton' has a wrong offset!");

// Class OutGameModule.SeasonPassListDayObject
// 0x0018 (0x0040 - 0x0028)
class USeasonPassListDayObject final : public UObject
{
public:
	class FText                                   _dayNumber;                                        // 0x0028(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassListDayObject">();
	}
	static class USeasonPassListDayObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassListDayObject>();
	}
};
static_assert(alignof(USeasonPassListDayObject) == 0x000008, "Wrong alignment on USeasonPassListDayObject");
static_assert(sizeof(USeasonPassListDayObject) == 0x000040, "Wrong size on USeasonPassListDayObject");
static_assert(offsetof(USeasonPassListDayObject, _dayNumber) == 0x000028, "Member 'USeasonPassListDayObject::_dayNumber' has a wrong offset!");

// Class OutGameModule.CustomizePanelWidget
// 0x0068 (0x04F0 - 0x0488)
class UCustomizePanelWidget final : public UWidgetButton
{
public:
	class UAdjustTextWidget*                      _titleTextWidget;                                  // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _messageTextWidget;                                // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                  _moveLevel;                                        // 0x0498(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   _titleText;                                        // 0x04C0(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                   _messageText;                                      // 0x04D8(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizePanelWidget">();
	}
	static class UCustomizePanelWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizePanelWidget>();
	}
};
static_assert(alignof(UCustomizePanelWidget) == 0x000008, "Wrong alignment on UCustomizePanelWidget");
static_assert(sizeof(UCustomizePanelWidget) == 0x0004F0, "Wrong size on UCustomizePanelWidget");
static_assert(offsetof(UCustomizePanelWidget, _titleTextWidget) == 0x000488, "Member 'UCustomizePanelWidget::_titleTextWidget' has a wrong offset!");
static_assert(offsetof(UCustomizePanelWidget, _messageTextWidget) == 0x000490, "Member 'UCustomizePanelWidget::_messageTextWidget' has a wrong offset!");
static_assert(offsetof(UCustomizePanelWidget, _moveLevel) == 0x000498, "Member 'UCustomizePanelWidget::_moveLevel' has a wrong offset!");
static_assert(offsetof(UCustomizePanelWidget, _titleText) == 0x0004C0, "Member 'UCustomizePanelWidget::_titleText' has a wrong offset!");
static_assert(offsetof(UCustomizePanelWidget, _messageText) == 0x0004D8, "Member 'UCustomizePanelWidget::_messageText' has a wrong offset!");

// Class OutGameModule.CustomizePanelCustomizeWidget
// 0x0008 (0x0358 - 0x0350)
class UCustomizePanelCustomizeWidget final : public UWidgetBase
{
public:
	class UCustomizePanelWidget*                  _customizeButton;                                  // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnAddedToFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnRemovedFromFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizePanelCustomizeWidget">();
	}
	static class UCustomizePanelCustomizeWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizePanelCustomizeWidget>();
	}
};
static_assert(alignof(UCustomizePanelCustomizeWidget) == 0x000008, "Wrong alignment on UCustomizePanelCustomizeWidget");
static_assert(sizeof(UCustomizePanelCustomizeWidget) == 0x000358, "Wrong size on UCustomizePanelCustomizeWidget");
static_assert(offsetof(UCustomizePanelCustomizeWidget, _customizeButton) == 0x000350, "Member 'UCustomizePanelCustomizeWidget::_customizeButton' has a wrong offset!");

// Class OutGameModule.SeasonPassTop
// 0x0078 (0x03C8 - 0x0350)
class USeasonPassTop final : public UWidgetBase
{
public:
	FMulticastInlineDelegateProperty_             _OnOpenBuySpecialLicenseEventDispather;            // 0x0350(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	ELicencePurchaseType                          _purchaseItem;                                     // 0x0360(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _tabIndex;                                         // 0x0364(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _needRank;                                         // 0x0368(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetSwitcher*                        _seasonPanelSwitcher;                              // 0x0370(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _seasonPanel;                                      // 0x0378(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _specialPanel;                                     // 0x0380(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USeasonPassList*                        _seasonList;                                       // 0x0388(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USeasonPassList*                        _specialList;                                      // 0x0390(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USeasonPassRank*                        _seasonPassRank;                                   // 0x0398(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USeasonPassRank*                        _specialRank;                                      // 0x03A0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USeasonPassTitle*                       _seasonTitle;                                      // 0x03A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B0[0x8];                                      // 0x03B0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlatformWidgetButton*                  _HeroButton;                                       // 0x03B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _ProButton;                                        // 0x03C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_InitLIcense();
	void BP_OpenPurchaseTab();
	void BuySpecialLicenseDispather__DelegateSignature(int32 NeedRank, EItemSeasonType Season);
	void CallPurchaseSpecialLicenseEvent(int32 NeedRank, EItemSeasonType Season);
	void CheckOpenPopUpBuyDirections(int32 NeedRank, EItemSeasonType Season);
	void EntryFocus(bool IsRight);
	class UWidget* GetNavigationWidget();
	void OpenPurchaseTab();
	void SetCurrentTabType(ESeasonType Type);
	void SetSeasonData();
	void SetSpecialData();
	void SetUpSeasonEvent();
	void SetUpSeasonPass();
	void SwitchPanel(ESeasonType Type);

	ESeasonType GetCurrentTabType() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassTop">();
	}
	static class USeasonPassTop* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassTop>();
	}
};
static_assert(alignof(USeasonPassTop) == 0x000008, "Wrong alignment on USeasonPassTop");
static_assert(sizeof(USeasonPassTop) == 0x0003C8, "Wrong size on USeasonPassTop");
static_assert(offsetof(USeasonPassTop, _OnOpenBuySpecialLicenseEventDispather) == 0x000350, "Member 'USeasonPassTop::_OnOpenBuySpecialLicenseEventDispather' has a wrong offset!");
static_assert(offsetof(USeasonPassTop, _purchaseItem) == 0x000360, "Member 'USeasonPassTop::_purchaseItem' has a wrong offset!");
static_assert(offsetof(USeasonPassTop, _tabIndex) == 0x000364, "Member 'USeasonPassTop::_tabIndex' has a wrong offset!");
static_assert(offsetof(USeasonPassTop, _needRank) == 0x000368, "Member 'USeasonPassTop::_needRank' has a wrong offset!");
static_assert(offsetof(USeasonPassTop, _seasonPanelSwitcher) == 0x000370, "Member 'USeasonPassTop::_seasonPanelSwitcher' has a wrong offset!");
static_assert(offsetof(USeasonPassTop, _seasonPanel) == 0x000378, "Member 'USeasonPassTop::_seasonPanel' has a wrong offset!");
static_assert(offsetof(USeasonPassTop, _specialPanel) == 0x000380, "Member 'USeasonPassTop::_specialPanel' has a wrong offset!");
static_assert(offsetof(USeasonPassTop, _seasonList) == 0x000388, "Member 'USeasonPassTop::_seasonList' has a wrong offset!");
static_assert(offsetof(USeasonPassTop, _specialList) == 0x000390, "Member 'USeasonPassTop::_specialList' has a wrong offset!");
static_assert(offsetof(USeasonPassTop, _seasonPassRank) == 0x000398, "Member 'USeasonPassTop::_seasonPassRank' has a wrong offset!");
static_assert(offsetof(USeasonPassTop, _specialRank) == 0x0003A0, "Member 'USeasonPassTop::_specialRank' has a wrong offset!");
static_assert(offsetof(USeasonPassTop, _seasonTitle) == 0x0003A8, "Member 'USeasonPassTop::_seasonTitle' has a wrong offset!");
static_assert(offsetof(USeasonPassTop, _HeroButton) == 0x0003B8, "Member 'USeasonPassTop::_HeroButton' has a wrong offset!");
static_assert(offsetof(USeasonPassTop, _ProButton) == 0x0003C0, "Member 'USeasonPassTop::_ProButton' has a wrong offset!");

// Class OutGameModule.CustomizePanelMyADWidget
// 0x0018 (0x0368 - 0x0350)
class UCustomizePanelMyADWidget final : public UWidgetBase
{
public:
	class UCustomizePanelWidget*                  _myAdButton;                                       // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _backImage_loop_L;                                 // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _backImage_loop_R;                                 // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnAddedToFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnRemovedFromFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizePanelMyADWidget">();
	}
	static class UCustomizePanelMyADWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizePanelMyADWidget>();
	}
};
static_assert(alignof(UCustomizePanelMyADWidget) == 0x000008, "Wrong alignment on UCustomizePanelMyADWidget");
static_assert(sizeof(UCustomizePanelMyADWidget) == 0x000368, "Wrong size on UCustomizePanelMyADWidget");
static_assert(offsetof(UCustomizePanelMyADWidget, _myAdButton) == 0x000350, "Member 'UCustomizePanelMyADWidget::_myAdButton' has a wrong offset!");
static_assert(offsetof(UCustomizePanelMyADWidget, _backImage_loop_L) == 0x000358, "Member 'UCustomizePanelMyADWidget::_backImage_loop_L' has a wrong offset!");
static_assert(offsetof(UCustomizePanelMyADWidget, _backImage_loop_R) == 0x000360, "Member 'UCustomizePanelMyADWidget::_backImage_loop_R' has a wrong offset!");

// Class OutGameModule.CustomizePresetAppWidget
// 0x1A78 (0x1E60 - 0x03E8)
class UCustomizePresetAppWidget final : public UAppWidget
{
public:
	class UWidgetGeneralWindowFrame*              _generalWindowFrame;                               // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _confirmWindow;                                    // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _displayPanel;                                     // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                            _networkLoadingIcon;                               // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizePresetButtonWidget*           _presetButton1;                                    // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizePresetButtonWidget*           _presetButton2;                                    // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizePresetButtonWidget*           _presetButton3;                                    // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizePresetButtonWidget*           _presetButton4;                                    // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizePresetButtonWidget*           _presetButton5;                                    // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizePresetButtonWidget*           _presetButton6;                                    // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneCaptureCharacterWidget*           _characterImage;                                   // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEmblemDisplayWidget*                   _displayLeft;                                      // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEmblemDisplayWidget*                   _displayCenter;                                    // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEmblemDisplayWidget*                   _displayRight;                                     // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetBase*                            _wheelBase;                                        // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAppWidget*                             _voiceWheel;                                       // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWheelCommonParts*                      _voiceWheelWidget;                                 // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<int32, class FText>                      _voiceWheelMessageList;                            // 0x0470(0x0050)(Protected, NativeAccessSpecifierProtected)
	class UAppWidget*                             _appealWheel;                                      // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWheelCommonParts*                      _appealWheelWidget;                                // 0x04C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<int32, class FText>                      _appealWheelMessageList;                           // 0x04D0(0x0050)(Protected, NativeAccessSpecifierProtected)
	class UWidgetSubMenu*                         _subMenu;                                          // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGeneralShoppingWidget*                 _shoppingWindow;                                   // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameSequenceWork*                      _gameSequenceWork;                                 // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerDatabaseWork*                    _playerDatabaseWork;                               // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBackendSubsystem*                      _backendSubsystem;                                 // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_548[0x1868];                                   // 0x0548(0x1868)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class UCustomizePresetButtonWidget*> _buttonMap;                                        // 0x1DB0(0x0050)(ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<int32, class UWidgetButton*>             _windowButtonMap;                                  // 0x1E00(0x0050)(ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UCustomizePresetButtonWidget*           _selectedPresetButton;                             // 0x1E50(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1E58[0x8];                                     // 0x1E58(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CloseShoppingWindow();
	class UWidget* DoCustomCancelButtonNavigation(EUINavigation UiNavigation);
	class UWidget* DoCustomPresetButtonNavigation(EUINavigation UiNavigation);
	void OnAddedToFocusPresetButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnCancelGeneralWindow(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnChangedWheelIndex_Appeal();
	void OnChangedWheelIndex_Voice();
	void OnClosedConfirmWindow();
	void OnClosedGeneralWindow();
	void OnDecideConfirmWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool IsLeft);
	void OnDecideGeneralWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool IsLeft);
	void OnDecidePresetButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideShoppingWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnNegativePresetButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnSubMenuDecide(int32 Index_0);
	void OnUpdateComplete(int32 RequestId);
	void OnUpdateWebApiError();
	void OpenShopMenu();
	void ReceivedFinishCharaSetupEvent();
	void ReceivedOnLoadCompleteEvent(int32 RequestId);
	void ReceivedOnUpdateCompleteEvent_InitializedPreset(int32 RequestId);
	void ReceivedOnUpdateCompleteEvent_SavePreset(int32 RequestId);
	void UpdatePresetData_NoEquipAppeal(bool NoEquip);
	void UpdatePresetData_NoEquipVoice(bool NoEquip);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizePresetAppWidget">();
	}
	static class UCustomizePresetAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizePresetAppWidget>();
	}
};
static_assert(alignof(UCustomizePresetAppWidget) == 0x000008, "Wrong alignment on UCustomizePresetAppWidget");
static_assert(sizeof(UCustomizePresetAppWidget) == 0x001E60, "Wrong size on UCustomizePresetAppWidget");
static_assert(offsetof(UCustomizePresetAppWidget, _generalWindowFrame) == 0x0003E8, "Member 'UCustomizePresetAppWidget::_generalWindowFrame' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _confirmWindow) == 0x0003F0, "Member 'UCustomizePresetAppWidget::_confirmWindow' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _displayPanel) == 0x0003F8, "Member 'UCustomizePresetAppWidget::_displayPanel' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _networkLoadingIcon) == 0x000400, "Member 'UCustomizePresetAppWidget::_networkLoadingIcon' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _presetButton1) == 0x000408, "Member 'UCustomizePresetAppWidget::_presetButton1' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _presetButton2) == 0x000410, "Member 'UCustomizePresetAppWidget::_presetButton2' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _presetButton3) == 0x000418, "Member 'UCustomizePresetAppWidget::_presetButton3' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _presetButton4) == 0x000420, "Member 'UCustomizePresetAppWidget::_presetButton4' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _presetButton5) == 0x000428, "Member 'UCustomizePresetAppWidget::_presetButton5' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _presetButton6) == 0x000430, "Member 'UCustomizePresetAppWidget::_presetButton6' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _characterImage) == 0x000438, "Member 'UCustomizePresetAppWidget::_characterImage' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _displayLeft) == 0x000440, "Member 'UCustomizePresetAppWidget::_displayLeft' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _displayCenter) == 0x000448, "Member 'UCustomizePresetAppWidget::_displayCenter' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _displayRight) == 0x000450, "Member 'UCustomizePresetAppWidget::_displayRight' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _wheelBase) == 0x000458, "Member 'UCustomizePresetAppWidget::_wheelBase' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _voiceWheel) == 0x000460, "Member 'UCustomizePresetAppWidget::_voiceWheel' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _voiceWheelWidget) == 0x000468, "Member 'UCustomizePresetAppWidget::_voiceWheelWidget' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _voiceWheelMessageList) == 0x000470, "Member 'UCustomizePresetAppWidget::_voiceWheelMessageList' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _appealWheel) == 0x0004C0, "Member 'UCustomizePresetAppWidget::_appealWheel' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _appealWheelWidget) == 0x0004C8, "Member 'UCustomizePresetAppWidget::_appealWheelWidget' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _appealWheelMessageList) == 0x0004D0, "Member 'UCustomizePresetAppWidget::_appealWheelMessageList' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _subMenu) == 0x000520, "Member 'UCustomizePresetAppWidget::_subMenu' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _shoppingWindow) == 0x000528, "Member 'UCustomizePresetAppWidget::_shoppingWindow' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _gameSequenceWork) == 0x000530, "Member 'UCustomizePresetAppWidget::_gameSequenceWork' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _playerDatabaseWork) == 0x000538, "Member 'UCustomizePresetAppWidget::_playerDatabaseWork' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _backendSubsystem) == 0x000540, "Member 'UCustomizePresetAppWidget::_backendSubsystem' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _buttonMap) == 0x001DB0, "Member 'UCustomizePresetAppWidget::_buttonMap' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _windowButtonMap) == 0x001E00, "Member 'UCustomizePresetAppWidget::_windowButtonMap' has a wrong offset!");
static_assert(offsetof(UCustomizePresetAppWidget, _selectedPresetButton) == 0x001E50, "Member 'UCustomizePresetAppWidget::_selectedPresetButton' has a wrong offset!");

// Class OutGameModule.ShopItemListWidgetBase
// 0x00F8 (0x04E0 - 0x03E8)
class UShopItemListWidgetBase : public UAppWidget
{
public:
	bool                                          _bCatalog;                                         // 0x03E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UWorld>                  _shopPopupLevel;                                   // 0x03F0(0x0028)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_418[0x10];                                     // 0x0418(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UShopItemObject*>                _shopItemObjectList;                               // 0x0428(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_438[0x8];                                      // 0x0438(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UShopItemObject*                        _focusShopItemObject;                              // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UShopItemWidget*                        _focusShopItemWidget;                              // 0x0448(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_450[0x80];                                     // 0x0450(0x0080)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnClosePopupDelegate;                              // 0x04D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void BP_OnSelectTab();
	void BP_OnUnSelectTab();
	void OnBuyItem();
	void OnChangeSteamOverrayActive(bool bActive);
	void OnClosePopup();
	void OnClosePopupEventDelegate__DelegateSignature();
	void OnEndPurchase();
	void OnHasReactivedCompletePurchase();
	void OnLoadComplete(int32 RequestId);
	void OnMicroTxnAuthorizationResponse(const class FString& OrderId, bool bAuthorized);
	void OnPlaySampleDelegate(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnPurchaseComplete(const class FText& ItemName);
	void OnPurchaseError();
	void OnShowNoneText(bool bShowNoneText);
	void OnStartPurchase();
	void OnUpdateComplete(int32 RequestId);
	void SetItemFocus();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ShopItemListWidgetBase">();
	}
	static class UShopItemListWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopItemListWidgetBase>();
	}
};
static_assert(alignof(UShopItemListWidgetBase) == 0x000008, "Wrong alignment on UShopItemListWidgetBase");
static_assert(sizeof(UShopItemListWidgetBase) == 0x0004E0, "Wrong size on UShopItemListWidgetBase");
static_assert(offsetof(UShopItemListWidgetBase, _bCatalog) == 0x0003E8, "Member 'UShopItemListWidgetBase::_bCatalog' has a wrong offset!");
static_assert(offsetof(UShopItemListWidgetBase, _shopPopupLevel) == 0x0003F0, "Member 'UShopItemListWidgetBase::_shopPopupLevel' has a wrong offset!");
static_assert(offsetof(UShopItemListWidgetBase, _shopItemObjectList) == 0x000428, "Member 'UShopItemListWidgetBase::_shopItemObjectList' has a wrong offset!");
static_assert(offsetof(UShopItemListWidgetBase, _focusShopItemObject) == 0x000440, "Member 'UShopItemListWidgetBase::_focusShopItemObject' has a wrong offset!");
static_assert(offsetof(UShopItemListWidgetBase, _focusShopItemWidget) == 0x000448, "Member 'UShopItemListWidgetBase::_focusShopItemWidget' has a wrong offset!");
static_assert(offsetof(UShopItemListWidgetBase, OnClosePopupDelegate) == 0x0004D0, "Member 'UShopItemListWidgetBase::OnClosePopupDelegate' has a wrong offset!");

// Class OutGameModule.CustomizePresetButtonWidget
// 0x0020 (0x04A8 - 0x0488)
class UCustomizePresetButtonWidget final : public UWidgetButton
{
public:
	class UPlatformWidgetButton*                  _presetButton;                                     // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAdjustTextWidget*                      _presetButtonText;                                 // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _lockPanel;                                        // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4A0[0x8];                                      // 0x04A0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizePresetButtonWidget">();
	}
	static class UCustomizePresetButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizePresetButtonWidget>();
	}
};
static_assert(alignof(UCustomizePresetButtonWidget) == 0x000008, "Wrong alignment on UCustomizePresetButtonWidget");
static_assert(sizeof(UCustomizePresetButtonWidget) == 0x0004A8, "Wrong size on UCustomizePresetButtonWidget");
static_assert(offsetof(UCustomizePresetButtonWidget, _presetButton) == 0x000488, "Member 'UCustomizePresetButtonWidget::_presetButton' has a wrong offset!");
static_assert(offsetof(UCustomizePresetButtonWidget, _presetButtonText) == 0x000490, "Member 'UCustomizePresetButtonWidget::_presetButtonText' has a wrong offset!");
static_assert(offsetof(UCustomizePresetButtonWidget, _lockPanel) == 0x000498, "Member 'UCustomizePresetButtonWidget::_lockPanel' has a wrong offset!");

// Class OutGameModule.CustomizeRealityWidget
// 0x0030 (0x0380 - 0x0350)
class UCustomizeRealityWidget final : public UWidgetBase
{
public:
	class UCanvasPanel*                           _window;                                           // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBuyItemWidget*                         _itemRarity;                                       // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBuyItemWidget*                         _itemCurrency;                                     // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBuyItemWidget*                         _itemObtain;                                       // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              _defaultPosition;                                  // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              _changePosition;                                   // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void ChangeItemDisplay(bool DisplayFlag);
	void OnChangedDetailShowFlag(bool DisplayFlag);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeRealityWidget">();
	}
	static class UCustomizeRealityWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeRealityWidget>();
	}
};
static_assert(alignof(UCustomizeRealityWidget) == 0x000008, "Wrong alignment on UCustomizeRealityWidget");
static_assert(sizeof(UCustomizeRealityWidget) == 0x000380, "Wrong size on UCustomizeRealityWidget");
static_assert(offsetof(UCustomizeRealityWidget, _window) == 0x000350, "Member 'UCustomizeRealityWidget::_window' has a wrong offset!");
static_assert(offsetof(UCustomizeRealityWidget, _itemRarity) == 0x000358, "Member 'UCustomizeRealityWidget::_itemRarity' has a wrong offset!");
static_assert(offsetof(UCustomizeRealityWidget, _itemCurrency) == 0x000360, "Member 'UCustomizeRealityWidget::_itemCurrency' has a wrong offset!");
static_assert(offsetof(UCustomizeRealityWidget, _itemObtain) == 0x000368, "Member 'UCustomizeRealityWidget::_itemObtain' has a wrong offset!");
static_assert(offsetof(UCustomizeRealityWidget, _defaultPosition) == 0x000370, "Member 'UCustomizeRealityWidget::_defaultPosition' has a wrong offset!");
static_assert(offsetof(UCustomizeRealityWidget, _changePosition) == 0x000378, "Member 'UCustomizeRealityWidget::_changePosition' has a wrong offset!");

// Class OutGameModule.SettingButtonSliderWidget
// 0x0098 (0x0520 - 0x0488)
class USettingButtonSliderWidget final : public UWidgetButton
{
public:
	FMulticastInlineDelegateProperty_             _onValueChangedDelegate;                           // 0x0488(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_498[0x10];                                     // 0x0498(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _bIsPressReaction;                                 // 0x04A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             _tipsTextBlock;                                    // 0x04B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   _tipsText;                                         // 0x04B8(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UTextBlock*                             _valueWidget;                                      // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USlider*                                _sliderWidget;                                     // 0x04D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _bgSwitcher;                                       // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusAnimationWidget*                  _focusAnimationListItem;                           // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _leftButton;                                       // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _rightButton;                                      // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _addSpeed;                                         // 0x0500(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _addMaxMagnification;                              // 0x0504(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _addMagnification;                                 // 0x0508(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _addResetTime;                                     // 0x050C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_510[0x10];                                     // 0x0510(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float BP_GetValue();
	void BP_InitParam(const class FText& Categories, float Min, float Max, float Step, float DefaultValue);
	void BP_SetBG(ESettingButtonBGType bgType);
	void BP_UpdateParam();
	class UWidget* DoNavigation(EUINavigation UiNavigation);
	void OnAddMagnificationReset();
	void OnLeftRightDecide(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnSliderAddedToFocusDelegate__DelegateSignature(EWidgetInputType InputType, const struct FFocusEvent& InFocusEvent);
	void OnSliderValueChangedDelegate__DelegateSignature(float Value);
	void OnValueChanged(float Value);
	void SetCategoriesText(const class FText& Text);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SettingButtonSliderWidget">();
	}
	static class USettingButtonSliderWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USettingButtonSliderWidget>();
	}
};
static_assert(alignof(USettingButtonSliderWidget) == 0x000008, "Wrong alignment on USettingButtonSliderWidget");
static_assert(sizeof(USettingButtonSliderWidget) == 0x000520, "Wrong size on USettingButtonSliderWidget");
static_assert(offsetof(USettingButtonSliderWidget, _onValueChangedDelegate) == 0x000488, "Member 'USettingButtonSliderWidget::_onValueChangedDelegate' has a wrong offset!");
static_assert(offsetof(USettingButtonSliderWidget, _bIsPressReaction) == 0x0004A8, "Member 'USettingButtonSliderWidget::_bIsPressReaction' has a wrong offset!");
static_assert(offsetof(USettingButtonSliderWidget, _tipsTextBlock) == 0x0004B0, "Member 'USettingButtonSliderWidget::_tipsTextBlock' has a wrong offset!");
static_assert(offsetof(USettingButtonSliderWidget, _tipsText) == 0x0004B8, "Member 'USettingButtonSliderWidget::_tipsText' has a wrong offset!");
static_assert(offsetof(USettingButtonSliderWidget, _valueWidget) == 0x0004D0, "Member 'USettingButtonSliderWidget::_valueWidget' has a wrong offset!");
static_assert(offsetof(USettingButtonSliderWidget, _sliderWidget) == 0x0004D8, "Member 'USettingButtonSliderWidget::_sliderWidget' has a wrong offset!");
static_assert(offsetof(USettingButtonSliderWidget, _bgSwitcher) == 0x0004E0, "Member 'USettingButtonSliderWidget::_bgSwitcher' has a wrong offset!");
static_assert(offsetof(USettingButtonSliderWidget, _focusAnimationListItem) == 0x0004E8, "Member 'USettingButtonSliderWidget::_focusAnimationListItem' has a wrong offset!");
static_assert(offsetof(USettingButtonSliderWidget, _leftButton) == 0x0004F0, "Member 'USettingButtonSliderWidget::_leftButton' has a wrong offset!");
static_assert(offsetof(USettingButtonSliderWidget, _rightButton) == 0x0004F8, "Member 'USettingButtonSliderWidget::_rightButton' has a wrong offset!");
static_assert(offsetof(USettingButtonSliderWidget, _addSpeed) == 0x000500, "Member 'USettingButtonSliderWidget::_addSpeed' has a wrong offset!");
static_assert(offsetof(USettingButtonSliderWidget, _addMaxMagnification) == 0x000504, "Member 'USettingButtonSliderWidget::_addMaxMagnification' has a wrong offset!");
static_assert(offsetof(USettingButtonSliderWidget, _addMagnification) == 0x000508, "Member 'USettingButtonSliderWidget::_addMagnification' has a wrong offset!");
static_assert(offsetof(USettingButtonSliderWidget, _addResetTime) == 0x00050C, "Member 'USettingButtonSliderWidget::_addResetTime' has a wrong offset!");

// Class OutGameModule.CustomizeSelectButtonHasWidget
// 0x0018 (0x04A0 - 0x0488)
class UCustomizeSelectButtonHasWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomizeSelectButtonWidget*           _listButton;                                       // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizeListEntryObject*              _itemObject;                                       // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	bool GetIsDisplayControllerKey();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeSelectButtonHasWidget">();
	}
	static class UCustomizeSelectButtonHasWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeSelectButtonHasWidget>();
	}
};
static_assert(alignof(UCustomizeSelectButtonHasWidget) == 0x000008, "Wrong alignment on UCustomizeSelectButtonHasWidget");
static_assert(sizeof(UCustomizeSelectButtonHasWidget) == 0x0004A0, "Wrong size on UCustomizeSelectButtonHasWidget");
static_assert(offsetof(UCustomizeSelectButtonHasWidget, _listButton) == 0x000490, "Member 'UCustomizeSelectButtonHasWidget::_listButton' has a wrong offset!");
static_assert(offsetof(UCustomizeSelectButtonHasWidget, _itemObject) == 0x000498, "Member 'UCustomizeSelectButtonHasWidget::_itemObject' has a wrong offset!");

// Class OutGameModule.CustomizePreviewButtonWidget
// 0x0068 (0x04F0 - 0x0488)
class UCustomizePreviewButtonWidget final : public UWidgetButton
{
public:
	struct FLinearColor                           _defaultColor;                                     // 0x0488(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _addedFocusColor;                                  // 0x0498(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _pressColor;                                       // 0x04A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _buttonImage;                                      // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _textWidget;                                       // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _buttonGuideHoriBox;                               // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformRichTextBlock*                 _singleButtonImg;                                  // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAtomComponent*                         _characterVoiceComponent;                          // 0x04D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                           _characterEmoteHandle;                             // 0x04E0(0x0008)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4E8[0x8];                                      // 0x04E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAudioFinishedDelegate();
	void OnChangedOperationController();
	void OnPressButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnRequestEmoteAfter();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizePreviewButtonWidget">();
	}
	static class UCustomizePreviewButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizePreviewButtonWidget>();
	}
};
static_assert(alignof(UCustomizePreviewButtonWidget) == 0x000008, "Wrong alignment on UCustomizePreviewButtonWidget");
static_assert(sizeof(UCustomizePreviewButtonWidget) == 0x0004F0, "Wrong size on UCustomizePreviewButtonWidget");
static_assert(offsetof(UCustomizePreviewButtonWidget, _defaultColor) == 0x000488, "Member 'UCustomizePreviewButtonWidget::_defaultColor' has a wrong offset!");
static_assert(offsetof(UCustomizePreviewButtonWidget, _addedFocusColor) == 0x000498, "Member 'UCustomizePreviewButtonWidget::_addedFocusColor' has a wrong offset!");
static_assert(offsetof(UCustomizePreviewButtonWidget, _pressColor) == 0x0004A8, "Member 'UCustomizePreviewButtonWidget::_pressColor' has a wrong offset!");
static_assert(offsetof(UCustomizePreviewButtonWidget, _buttonImage) == 0x0004B8, "Member 'UCustomizePreviewButtonWidget::_buttonImage' has a wrong offset!");
static_assert(offsetof(UCustomizePreviewButtonWidget, _textWidget) == 0x0004C0, "Member 'UCustomizePreviewButtonWidget::_textWidget' has a wrong offset!");
static_assert(offsetof(UCustomizePreviewButtonWidget, _buttonGuideHoriBox) == 0x0004C8, "Member 'UCustomizePreviewButtonWidget::_buttonGuideHoriBox' has a wrong offset!");
static_assert(offsetof(UCustomizePreviewButtonWidget, _singleButtonImg) == 0x0004D0, "Member 'UCustomizePreviewButtonWidget::_singleButtonImg' has a wrong offset!");
static_assert(offsetof(UCustomizePreviewButtonWidget, _characterVoiceComponent) == 0x0004D8, "Member 'UCustomizePreviewButtonWidget::_characterVoiceComponent' has a wrong offset!");
static_assert(offsetof(UCustomizePreviewButtonWidget, _characterEmoteHandle) == 0x0004E0, "Member 'UCustomizePreviewButtonWidget::_characterEmoteHandle' has a wrong offset!");

// Class OutGameModule.SeasonPassStockList
// 0x0048 (0x0398 - 0x0350)
class USeasonPassStockList final : public UWidgetBase
{
public:
	class UCustomTileView*                        _tileViewStock;                                    // 0x0350(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UObject*>                        _stockObjects;                                     // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UObject*                                _focusItem;                                        // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _stockText;                                        // 0x0370(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_378[0x18];                                     // 0x0378(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class USeasonPassItemDetail*                  _ItemDetailStock;                                  // 0x0390(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_InitList();
	void BP_UpdateStockList();
	void StockEmpty(bool IsEmpty);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassStockList">();
	}
	static class USeasonPassStockList* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassStockList>();
	}
};
static_assert(alignof(USeasonPassStockList) == 0x000008, "Wrong alignment on USeasonPassStockList");
static_assert(sizeof(USeasonPassStockList) == 0x000398, "Wrong size on USeasonPassStockList");
static_assert(offsetof(USeasonPassStockList, _tileViewStock) == 0x000350, "Member 'USeasonPassStockList::_tileViewStock' has a wrong offset!");
static_assert(offsetof(USeasonPassStockList, _stockObjects) == 0x000358, "Member 'USeasonPassStockList::_stockObjects' has a wrong offset!");
static_assert(offsetof(USeasonPassStockList, _focusItem) == 0x000368, "Member 'USeasonPassStockList::_focusItem' has a wrong offset!");
static_assert(offsetof(USeasonPassStockList, _stockText) == 0x000370, "Member 'USeasonPassStockList::_stockText' has a wrong offset!");
static_assert(offsetof(USeasonPassStockList, _ItemDetailStock) == 0x000390, "Member 'USeasonPassStockList::_ItemDetailStock' has a wrong offset!");

// Class OutGameModule.CustomizeSelectButtonWidget
// 0x0088 (0x0510 - 0x0488)
class UCustomizeSelectButtonWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomizeListEntryObject*              _itemObject;                                       // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconImage*                         _ItemIconImage;                                    // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _equipImage;                                       // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _backImage;                                        // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _itemText;                                         // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _itemAdjustText;                                   // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _sampleVoicePanel;                                 // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _realitySwitcher;                                  // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _lockWidgetPanel;                                  // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _lockImage;                                        // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEmblemDisplayWidget*                   _emblemIcon;                                       // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _emblemLockPanel;                                  // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusAnimationWidget*                  _focusAnimationWidget;                             // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizePreviewButtonWidget*          _previewButton;                                    // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _previewCanvasPanel;                               // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizeCostumeAuraWidget*            _equipAura;                                        // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void ActivateWheel(bool IsActivate, bool IsSelected);
	void ResetImageIcon();
	void UpdateEquipIcon();
	void UpdateImageIcon();
	void UpdateLockIcon();

	void UpdateSoundIcon(bool IsSelected) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeSelectButtonWidget">();
	}
	static class UCustomizeSelectButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeSelectButtonWidget>();
	}
};
static_assert(alignof(UCustomizeSelectButtonWidget) == 0x000008, "Wrong alignment on UCustomizeSelectButtonWidget");
static_assert(sizeof(UCustomizeSelectButtonWidget) == 0x000510, "Wrong size on UCustomizeSelectButtonWidget");
static_assert(offsetof(UCustomizeSelectButtonWidget, _itemObject) == 0x000490, "Member 'UCustomizeSelectButtonWidget::_itemObject' has a wrong offset!");
static_assert(offsetof(UCustomizeSelectButtonWidget, _ItemIconImage) == 0x000498, "Member 'UCustomizeSelectButtonWidget::_ItemIconImage' has a wrong offset!");
static_assert(offsetof(UCustomizeSelectButtonWidget, _equipImage) == 0x0004A0, "Member 'UCustomizeSelectButtonWidget::_equipImage' has a wrong offset!");
static_assert(offsetof(UCustomizeSelectButtonWidget, _backImage) == 0x0004A8, "Member 'UCustomizeSelectButtonWidget::_backImage' has a wrong offset!");
static_assert(offsetof(UCustomizeSelectButtonWidget, _itemText) == 0x0004B0, "Member 'UCustomizeSelectButtonWidget::_itemText' has a wrong offset!");
static_assert(offsetof(UCustomizeSelectButtonWidget, _itemAdjustText) == 0x0004B8, "Member 'UCustomizeSelectButtonWidget::_itemAdjustText' has a wrong offset!");
static_assert(offsetof(UCustomizeSelectButtonWidget, _sampleVoicePanel) == 0x0004C0, "Member 'UCustomizeSelectButtonWidget::_sampleVoicePanel' has a wrong offset!");
static_assert(offsetof(UCustomizeSelectButtonWidget, _realitySwitcher) == 0x0004C8, "Member 'UCustomizeSelectButtonWidget::_realitySwitcher' has a wrong offset!");
static_assert(offsetof(UCustomizeSelectButtonWidget, _lockWidgetPanel) == 0x0004D0, "Member 'UCustomizeSelectButtonWidget::_lockWidgetPanel' has a wrong offset!");
static_assert(offsetof(UCustomizeSelectButtonWidget, _lockImage) == 0x0004D8, "Member 'UCustomizeSelectButtonWidget::_lockImage' has a wrong offset!");
static_assert(offsetof(UCustomizeSelectButtonWidget, _emblemIcon) == 0x0004E0, "Member 'UCustomizeSelectButtonWidget::_emblemIcon' has a wrong offset!");
static_assert(offsetof(UCustomizeSelectButtonWidget, _emblemLockPanel) == 0x0004E8, "Member 'UCustomizeSelectButtonWidget::_emblemLockPanel' has a wrong offset!");
static_assert(offsetof(UCustomizeSelectButtonWidget, _focusAnimationWidget) == 0x0004F0, "Member 'UCustomizeSelectButtonWidget::_focusAnimationWidget' has a wrong offset!");
static_assert(offsetof(UCustomizeSelectButtonWidget, _previewButton) == 0x0004F8, "Member 'UCustomizeSelectButtonWidget::_previewButton' has a wrong offset!");
static_assert(offsetof(UCustomizeSelectButtonWidget, _previewCanvasPanel) == 0x000500, "Member 'UCustomizeSelectButtonWidget::_previewCanvasPanel' has a wrong offset!");
static_assert(offsetof(UCustomizeSelectButtonWidget, _equipAura) == 0x000508, "Member 'UCustomizeSelectButtonWidget::_equipAura' has a wrong offset!");

// Class OutGameModule.CustomizeVoiceAppWidget
// 0x0018 (0x04B8 - 0x04A0)
class UCustomizeVoiceAppWidget final : public UCustomizeAppWidget
{
public:
	uint8                                         Pad_4A0[0x8];                                      // 0x04A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterOutGame*                      _character;                                        // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _cancelButton;                                     // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnAddedToFocusWheelCancelButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnAudioFinishedDelegate();
	void OnChangedWheelIndex();
	void OnDecideEquipButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideWheelCancelButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnRemovedFromFocusWheelCancelButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void RequesetPlayVoice(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeVoiceAppWidget">();
	}
	static class UCustomizeVoiceAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeVoiceAppWidget>();
	}
};
static_assert(alignof(UCustomizeVoiceAppWidget) == 0x000008, "Wrong alignment on UCustomizeVoiceAppWidget");
static_assert(sizeof(UCustomizeVoiceAppWidget) == 0x0004B8, "Wrong size on UCustomizeVoiceAppWidget");
static_assert(offsetof(UCustomizeVoiceAppWidget, _character) == 0x0004A8, "Member 'UCustomizeVoiceAppWidget::_character' has a wrong offset!");
static_assert(offsetof(UCustomizeVoiceAppWidget, _cancelButton) == 0x0004B0, "Member 'UCustomizeVoiceAppWidget::_cancelButton' has a wrong offset!");

// Class OutGameModule.ShopHeaderWidget
// 0x0038 (0x0388 - 0x0350)
class UShopHeaderWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UCoinWidget*                            _coinWidget1;                                      // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCoinWidget*                            _coinWidget2;                                      // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCoinWidget*                            _coinWidget3;                                      // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTimeWidget*                            _timeWidget;                                       // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bIsEvent;                                         // 0x0380(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ShopHeaderWidget">();
	}
	static class UShopHeaderWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopHeaderWidget>();
	}
};
static_assert(alignof(UShopHeaderWidget) == 0x000008, "Wrong alignment on UShopHeaderWidget");
static_assert(sizeof(UShopHeaderWidget) == 0x000388, "Wrong size on UShopHeaderWidget");
static_assert(offsetof(UShopHeaderWidget, _coinWidget1) == 0x000360, "Member 'UShopHeaderWidget::_coinWidget1' has a wrong offset!");
static_assert(offsetof(UShopHeaderWidget, _coinWidget2) == 0x000368, "Member 'UShopHeaderWidget::_coinWidget2' has a wrong offset!");
static_assert(offsetof(UShopHeaderWidget, _coinWidget3) == 0x000370, "Member 'UShopHeaderWidget::_coinWidget3' has a wrong offset!");
static_assert(offsetof(UShopHeaderWidget, _timeWidget) == 0x000378, "Member 'UShopHeaderWidget::_timeWidget' has a wrong offset!");
static_assert(offsetof(UShopHeaderWidget, _bIsEvent) == 0x000380, "Member 'UShopHeaderWidget::_bIsEvent' has a wrong offset!");

// Class OutGameModule.CustomizeWheelHasWidget
// 0x0008 (0x03F0 - 0x03E8)
class UCustomizeWheelHasWidget final : public UAppWidget
{
public:
	class UWidgetSwitcher*                        _displaySwitcher;                                  // 0x03E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void ChangedOperationController();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomizeWheelHasWidget">();
	}
	static class UCustomizeWheelHasWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizeWheelHasWidget>();
	}
};
static_assert(alignof(UCustomizeWheelHasWidget) == 0x000008, "Wrong alignment on UCustomizeWheelHasWidget");
static_assert(sizeof(UCustomizeWheelHasWidget) == 0x0003F0, "Wrong size on UCustomizeWheelHasWidget");
static_assert(offsetof(UCustomizeWheelHasWidget, _displaySwitcher) == 0x0003E8, "Member 'UCustomizeWheelHasWidget::_displaySwitcher' has a wrong offset!");

// Class OutGameModule.CustomMatchGameModeButtonWidget
// 0x0048 (0x0678 - 0x0630)
class UCustomMatchGameModeButtonWidget final : public UPlatformWidgetButton
{
public:
	uint8                                         Pad_630[0x8];                                      // 0x0630(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 _checkImage;                                       // 0x0638(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 _stageImage;                                       // 0x0640(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _stageName;                                        // 0x0648(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        _stageImageSwitcher;                               // 0x0650(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAdjustTextWidget*                      _stageExplanation;                                 // 0x0658(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomMatchGameModeEntryObject*        _entryObject;                                      // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_668[0x10];                                     // 0x0668(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchGameModeButtonWidget">();
	}
	static class UCustomMatchGameModeButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchGameModeButtonWidget>();
	}
};
static_assert(alignof(UCustomMatchGameModeButtonWidget) == 0x000008, "Wrong alignment on UCustomMatchGameModeButtonWidget");
static_assert(sizeof(UCustomMatchGameModeButtonWidget) == 0x000678, "Wrong size on UCustomMatchGameModeButtonWidget");
static_assert(offsetof(UCustomMatchGameModeButtonWidget, _checkImage) == 0x000638, "Member 'UCustomMatchGameModeButtonWidget::_checkImage' has a wrong offset!");
static_assert(offsetof(UCustomMatchGameModeButtonWidget, _stageImage) == 0x000640, "Member 'UCustomMatchGameModeButtonWidget::_stageImage' has a wrong offset!");
static_assert(offsetof(UCustomMatchGameModeButtonWidget, _stageName) == 0x000648, "Member 'UCustomMatchGameModeButtonWidget::_stageName' has a wrong offset!");
static_assert(offsetof(UCustomMatchGameModeButtonWidget, _stageImageSwitcher) == 0x000650, "Member 'UCustomMatchGameModeButtonWidget::_stageImageSwitcher' has a wrong offset!");
static_assert(offsetof(UCustomMatchGameModeButtonWidget, _stageExplanation) == 0x000658, "Member 'UCustomMatchGameModeButtonWidget::_stageExplanation' has a wrong offset!");
static_assert(offsetof(UCustomMatchGameModeButtonWidget, _entryObject) == 0x000660, "Member 'UCustomMatchGameModeButtonWidget::_entryObject' has a wrong offset!");

// Class OutGameModule.ResultMissionSubtitle
// 0x0028 (0x0378 - 0x0350)
class UResultMissionSubtitle final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x8];                                      // 0x0350(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                _textPanel;                                        // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _text;                                             // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _banner;                                           // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEventBannerTitleWidget*                _eventBannerTitle;                                 // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ResultMissionSubtitle">();
	}
	static class UResultMissionSubtitle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResultMissionSubtitle>();
	}
};
static_assert(alignof(UResultMissionSubtitle) == 0x000008, "Wrong alignment on UResultMissionSubtitle");
static_assert(sizeof(UResultMissionSubtitle) == 0x000378, "Wrong size on UResultMissionSubtitle");
static_assert(offsetof(UResultMissionSubtitle, _textPanel) == 0x000358, "Member 'UResultMissionSubtitle::_textPanel' has a wrong offset!");
static_assert(offsetof(UResultMissionSubtitle, _text) == 0x000360, "Member 'UResultMissionSubtitle::_text' has a wrong offset!");
static_assert(offsetof(UResultMissionSubtitle, _banner) == 0x000368, "Member 'UResultMissionSubtitle::_banner' has a wrong offset!");
static_assert(offsetof(UResultMissionSubtitle, _eventBannerTitle) == 0x000370, "Member 'UResultMissionSubtitle::_eventBannerTitle' has a wrong offset!");

// Class OutGameModule.CustomMatchGameModeList
// 0x0050 (0x03A0 - 0x0350)
class UCustomMatchGameModeList final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x30];                                     // 0x0350(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UListView*                              _listView;                                         // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomMatchGameModeButtonWidget*       _selectWidget;                                     // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomMatchGameModeEntryObject*        _selectFocusObject;                                // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_398[0x8];                                      // 0x0398(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DoCustomWidgetNavigation(EUINavigation UiNavigation);
	void OnAddedToFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchGameModeList">();
	}
	static class UCustomMatchGameModeList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchGameModeList>();
	}
};
static_assert(alignof(UCustomMatchGameModeList) == 0x000008, "Wrong alignment on UCustomMatchGameModeList");
static_assert(sizeof(UCustomMatchGameModeList) == 0x0003A0, "Wrong size on UCustomMatchGameModeList");
static_assert(offsetof(UCustomMatchGameModeList, _listView) == 0x000380, "Member 'UCustomMatchGameModeList::_listView' has a wrong offset!");
static_assert(offsetof(UCustomMatchGameModeList, _selectWidget) == 0x000388, "Member 'UCustomMatchGameModeList::_selectWidget' has a wrong offset!");
static_assert(offsetof(UCustomMatchGameModeList, _selectFocusObject) == 0x000390, "Member 'UCustomMatchGameModeList::_selectFocusObject' has a wrong offset!");

// Class OutGameModule.CustomMatchGameModeSelectTopWidget
// 0x0088 (0x03D8 - 0x0350)
class UCustomMatchGameModeSelectTopWidget final : public UWidgetBase
{
public:
	class UWidgetGeneralWindowFrame*              _generalWindowFrame;                               // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomMatchGameModeList*               _gameModeList;                                     // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomMatchGameRuleList*               _gameRuleList;                                     // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _stageName;                                        // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _gameModeName;                                     // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<int32, struct FCustomMatchGameRuleEachStageInfo> _gameRuleEachStageMap;                             // 0x0378(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_3C8[0x10];                                     // 0x03C8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DoCustomWidgetNavigation(EUINavigation UiNavigation);
	void SetPlayModeData();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchGameModeSelectTopWidget">();
	}
	static class UCustomMatchGameModeSelectTopWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchGameModeSelectTopWidget>();
	}
};
static_assert(alignof(UCustomMatchGameModeSelectTopWidget) == 0x000008, "Wrong alignment on UCustomMatchGameModeSelectTopWidget");
static_assert(sizeof(UCustomMatchGameModeSelectTopWidget) == 0x0003D8, "Wrong size on UCustomMatchGameModeSelectTopWidget");
static_assert(offsetof(UCustomMatchGameModeSelectTopWidget, _generalWindowFrame) == 0x000350, "Member 'UCustomMatchGameModeSelectTopWidget::_generalWindowFrame' has a wrong offset!");
static_assert(offsetof(UCustomMatchGameModeSelectTopWidget, _gameModeList) == 0x000358, "Member 'UCustomMatchGameModeSelectTopWidget::_gameModeList' has a wrong offset!");
static_assert(offsetof(UCustomMatchGameModeSelectTopWidget, _gameRuleList) == 0x000360, "Member 'UCustomMatchGameModeSelectTopWidget::_gameRuleList' has a wrong offset!");
static_assert(offsetof(UCustomMatchGameModeSelectTopWidget, _stageName) == 0x000368, "Member 'UCustomMatchGameModeSelectTopWidget::_stageName' has a wrong offset!");
static_assert(offsetof(UCustomMatchGameModeSelectTopWidget, _gameModeName) == 0x000370, "Member 'UCustomMatchGameModeSelectTopWidget::_gameModeName' has a wrong offset!");
static_assert(offsetof(UCustomMatchGameModeSelectTopWidget, _gameRuleEachStageMap) == 0x000378, "Member 'UCustomMatchGameModeSelectTopWidget::_gameRuleEachStageMap' has a wrong offset!");

// Class OutGameModule.RecommendAppWidget
// 0x01A0 (0x0588 - 0x03E8)
class URecommendAppWidget final : public UAppWidget
{
public:
	bool                                          _bIsDebug;                                         // 0x03E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 _DebugPlayerId;                                    // 0x03F0(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 _DebugGuildId;                                     // 0x0400(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                  _moveSeasonPassLevel;                              // 0x0410(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelStreaming*                        _moveSeasonPassLevelStreaming;                     // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_440[0x8];                                      // 0x0440(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            _networkLoadingIcon;                               // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                  _moveMyADLevel;                                    // 0x0450(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USquadWidget*                           _playMenuInvitationSquad;                          // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                  _guildInfoLevel;                                   // 0x0480(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelStreamingDynamic*                 _guildInfoLevelStreamingDynamic;                   // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _guildInfoButton;                                  // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4B8[0x8];                                      // 0x04B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UWorld>                  _moveGuildLevel;                                   // 0x04C0(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGuildInviteWidget*                     _guildInviteRequestWidget;                         // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFriendRequesetMenuAppWidget*           _friendRequestWidget;                              // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                  _playerInfoLevel;                                  // 0x04F8(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelStreamingDynamic*                 _playerInfoLevelStreamingDynamic;                  // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _playerInfoButton;                                 // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBackendSubsystem*                      _backendSubsystem;                                 // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameSequenceWork*                      _gameSequenceWork;                                 // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 _moveLevelLongPackageName;                         // 0x0540(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _recommendNoticeWidget;                            // 0x0550(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _confirmBuyLicenseWindow;                          // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _confirmMyAdWindow;                                // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _confirmTeamUpWindow;                              // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _confirmApplyGuildWindow;                          // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _confirmSendGuildInvitationWindow;                 // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _confirmApplyFriendWindow;                         // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void LoadSeasonPassBuyLevel();
	void OnClickedBlockBGConfirmWindow();
	void OnClosedConfirmWindow();
	void OnClosedFriendRequestConfirmWindow();
	void OnClosedInviteGuildConfirmWindow();
	void OnDecideConfirmWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool IsLeft);
	void OnDecideFriendRequestInfoButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideGuildInfoButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnFadeOutEnd();
	void OnFriendRequestInfoLevelHidden();
	void OnFriendRequestInfoLevelShown();
	void OnHiddenSeasonPassBuyLevel();
	void OnJoinGuildInfoLevelHidden();
	void OnReceivedCloseWebApiErrorWindow();
	void OnReceivedUpdateWebApiError();
	void OpenFriendRequestInfo(const class FString& SelectedPlayerId);
	void OpenFriendRequestSubLevel(const struct FDbRecommendNoticeParam& RecomendNoticeParam);
	void OpenInvitationSquadWidget();
	void OpenJoinGuildInfo(const class FString& SelectedGuildId);
	void OpenMoveMyADLevel();
	void OpenRequestInviteGuildSubLevel(const class FString& SelectedPlayerId);
	void OpenSeasonPassBuyLevel();
	void ReceivedOnLoadCompleteEvent(int32 RequestId);
	void ReceivedOnUpdateCompleteEvent(int32 RequestId);
	void RequestJoinGuild(const class FString& SelectedGuildId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RecommendAppWidget">();
	}
	static class URecommendAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URecommendAppWidget>();
	}
};
static_assert(alignof(URecommendAppWidget) == 0x000008, "Wrong alignment on URecommendAppWidget");
static_assert(sizeof(URecommendAppWidget) == 0x000588, "Wrong size on URecommendAppWidget");
static_assert(offsetof(URecommendAppWidget, _bIsDebug) == 0x0003E8, "Member 'URecommendAppWidget::_bIsDebug' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _DebugPlayerId) == 0x0003F0, "Member 'URecommendAppWidget::_DebugPlayerId' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _DebugGuildId) == 0x000400, "Member 'URecommendAppWidget::_DebugGuildId' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _moveSeasonPassLevel) == 0x000410, "Member 'URecommendAppWidget::_moveSeasonPassLevel' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _moveSeasonPassLevelStreaming) == 0x000438, "Member 'URecommendAppWidget::_moveSeasonPassLevelStreaming' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _networkLoadingIcon) == 0x000448, "Member 'URecommendAppWidget::_networkLoadingIcon' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _moveMyADLevel) == 0x000450, "Member 'URecommendAppWidget::_moveMyADLevel' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _playMenuInvitationSquad) == 0x000478, "Member 'URecommendAppWidget::_playMenuInvitationSquad' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _guildInfoLevel) == 0x000480, "Member 'URecommendAppWidget::_guildInfoLevel' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _guildInfoLevelStreamingDynamic) == 0x0004A8, "Member 'URecommendAppWidget::_guildInfoLevelStreamingDynamic' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _guildInfoButton) == 0x0004B0, "Member 'URecommendAppWidget::_guildInfoButton' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _moveGuildLevel) == 0x0004C0, "Member 'URecommendAppWidget::_moveGuildLevel' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _guildInviteRequestWidget) == 0x0004E8, "Member 'URecommendAppWidget::_guildInviteRequestWidget' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _friendRequestWidget) == 0x0004F0, "Member 'URecommendAppWidget::_friendRequestWidget' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _playerInfoLevel) == 0x0004F8, "Member 'URecommendAppWidget::_playerInfoLevel' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _playerInfoLevelStreamingDynamic) == 0x000520, "Member 'URecommendAppWidget::_playerInfoLevelStreamingDynamic' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _playerInfoButton) == 0x000528, "Member 'URecommendAppWidget::_playerInfoButton' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _backendSubsystem) == 0x000530, "Member 'URecommendAppWidget::_backendSubsystem' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _gameSequenceWork) == 0x000538, "Member 'URecommendAppWidget::_gameSequenceWork' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _moveLevelLongPackageName) == 0x000540, "Member 'URecommendAppWidget::_moveLevelLongPackageName' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _recommendNoticeWidget) == 0x000550, "Member 'URecommendAppWidget::_recommendNoticeWidget' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _confirmBuyLicenseWindow) == 0x000558, "Member 'URecommendAppWidget::_confirmBuyLicenseWindow' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _confirmMyAdWindow) == 0x000560, "Member 'URecommendAppWidget::_confirmMyAdWindow' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _confirmTeamUpWindow) == 0x000568, "Member 'URecommendAppWidget::_confirmTeamUpWindow' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _confirmApplyGuildWindow) == 0x000570, "Member 'URecommendAppWidget::_confirmApplyGuildWindow' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _confirmSendGuildInvitationWindow) == 0x000578, "Member 'URecommendAppWidget::_confirmSendGuildInvitationWindow' has a wrong offset!");
static_assert(offsetof(URecommendAppWidget, _confirmApplyFriendWindow) == 0x000580, "Member 'URecommendAppWidget::_confirmApplyFriendWindow' has a wrong offset!");

// Class OutGameModule.CustomMatchGameModeSelectWidget
// 0x0018 (0x0648 - 0x0630)
class UCustomMatchGameModeSelectWidget final : public UPlatformWidgetButton
{
public:
	class UTextBlock*                             _battleRuleModeText;                               // 0x0630(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _changeStageText;                                  // 0x0638(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        _stageSelectSwitcher;                              // 0x0640(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnCompleteUpdateSetting();
	void UpdatePlayMode();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchGameModeSelectWidget">();
	}
	static class UCustomMatchGameModeSelectWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchGameModeSelectWidget>();
	}
};
static_assert(alignof(UCustomMatchGameModeSelectWidget) == 0x000008, "Wrong alignment on UCustomMatchGameModeSelectWidget");
static_assert(sizeof(UCustomMatchGameModeSelectWidget) == 0x000648, "Wrong size on UCustomMatchGameModeSelectWidget");
static_assert(offsetof(UCustomMatchGameModeSelectWidget, _battleRuleModeText) == 0x000630, "Member 'UCustomMatchGameModeSelectWidget::_battleRuleModeText' has a wrong offset!");
static_assert(offsetof(UCustomMatchGameModeSelectWidget, _changeStageText) == 0x000638, "Member 'UCustomMatchGameModeSelectWidget::_changeStageText' has a wrong offset!");
static_assert(offsetof(UCustomMatchGameModeSelectWidget, _stageSelectSwitcher) == 0x000640, "Member 'UCustomMatchGameModeSelectWidget::_stageSelectSwitcher' has a wrong offset!");

// Class OutGameModule.CustomMatchGameRuleButtonWidget
// 0x0028 (0x0658 - 0x0630)
class UCustomMatchGameRuleButtonWidget final : public UPlatformWidgetButton
{
public:
	uint8                                         Pad_630[0x8];                                      // 0x0630(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanel*                           _checkIconPanel;                                   // 0x0638(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAdjustTextWidget*                      _gameRuleText;                                     // 0x0640(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _teamNum;                                          // 0x0648(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomMatchGameRuleEntryObject*        _entryObject;                                      // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchGameRuleButtonWidget">();
	}
	static class UCustomMatchGameRuleButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchGameRuleButtonWidget>();
	}
};
static_assert(alignof(UCustomMatchGameRuleButtonWidget) == 0x000008, "Wrong alignment on UCustomMatchGameRuleButtonWidget");
static_assert(sizeof(UCustomMatchGameRuleButtonWidget) == 0x000658, "Wrong size on UCustomMatchGameRuleButtonWidget");
static_assert(offsetof(UCustomMatchGameRuleButtonWidget, _checkIconPanel) == 0x000638, "Member 'UCustomMatchGameRuleButtonWidget::_checkIconPanel' has a wrong offset!");
static_assert(offsetof(UCustomMatchGameRuleButtonWidget, _gameRuleText) == 0x000640, "Member 'UCustomMatchGameRuleButtonWidget::_gameRuleText' has a wrong offset!");
static_assert(offsetof(UCustomMatchGameRuleButtonWidget, _teamNum) == 0x000648, "Member 'UCustomMatchGameRuleButtonWidget::_teamNum' has a wrong offset!");
static_assert(offsetof(UCustomMatchGameRuleButtonWidget, _entryObject) == 0x000650, "Member 'UCustomMatchGameRuleButtonWidget::_entryObject' has a wrong offset!");

// Class OutGameModule.SettingWidget
// 0x0050 (0x03A0 - 0x0350)
class USettingWidget final : public UWidgetBase
{
public:
	class UTabContentsSwitcher*                   _tabContentsSwitcher;                              // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTabWidget*                             _tabWidget;                                        // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _nextTab;                                          // 0x0360(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlatformWidgetButton*                  _saveButton;                                       // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _resetButton;                                      // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _savedPopup;                                       // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _saveCheckPopup;                                   // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _resetCheckPopup;                                  // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _parentalPopup;                                    // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_398[0x8];                                      // 0x0398(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_CloseParentalPopup();
	bool BP_IsSavedActiveTab();
	void BP_NextSwitchTab();
	bool BP_OpenParentalPopup();
	void BP_OpenSaveCheckPopup();
	void BP_ResetOptionData();
	void BP_ResetPopupSetText();
	void BP_ReturnUnSelectActiveTab();
	ESettingSaveStatusType BP_SaveAndApplyActiveTab();
	void BP_SetFocusResetButton();
	void BP_SetFocusSaveButton();
	class UWidget* DoMenuNavigation(EUINavigation UiNavigation);
	void OnResetCheckButtonDecideDelegate(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnResetCheckPopupClosed();
	void OnSaveAndApplyPopupClosed();
	void OnSaveButtonDecideDelegate(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnSaveCheckPopupClosed();
	void OnSavePopup();
	void OnShortcutResetCheckDecideDelegate();
	void OnShortcutSaveDecideDelegate();
	void OnSwichTabWidget(int32 NewSelectTab);
	void TrySwitchTab(int32 NewSelectTab);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SettingWidget">();
	}
	static class USettingWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USettingWidget>();
	}
};
static_assert(alignof(USettingWidget) == 0x000008, "Wrong alignment on USettingWidget");
static_assert(sizeof(USettingWidget) == 0x0003A0, "Wrong size on USettingWidget");
static_assert(offsetof(USettingWidget, _tabContentsSwitcher) == 0x000350, "Member 'USettingWidget::_tabContentsSwitcher' has a wrong offset!");
static_assert(offsetof(USettingWidget, _tabWidget) == 0x000358, "Member 'USettingWidget::_tabWidget' has a wrong offset!");
static_assert(offsetof(USettingWidget, _nextTab) == 0x000360, "Member 'USettingWidget::_nextTab' has a wrong offset!");
static_assert(offsetof(USettingWidget, _saveButton) == 0x000368, "Member 'USettingWidget::_saveButton' has a wrong offset!");
static_assert(offsetof(USettingWidget, _resetButton) == 0x000370, "Member 'USettingWidget::_resetButton' has a wrong offset!");
static_assert(offsetof(USettingWidget, _savedPopup) == 0x000378, "Member 'USettingWidget::_savedPopup' has a wrong offset!");
static_assert(offsetof(USettingWidget, _saveCheckPopup) == 0x000380, "Member 'USettingWidget::_saveCheckPopup' has a wrong offset!");
static_assert(offsetof(USettingWidget, _resetCheckPopup) == 0x000388, "Member 'USettingWidget::_resetCheckPopup' has a wrong offset!");
static_assert(offsetof(USettingWidget, _parentalPopup) == 0x000390, "Member 'USettingWidget::_parentalPopup' has a wrong offset!");

// Class OutGameModule.CustomMatchGameRuleList
// 0x0050 (0x03A0 - 0x0350)
class UCustomMatchGameRuleList final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x30];                                     // 0x0350(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UListView*                              _listView;                                         // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomMatchGameRuleButtonWidget*       _selectWidget;                                     // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomMatchGameRuleEntryObject*        _selectFocusObject;                                // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_398[0x8];                                      // 0x0398(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DoCustomWidgetNavigation(EUINavigation UiNavigation);
	void OnAddedToFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchGameRuleList">();
	}
	static class UCustomMatchGameRuleList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchGameRuleList>();
	}
};
static_assert(alignof(UCustomMatchGameRuleList) == 0x000008, "Wrong alignment on UCustomMatchGameRuleList");
static_assert(sizeof(UCustomMatchGameRuleList) == 0x0003A0, "Wrong size on UCustomMatchGameRuleList");
static_assert(offsetof(UCustomMatchGameRuleList, _listView) == 0x000380, "Member 'UCustomMatchGameRuleList::_listView' has a wrong offset!");
static_assert(offsetof(UCustomMatchGameRuleList, _selectWidget) == 0x000388, "Member 'UCustomMatchGameRuleList::_selectWidget' has a wrong offset!");
static_assert(offsetof(UCustomMatchGameRuleList, _selectFocusObject) == 0x000390, "Member 'UCustomMatchGameRuleList::_selectFocusObject' has a wrong offset!");

// Class OutGameModule.CustomMatchJoinCodeWidget
// 0x0030 (0x0380 - 0x0350)
class UCustomMatchJoinCodeWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             _joinCodeText;                                     // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCheckButtonWidget*                     _checkButton;                                      // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_370[0x10];                                     // 0x0370(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_SendCheckFlag(bool Enable);
	void BP_SetHideJoinCode(bool Enable);
	void DoCustomWidgetNavigation(EUINavigation UiNavigation);
	void OnNotifySettingsComplete();
	void SetFocusCheckButton();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchJoinCodeWidget">();
	}
	static class UCustomMatchJoinCodeWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchJoinCodeWidget>();
	}
};
static_assert(alignof(UCustomMatchJoinCodeWidget) == 0x000008, "Wrong alignment on UCustomMatchJoinCodeWidget");
static_assert(sizeof(UCustomMatchJoinCodeWidget) == 0x000380, "Wrong size on UCustomMatchJoinCodeWidget");
static_assert(offsetof(UCustomMatchJoinCodeWidget, _joinCodeText) == 0x000360, "Member 'UCustomMatchJoinCodeWidget::_joinCodeText' has a wrong offset!");
static_assert(offsetof(UCustomMatchJoinCodeWidget, _checkButton) == 0x000368, "Member 'UCustomMatchJoinCodeWidget::_checkButton' has a wrong offset!");

// Class OutGameModule.LeaderboardWidget
// 0x0088 (0x0470 - 0x03E8)
class ULeaderboardWidget : public UAppWidget
{
public:
	struct FLeaderboardData                       _leaderboardData;                                  // 0x03E8(0x0050)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class ULeaderboardPanelWidget*                _topDamagePanel;                                   // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULeaderboardPanelWidget*                _topKillPanel;                                     // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULeaderboardPanelWidget*                _topRescueAssaultPanel;                            // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULeaderboardPanelWidget*                _topItemSupportPanel;                              // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _leaderboardSwitcher;                              // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGeneralCarouselWidget*                 _carouselWidget;                                   // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASceneCaptureCreatorMultiple*           _sceneCaptureCreator;                              // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnAddedToFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnChangeIndex(int32 Index_0);
	void OnRemovedFromFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void SetupCharacterMaterial(class UMaterialInstance* CharaImageMaterial);
	void SetupSceneCaptureCreator();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LeaderboardWidget">();
	}
	static class ULeaderboardWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULeaderboardWidget>();
	}
};
static_assert(alignof(ULeaderboardWidget) == 0x000008, "Wrong alignment on ULeaderboardWidget");
static_assert(sizeof(ULeaderboardWidget) == 0x000470, "Wrong size on ULeaderboardWidget");
static_assert(offsetof(ULeaderboardWidget, _leaderboardData) == 0x0003E8, "Member 'ULeaderboardWidget::_leaderboardData' has a wrong offset!");
static_assert(offsetof(ULeaderboardWidget, _topDamagePanel) == 0x000438, "Member 'ULeaderboardWidget::_topDamagePanel' has a wrong offset!");
static_assert(offsetof(ULeaderboardWidget, _topKillPanel) == 0x000440, "Member 'ULeaderboardWidget::_topKillPanel' has a wrong offset!");
static_assert(offsetof(ULeaderboardWidget, _topRescueAssaultPanel) == 0x000448, "Member 'ULeaderboardWidget::_topRescueAssaultPanel' has a wrong offset!");
static_assert(offsetof(ULeaderboardWidget, _topItemSupportPanel) == 0x000450, "Member 'ULeaderboardWidget::_topItemSupportPanel' has a wrong offset!");
static_assert(offsetof(ULeaderboardWidget, _leaderboardSwitcher) == 0x000458, "Member 'ULeaderboardWidget::_leaderboardSwitcher' has a wrong offset!");
static_assert(offsetof(ULeaderboardWidget, _carouselWidget) == 0x000460, "Member 'ULeaderboardWidget::_carouselWidget' has a wrong offset!");
static_assert(offsetof(ULeaderboardWidget, _sceneCaptureCreator) == 0x000468, "Member 'ULeaderboardWidget::_sceneCaptureCreator' has a wrong offset!");

// Class OutGameModule.ResultLeaderboardWidget
// 0x0070 (0x04E0 - 0x0470)
class UResultLeaderboardWidget final : public ULeaderboardWidget
{
public:
	uint8                                         Pad_470[0x10];                                     // 0x0470(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        _tabContents;                                      // 0x0480(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_490[0x50];                                     // 0x0490(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OpenWidget();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ResultLeaderboardWidget">();
	}
	static class UResultLeaderboardWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResultLeaderboardWidget>();
	}
};
static_assert(alignof(UResultLeaderboardWidget) == 0x000008, "Wrong alignment on UResultLeaderboardWidget");
static_assert(sizeof(UResultLeaderboardWidget) == 0x0004E0, "Wrong size on UResultLeaderboardWidget");
static_assert(offsetof(UResultLeaderboardWidget, _tabContents) == 0x000480, "Member 'UResultLeaderboardWidget::_tabContents' has a wrong offset!");

// Class OutGameModule.CustomMatchPlayerButtonWidget
// 0x0080 (0x0530 - 0x04B0)
class UCustomMatchPlayerButtonWidget final : public UWidgetButtonDetails
{
public:
	uint8                                         Pad_4B0[0x8];                                      // 0x04B0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UWorld>                  _subLevel;                                         // 0x04B8(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _teamName;                                         // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _teamText;                                         // 0x04E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAdjustTextWidget*                      _playerName;                                       // 0x04F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProfileDisplayRankWidget*              _profileRank;                                      // 0x04F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        _backSwitcher;                                     // 0x0500(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        _roleSwitcher;                                     // 0x0508(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 _chackImage;                                       // 0x0510(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 _playerRankImage;                                  // 0x0518(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomMatchSelectItemEntryObject*      _entryObject;                                      // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_528[0x8];                                      // 0x0528(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchPlayerButtonWidget">();
	}
	static class UCustomMatchPlayerButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchPlayerButtonWidget>();
	}
};
static_assert(alignof(UCustomMatchPlayerButtonWidget) == 0x000008, "Wrong alignment on UCustomMatchPlayerButtonWidget");
static_assert(sizeof(UCustomMatchPlayerButtonWidget) == 0x000530, "Wrong size on UCustomMatchPlayerButtonWidget");
static_assert(offsetof(UCustomMatchPlayerButtonWidget, _subLevel) == 0x0004B8, "Member 'UCustomMatchPlayerButtonWidget::_subLevel' has a wrong offset!");
static_assert(offsetof(UCustomMatchPlayerButtonWidget, _teamName) == 0x0004E0, "Member 'UCustomMatchPlayerButtonWidget::_teamName' has a wrong offset!");
static_assert(offsetof(UCustomMatchPlayerButtonWidget, _teamText) == 0x0004E8, "Member 'UCustomMatchPlayerButtonWidget::_teamText' has a wrong offset!");
static_assert(offsetof(UCustomMatchPlayerButtonWidget, _playerName) == 0x0004F0, "Member 'UCustomMatchPlayerButtonWidget::_playerName' has a wrong offset!");
static_assert(offsetof(UCustomMatchPlayerButtonWidget, _profileRank) == 0x0004F8, "Member 'UCustomMatchPlayerButtonWidget::_profileRank' has a wrong offset!");
static_assert(offsetof(UCustomMatchPlayerButtonWidget, _backSwitcher) == 0x000500, "Member 'UCustomMatchPlayerButtonWidget::_backSwitcher' has a wrong offset!");
static_assert(offsetof(UCustomMatchPlayerButtonWidget, _roleSwitcher) == 0x000508, "Member 'UCustomMatchPlayerButtonWidget::_roleSwitcher' has a wrong offset!");
static_assert(offsetof(UCustomMatchPlayerButtonWidget, _chackImage) == 0x000510, "Member 'UCustomMatchPlayerButtonWidget::_chackImage' has a wrong offset!");
static_assert(offsetof(UCustomMatchPlayerButtonWidget, _playerRankImage) == 0x000518, "Member 'UCustomMatchPlayerButtonWidget::_playerRankImage' has a wrong offset!");
static_assert(offsetof(UCustomMatchPlayerButtonWidget, _entryObject) == 0x000520, "Member 'UCustomMatchPlayerButtonWidget::_entryObject' has a wrong offset!");

// Class OutGameModule.CustomMatchReadyWidget
// 0x0010 (0x0360 - 0x0350)
class UCustomMatchReadyWidget final : public UWidgetBase
{
public:
	class UTextBlock*                             _readyNum;                                         // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _readyMaxNum;                                      // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnUpdateTeamUp();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchReadyWidget">();
	}
	static class UCustomMatchReadyWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchReadyWidget>();
	}
};
static_assert(alignof(UCustomMatchReadyWidget) == 0x000008, "Wrong alignment on UCustomMatchReadyWidget");
static_assert(sizeof(UCustomMatchReadyWidget) == 0x000360, "Wrong size on UCustomMatchReadyWidget");
static_assert(offsetof(UCustomMatchReadyWidget, _readyNum) == 0x000350, "Member 'UCustomMatchReadyWidget::_readyNum' has a wrong offset!");
static_assert(offsetof(UCustomMatchReadyWidget, _readyMaxNum) == 0x000358, "Member 'UCustomMatchReadyWidget::_readyMaxNum' has a wrong offset!");

// Class OutGameModule.CustomMatchResultCharaImageWidget
// 0x0028 (0x0378 - 0x0350)
class UCustomMatchResultCharaImageWidget final : public UWidgetBase
{
public:
	class UImage*                                 _image;                                            // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _playerName;                                       // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _namePanel;                                        // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPaperFlipbook*                         _backgroundImageFB;                                // 0x0368(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     _charaMaterialImage;                               // 0x0370(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchResultCharaImageWidget">();
	}
	static class UCustomMatchResultCharaImageWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchResultCharaImageWidget>();
	}
};
static_assert(alignof(UCustomMatchResultCharaImageWidget) == 0x000008, "Wrong alignment on UCustomMatchResultCharaImageWidget");
static_assert(sizeof(UCustomMatchResultCharaImageWidget) == 0x000378, "Wrong size on UCustomMatchResultCharaImageWidget");
static_assert(offsetof(UCustomMatchResultCharaImageWidget, _image) == 0x000350, "Member 'UCustomMatchResultCharaImageWidget::_image' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultCharaImageWidget, _playerName) == 0x000358, "Member 'UCustomMatchResultCharaImageWidget::_playerName' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultCharaImageWidget, _namePanel) == 0x000360, "Member 'UCustomMatchResultCharaImageWidget::_namePanel' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultCharaImageWidget, _backgroundImageFB) == 0x000368, "Member 'UCustomMatchResultCharaImageWidget::_backgroundImageFB' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultCharaImageWidget, _charaMaterialImage) == 0x000370, "Member 'UCustomMatchResultCharaImageWidget::_charaMaterialImage' has a wrong offset!");

// Class OutGameModule.ItemListEntryWidget
// 0x0038 (0x0668 - 0x0630)
class UItemListEntryWidget final : public UPlatformWidgetButton
{
public:
	uint8                                         Pad_630[0x8];                                      // 0x0630(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemListObject*                        _item;                                             // 0x0638(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _name;                                             // 0x0640(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _count;                                            // 0x0648(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusAnimationWidget*                  _focusIcon;                                        // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconImage*                         _ItemIconImage;                                    // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTimeWidget*                            _myProfileTimer;                                   // 0x0660(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemListEntryWidget">();
	}
	static class UItemListEntryWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemListEntryWidget>();
	}
};
static_assert(alignof(UItemListEntryWidget) == 0x000008, "Wrong alignment on UItemListEntryWidget");
static_assert(sizeof(UItemListEntryWidget) == 0x000668, "Wrong size on UItemListEntryWidget");
static_assert(offsetof(UItemListEntryWidget, _item) == 0x000638, "Member 'UItemListEntryWidget::_item' has a wrong offset!");
static_assert(offsetof(UItemListEntryWidget, _name) == 0x000640, "Member 'UItemListEntryWidget::_name' has a wrong offset!");
static_assert(offsetof(UItemListEntryWidget, _count) == 0x000648, "Member 'UItemListEntryWidget::_count' has a wrong offset!");
static_assert(offsetof(UItemListEntryWidget, _focusIcon) == 0x000650, "Member 'UItemListEntryWidget::_focusIcon' has a wrong offset!");
static_assert(offsetof(UItemListEntryWidget, _ItemIconImage) == 0x000658, "Member 'UItemListEntryWidget::_ItemIconImage' has a wrong offset!");
static_assert(offsetof(UItemListEntryWidget, _myProfileTimer) == 0x000660, "Member 'UItemListEntryWidget::_myProfileTimer' has a wrong offset!");

// Class OutGameModule.CustomMatchResultPlayerButtonWidget
// 0x0060 (0x0690 - 0x0630)
class UCustomMatchResultPlayerButtonWidget final : public UPlatformWidgetButton
{
public:
	class UMaterialInterface*                     _charaMaterialImage;                               // 0x0630(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                  _profileLevel;                                     // 0x0638(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _youStamp;                                         // 0x0660(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomMatchResultCharaImageWidget*     _charaIcon;                                        // 0x0668(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bUseSize;                                         // 0x0670(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_671[0x3];                                      // 0x0671(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              _size;                                             // 0x0674(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_67C[0x14];                                     // 0x067C(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDecideButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchResultPlayerButtonWidget">();
	}
	static class UCustomMatchResultPlayerButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchResultPlayerButtonWidget>();
	}
};
static_assert(alignof(UCustomMatchResultPlayerButtonWidget) == 0x000008, "Wrong alignment on UCustomMatchResultPlayerButtonWidget");
static_assert(sizeof(UCustomMatchResultPlayerButtonWidget) == 0x000690, "Wrong size on UCustomMatchResultPlayerButtonWidget");
static_assert(offsetof(UCustomMatchResultPlayerButtonWidget, _charaMaterialImage) == 0x000630, "Member 'UCustomMatchResultPlayerButtonWidget::_charaMaterialImage' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultPlayerButtonWidget, _profileLevel) == 0x000638, "Member 'UCustomMatchResultPlayerButtonWidget::_profileLevel' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultPlayerButtonWidget, _youStamp) == 0x000660, "Member 'UCustomMatchResultPlayerButtonWidget::_youStamp' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultPlayerButtonWidget, _charaIcon) == 0x000668, "Member 'UCustomMatchResultPlayerButtonWidget::_charaIcon' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultPlayerButtonWidget, _bUseSize) == 0x000670, "Member 'UCustomMatchResultPlayerButtonWidget::_bUseSize' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultPlayerButtonWidget, _size) == 0x000674, "Member 'UCustomMatchResultPlayerButtonWidget::_size' has a wrong offset!");

// Class OutGameModule.CustomMatchResultTabItem
// 0x00A0 (0x0488 - 0x03E8)
class UCustomMatchResultTabItem final : public UAppWidget
{
public:
	uint8                                         Pad_3E8[0x18];                                     // 0x03E8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UWorld>                  _profileLevel;                                     // 0x0400(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _backImageSwitcher;                                // 0x0428(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        _rankSwitcher;                                     // 0x0430(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _koNum;                                            // 0x0438(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _damageNum;                                        // 0x0440(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _teamName;                                         // 0x0448(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _rankNumText;                                      // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomMatchResultTabPlayerPanel*       _resultTabPlayerPanel1;                            // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomMatchResultTabPlayerPanel*       _resultTabPlayerPanel2;                            // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomMatchResultTabPlayerPanel*       _resultTabPlayerPanel3;                            // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_470[0x18];                                     // 0x0470(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DoCustomWidgetNavigation(EUINavigation UiNavigation);
	void OnDecidePanelEvent(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchResultTabItem">();
	}
	static class UCustomMatchResultTabItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchResultTabItem>();
	}
};
static_assert(alignof(UCustomMatchResultTabItem) == 0x000008, "Wrong alignment on UCustomMatchResultTabItem");
static_assert(sizeof(UCustomMatchResultTabItem) == 0x000488, "Wrong size on UCustomMatchResultTabItem");
static_assert(offsetof(UCustomMatchResultTabItem, _profileLevel) == 0x000400, "Member 'UCustomMatchResultTabItem::_profileLevel' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTabItem, _backImageSwitcher) == 0x000428, "Member 'UCustomMatchResultTabItem::_backImageSwitcher' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTabItem, _rankSwitcher) == 0x000430, "Member 'UCustomMatchResultTabItem::_rankSwitcher' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTabItem, _koNum) == 0x000438, "Member 'UCustomMatchResultTabItem::_koNum' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTabItem, _damageNum) == 0x000440, "Member 'UCustomMatchResultTabItem::_damageNum' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTabItem, _teamName) == 0x000448, "Member 'UCustomMatchResultTabItem::_teamName' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTabItem, _rankNumText) == 0x000450, "Member 'UCustomMatchResultTabItem::_rankNumText' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTabItem, _resultTabPlayerPanel1) == 0x000458, "Member 'UCustomMatchResultTabItem::_resultTabPlayerPanel1' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTabItem, _resultTabPlayerPanel2) == 0x000460, "Member 'UCustomMatchResultTabItem::_resultTabPlayerPanel2' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTabItem, _resultTabPlayerPanel3) == 0x000468, "Member 'UCustomMatchResultTabItem::_resultTabPlayerPanel3' has a wrong offset!");

// Class OutGameModule.GeneralCountCarouselWidget
// 0x00B0 (0x0400 - 0x0350)
class UGeneralCountCarouselWidget final : public UWidgetBase
{
public:
	FMulticastInlineDelegateProperty_             OnChangeCountDelegate;                             // 0x0350(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                         _skipListCount;                                    // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _minCount;                                         // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _maxCount;                                         // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_370[0x8];                                      // 0x0370(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetButton*                          _leftButtonA;                                      // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetButton*                          _leftButtonB;                                      // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetButton*                          _rightButtonA;                                     // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetButton*                          _rightButtonB;                                     // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _nowListText;                                      // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _slashText;                                        // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _maxListText;                                      // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3B0[0x1];                                      // 0x03B0(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _bLongPress;                                       // 0x03B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B2[0x6];                                      // 0x03B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          _longPressAtomCue;                                 // 0x03B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int32>                                 _longPressSpeedUpCount;                            // 0x03C0(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<float>                                 _longPressNextTime;                                // 0x03D0(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E0[0x8];                                      // 0x03E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAppWidget*                             _longPressWidget;                                  // 0x03E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3F0[0x10];                                     // 0x03F0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnChangeIndexDelegate__DelegateSignature(int32 NewCount, bool IsFoucas);
	void OnDecideEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnLongPressEvent();
	void OnPressEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnReleaseEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void PressThisLeftButtonA(EWidgetInputType Input);
	void PressThisLeftButtonB(EWidgetInputType Input);
	void PressThisRightButtonA(EWidgetInputType Input);
	void PressThisRightButtonB(EWidgetInputType Input);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GeneralCountCarouselWidget">();
	}
	static class UGeneralCountCarouselWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGeneralCountCarouselWidget>();
	}
};
static_assert(alignof(UGeneralCountCarouselWidget) == 0x000008, "Wrong alignment on UGeneralCountCarouselWidget");
static_assert(sizeof(UGeneralCountCarouselWidget) == 0x000400, "Wrong size on UGeneralCountCarouselWidget");
static_assert(offsetof(UGeneralCountCarouselWidget, OnChangeCountDelegate) == 0x000350, "Member 'UGeneralCountCarouselWidget::OnChangeCountDelegate' has a wrong offset!");
static_assert(offsetof(UGeneralCountCarouselWidget, _skipListCount) == 0x000360, "Member 'UGeneralCountCarouselWidget::_skipListCount' has a wrong offset!");
static_assert(offsetof(UGeneralCountCarouselWidget, _minCount) == 0x000368, "Member 'UGeneralCountCarouselWidget::_minCount' has a wrong offset!");
static_assert(offsetof(UGeneralCountCarouselWidget, _maxCount) == 0x00036C, "Member 'UGeneralCountCarouselWidget::_maxCount' has a wrong offset!");
static_assert(offsetof(UGeneralCountCarouselWidget, _leftButtonA) == 0x000378, "Member 'UGeneralCountCarouselWidget::_leftButtonA' has a wrong offset!");
static_assert(offsetof(UGeneralCountCarouselWidget, _leftButtonB) == 0x000380, "Member 'UGeneralCountCarouselWidget::_leftButtonB' has a wrong offset!");
static_assert(offsetof(UGeneralCountCarouselWidget, _rightButtonA) == 0x000388, "Member 'UGeneralCountCarouselWidget::_rightButtonA' has a wrong offset!");
static_assert(offsetof(UGeneralCountCarouselWidget, _rightButtonB) == 0x000390, "Member 'UGeneralCountCarouselWidget::_rightButtonB' has a wrong offset!");
static_assert(offsetof(UGeneralCountCarouselWidget, _nowListText) == 0x000398, "Member 'UGeneralCountCarouselWidget::_nowListText' has a wrong offset!");
static_assert(offsetof(UGeneralCountCarouselWidget, _slashText) == 0x0003A0, "Member 'UGeneralCountCarouselWidget::_slashText' has a wrong offset!");
static_assert(offsetof(UGeneralCountCarouselWidget, _maxListText) == 0x0003A8, "Member 'UGeneralCountCarouselWidget::_maxListText' has a wrong offset!");
static_assert(offsetof(UGeneralCountCarouselWidget, _bLongPress) == 0x0003B1, "Member 'UGeneralCountCarouselWidget::_bLongPress' has a wrong offset!");
static_assert(offsetof(UGeneralCountCarouselWidget, _longPressAtomCue) == 0x0003B8, "Member 'UGeneralCountCarouselWidget::_longPressAtomCue' has a wrong offset!");
static_assert(offsetof(UGeneralCountCarouselWidget, _longPressSpeedUpCount) == 0x0003C0, "Member 'UGeneralCountCarouselWidget::_longPressSpeedUpCount' has a wrong offset!");
static_assert(offsetof(UGeneralCountCarouselWidget, _longPressNextTime) == 0x0003D0, "Member 'UGeneralCountCarouselWidget::_longPressNextTime' has a wrong offset!");
static_assert(offsetof(UGeneralCountCarouselWidget, _longPressWidget) == 0x0003E8, "Member 'UGeneralCountCarouselWidget::_longPressWidget' has a wrong offset!");

// Class OutGameModule.CustomMatchResultTabList
// 0x0020 (0x0370 - 0x0350)
class UCustomMatchResultTabList final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UListView*                              _listView;                                         // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAddFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchResultTabList">();
	}
	static class UCustomMatchResultTabList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchResultTabList>();
	}
};
static_assert(alignof(UCustomMatchResultTabList) == 0x000008, "Wrong alignment on UCustomMatchResultTabList");
static_assert(sizeof(UCustomMatchResultTabList) == 0x000370, "Wrong size on UCustomMatchResultTabList");
static_assert(offsetof(UCustomMatchResultTabList, _listView) == 0x000360, "Member 'UCustomMatchResultTabList::_listView' has a wrong offset!");

// Class OutGameModule.CustomMatchResultTabPlayerPanel
// 0x0038 (0x0668 - 0x0630)
class UCustomMatchResultTabPlayerPanel final : public UPlatformWidgetButton
{
public:
	class UTextBlock*                             _koNum;                                            // 0x0630(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _damageNum;                                        // 0x0638(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _playerName;                                       // 0x0640(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomMatchResultCharaImageWidget*     _charaIcon;                                        // 0x0648(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCanvasPanel*                           _youStamp;                                         // 0x0650(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_658[0x10];                                     // 0x0658(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchResultTabPlayerPanel">();
	}
	static class UCustomMatchResultTabPlayerPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchResultTabPlayerPanel>();
	}
};
static_assert(alignof(UCustomMatchResultTabPlayerPanel) == 0x000008, "Wrong alignment on UCustomMatchResultTabPlayerPanel");
static_assert(sizeof(UCustomMatchResultTabPlayerPanel) == 0x000668, "Wrong size on UCustomMatchResultTabPlayerPanel");
static_assert(offsetof(UCustomMatchResultTabPlayerPanel, _koNum) == 0x000630, "Member 'UCustomMatchResultTabPlayerPanel::_koNum' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTabPlayerPanel, _damageNum) == 0x000638, "Member 'UCustomMatchResultTabPlayerPanel::_damageNum' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTabPlayerPanel, _playerName) == 0x000640, "Member 'UCustomMatchResultTabPlayerPanel::_playerName' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTabPlayerPanel, _charaIcon) == 0x000648, "Member 'UCustomMatchResultTabPlayerPanel::_charaIcon' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTabPlayerPanel, _youStamp) == 0x000650, "Member 'UCustomMatchResultTabPlayerPanel::_youStamp' has a wrong offset!");

// Class OutGameModule.MissionListItem
// 0x0060 (0x0510 - 0x04B0)
class UMissionListItem : public UWidgetButtonDetails
{
public:
	uint8                                         Pad_4B0[0x8];                                      // 0x04B0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                _listItem;                                         // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _stampColor;                                       // 0x04C0(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _outlineColor;                                     // 0x04D0(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _topColor;                                         // 0x04E0(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _bgColor;                                          // 0x04F0(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _bg;                                               // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _top;                                              // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MissionListItem">();
	}
	static class UMissionListItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionListItem>();
	}
};
static_assert(alignof(UMissionListItem) == 0x000008, "Wrong alignment on UMissionListItem");
static_assert(sizeof(UMissionListItem) == 0x000510, "Wrong size on UMissionListItem");
static_assert(offsetof(UMissionListItem, _listItem) == 0x0004B8, "Member 'UMissionListItem::_listItem' has a wrong offset!");
static_assert(offsetof(UMissionListItem, _stampColor) == 0x0004C0, "Member 'UMissionListItem::_stampColor' has a wrong offset!");
static_assert(offsetof(UMissionListItem, _outlineColor) == 0x0004D0, "Member 'UMissionListItem::_outlineColor' has a wrong offset!");
static_assert(offsetof(UMissionListItem, _topColor) == 0x0004E0, "Member 'UMissionListItem::_topColor' has a wrong offset!");
static_assert(offsetof(UMissionListItem, _bgColor) == 0x0004F0, "Member 'UMissionListItem::_bgColor' has a wrong offset!");
static_assert(offsetof(UMissionListItem, _bg) == 0x000500, "Member 'UMissionListItem::_bg' has a wrong offset!");
static_assert(offsetof(UMissionListItem, _top) == 0x000508, "Member 'UMissionListItem::_top' has a wrong offset!");

// Class OutGameModule.MissionDetails
// 0x00D8 (0x05E8 - 0x0510)
class UMissionDetails : public UMissionListItem
{
public:
	class FText                                   _detailsText;                                      // 0x0510(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                   _receiveText;                                      // 0x0528(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                   _alreadyReceivedText;                              // 0x0540(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FLinearColor                           _nowBarColor;                                      // 0x0558(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _preBarColor;                                      // 0x0568(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _clearBGColor;                                     // 0x0578(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _clearPatternColor;                                // 0x0588(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _title;                                            // 0x0598(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMissionProgressWidget*                 _progress;                                         // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDeltaColorProgressBarWidget*           _progressBar;                                      // 0x05A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _clearImage;                                       // 0x05B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _grayPanel;                                        // 0x05B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _clearStamp;                                       // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _receiveStamp;                                     // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusAnimationWidget*                  _focusWidget;                                      // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bLeftMouseDetails;                                // 0x05D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5D9[0x7];                                      // 0x05D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMissionDetailsWindow*                  _window;                                           // 0x05E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnDecideButton(class UAppWidget* Widget, const struct FKey& Key, const EWidgetInputType InputType);
	void OpenDetailsWindow();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MissionDetails">();
	}
	static class UMissionDetails* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionDetails>();
	}
};
static_assert(alignof(UMissionDetails) == 0x000008, "Wrong alignment on UMissionDetails");
static_assert(sizeof(UMissionDetails) == 0x0005E8, "Wrong size on UMissionDetails");
static_assert(offsetof(UMissionDetails, _detailsText) == 0x000510, "Member 'UMissionDetails::_detailsText' has a wrong offset!");
static_assert(offsetof(UMissionDetails, _receiveText) == 0x000528, "Member 'UMissionDetails::_receiveText' has a wrong offset!");
static_assert(offsetof(UMissionDetails, _alreadyReceivedText) == 0x000540, "Member 'UMissionDetails::_alreadyReceivedText' has a wrong offset!");
static_assert(offsetof(UMissionDetails, _nowBarColor) == 0x000558, "Member 'UMissionDetails::_nowBarColor' has a wrong offset!");
static_assert(offsetof(UMissionDetails, _preBarColor) == 0x000568, "Member 'UMissionDetails::_preBarColor' has a wrong offset!");
static_assert(offsetof(UMissionDetails, _clearBGColor) == 0x000578, "Member 'UMissionDetails::_clearBGColor' has a wrong offset!");
static_assert(offsetof(UMissionDetails, _clearPatternColor) == 0x000588, "Member 'UMissionDetails::_clearPatternColor' has a wrong offset!");
static_assert(offsetof(UMissionDetails, _title) == 0x000598, "Member 'UMissionDetails::_title' has a wrong offset!");
static_assert(offsetof(UMissionDetails, _progress) == 0x0005A0, "Member 'UMissionDetails::_progress' has a wrong offset!");
static_assert(offsetof(UMissionDetails, _progressBar) == 0x0005A8, "Member 'UMissionDetails::_progressBar' has a wrong offset!");
static_assert(offsetof(UMissionDetails, _clearImage) == 0x0005B0, "Member 'UMissionDetails::_clearImage' has a wrong offset!");
static_assert(offsetof(UMissionDetails, _grayPanel) == 0x0005B8, "Member 'UMissionDetails::_grayPanel' has a wrong offset!");
static_assert(offsetof(UMissionDetails, _clearStamp) == 0x0005C0, "Member 'UMissionDetails::_clearStamp' has a wrong offset!");
static_assert(offsetof(UMissionDetails, _receiveStamp) == 0x0005C8, "Member 'UMissionDetails::_receiveStamp' has a wrong offset!");
static_assert(offsetof(UMissionDetails, _focusWidget) == 0x0005D0, "Member 'UMissionDetails::_focusWidget' has a wrong offset!");
static_assert(offsetof(UMissionDetails, _bLeftMouseDetails) == 0x0005D8, "Member 'UMissionDetails::_bLeftMouseDetails' has a wrong offset!");
static_assert(offsetof(UMissionDetails, _window) == 0x0005E0, "Member 'UMissionDetails::_window' has a wrong offset!");

// Class OutGameModule.CustomMatchResultTabTop
// 0x0020 (0x0370 - 0x0350)
class UCustomMatchResultTabTop final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomMatchResultTabList*              _resultTabList;                                    // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        _swicher;                                          // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchResultTabTop">();
	}
	static class UCustomMatchResultTabTop* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchResultTabTop>();
	}
};
static_assert(alignof(UCustomMatchResultTabTop) == 0x000008, "Wrong alignment on UCustomMatchResultTabTop");
static_assert(sizeof(UCustomMatchResultTabTop) == 0x000370, "Wrong size on UCustomMatchResultTabTop");
static_assert(offsetof(UCustomMatchResultTabTop, _resultTabList) == 0x000360, "Member 'UCustomMatchResultTabTop::_resultTabList' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTabTop, _swicher) == 0x000368, "Member 'UCustomMatchResultTabTop::_swicher' has a wrong offset!");

// Class OutGameModule.CustomMatchResultTeamItemBaseWidget
// 0x0068 (0x03B8 - 0x0350)
class UCustomMatchResultTeamItemBaseWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x20];                                     // 0x0350(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomMatchResultPlayerButtonWidget*   _playerButtonLeft;                                 // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomMatchResultPlayerButtonWidget*   _playerButtonCenter;                               // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomMatchResultPlayerButtonWidget*   _playerButtonRight;                                // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _teamNum;                                          // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _rankNum;                                          // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_398[0x20];                                     // 0x0398(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DoCustomWidgetNavigation(EUINavigation UiNavigation);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchResultTeamItemBaseWidget">();
	}
	static class UCustomMatchResultTeamItemBaseWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchResultTeamItemBaseWidget>();
	}
};
static_assert(alignof(UCustomMatchResultTeamItemBaseWidget) == 0x000008, "Wrong alignment on UCustomMatchResultTeamItemBaseWidget");
static_assert(sizeof(UCustomMatchResultTeamItemBaseWidget) == 0x0003B8, "Wrong size on UCustomMatchResultTeamItemBaseWidget");
static_assert(offsetof(UCustomMatchResultTeamItemBaseWidget, _playerButtonLeft) == 0x000370, "Member 'UCustomMatchResultTeamItemBaseWidget::_playerButtonLeft' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTeamItemBaseWidget, _playerButtonCenter) == 0x000378, "Member 'UCustomMatchResultTeamItemBaseWidget::_playerButtonCenter' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTeamItemBaseWidget, _playerButtonRight) == 0x000380, "Member 'UCustomMatchResultTeamItemBaseWidget::_playerButtonRight' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTeamItemBaseWidget, _teamNum) == 0x000388, "Member 'UCustomMatchResultTeamItemBaseWidget::_teamNum' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTeamItemBaseWidget, _rankNum) == 0x000390, "Member 'UCustomMatchResultTeamItemBaseWidget::_rankNum' has a wrong offset!");

// Class OutGameModule.ItemIconWidget
// 0x00A8 (0x0530 - 0x0488)
class UItemIconWidget : public UWidgetButton
{
public:
	class FString                                 _itemCategory;                                     // 0x0488(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EItemCategory                                 _itemCategoryEnum;                                 // 0x0498(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_499[0x3];                                      // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _itemId;                                           // 0x049C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _itemCount;                                        // 0x04A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bSmallImage;                                      // 0x04A4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bMyPartsDummyBGImage;                             // 0x04A5(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bUseImageSizeOverride;                            // 0x04A6(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4A7[0x1];                                      // 0x04A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              _imageSize;                                        // 0x04A8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   _lockText;                                         // 0x04B0(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	EItemIconCoverType                            _coverType;                                        // 0x04C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           _iconBody;                                         // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _iconImage;                                        // 0x04D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEmblemDisplayWidget*                   _emblemImage;                                      // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNamedSlot*                             _bgImageNamedSlot;                                 // 0x04E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconVoiceWidget*                   _itemIconVoice;                                    // 0x04F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           _countTextBody;                                    // 0x04F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _countTextBlock;                                   // 0x0500(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _coverSwitcher;                                    // 0x0508(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _lockWidget;                                       // 0x0510(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _lockTextWidget;                                   // 0x0518(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMyADPartsWidget*                       _myADParts;                                        // 0x0520(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerDatabaseWork*                    _playerDatabaseWork;                               // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	int32 BP_GetItemId();
	void BP_SetItemId(const class FString& ItemCategory, int32 ItemId, bool IsSmall);
	void BP_SetItemIdForEnum(EItemCategory ItemCategory, int32 ItemId, bool IsSmall);
	void BP_SetupIcon();
	void OnLoadedIconImage(class UPaperSprite* Sprite);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemIconWidget">();
	}
	static class UItemIconWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemIconWidget>();
	}
};
static_assert(alignof(UItemIconWidget) == 0x000008, "Wrong alignment on UItemIconWidget");
static_assert(sizeof(UItemIconWidget) == 0x000530, "Wrong size on UItemIconWidget");
static_assert(offsetof(UItemIconWidget, _itemCategory) == 0x000488, "Member 'UItemIconWidget::_itemCategory' has a wrong offset!");
static_assert(offsetof(UItemIconWidget, _itemCategoryEnum) == 0x000498, "Member 'UItemIconWidget::_itemCategoryEnum' has a wrong offset!");
static_assert(offsetof(UItemIconWidget, _itemId) == 0x00049C, "Member 'UItemIconWidget::_itemId' has a wrong offset!");
static_assert(offsetof(UItemIconWidget, _itemCount) == 0x0004A0, "Member 'UItemIconWidget::_itemCount' has a wrong offset!");
static_assert(offsetof(UItemIconWidget, _bSmallImage) == 0x0004A4, "Member 'UItemIconWidget::_bSmallImage' has a wrong offset!");
static_assert(offsetof(UItemIconWidget, _bMyPartsDummyBGImage) == 0x0004A5, "Member 'UItemIconWidget::_bMyPartsDummyBGImage' has a wrong offset!");
static_assert(offsetof(UItemIconWidget, _bUseImageSizeOverride) == 0x0004A6, "Member 'UItemIconWidget::_bUseImageSizeOverride' has a wrong offset!");
static_assert(offsetof(UItemIconWidget, _imageSize) == 0x0004A8, "Member 'UItemIconWidget::_imageSize' has a wrong offset!");
static_assert(offsetof(UItemIconWidget, _lockText) == 0x0004B0, "Member 'UItemIconWidget::_lockText' has a wrong offset!");
static_assert(offsetof(UItemIconWidget, _coverType) == 0x0004C8, "Member 'UItemIconWidget::_coverType' has a wrong offset!");
static_assert(offsetof(UItemIconWidget, _iconBody) == 0x0004D0, "Member 'UItemIconWidget::_iconBody' has a wrong offset!");
static_assert(offsetof(UItemIconWidget, _iconImage) == 0x0004D8, "Member 'UItemIconWidget::_iconImage' has a wrong offset!");
static_assert(offsetof(UItemIconWidget, _emblemImage) == 0x0004E0, "Member 'UItemIconWidget::_emblemImage' has a wrong offset!");
static_assert(offsetof(UItemIconWidget, _bgImageNamedSlot) == 0x0004E8, "Member 'UItemIconWidget::_bgImageNamedSlot' has a wrong offset!");
static_assert(offsetof(UItemIconWidget, _itemIconVoice) == 0x0004F0, "Member 'UItemIconWidget::_itemIconVoice' has a wrong offset!");
static_assert(offsetof(UItemIconWidget, _countTextBody) == 0x0004F8, "Member 'UItemIconWidget::_countTextBody' has a wrong offset!");
static_assert(offsetof(UItemIconWidget, _countTextBlock) == 0x000500, "Member 'UItemIconWidget::_countTextBlock' has a wrong offset!");
static_assert(offsetof(UItemIconWidget, _coverSwitcher) == 0x000508, "Member 'UItemIconWidget::_coverSwitcher' has a wrong offset!");
static_assert(offsetof(UItemIconWidget, _lockWidget) == 0x000510, "Member 'UItemIconWidget::_lockWidget' has a wrong offset!");
static_assert(offsetof(UItemIconWidget, _lockTextWidget) == 0x000518, "Member 'UItemIconWidget::_lockTextWidget' has a wrong offset!");
static_assert(offsetof(UItemIconWidget, _myADParts) == 0x000520, "Member 'UItemIconWidget::_myADParts' has a wrong offset!");
static_assert(offsetof(UItemIconWidget, _playerDatabaseWork) == 0x000528, "Member 'UItemIconWidget::_playerDatabaseWork' has a wrong offset!");

// Class OutGameModule.ItemIconWithNameWidget
// 0x0020 (0x0550 - 0x0530)
class UItemIconWithNameWidget final : public UItemIconWidget
{
public:
	class UAdjustTextWidget*                      _name;                                             // 0x0530(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _name1Line;                                        // 0x0538(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _bgSwitcher;                                       // 0x0540(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _grayPanel;                                        // 0x0548(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemIconWithNameWidget">();
	}
	static class UItemIconWithNameWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemIconWithNameWidget>();
	}
};
static_assert(alignof(UItemIconWithNameWidget) == 0x000008, "Wrong alignment on UItemIconWithNameWidget");
static_assert(sizeof(UItemIconWithNameWidget) == 0x000550, "Wrong size on UItemIconWithNameWidget");
static_assert(offsetof(UItemIconWithNameWidget, _name) == 0x000530, "Member 'UItemIconWithNameWidget::_name' has a wrong offset!");
static_assert(offsetof(UItemIconWithNameWidget, _name1Line) == 0x000538, "Member 'UItemIconWithNameWidget::_name1Line' has a wrong offset!");
static_assert(offsetof(UItemIconWithNameWidget, _bgSwitcher) == 0x000540, "Member 'UItemIconWithNameWidget::_bgSwitcher' has a wrong offset!");
static_assert(offsetof(UItemIconWithNameWidget, _grayPanel) == 0x000548, "Member 'UItemIconWithNameWidget::_grayPanel' has a wrong offset!");

// Class OutGameModule.CustomMatchResultTeamItemWidget
// 0x0030 (0x0418 - 0x03E8)
class UCustomMatchResultTeamItemWidget final : public UAppWidget
{
public:
	uint8                                         Pad_3E8[0x28];                                     // 0x03E8(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomMatchResultTeamItemBaseWidget*   _item;                                             // 0x0410(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchResultTeamItemWidget">();
	}
	static class UCustomMatchResultTeamItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchResultTeamItemWidget>();
	}
};
static_assert(alignof(UCustomMatchResultTeamItemWidget) == 0x000008, "Wrong alignment on UCustomMatchResultTeamItemWidget");
static_assert(sizeof(UCustomMatchResultTeamItemWidget) == 0x000418, "Wrong size on UCustomMatchResultTeamItemWidget");
static_assert(offsetof(UCustomMatchResultTeamItemWidget, _item) == 0x000410, "Member 'UCustomMatchResultTeamItemWidget::_item' has a wrong offset!");

// Class OutGameModule.CustomMatchResultTeamListWidget
// 0x0030 (0x0380 - 0x0350)
class UCustomMatchResultTeamListWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x20];                                     // 0x0350(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UListView*                              _listView;                                         // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAddFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchResultTeamListWidget">();
	}
	static class UCustomMatchResultTeamListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchResultTeamListWidget>();
	}
};
static_assert(alignof(UCustomMatchResultTeamListWidget) == 0x000008, "Wrong alignment on UCustomMatchResultTeamListWidget");
static_assert(sizeof(UCustomMatchResultTeamListWidget) == 0x000380, "Wrong size on UCustomMatchResultTeamListWidget");
static_assert(offsetof(UCustomMatchResultTeamListWidget, _listView) == 0x000370, "Member 'UCustomMatchResultTeamListWidget::_listView' has a wrong offset!");

// Class OutGameModule.GeneralCoinSelectItemWidget
// 0x0020 (0x0370 - 0x0350)
class UGeneralCoinSelectItemWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x8];                                      // 0x0350(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCoinWidget*                            _hasCoin;                                          // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGeneralCoinSelectButtonWidget*         _button;                                           // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCoinListEntryObject*                   _listItem;                                         // 0x0368(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void RequesetItemSelectionChanged(bool IsSelected);

	class UGeneralCoinSelectButtonWidget* BP_GetButton() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GeneralCoinSelectItemWidget">();
	}
	static class UGeneralCoinSelectItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGeneralCoinSelectItemWidget>();
	}
};
static_assert(alignof(UGeneralCoinSelectItemWidget) == 0x000008, "Wrong alignment on UGeneralCoinSelectItemWidget");
static_assert(sizeof(UGeneralCoinSelectItemWidget) == 0x000370, "Wrong size on UGeneralCoinSelectItemWidget");
static_assert(offsetof(UGeneralCoinSelectItemWidget, _hasCoin) == 0x000358, "Member 'UGeneralCoinSelectItemWidget::_hasCoin' has a wrong offset!");
static_assert(offsetof(UGeneralCoinSelectItemWidget, _button) == 0x000360, "Member 'UGeneralCoinSelectItemWidget::_button' has a wrong offset!");
static_assert(offsetof(UGeneralCoinSelectItemWidget, _listItem) == 0x000368, "Member 'UGeneralCoinSelectItemWidget::_listItem' has a wrong offset!");

// Class OutGameModule.CustomMatchResultTopWidget
// 0x0078 (0x03C8 - 0x0350)
class UCustomMatchResultTopWidget final : public UWidgetBase
{
public:
	TSoftObjectPtr<class UWorld>                  _customMatchLevel;                                 // 0x0350(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomMatchResultTeamItemBaseWidget*   _teamItemTop;                                      // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomMatchResultTeamItemBaseWidget*   _teamItemSecond;                                   // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomMatchResultTeamItemBaseWidget*   _teamItemThird;                                    // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomMatchResultTeamListWidget*       _teamList;                                         // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _countText;                                        // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _returnButton;                                     // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3A8[0x20];                                     // 0x03A8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SendCustomMatchRoom();
	void SetFocusResultList();
	void SetInitFocus();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchResultTopWidget">();
	}
	static class UCustomMatchResultTopWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchResultTopWidget>();
	}
};
static_assert(alignof(UCustomMatchResultTopWidget) == 0x000008, "Wrong alignment on UCustomMatchResultTopWidget");
static_assert(sizeof(UCustomMatchResultTopWidget) == 0x0003C8, "Wrong size on UCustomMatchResultTopWidget");
static_assert(offsetof(UCustomMatchResultTopWidget, _customMatchLevel) == 0x000350, "Member 'UCustomMatchResultTopWidget::_customMatchLevel' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTopWidget, _teamItemTop) == 0x000378, "Member 'UCustomMatchResultTopWidget::_teamItemTop' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTopWidget, _teamItemSecond) == 0x000380, "Member 'UCustomMatchResultTopWidget::_teamItemSecond' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTopWidget, _teamItemThird) == 0x000388, "Member 'UCustomMatchResultTopWidget::_teamItemThird' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTopWidget, _teamList) == 0x000390, "Member 'UCustomMatchResultTopWidget::_teamList' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTopWidget, _countText) == 0x000398, "Member 'UCustomMatchResultTopWidget::_countText' has a wrong offset!");
static_assert(offsetof(UCustomMatchResultTopWidget, _returnButton) == 0x0003A0, "Member 'UCustomMatchResultTopWidget::_returnButton' has a wrong offset!");

// Class OutGameModule.CustomMatchSelectTop
// 0x0078 (0x03C8 - 0x0350)
class UCustomMatchSelectTop final : public UWidgetBase
{
public:
	class UCustomTileView*                        _tileView;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCheckButtonWidget*                     _checkButton;                                      // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _teamName;                                         // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _teamNumMaxText;                                   // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _teamNumText;                                      // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomMatchTabWidget*                  _tabWidget;                                        // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UCustomMatchSelectItemEntryObject*> _selectPlayerList;                                 // 0x0380(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UCustomMatchSelectItemEntryObject*> _beforTeamPlayerList;                              // 0x0390(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3A0[0x28];                                     // 0x03A0(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_SetPlayerList();
	void OnDecideKeyEvent(class UAppWidget* Widget, const struct FKey& Key, const EWidgetInputType InputType);
	void SetTileViewItem(bool bStandbyListOnly);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchSelectTop">();
	}
	static class UCustomMatchSelectTop* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchSelectTop>();
	}
};
static_assert(alignof(UCustomMatchSelectTop) == 0x000008, "Wrong alignment on UCustomMatchSelectTop");
static_assert(sizeof(UCustomMatchSelectTop) == 0x0003C8, "Wrong size on UCustomMatchSelectTop");
static_assert(offsetof(UCustomMatchSelectTop, _tileView) == 0x000350, "Member 'UCustomMatchSelectTop::_tileView' has a wrong offset!");
static_assert(offsetof(UCustomMatchSelectTop, _checkButton) == 0x000358, "Member 'UCustomMatchSelectTop::_checkButton' has a wrong offset!");
static_assert(offsetof(UCustomMatchSelectTop, _teamName) == 0x000360, "Member 'UCustomMatchSelectTop::_teamName' has a wrong offset!");
static_assert(offsetof(UCustomMatchSelectTop, _teamNumMaxText) == 0x000368, "Member 'UCustomMatchSelectTop::_teamNumMaxText' has a wrong offset!");
static_assert(offsetof(UCustomMatchSelectTop, _teamNumText) == 0x000370, "Member 'UCustomMatchSelectTop::_teamNumText' has a wrong offset!");
static_assert(offsetof(UCustomMatchSelectTop, _tabWidget) == 0x000378, "Member 'UCustomMatchSelectTop::_tabWidget' has a wrong offset!");
static_assert(offsetof(UCustomMatchSelectTop, _selectPlayerList) == 0x000380, "Member 'UCustomMatchSelectTop::_selectPlayerList' has a wrong offset!");
static_assert(offsetof(UCustomMatchSelectTop, _beforTeamPlayerList) == 0x000390, "Member 'UCustomMatchSelectTop::_beforTeamPlayerList' has a wrong offset!");

// Class OutGameModule.GeometryControllerAvatarCreate
// 0x0000 (0x0028 - 0x0028)
class UGeometryControllerAvatarCreate final : public UBlueprintFunctionLibrary
{
public:
	static struct FGeometry SetAccumulatedRenderTransform(const struct FGeometry& Geometry, float X, float Y);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GeometryControllerAvatarCreate">();
	}
	static class UGeometryControllerAvatarCreate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGeometryControllerAvatarCreate>();
	}
};
static_assert(alignof(UGeometryControllerAvatarCreate) == 0x000008, "Wrong alignment on UGeometryControllerAvatarCreate");
static_assert(sizeof(UGeometryControllerAvatarCreate) == 0x000028, "Wrong size on UGeometryControllerAvatarCreate");

// Class OutGameModule.CustomMatchSelectWidget
// 0x0028 (0x0378 - 0x0350)
class UCustomMatchSelectWidget final : public UWidgetBase
{
public:
	class UWidgetGeneralWindow*                   _reEntryRoom;                                      // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isCheck;                                          // 0x0358(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_359[0x1F];                                     // 0x0359(0x001F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CreateRoomEvent();
	void OnCompleteCreateRoom();
	void OnCompleteJoinRoom();
	void OnCompleteSettingsRoomData();
	void OnDecideGeneralWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool bLeft);
	void OpenCustomMatchLevel();
	void SearchRoomEvent(const class FString& ID);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchSelectWidget">();
	}
	static class UCustomMatchSelectWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchSelectWidget>();
	}
};
static_assert(alignof(UCustomMatchSelectWidget) == 0x000008, "Wrong alignment on UCustomMatchSelectWidget");
static_assert(sizeof(UCustomMatchSelectWidget) == 0x000378, "Wrong size on UCustomMatchSelectWidget");
static_assert(offsetof(UCustomMatchSelectWidget, _reEntryRoom) == 0x000350, "Member 'UCustomMatchSelectWidget::_reEntryRoom' has a wrong offset!");
static_assert(offsetof(UCustomMatchSelectWidget, _isCheck) == 0x000358, "Member 'UCustomMatchSelectWidget::_isCheck' has a wrong offset!");

// Class OutGameModule.CustomMatchStandbyListWidget
// 0x0060 (0x03B0 - 0x0350)
class UCustomMatchStandbyListWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x20];                                     // 0x0350(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UListView*                              _listView;                                         // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _menberNum;                                        // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomMatchTeamItemEntryObject*        _selectObject;                                     // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomMatchTeamItemEntryObject*        _decideObject;                                     // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UCustomMatchTeamItemEntryObject*> _clearReserveList;                                 // 0x0390(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UCustomMatchTeamItemEntryObject*> _emptyObjectList;                                  // 0x03A0(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)

public:
	void DoCustomWidgetNavigation(EUINavigation UiNavigation);
	void OnAddedToFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideKeyEvent(class UAppWidget* Widget, const struct FKey& Key, const EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchStandbyListWidget">();
	}
	static class UCustomMatchStandbyListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchStandbyListWidget>();
	}
};
static_assert(alignof(UCustomMatchStandbyListWidget) == 0x000008, "Wrong alignment on UCustomMatchStandbyListWidget");
static_assert(sizeof(UCustomMatchStandbyListWidget) == 0x0003B0, "Wrong size on UCustomMatchStandbyListWidget");
static_assert(offsetof(UCustomMatchStandbyListWidget, _listView) == 0x000370, "Member 'UCustomMatchStandbyListWidget::_listView' has a wrong offset!");
static_assert(offsetof(UCustomMatchStandbyListWidget, _menberNum) == 0x000378, "Member 'UCustomMatchStandbyListWidget::_menberNum' has a wrong offset!");
static_assert(offsetof(UCustomMatchStandbyListWidget, _selectObject) == 0x000380, "Member 'UCustomMatchStandbyListWidget::_selectObject' has a wrong offset!");
static_assert(offsetof(UCustomMatchStandbyListWidget, _decideObject) == 0x000388, "Member 'UCustomMatchStandbyListWidget::_decideObject' has a wrong offset!");
static_assert(offsetof(UCustomMatchStandbyListWidget, _clearReserveList) == 0x000390, "Member 'UCustomMatchStandbyListWidget::_clearReserveList' has a wrong offset!");
static_assert(offsetof(UCustomMatchStandbyListWidget, _emptyObjectList) == 0x0003A0, "Member 'UCustomMatchStandbyListWidget::_emptyObjectList' has a wrong offset!");

// Class OutGameModule.PresetObject
// 0x0008 (0x0038 - 0x0030)
class UPresetObject final : public UListViewEntryObjectBase
{
public:
	int32                                         _presetIndex;                                      // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          _maxIndex;                                         // 0x0034(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PresetObject">();
	}
	static class UPresetObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPresetObject>();
	}
};
static_assert(alignof(UPresetObject) == 0x000008, "Wrong alignment on UPresetObject");
static_assert(sizeof(UPresetObject) == 0x000038, "Wrong size on UPresetObject");
static_assert(offsetof(UPresetObject, _presetIndex) == 0x000030, "Member 'UPresetObject::_presetIndex' has a wrong offset!");
static_assert(offsetof(UPresetObject, _maxIndex) == 0x000034, "Member 'UPresetObject::_maxIndex' has a wrong offset!");

// Class OutGameModule.CustomMatchTabWidget
// 0x0090 (0x03E0 - 0x0350)
class UCustomMatchTabWidget final : public UWidgetBase
{
public:
	class UCustomMatchTopWidget*                  _customMatchTop;                                   // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomMatchResultTabTop*               _resultTabTop;                                     // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _randomButton;                                     // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _allClearButton;                                   // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _teamDecideButton;                                 // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomMatchGameModeSelectWidget*       _customMatchGameMode;                              // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGeneralPageCarouselWidget*             _pageCarousel;                                     // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomMatchJoinCodeWidget*             _customMatchJoinCode;                              // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTabWidget*                             _tab;                                              // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _buttonSwicher;                                    // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _kickPopup;                                        // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _removeRoomPopup;                                  // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         _horizontalBox;                                    // 0x03B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bClosePopup;                                      // 0x03B8(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B9[0x27];                                     // 0x03B9(0x0027)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_AllClear();
	void BP_DecideTeam();
	void BP_Exit();
	void BP_RandomSet();
	void BP_SetFocusTopWidget();
	void BP_ShowPlatformInviteUI();
	void BP_UnSelectedItemWidet();
	void ChangeCaroselIndex(int32 NewIndex, bool IsFocus);
	void CheckReadyBattle();
	void FocusAllClearButton();
	void OnChangeGameMode();
	void OnChangeTabEvent(int32 NewSelectTab);
	void OnCheckTeamMenberAlone(bool bAlone);
	void OnCompleteNotifyDisbanded();
	void OnCompleteNotifyExitRoom();
	void OnCompleteNotifyKickRoom();
	void OnCompleteNotifySetting();
	void OnCompleteNotifyStartBattle();
	void OnCompleteRequestResultData(const TArray<struct FCustomMatchResultData>& ResultDataList);
	void OnDecideKickPopupEvent(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnDecideRemoveRoomoPopupEvent(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnExitFadeOutEvent();
	void OnFadeOutEvent();
	void OnKickPlayerEvent();
	void OpenKickedPopup();
	void SetHiddenButton();
	void SetSelectTeamCode(int32 Code);
	void SetSelectTeamName(const class FText& Name_0);
	void SetStateBattleReadyEvent(bool bReady);
	void SetStateTextEvent(int32 StateCode);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchTabWidget">();
	}
	static class UCustomMatchTabWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchTabWidget>();
	}
};
static_assert(alignof(UCustomMatchTabWidget) == 0x000008, "Wrong alignment on UCustomMatchTabWidget");
static_assert(sizeof(UCustomMatchTabWidget) == 0x0003E0, "Wrong size on UCustomMatchTabWidget");
static_assert(offsetof(UCustomMatchTabWidget, _customMatchTop) == 0x000350, "Member 'UCustomMatchTabWidget::_customMatchTop' has a wrong offset!");
static_assert(offsetof(UCustomMatchTabWidget, _resultTabTop) == 0x000358, "Member 'UCustomMatchTabWidget::_resultTabTop' has a wrong offset!");
static_assert(offsetof(UCustomMatchTabWidget, _randomButton) == 0x000360, "Member 'UCustomMatchTabWidget::_randomButton' has a wrong offset!");
static_assert(offsetof(UCustomMatchTabWidget, _allClearButton) == 0x000368, "Member 'UCustomMatchTabWidget::_allClearButton' has a wrong offset!");
static_assert(offsetof(UCustomMatchTabWidget, _teamDecideButton) == 0x000370, "Member 'UCustomMatchTabWidget::_teamDecideButton' has a wrong offset!");
static_assert(offsetof(UCustomMatchTabWidget, _customMatchGameMode) == 0x000378, "Member 'UCustomMatchTabWidget::_customMatchGameMode' has a wrong offset!");
static_assert(offsetof(UCustomMatchTabWidget, _pageCarousel) == 0x000380, "Member 'UCustomMatchTabWidget::_pageCarousel' has a wrong offset!");
static_assert(offsetof(UCustomMatchTabWidget, _customMatchJoinCode) == 0x000388, "Member 'UCustomMatchTabWidget::_customMatchJoinCode' has a wrong offset!");
static_assert(offsetof(UCustomMatchTabWidget, _tab) == 0x000390, "Member 'UCustomMatchTabWidget::_tab' has a wrong offset!");
static_assert(offsetof(UCustomMatchTabWidget, _buttonSwicher) == 0x000398, "Member 'UCustomMatchTabWidget::_buttonSwicher' has a wrong offset!");
static_assert(offsetof(UCustomMatchTabWidget, _kickPopup) == 0x0003A0, "Member 'UCustomMatchTabWidget::_kickPopup' has a wrong offset!");
static_assert(offsetof(UCustomMatchTabWidget, _removeRoomPopup) == 0x0003A8, "Member 'UCustomMatchTabWidget::_removeRoomPopup' has a wrong offset!");
static_assert(offsetof(UCustomMatchTabWidget, _horizontalBox) == 0x0003B0, "Member 'UCustomMatchTabWidget::_horizontalBox' has a wrong offset!");
static_assert(offsetof(UCustomMatchTabWidget, _bClosePopup) == 0x0003B8, "Member 'UCustomMatchTabWidget::_bClosePopup' has a wrong offset!");

// Class OutGameModule.CustomMatchTeamButtonWidget
// 0x0018 (0x0368 - 0x0350)
class UCustomMatchTeamButtonWidget final : public UWidgetBase
{
public:
	class UTextBlock*                             _teamName;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _button;                                           // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _teamCode;                                         // 0x0360(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchTeamButtonWidget">();
	}
	static class UCustomMatchTeamButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchTeamButtonWidget>();
	}
};
static_assert(alignof(UCustomMatchTeamButtonWidget) == 0x000008, "Wrong alignment on UCustomMatchTeamButtonWidget");
static_assert(sizeof(UCustomMatchTeamButtonWidget) == 0x000368, "Wrong size on UCustomMatchTeamButtonWidget");
static_assert(offsetof(UCustomMatchTeamButtonWidget, _teamName) == 0x000350, "Member 'UCustomMatchTeamButtonWidget::_teamName' has a wrong offset!");
static_assert(offsetof(UCustomMatchTeamButtonWidget, _button) == 0x000358, "Member 'UCustomMatchTeamButtonWidget::_button' has a wrong offset!");
static_assert(offsetof(UCustomMatchTeamButtonWidget, _teamCode) == 0x000360, "Member 'UCustomMatchTeamButtonWidget::_teamCode' has a wrong offset!");

// Class OutGameModule.GeneralCarouselWidget
// 0x0080 (0x0508 - 0x0488)
class UGeneralCarouselWidget final : public UWidgetButton
{
public:
	class UOverlay*                               _imageCanvasPanel;                                 // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _text;                                             // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _backImage;                                        // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _index;                                            // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4A4[0x4];                                      // 0x04A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           _carouselMessage;                                  // 0x04A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          _inputLoopFlag;                                    // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnChangeIndexDelegate;                             // 0x04C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnChangeFinishDelegate;                            // 0x04D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          _bDispFocus;                                       // 0x04E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4E1[0xF];                                      // 0x04E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _continuousSeconds;                                // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4F4[0x4];                                      // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetButton*                          _leftButton;                                       // 0x04F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetButton*                          _rightButton;                                      // 0x0500(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void BP_AddMessage(const class FText& Message);
	void BP_ClearMessage();
	int32 BP_GetIndex();
	bool BP_GetInputEnableFlag();
	bool BP_IsSelectedIndex();
	void BP_NextCarousel();
	void BP_PrevCarousel();
	void BP_SetIndex(int32 Index_0, bool bUpdateMessage);
	void BP_SetInputEnableFlag(bool Val);
	void BP_SetMessage(const class FText& Message);
	void InputEnd(const int32& NewIndex);
	void OnChangeIndexDelegate__DelegateSignature(int32 NewIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GeneralCarouselWidget">();
	}
	static class UGeneralCarouselWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGeneralCarouselWidget>();
	}
};
static_assert(alignof(UGeneralCarouselWidget) == 0x000008, "Wrong alignment on UGeneralCarouselWidget");
static_assert(sizeof(UGeneralCarouselWidget) == 0x000508, "Wrong size on UGeneralCarouselWidget");
static_assert(offsetof(UGeneralCarouselWidget, _imageCanvasPanel) == 0x000488, "Member 'UGeneralCarouselWidget::_imageCanvasPanel' has a wrong offset!");
static_assert(offsetof(UGeneralCarouselWidget, _text) == 0x000490, "Member 'UGeneralCarouselWidget::_text' has a wrong offset!");
static_assert(offsetof(UGeneralCarouselWidget, _backImage) == 0x000498, "Member 'UGeneralCarouselWidget::_backImage' has a wrong offset!");
static_assert(offsetof(UGeneralCarouselWidget, _index) == 0x0004A0, "Member 'UGeneralCarouselWidget::_index' has a wrong offset!");
static_assert(offsetof(UGeneralCarouselWidget, _carouselMessage) == 0x0004A8, "Member 'UGeneralCarouselWidget::_carouselMessage' has a wrong offset!");
static_assert(offsetof(UGeneralCarouselWidget, _inputLoopFlag) == 0x0004B8, "Member 'UGeneralCarouselWidget::_inputLoopFlag' has a wrong offset!");
static_assert(offsetof(UGeneralCarouselWidget, OnChangeIndexDelegate) == 0x0004C0, "Member 'UGeneralCarouselWidget::OnChangeIndexDelegate' has a wrong offset!");
static_assert(offsetof(UGeneralCarouselWidget, OnChangeFinishDelegate) == 0x0004D0, "Member 'UGeneralCarouselWidget::OnChangeFinishDelegate' has a wrong offset!");
static_assert(offsetof(UGeneralCarouselWidget, _bDispFocus) == 0x0004E0, "Member 'UGeneralCarouselWidget::_bDispFocus' has a wrong offset!");
static_assert(offsetof(UGeneralCarouselWidget, _continuousSeconds) == 0x0004F0, "Member 'UGeneralCarouselWidget::_continuousSeconds' has a wrong offset!");
static_assert(offsetof(UGeneralCarouselWidget, _leftButton) == 0x0004F8, "Member 'UGeneralCarouselWidget::_leftButton' has a wrong offset!");
static_assert(offsetof(UGeneralCarouselWidget, _rightButton) == 0x000500, "Member 'UGeneralCarouselWidget::_rightButton' has a wrong offset!");

// Class OutGameModule.CustomMatchTeamItemEntryObject
// 0x0050 (0x0080 - 0x0030)
class UCustomMatchTeamItemEntryObject : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x50];                                      // 0x0030(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchTeamItemEntryObject">();
	}
	static class UCustomMatchTeamItemEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchTeamItemEntryObject>();
	}
};
static_assert(alignof(UCustomMatchTeamItemEntryObject) == 0x000008, "Wrong alignment on UCustomMatchTeamItemEntryObject");
static_assert(sizeof(UCustomMatchTeamItemEntryObject) == 0x000080, "Wrong size on UCustomMatchTeamItemEntryObject");

// Class OutGameModule.CustomMatchSelectItemEntryObject
// 0x0008 (0x0088 - 0x0080)
class UCustomMatchSelectItemEntryObject final : public UCustomMatchTeamItemEntryObject
{
public:
	uint8                                         Pad_80[0x8];                                       // 0x0080(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchSelectItemEntryObject">();
	}
	static class UCustomMatchSelectItemEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchSelectItemEntryObject>();
	}
};
static_assert(alignof(UCustomMatchSelectItemEntryObject) == 0x000008, "Wrong alignment on UCustomMatchSelectItemEntryObject");
static_assert(sizeof(UCustomMatchSelectItemEntryObject) == 0x000088, "Wrong size on UCustomMatchSelectItemEntryObject");

// Class OutGameModule.GeneralShoppingWidget
// 0x00B8 (0x0650 - 0x0598)
class UGeneralShoppingWidget final : public UWidgetGeneralWindow
{
public:
	FMulticastInlineDelegateProperty_             _itemAddEvent;                                     // 0x0598(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class URichTextBlock*                         _hederText;                                        // 0x05A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         _notEnuoghText;                                    // 0x05B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCoinWidget*                            _hasCoinWidget;                                    // 0x05B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCoinWidget*                            _needCoinWidget;                                   // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCoinWidget*                            _sumCoinWidget;                                    // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _minusPlusButtonPanel;                             // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPackItemListWidget*                    _packList;                                         // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGeneralCountCarouselWidget*            _shoppingCountCarouselWidget;                      // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bMinusPlusPanelHidden;                            // 0x05E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECurrencyType                                 _coinType;                                         // 0x05E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5EA[0x2];                                      // 0x05EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _needCoinNum;                                      // 0x05EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   _target;                                           // 0x05F0(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                   _cmd;                                              // 0x0608(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                   _itemBuyMaxCountTextFormat;                        // 0x0620(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UItemRankUpWidget*                      _itemRankUp;                                       // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bMoveShopNotEnuogh;                               // 0x0640(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_641[0xF];                                      // 0x0641(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddItemDelegate__DelegateSignature(const int32 Value);
	void BP_AddBuyCount(int32 AddBuyCount);
	void BP_SetBuyCount(int32 buyCount);
	void BP_SetupImage(ECurrencyType Type, int32 NeedNum, int32 MaxBuyCount, const class FText& Target, const class FText& Cmd, bool bUpdate);
	void BP_SetupItemGuage(int32 Rank, int32 NowExp, int32 MaxExp);
	void BP_SetupPackItem();
	void BP_UpdateImage();
	void BP_UpdateItemGuage(int32 Value);
	void OnShowTokusyouhouButton(bool bShowButton);

	int32 BP_GetBuyCount() const;
	bool BP_GetNotEnuogh() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GeneralShoppingWidget">();
	}
	static class UGeneralShoppingWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGeneralShoppingWidget>();
	}
};
static_assert(alignof(UGeneralShoppingWidget) == 0x000008, "Wrong alignment on UGeneralShoppingWidget");
static_assert(sizeof(UGeneralShoppingWidget) == 0x000650, "Wrong size on UGeneralShoppingWidget");
static_assert(offsetof(UGeneralShoppingWidget, _itemAddEvent) == 0x000598, "Member 'UGeneralShoppingWidget::_itemAddEvent' has a wrong offset!");
static_assert(offsetof(UGeneralShoppingWidget, _hederText) == 0x0005A8, "Member 'UGeneralShoppingWidget::_hederText' has a wrong offset!");
static_assert(offsetof(UGeneralShoppingWidget, _notEnuoghText) == 0x0005B0, "Member 'UGeneralShoppingWidget::_notEnuoghText' has a wrong offset!");
static_assert(offsetof(UGeneralShoppingWidget, _hasCoinWidget) == 0x0005B8, "Member 'UGeneralShoppingWidget::_hasCoinWidget' has a wrong offset!");
static_assert(offsetof(UGeneralShoppingWidget, _needCoinWidget) == 0x0005C0, "Member 'UGeneralShoppingWidget::_needCoinWidget' has a wrong offset!");
static_assert(offsetof(UGeneralShoppingWidget, _sumCoinWidget) == 0x0005C8, "Member 'UGeneralShoppingWidget::_sumCoinWidget' has a wrong offset!");
static_assert(offsetof(UGeneralShoppingWidget, _minusPlusButtonPanel) == 0x0005D0, "Member 'UGeneralShoppingWidget::_minusPlusButtonPanel' has a wrong offset!");
static_assert(offsetof(UGeneralShoppingWidget, _packList) == 0x0005D8, "Member 'UGeneralShoppingWidget::_packList' has a wrong offset!");
static_assert(offsetof(UGeneralShoppingWidget, _shoppingCountCarouselWidget) == 0x0005E0, "Member 'UGeneralShoppingWidget::_shoppingCountCarouselWidget' has a wrong offset!");
static_assert(offsetof(UGeneralShoppingWidget, _bMinusPlusPanelHidden) == 0x0005E8, "Member 'UGeneralShoppingWidget::_bMinusPlusPanelHidden' has a wrong offset!");
static_assert(offsetof(UGeneralShoppingWidget, _coinType) == 0x0005E9, "Member 'UGeneralShoppingWidget::_coinType' has a wrong offset!");
static_assert(offsetof(UGeneralShoppingWidget, _needCoinNum) == 0x0005EC, "Member 'UGeneralShoppingWidget::_needCoinNum' has a wrong offset!");
static_assert(offsetof(UGeneralShoppingWidget, _target) == 0x0005F0, "Member 'UGeneralShoppingWidget::_target' has a wrong offset!");
static_assert(offsetof(UGeneralShoppingWidget, _cmd) == 0x000608, "Member 'UGeneralShoppingWidget::_cmd' has a wrong offset!");
static_assert(offsetof(UGeneralShoppingWidget, _itemBuyMaxCountTextFormat) == 0x000620, "Member 'UGeneralShoppingWidget::_itemBuyMaxCountTextFormat' has a wrong offset!");
static_assert(offsetof(UGeneralShoppingWidget, _itemRankUp) == 0x000638, "Member 'UGeneralShoppingWidget::_itemRankUp' has a wrong offset!");
static_assert(offsetof(UGeneralShoppingWidget, _bMoveShopNotEnuogh) == 0x000640, "Member 'UGeneralShoppingWidget::_bMoveShopNotEnuogh' has a wrong offset!");

// Class OutGameModule.CustomMatchResultTeamItemEntryObject
// 0x0030 (0x0060 - 0x0030)
class UCustomMatchResultTeamItemEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x30];                                      // 0x0030(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchResultTeamItemEntryObject">();
	}
	static class UCustomMatchResultTeamItemEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchResultTeamItemEntryObject>();
	}
};
static_assert(alignof(UCustomMatchResultTeamItemEntryObject) == 0x000008, "Wrong alignment on UCustomMatchResultTeamItemEntryObject");
static_assert(sizeof(UCustomMatchResultTeamItemEntryObject) == 0x000060, "Wrong size on UCustomMatchResultTeamItemEntryObject");

// Class OutGameModule.CustomMatchGameModeEntryObject
// 0x0038 (0x0068 - 0x0030)
class UCustomMatchGameModeEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x38];                                      // 0x0030(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchGameModeEntryObject">();
	}
	static class UCustomMatchGameModeEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchGameModeEntryObject>();
	}
};
static_assert(alignof(UCustomMatchGameModeEntryObject) == 0x000008, "Wrong alignment on UCustomMatchGameModeEntryObject");
static_assert(sizeof(UCustomMatchGameModeEntryObject) == 0x000068, "Wrong size on UCustomMatchGameModeEntryObject");

// Class OutGameModule.GuildApplicantListWindow
// 0x0008 (0x0358 - 0x0350)
class UGuildApplicantListWindow final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x8];                                      // 0x0350(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAcceptAndDenyError();
	void OnAcceptGuildCompleted();
	void OnDenyGuildCompleted();
	void OnUpdateComplete(int32 RequestId);
	void RequestAcceptGuild(const class FString& PlayerId);
	void RequestDenyGuild(const class FString& PlayerId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildApplicantListWindow">();
	}
	static class UGuildApplicantListWindow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildApplicantListWindow>();
	}
};
static_assert(alignof(UGuildApplicantListWindow) == 0x000008, "Wrong alignment on UGuildApplicantListWindow");
static_assert(sizeof(UGuildApplicantListWindow) == 0x000358, "Wrong size on UGuildApplicantListWindow");

// Class OutGameModule.CustomMatchGameRuleEntryObject
// 0x0028 (0x0058 - 0x0030)
class UCustomMatchGameRuleEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x28];                                      // 0x0030(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchGameRuleEntryObject">();
	}
	static class UCustomMatchGameRuleEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchGameRuleEntryObject>();
	}
};
static_assert(alignof(UCustomMatchGameRuleEntryObject) == 0x000008, "Wrong alignment on UCustomMatchGameRuleEntryObject");
static_assert(sizeof(UCustomMatchGameRuleEntryObject) == 0x000058, "Wrong size on UCustomMatchGameRuleEntryObject");

// Class OutGameModule.CustomMatchRerultTabEntryObject
// 0x0040 (0x0070 - 0x0030)
class UCustomMatchRerultTabEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x40];                                      // 0x0030(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchRerultTabEntryObject">();
	}
	static class UCustomMatchRerultTabEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchRerultTabEntryObject>();
	}
};
static_assert(alignof(UCustomMatchRerultTabEntryObject) == 0x000008, "Wrong alignment on UCustomMatchRerultTabEntryObject");
static_assert(sizeof(UCustomMatchRerultTabEntryObject) == 0x000070, "Wrong size on UCustomMatchRerultTabEntryObject");

// Class OutGameModule.GuildActivityStatusItemWidget
// 0x0040 (0x0670 - 0x0630)
class UGuildActivityStatusItemWidget final : public UPlatformWidgetButton
{
public:
	uint8                                         Pad_630[0x8];                                      // 0x0630(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UGuildActivityStatusWidget*             _guildActivityStatusWidget;                        // 0x0638(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGuildActivityStatusItemObject*         _guildActivityStatusItemObject;                    // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTimeWidget*                            _timeView;                                         // 0x0648(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _activityTextBlock;                                // 0x0650(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _likeCountTextBlock;                               // 0x0658(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _dayTextBlock;                                     // 0x0660(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _likeRemainsTextBlock;                             // 0x0668(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnSetShowLikeRemainsView(bool bShow);
	void OnSetShowTimeView(bool bShow);

	bool CanAddLike() const;
	bool GetMyself() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildActivityStatusItemWidget">();
	}
	static class UGuildActivityStatusItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildActivityStatusItemWidget>();
	}
};
static_assert(alignof(UGuildActivityStatusItemWidget) == 0x000008, "Wrong alignment on UGuildActivityStatusItemWidget");
static_assert(sizeof(UGuildActivityStatusItemWidget) == 0x000670, "Wrong size on UGuildActivityStatusItemWidget");
static_assert(offsetof(UGuildActivityStatusItemWidget, _guildActivityStatusWidget) == 0x000638, "Member 'UGuildActivityStatusItemWidget::_guildActivityStatusWidget' has a wrong offset!");
static_assert(offsetof(UGuildActivityStatusItemWidget, _guildActivityStatusItemObject) == 0x000640, "Member 'UGuildActivityStatusItemWidget::_guildActivityStatusItemObject' has a wrong offset!");
static_assert(offsetof(UGuildActivityStatusItemWidget, _timeView) == 0x000648, "Member 'UGuildActivityStatusItemWidget::_timeView' has a wrong offset!");
static_assert(offsetof(UGuildActivityStatusItemWidget, _activityTextBlock) == 0x000650, "Member 'UGuildActivityStatusItemWidget::_activityTextBlock' has a wrong offset!");
static_assert(offsetof(UGuildActivityStatusItemWidget, _likeCountTextBlock) == 0x000658, "Member 'UGuildActivityStatusItemWidget::_likeCountTextBlock' has a wrong offset!");
static_assert(offsetof(UGuildActivityStatusItemWidget, _dayTextBlock) == 0x000660, "Member 'UGuildActivityStatusItemWidget::_dayTextBlock' has a wrong offset!");
static_assert(offsetof(UGuildActivityStatusItemWidget, _likeRemainsTextBlock) == 0x000668, "Member 'UGuildActivityStatusItemWidget::_likeRemainsTextBlock' has a wrong offset!");

// Class OutGameModule.CustomMatchTeamItemWidget
// 0x0070 (0x0520 - 0x04B0)
class UCustomMatchTeamItemWidget final : public UWidgetButtonDetails
{
public:
	uint8                                         Pad_4B0[0x8];                                      // 0x04B0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UWorld>                  _subLevel;                                         // 0x04B8(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _activeSwitcher;                                   // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        _selectSwitcher;                                   // 0x04E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        _roleSwitcher;                                     // 0x04F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 _playerRankImage;                                  // 0x04F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProfileDisplayRankWidget*              _profileRank;                                      // 0x0500(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAdjustTextWidget*                      _playerName;                                       // 0x0508(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomMatchTeamItemEntryObject*        _entryObject;                                      // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_518[0x8];                                      // 0x0518(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OpenProfileMenu();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchTeamItemWidget">();
	}
	static class UCustomMatchTeamItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchTeamItemWidget>();
	}
};
static_assert(alignof(UCustomMatchTeamItemWidget) == 0x000008, "Wrong alignment on UCustomMatchTeamItemWidget");
static_assert(sizeof(UCustomMatchTeamItemWidget) == 0x000520, "Wrong size on UCustomMatchTeamItemWidget");
static_assert(offsetof(UCustomMatchTeamItemWidget, _subLevel) == 0x0004B8, "Member 'UCustomMatchTeamItemWidget::_subLevel' has a wrong offset!");
static_assert(offsetof(UCustomMatchTeamItemWidget, _activeSwitcher) == 0x0004E0, "Member 'UCustomMatchTeamItemWidget::_activeSwitcher' has a wrong offset!");
static_assert(offsetof(UCustomMatchTeamItemWidget, _selectSwitcher) == 0x0004E8, "Member 'UCustomMatchTeamItemWidget::_selectSwitcher' has a wrong offset!");
static_assert(offsetof(UCustomMatchTeamItemWidget, _roleSwitcher) == 0x0004F0, "Member 'UCustomMatchTeamItemWidget::_roleSwitcher' has a wrong offset!");
static_assert(offsetof(UCustomMatchTeamItemWidget, _playerRankImage) == 0x0004F8, "Member 'UCustomMatchTeamItemWidget::_playerRankImage' has a wrong offset!");
static_assert(offsetof(UCustomMatchTeamItemWidget, _profileRank) == 0x000500, "Member 'UCustomMatchTeamItemWidget::_profileRank' has a wrong offset!");
static_assert(offsetof(UCustomMatchTeamItemWidget, _playerName) == 0x000508, "Member 'UCustomMatchTeamItemWidget::_playerName' has a wrong offset!");
static_assert(offsetof(UCustomMatchTeamItemWidget, _entryObject) == 0x000510, "Member 'UCustomMatchTeamItemWidget::_entryObject' has a wrong offset!");

// Class OutGameModule.CustomMatchTeamListWidget
// 0x0088 (0x03D8 - 0x0350)
class UCustomMatchTeamListWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x60];                                     // 0x0350(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	class UUniformGridPanel*                      _gridPanel;                                        // 0x03B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UCustomMatchTeamWidget*>         _teamWidgetList;                                   // 0x03B8(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	int32                                         _listRow;                                          // 0x03C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _listColum;                                        // 0x03CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3D0[0x8];                                      // 0x03D0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchTeamListWidget">();
	}
	static class UCustomMatchTeamListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchTeamListWidget>();
	}
};
static_assert(alignof(UCustomMatchTeamListWidget) == 0x000008, "Wrong alignment on UCustomMatchTeamListWidget");
static_assert(sizeof(UCustomMatchTeamListWidget) == 0x0003D8, "Wrong size on UCustomMatchTeamListWidget");
static_assert(offsetof(UCustomMatchTeamListWidget, _gridPanel) == 0x0003B0, "Member 'UCustomMatchTeamListWidget::_gridPanel' has a wrong offset!");
static_assert(offsetof(UCustomMatchTeamListWidget, _teamWidgetList) == 0x0003B8, "Member 'UCustomMatchTeamListWidget::_teamWidgetList' has a wrong offset!");
static_assert(offsetof(UCustomMatchTeamListWidget, _listRow) == 0x0003C8, "Member 'UCustomMatchTeamListWidget::_listRow' has a wrong offset!");
static_assert(offsetof(UCustomMatchTeamListWidget, _listColum) == 0x0003CC, "Member 'UCustomMatchTeamListWidget::_listColum' has a wrong offset!");

// Class OutGameModule.GeneralPresetWidget
// 0x00F0 (0x04D8 - 0x03E8)
class UGeneralPresetWidget final : public UAppWidget
{
public:
	FMulticastInlineDelegateProperty_             OnDecidePresetDelegate;                            // 0x03E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UOverlay*                               _saveButtonOverlay;                                // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               _callButtonOverlay;                                // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _saveButton;                                       // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _callButton;                                       // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _displayMessage;                                   // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EPresetWidgetType                             _type;                                             // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPresetWidgetType, struct FAnchorData>   _callButtonAnchorDataMap;                          // 0x0428(0x0050)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<EPresetWidgetType, struct FAnchorData>   _saveButtonAnchorDataMap;                          // 0x0478(0x0050)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UPresetObject*                          _presetObject;                                     // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _selectedButton;                                   // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnAddedToFocusPreset(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecidePreset(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnPressPreset(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnRemovedFromFocusPreset(class UAppWidget* Widget, EWidgetInputType InputType);
	void UpdateDisplay();

	class UWidgetButton* BP_GetCallButton() const;
	int32 BP_GetPresetIndex() const;
	class UWidgetButton* BP_GetSaveButton() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GeneralPresetWidget">();
	}
	static class UGeneralPresetWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGeneralPresetWidget>();
	}
};
static_assert(alignof(UGeneralPresetWidget) == 0x000008, "Wrong alignment on UGeneralPresetWidget");
static_assert(sizeof(UGeneralPresetWidget) == 0x0004D8, "Wrong size on UGeneralPresetWidget");
static_assert(offsetof(UGeneralPresetWidget, OnDecidePresetDelegate) == 0x0003E8, "Member 'UGeneralPresetWidget::OnDecidePresetDelegate' has a wrong offset!");
static_assert(offsetof(UGeneralPresetWidget, _saveButtonOverlay) == 0x0003F8, "Member 'UGeneralPresetWidget::_saveButtonOverlay' has a wrong offset!");
static_assert(offsetof(UGeneralPresetWidget, _callButtonOverlay) == 0x000400, "Member 'UGeneralPresetWidget::_callButtonOverlay' has a wrong offset!");
static_assert(offsetof(UGeneralPresetWidget, _saveButton) == 0x000408, "Member 'UGeneralPresetWidget::_saveButton' has a wrong offset!");
static_assert(offsetof(UGeneralPresetWidget, _callButton) == 0x000410, "Member 'UGeneralPresetWidget::_callButton' has a wrong offset!");
static_assert(offsetof(UGeneralPresetWidget, _displayMessage) == 0x000418, "Member 'UGeneralPresetWidget::_displayMessage' has a wrong offset!");
static_assert(offsetof(UGeneralPresetWidget, _type) == 0x000420, "Member 'UGeneralPresetWidget::_type' has a wrong offset!");
static_assert(offsetof(UGeneralPresetWidget, _callButtonAnchorDataMap) == 0x000428, "Member 'UGeneralPresetWidget::_callButtonAnchorDataMap' has a wrong offset!");
static_assert(offsetof(UGeneralPresetWidget, _saveButtonAnchorDataMap) == 0x000478, "Member 'UGeneralPresetWidget::_saveButtonAnchorDataMap' has a wrong offset!");
static_assert(offsetof(UGeneralPresetWidget, _presetObject) == 0x0004C8, "Member 'UGeneralPresetWidget::_presetObject' has a wrong offset!");
static_assert(offsetof(UGeneralPresetWidget, _selectedButton) == 0x0004D0, "Member 'UGeneralPresetWidget::_selectedButton' has a wrong offset!");

// Class OutGameModule.CustomMatchTeamWidget
// 0x0098 (0x03E8 - 0x0350)
class UCustomMatchTeamWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x40];                                     // 0x0350(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class UListView*                              _listView;                                         // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomMatchTeamButtonWidget*           _teamButton;                                       // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomMatchTeamItemEntryObject*        _selectObject;                                     // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UCustomMatchTeamItemEntryObject*> ObjectList;                                        // 0x03A8(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UCustomMatchTeamItemEntryObject*> _clearReserveList;                                 // 0x03B8(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                         _listNum;                                          // 0x03C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3CC[0x1C];                                     // 0x03CC(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DoCustomTeamButtonNavigation(EUINavigation UiNavigation);
	void DoCustomWidgetNavigation(EUINavigation UiNavigation);
	void OnAddedToFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideKeyEvent(class UAppWidget* Widget, const struct FKey& Key, const EWidgetInputType InputType);
	void OnDecideTeamButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchTeamWidget">();
	}
	static class UCustomMatchTeamWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchTeamWidget>();
	}
};
static_assert(alignof(UCustomMatchTeamWidget) == 0x000008, "Wrong alignment on UCustomMatchTeamWidget");
static_assert(sizeof(UCustomMatchTeamWidget) == 0x0003E8, "Wrong size on UCustomMatchTeamWidget");
static_assert(offsetof(UCustomMatchTeamWidget, _listView) == 0x000390, "Member 'UCustomMatchTeamWidget::_listView' has a wrong offset!");
static_assert(offsetof(UCustomMatchTeamWidget, _teamButton) == 0x000398, "Member 'UCustomMatchTeamWidget::_teamButton' has a wrong offset!");
static_assert(offsetof(UCustomMatchTeamWidget, _selectObject) == 0x0003A0, "Member 'UCustomMatchTeamWidget::_selectObject' has a wrong offset!");
static_assert(offsetof(UCustomMatchTeamWidget, ObjectList) == 0x0003A8, "Member 'UCustomMatchTeamWidget::ObjectList' has a wrong offset!");
static_assert(offsetof(UCustomMatchTeamWidget, _clearReserveList) == 0x0003B8, "Member 'UCustomMatchTeamWidget::_clearReserveList' has a wrong offset!");
static_assert(offsetof(UCustomMatchTeamWidget, _listNum) == 0x0003C8, "Member 'UCustomMatchTeamWidget::_listNum' has a wrong offset!");

// Class OutGameModule.CustomMatchTopWidget
// 0x0090 (0x03E0 - 0x0350)
class UCustomMatchTopWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x30];                                     // 0x0350(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UWorld>                  _subLevel;                                         // 0x0380(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _teamListSwitcher;                                 // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomMatchStandbyListWidget*          _customMatchStandByList;                           // 0x03B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomMatchTeamListWidget*             _selectTeamList;                                   // 0x03B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomMatchTeamItemWidget*             _selectItemWidget;                                 // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomMatchTeamWidget*                 _selectTeamWidget;                                 // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3D0[0x10];                                     // 0x03D0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_ClearSelectPlayer();
	void BP_ClearTeam();
	void BP_CloseSubMenu();
	void BP_EditTeam();
	void BP_KickPlayer();
	void BP_MovePlayer();
	void BP_ReturnStandbyList();
	class FName GetCurrentLanguage();
	void OnOpenSubMenu(class UCustomMatchTeamItemWidget* Widget, bool bHost);
	void OnOpenSubMenuTeamEdit(class UWidgetBase* Widget, bool bRight);
	void OnOpenSubMenuTeamList(class UCustomMatchTeamItemWidget* Widget, bool bHost, bool bRight);
	void SetFocusTeamButton(int32 Num);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomMatchTopWidget">();
	}
	static class UCustomMatchTopWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomMatchTopWidget>();
	}
};
static_assert(alignof(UCustomMatchTopWidget) == 0x000008, "Wrong alignment on UCustomMatchTopWidget");
static_assert(sizeof(UCustomMatchTopWidget) == 0x0003E0, "Wrong size on UCustomMatchTopWidget");
static_assert(offsetof(UCustomMatchTopWidget, _subLevel) == 0x000380, "Member 'UCustomMatchTopWidget::_subLevel' has a wrong offset!");
static_assert(offsetof(UCustomMatchTopWidget, _teamListSwitcher) == 0x0003A8, "Member 'UCustomMatchTopWidget::_teamListSwitcher' has a wrong offset!");
static_assert(offsetof(UCustomMatchTopWidget, _customMatchStandByList) == 0x0003B0, "Member 'UCustomMatchTopWidget::_customMatchStandByList' has a wrong offset!");
static_assert(offsetof(UCustomMatchTopWidget, _selectTeamList) == 0x0003B8, "Member 'UCustomMatchTopWidget::_selectTeamList' has a wrong offset!");
static_assert(offsetof(UCustomMatchTopWidget, _selectItemWidget) == 0x0003C0, "Member 'UCustomMatchTopWidget::_selectItemWidget' has a wrong offset!");
static_assert(offsetof(UCustomMatchTopWidget, _selectTeamWidget) == 0x0003C8, "Member 'UCustomMatchTopWidget::_selectTeamWidget' has a wrong offset!");

// Class OutGameModule.GuildApplicantListItemWidget
// 0x0010 (0x0498 - 0x0488)
class UGuildApplicantListItemWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UGuildApplicantListItemObject*          _guildApplicantListItemObject;                     // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnSetLoginView(bool bLogin);
	void OnSetPlayerName(const class FText& PlayerName);
	void OnSetTime(const struct FTimespan& Timespan);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildApplicantListItemWidget">();
	}
	static class UGuildApplicantListItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildApplicantListItemWidget>();
	}
};
static_assert(alignof(UGuildApplicantListItemWidget) == 0x000008, "Wrong alignment on UGuildApplicantListItemWidget");
static_assert(sizeof(UGuildApplicantListItemWidget) == 0x000498, "Wrong size on UGuildApplicantListItemWidget");
static_assert(offsetof(UGuildApplicantListItemWidget, _guildApplicantListItemObject) == 0x000490, "Member 'UGuildApplicantListItemWidget::_guildApplicantListItemObject' has a wrong offset!");

// Class OutGameModule.DeltaProgressBarWidget
// 0x0070 (0x04F0 - 0x0480)
class UDeltaProgressBarWidget : public UProgressBarWidget
{
public:
	uint8                                         Pad_480[0x34];                                     // 0x0480(0x0034)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _preValue;                                         // 0x04B4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4B8[0x8];                                      // 0x04B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                _preProgressMask;                                  // 0x04C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _nowValue;                                         // 0x04C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4CC[0x4];                                      // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                _progressMask;                                     // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4D8[0x18];                                     // 0x04D8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_SetProgressValue(const float& PreValue, const float& MaxValue);
	void BP_SetProgressValueMaxArray(const float& PreValue, const float& NowValue, const TArray<float>& MaxValues);
	void BP_SetProgressValues(const float& PreValue, const float& NowValue, const float& MaxValue);
	void LevelUpDelegate__DelegateSignature(const int32 LevelCount);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeltaProgressBarWidget">();
	}
	static class UDeltaProgressBarWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeltaProgressBarWidget>();
	}
};
static_assert(alignof(UDeltaProgressBarWidget) == 0x000010, "Wrong alignment on UDeltaProgressBarWidget");
static_assert(sizeof(UDeltaProgressBarWidget) == 0x0004F0, "Wrong size on UDeltaProgressBarWidget");
static_assert(offsetof(UDeltaProgressBarWidget, _preValue) == 0x0004B4, "Member 'UDeltaProgressBarWidget::_preValue' has a wrong offset!");
static_assert(offsetof(UDeltaProgressBarWidget, _preProgressMask) == 0x0004C0, "Member 'UDeltaProgressBarWidget::_preProgressMask' has a wrong offset!");
static_assert(offsetof(UDeltaProgressBarWidget, _nowValue) == 0x0004C8, "Member 'UDeltaProgressBarWidget::_nowValue' has a wrong offset!");
static_assert(offsetof(UDeltaProgressBarWidget, _progressMask) == 0x0004D0, "Member 'UDeltaProgressBarWidget::_progressMask' has a wrong offset!");

// Class OutGameModule.GuildDetailWindow
// 0x0150 (0x04A0 - 0x0350)
class UGuildDetailWindow final : public UWidgetBase
{
public:
	class UTimeWidget*                            _activeDayTimeView;                                // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _guildLevelTextBlock;                              // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _guildMemberTextBlock;                             // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _guildMemberMaxTextBlock;                          // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _guildBestRankingTextBlock;                        // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _guildBestRankingSeasonTextBlock;                  // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                                _guildBestRankingSeasonPanel;                      // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<EGuildPolicy, class FText>               _policyTextMap;                                    // 0x0388(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	TMap<EGuildJoinRule, class FText>             _termsTextMap;                                     // 0x03D8(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                   _guildLevelTextFormat;                             // 0x0428(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                   _guildMemberTextFormat;                            // 0x0440(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                   _guildBestRankingTextFormat;                       // 0x0458(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                   _guildBestRankingSeasonTextFormat;                 // 0x0470(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          _bMoveGuildLevelAfterJoin;                         // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_489[0x17];                                     // 0x0489(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool GetGuildMemberBlock();
	void MoveToGuildLevel();
	void OnApplyGuild(bool bApplyGuild);
	void OnCloseWindow();
	void OnGuildLevel(int32 GuildLevel);
	void OnLoadComplete(int32 RequestId);
	void OnReceivedCloseWebApiErrorWindow();
	void OnReceivedUpdateWebApiError();
	void OnSetLeaderNameText(const class FText& LeaderNameText);
	void OnSetPolicyText(const class FText& PolicyText);
	void OnSetTermsText(const class FText& TermsText);
	void OnShowLoadingView(bool bLoading);
	void OnUpdateComplete(int32 RequestId);
	void OnUpdateGuild();
	void OnUpdateJoinGuild();
	void OpenConfirmWindow_SendJoinRequest();
	void OpenJoinWindow();
	void OpenJoinWindow_CancelRequestJoin();
	void OpenJoinWindow_DontJoinFullMember();
	void OpenJoinWindow_Join();
	void OpenJoinWindow_SendJoinRequest();
	void RequestApplyGuild(bool bSendJoinRequest);
	void RequestCancelApplyGuild();
	void RequestGuildInfo();
	void RequestRecommendNotificationKpi(bool bRejection);
	void UpdateGuildView();

	class FString GetGuildId() const;
	class FString GetGuildName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildDetailWindow">();
	}
	static class UGuildDetailWindow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildDetailWindow>();
	}
};
static_assert(alignof(UGuildDetailWindow) == 0x000008, "Wrong alignment on UGuildDetailWindow");
static_assert(sizeof(UGuildDetailWindow) == 0x0004A0, "Wrong size on UGuildDetailWindow");
static_assert(offsetof(UGuildDetailWindow, _activeDayTimeView) == 0x000350, "Member 'UGuildDetailWindow::_activeDayTimeView' has a wrong offset!");
static_assert(offsetof(UGuildDetailWindow, _guildLevelTextBlock) == 0x000358, "Member 'UGuildDetailWindow::_guildLevelTextBlock' has a wrong offset!");
static_assert(offsetof(UGuildDetailWindow, _guildMemberTextBlock) == 0x000360, "Member 'UGuildDetailWindow::_guildMemberTextBlock' has a wrong offset!");
static_assert(offsetof(UGuildDetailWindow, _guildMemberMaxTextBlock) == 0x000368, "Member 'UGuildDetailWindow::_guildMemberMaxTextBlock' has a wrong offset!");
static_assert(offsetof(UGuildDetailWindow, _guildBestRankingTextBlock) == 0x000370, "Member 'UGuildDetailWindow::_guildBestRankingTextBlock' has a wrong offset!");
static_assert(offsetof(UGuildDetailWindow, _guildBestRankingSeasonTextBlock) == 0x000378, "Member 'UGuildDetailWindow::_guildBestRankingSeasonTextBlock' has a wrong offset!");
static_assert(offsetof(UGuildDetailWindow, _guildBestRankingSeasonPanel) == 0x000380, "Member 'UGuildDetailWindow::_guildBestRankingSeasonPanel' has a wrong offset!");
static_assert(offsetof(UGuildDetailWindow, _policyTextMap) == 0x000388, "Member 'UGuildDetailWindow::_policyTextMap' has a wrong offset!");
static_assert(offsetof(UGuildDetailWindow, _termsTextMap) == 0x0003D8, "Member 'UGuildDetailWindow::_termsTextMap' has a wrong offset!");
static_assert(offsetof(UGuildDetailWindow, _guildLevelTextFormat) == 0x000428, "Member 'UGuildDetailWindow::_guildLevelTextFormat' has a wrong offset!");
static_assert(offsetof(UGuildDetailWindow, _guildMemberTextFormat) == 0x000440, "Member 'UGuildDetailWindow::_guildMemberTextFormat' has a wrong offset!");
static_assert(offsetof(UGuildDetailWindow, _guildBestRankingTextFormat) == 0x000458, "Member 'UGuildDetailWindow::_guildBestRankingTextFormat' has a wrong offset!");
static_assert(offsetof(UGuildDetailWindow, _guildBestRankingSeasonTextFormat) == 0x000470, "Member 'UGuildDetailWindow::_guildBestRankingSeasonTextFormat' has a wrong offset!");
static_assert(offsetof(UGuildDetailWindow, _bMoveGuildLevelAfterJoin) == 0x000488, "Member 'UGuildDetailWindow::_bMoveGuildLevelAfterJoin' has a wrong offset!");

// Class OutGameModule.DeltaColorProgressBarWidget
// 0x0040 (0x0530 - 0x04F0)
class UDeltaColorProgressBarWidget final : public UDeltaProgressBarWidget
{
public:
	bool                                          _bAutoSetColor;                                    // 0x04F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4F1[0x3];                                      // 0x04F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           _preColor;                                         // 0x04F4(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _nowColor;                                         // 0x0504(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_514[0x4];                                      // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 _preBar;                                           // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _nowBar;                                           // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_528[0x8];                                      // 0x0528(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeltaColorProgressBarWidget">();
	}
	static class UDeltaColorProgressBarWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeltaColorProgressBarWidget>();
	}
};
static_assert(alignof(UDeltaColorProgressBarWidget) == 0x000010, "Wrong alignment on UDeltaColorProgressBarWidget");
static_assert(sizeof(UDeltaColorProgressBarWidget) == 0x000530, "Wrong size on UDeltaColorProgressBarWidget");
static_assert(offsetof(UDeltaColorProgressBarWidget, _bAutoSetColor) == 0x0004F0, "Member 'UDeltaColorProgressBarWidget::_bAutoSetColor' has a wrong offset!");
static_assert(offsetof(UDeltaColorProgressBarWidget, _preColor) == 0x0004F4, "Member 'UDeltaColorProgressBarWidget::_preColor' has a wrong offset!");
static_assert(offsetof(UDeltaColorProgressBarWidget, _nowColor) == 0x000504, "Member 'UDeltaColorProgressBarWidget::_nowColor' has a wrong offset!");
static_assert(offsetof(UDeltaColorProgressBarWidget, _preBar) == 0x000518, "Member 'UDeltaColorProgressBarWidget::_preBar' has a wrong offset!");
static_assert(offsetof(UDeltaColorProgressBarWidget, _nowBar) == 0x000520, "Member 'UDeltaColorProgressBarWidget::_nowBar' has a wrong offset!");

// Class OutGameModule.DetailsEventContents
// 0x0020 (0x0370 - 0x0350)
class UDetailsEventContents final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class URankingBase*                           _rankingBase;                                      // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEventItemListWidget*                   _eventItemList;                                    // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnDecideEvent(class UEventItemEntryObject* SelectObject);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DetailsEventContents">();
	}
	static class UDetailsEventContents* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDetailsEventContents>();
	}
};
static_assert(alignof(UDetailsEventContents) == 0x000008, "Wrong alignment on UDetailsEventContents");
static_assert(sizeof(UDetailsEventContents) == 0x000370, "Wrong size on UDetailsEventContents");
static_assert(offsetof(UDetailsEventContents, _rankingBase) == 0x000360, "Member 'UDetailsEventContents::_rankingBase' has a wrong offset!");
static_assert(offsetof(UDetailsEventContents, _eventItemList) == 0x000368, "Member 'UDetailsEventContents::_eventItemList' has a wrong offset!");

// Class OutGameModule.GuildCardWidget
// 0x0008 (0x0358 - 0x0350)
class UGuildCardWidget final : public UWidgetBase
{
public:
	bool                                          _bSelect;                                          // 0x0350(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnSetEmblemIcon(int32 GuildEmblemCode);
	void OnSetGuildIdText(const class FText& GuildId);
	void OnSetGuildNameText(const class FText& GuildName);
	void OnSetProfileText(const class FText& ProfileText);
	void SetGuildCardView(const class FString& GuildName, const class FString& GuildSearchId, const class FString& GuildProfile, int32 GuildEmblemCode);
	void SetSelect(bool bSelect);
	void UpdateGuildCardView();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildCardWidget">();
	}
	static class UGuildCardWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildCardWidget>();
	}
};
static_assert(alignof(UGuildCardWidget) == 0x000008, "Wrong alignment on UGuildCardWidget");
static_assert(sizeof(UGuildCardWidget) == 0x000358, "Wrong size on UGuildCardWidget");
static_assert(offsetof(UGuildCardWidget, _bSelect) == 0x000350, "Member 'UGuildCardWidget::_bSelect' has a wrong offset!");

// Class OutGameModule.DetailsRankingContentsBase
// 0x00E0 (0x0430 - 0x0350)
class UDetailsRankingContentsBase : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	ERankingType                                  _rankingType;                                      // 0x0360(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _useSpaceDetails;                                  // 0x0361(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_362[0x2];                                      // 0x0362(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _pageMax;                                          // 0x0364(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_368[0x98];                                     // 0x0368(0x0098)(Fixing Size After Last Property [ Dumper-7 ])
	class UListView*                              _listView;                                         // 0x0400(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URankingBase*                           _rankingBase;                                      // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URankingDetailsEntryObjectBase*         _focusObject;                                      // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOwnerRankingDetails*                   _focusWidget;                                      // 0x0418(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_420[0x10];                                     // 0x0420(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DoCustomWidgetNavigation(EUINavigation UiNavigation);
	void OnAddedToFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnCloseTutorialWindow(ETutorialPopupScene Sence);
	void OnLoadComplete(int32 RequestCode);
	void RemoveFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void RemunerationNavigation(EUINavigation UiNavigation);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DetailsRankingContentsBase">();
	}
	static class UDetailsRankingContentsBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDetailsRankingContentsBase>();
	}
};
static_assert(alignof(UDetailsRankingContentsBase) == 0x000008, "Wrong alignment on UDetailsRankingContentsBase");
static_assert(sizeof(UDetailsRankingContentsBase) == 0x000430, "Wrong size on UDetailsRankingContentsBase");
static_assert(offsetof(UDetailsRankingContentsBase, _rankingType) == 0x000360, "Member 'UDetailsRankingContentsBase::_rankingType' has a wrong offset!");
static_assert(offsetof(UDetailsRankingContentsBase, _useSpaceDetails) == 0x000361, "Member 'UDetailsRankingContentsBase::_useSpaceDetails' has a wrong offset!");
static_assert(offsetof(UDetailsRankingContentsBase, _pageMax) == 0x000364, "Member 'UDetailsRankingContentsBase::_pageMax' has a wrong offset!");
static_assert(offsetof(UDetailsRankingContentsBase, _listView) == 0x000400, "Member 'UDetailsRankingContentsBase::_listView' has a wrong offset!");
static_assert(offsetof(UDetailsRankingContentsBase, _rankingBase) == 0x000408, "Member 'UDetailsRankingContentsBase::_rankingBase' has a wrong offset!");
static_assert(offsetof(UDetailsRankingContentsBase, _focusObject) == 0x000410, "Member 'UDetailsRankingContentsBase::_focusObject' has a wrong offset!");
static_assert(offsetof(UDetailsRankingContentsBase, _focusWidget) == 0x000418, "Member 'UDetailsRankingContentsBase::_focusWidget' has a wrong offset!");

// Class OutGameModule.DetailsRankingContents
// 0x0030 (0x0460 - 0x0430)
class UDetailsRankingContents final : public UDetailsRankingContentsBase
{
public:
	bool                                          _bOpen;                                            // 0x0430(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bUseSlotSizeOverride;                             // 0x0431(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_432[0x2];                                      // 0x0432(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                _slotSize;                                         // 0x0434(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	int32                                         _reagueCode;                                       // 0x0444(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URankingLeagueWidget*                   _rankingLeague;                                    // 0x0448(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_450[0x10];                                     // 0x0450(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ButtonBind(class UWidgetButton* Button);
	void OnClose();
	void OnOpen();
	void UpdateList(int32 NewIndex, bool IsFocus);

	bool IsOpen() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DetailsRankingContents">();
	}
	static class UDetailsRankingContents* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDetailsRankingContents>();
	}
};
static_assert(alignof(UDetailsRankingContents) == 0x000008, "Wrong alignment on UDetailsRankingContents");
static_assert(sizeof(UDetailsRankingContents) == 0x000460, "Wrong size on UDetailsRankingContents");
static_assert(offsetof(UDetailsRankingContents, _bOpen) == 0x000430, "Member 'UDetailsRankingContents::_bOpen' has a wrong offset!");
static_assert(offsetof(UDetailsRankingContents, _bUseSlotSizeOverride) == 0x000431, "Member 'UDetailsRankingContents::_bUseSlotSizeOverride' has a wrong offset!");
static_assert(offsetof(UDetailsRankingContents, _slotSize) == 0x000434, "Member 'UDetailsRankingContents::_slotSize' has a wrong offset!");
static_assert(offsetof(UDetailsRankingContents, _reagueCode) == 0x000444, "Member 'UDetailsRankingContents::_reagueCode' has a wrong offset!");
static_assert(offsetof(UDetailsRankingContents, _rankingLeague) == 0x000448, "Member 'UDetailsRankingContents::_rankingLeague' has a wrong offset!");

// Class OutGameModule.GuildPageWidgetBase
// 0x0028 (0x0410 - 0x03E8)
class UGuildPageWidgetBase : public UAppWidget
{
public:
	uint8                                         Pad_3E8[0x10];                                     // 0x03E8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UGuildTopWidget*                        _guildTopWidget;                                   // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _tabCanvasPanel;                                   // 0x0400(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_408[0x8];                                      // 0x0408(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_SetGuildTop(class UGuildTopWidget* GuildTopWidget);
	void OnChangeTabView();
	void OnTryChangeTabView();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildPageWidgetBase">();
	}
	static class UGuildPageWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildPageWidgetBase>();
	}
};
static_assert(alignof(UGuildPageWidgetBase) == 0x000008, "Wrong alignment on UGuildPageWidgetBase");
static_assert(sizeof(UGuildPageWidgetBase) == 0x000410, "Wrong size on UGuildPageWidgetBase");
static_assert(offsetof(UGuildPageWidgetBase, _guildTopWidget) == 0x0003F8, "Member 'UGuildPageWidgetBase::_guildTopWidget' has a wrong offset!");
static_assert(offsetof(UGuildPageWidgetBase, _tabCanvasPanel) == 0x000400, "Member 'UGuildPageWidgetBase::_tabCanvasPanel' has a wrong offset!");

// Class OutGameModule.GuildActivityStatusWidget
// 0x0090 (0x04A0 - 0x0410)
class UGuildActivityStatusWidget final : public UGuildPageWidgetBase
{
public:
	TMap<int32, class FText>                      _timeTextMap;                                      // 0x0410(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                   _timeTextFormat;                                   // 0x0460(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class UListView*                              _listView;                                         // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_480[0x20];                                     // 0x0480(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool AddLike(class UGuildActivityStatusItemWidget* GuildActivityStatusItemWidget);
	void ClearFocusMember();
	void FocusListItem();
	void OnLoadComplete(int32 RequestId);
	void OnUpdateComplete(int32 RequestId);
	void RequestCreateActivityList();
	void RequestUpdateLike();
	void ShowListView();
	void ShowNetworkWaiting();
	void ShowNoneList();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildActivityStatusWidget">();
	}
	static class UGuildActivityStatusWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildActivityStatusWidget>();
	}
};
static_assert(alignof(UGuildActivityStatusWidget) == 0x000008, "Wrong alignment on UGuildActivityStatusWidget");
static_assert(sizeof(UGuildActivityStatusWidget) == 0x0004A0, "Wrong size on UGuildActivityStatusWidget");
static_assert(offsetof(UGuildActivityStatusWidget, _timeTextMap) == 0x000410, "Member 'UGuildActivityStatusWidget::_timeTextMap' has a wrong offset!");
static_assert(offsetof(UGuildActivityStatusWidget, _timeTextFormat) == 0x000460, "Member 'UGuildActivityStatusWidget::_timeTextFormat' has a wrong offset!");
static_assert(offsetof(UGuildActivityStatusWidget, _listView) == 0x000478, "Member 'UGuildActivityStatusWidget::_listView' has a wrong offset!");

// Class OutGameModule.EventBannerTitleWidget
// 0x0010 (0x0360 - 0x0350)
class UEventBannerTitleWidget final : public UWidgetBase
{
public:
	int32                                         _switcherNum;                                      // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetSwitcher*                        _switcher;                                         // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BP_UpdateImage(EEventCategory Category);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EventBannerTitleWidget">();
	}
	static class UEventBannerTitleWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventBannerTitleWidget>();
	}
};
static_assert(alignof(UEventBannerTitleWidget) == 0x000008, "Wrong alignment on UEventBannerTitleWidget");
static_assert(sizeof(UEventBannerTitleWidget) == 0x000360, "Wrong size on UEventBannerTitleWidget");
static_assert(offsetof(UEventBannerTitleWidget, _switcherNum) == 0x000350, "Member 'UEventBannerTitleWidget::_switcherNum' has a wrong offset!");
static_assert(offsetof(UEventBannerTitleWidget, _switcher) == 0x000358, "Member 'UEventBannerTitleWidget::_switcher' has a wrong offset!");

// Class OutGameModule.EventButtonListWidget
// 0x00A0 (0x03F0 - 0x0350)
class UEventButtonListWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventButtonWidget*                     _rewardButton;                                     // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEventButtonWidget*                     _specialEffectButton;                              // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEventButtonWidget*                     _shopButton;                                       // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEventButtonWidget*                     _missionButton;                                    // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                  _shopLevel;                                        // 0x0380(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                  _rankingLevel;                                     // 0x03A8(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UEventButtonWidget*>             _buttons;                                          // 0x03D0(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3E0[0x10];                                     // 0x03E0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DoCustomWidgetNavigation(EUINavigation UiNavigation);
	void OnDicedMissionButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDicedRewardButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDicedShopButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDicedSpecialEffectButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnOpenMissionEvent();
	void OnOpenRankingLevel();
	void OnOpenRewardPopupEvent();
	void OnOpenShopLevel();
	void OnOpenSpecialEffectPopupEvent();
	void SetCurrentFocusButton();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EventButtonListWidget">();
	}
	static class UEventButtonListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventButtonListWidget>();
	}
};
static_assert(alignof(UEventButtonListWidget) == 0x000008, "Wrong alignment on UEventButtonListWidget");
static_assert(sizeof(UEventButtonListWidget) == 0x0003F0, "Wrong size on UEventButtonListWidget");
static_assert(offsetof(UEventButtonListWidget, _rewardButton) == 0x000360, "Member 'UEventButtonListWidget::_rewardButton' has a wrong offset!");
static_assert(offsetof(UEventButtonListWidget, _specialEffectButton) == 0x000368, "Member 'UEventButtonListWidget::_specialEffectButton' has a wrong offset!");
static_assert(offsetof(UEventButtonListWidget, _shopButton) == 0x000370, "Member 'UEventButtonListWidget::_shopButton' has a wrong offset!");
static_assert(offsetof(UEventButtonListWidget, _missionButton) == 0x000378, "Member 'UEventButtonListWidget::_missionButton' has a wrong offset!");
static_assert(offsetof(UEventButtonListWidget, _shopLevel) == 0x000380, "Member 'UEventButtonListWidget::_shopLevel' has a wrong offset!");
static_assert(offsetof(UEventButtonListWidget, _rankingLevel) == 0x0003A8, "Member 'UEventButtonListWidget::_rankingLevel' has a wrong offset!");
static_assert(offsetof(UEventButtonListWidget, _buttons) == 0x0003D0, "Member 'UEventButtonListWidget::_buttons' has a wrong offset!");

// Class OutGameModule.EventButtonWidget
// 0x0028 (0x0378 - 0x0350)
class UEventButtonWidget final : public UWidgetBase
{
public:
	TArray<class FText>                           _buttonText;                                       // 0x0350(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _button;                                           // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCanvasPanel*                           _balloon;                                          // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAdjustTextWidget*                      _text;                                             // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EventButtonWidget">();
	}
	static class UEventButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventButtonWidget>();
	}
};
static_assert(alignof(UEventButtonWidget) == 0x000008, "Wrong alignment on UEventButtonWidget");
static_assert(sizeof(UEventButtonWidget) == 0x000378, "Wrong size on UEventButtonWidget");
static_assert(offsetof(UEventButtonWidget, _buttonText) == 0x000350, "Member 'UEventButtonWidget::_buttonText' has a wrong offset!");
static_assert(offsetof(UEventButtonWidget, _button) == 0x000360, "Member 'UEventButtonWidget::_button' has a wrong offset!");
static_assert(offsetof(UEventButtonWidget, _balloon) == 0x000368, "Member 'UEventButtonWidget::_balloon' has a wrong offset!");
static_assert(offsetof(UEventButtonWidget, _text) == 0x000370, "Member 'UEventButtonWidget::_text' has a wrong offset!");

// Class OutGameModule.EventItemEntryObject
// 0x0040 (0x0070 - 0x0030)
class UEventItemEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x38];                                      // 0x0030(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	EEventType                                    _eventType;                                        // 0x0068(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EventItemEntryObject">();
	}
	static class UEventItemEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventItemEntryObject>();
	}
};
static_assert(alignof(UEventItemEntryObject) == 0x000008, "Wrong alignment on UEventItemEntryObject");
static_assert(sizeof(UEventItemEntryObject) == 0x000070, "Wrong size on UEventItemEntryObject");
static_assert(offsetof(UEventItemEntryObject, _eventType) == 0x000068, "Member 'UEventItemEntryObject::_eventType' has a wrong offset!");

// Class OutGameModule.GuildMemberItemObject
// 0x0048 (0x0070 - 0x0028)
class UGuildMemberItemObject final : public UObject
{
public:
	uint8                                         Pad_28[0x48];                                      // 0x0028(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildMemberItemObject">();
	}
	static class UGuildMemberItemObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildMemberItemObject>();
	}
};
static_assert(alignof(UGuildMemberItemObject) == 0x000008, "Wrong alignment on UGuildMemberItemObject");
static_assert(sizeof(UGuildMemberItemObject) == 0x000070, "Wrong size on UGuildMemberItemObject");

// Class OutGameModule.EventPanelEntryObject
// 0x0028 (0x0058 - 0x0030)
class UEventPanelEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x28];                                      // 0x0030(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EventPanelEntryObject">();
	}
	static class UEventPanelEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventPanelEntryObject>();
	}
};
static_assert(alignof(UEventPanelEntryObject) == 0x000008, "Wrong alignment on UEventPanelEntryObject");
static_assert(sizeof(UEventPanelEntryObject) == 0x000058, "Wrong size on UEventPanelEntryObject");

// Class OutGameModule.EventRewardEntryObject
// 0x0028 (0x0058 - 0x0030)
class UEventRewardEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x28];                                      // 0x0030(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EventRewardEntryObject">();
	}
	static class UEventRewardEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventRewardEntryObject>();
	}
};
static_assert(alignof(UEventRewardEntryObject) == 0x000008, "Wrong alignment on UEventRewardEntryObject");
static_assert(sizeof(UEventRewardEntryObject) == 0x000058, "Wrong size on UEventRewardEntryObject");

// Class OutGameModule.EventItemListWidget
// 0x0030 (0x0380 - 0x0350)
class UEventItemListWidget final : public UWidgetBase
{
public:
	class UListView*                              _listView;                                         // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EEventType                                    _eventType;                                        // 0x0358(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_359[0x17];                                     // 0x0359(0x0017)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnDecideEventDelegate;                             // 0x0370(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void CreateEventList();
	void OnDecideEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideEventDelegate__DelegateSignature(class UEventItemEntryObject* EventItemEntryObject);
	void SetItemFocus();

	int32 GetNumItems() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EventItemListWidget">();
	}
	static class UEventItemListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventItemListWidget>();
	}
};
static_assert(alignof(UEventItemListWidget) == 0x000008, "Wrong alignment on UEventItemListWidget");
static_assert(sizeof(UEventItemListWidget) == 0x000380, "Wrong size on UEventItemListWidget");
static_assert(offsetof(UEventItemListWidget, _listView) == 0x000350, "Member 'UEventItemListWidget::_listView' has a wrong offset!");
static_assert(offsetof(UEventItemListWidget, _eventType) == 0x000358, "Member 'UEventItemListWidget::_eventType' has a wrong offset!");
static_assert(offsetof(UEventItemListWidget, OnDecideEventDelegate) == 0x000370, "Member 'UEventItemListWidget::OnDecideEventDelegate' has a wrong offset!");

// Class OutGameModule.EventItemWidget
// 0x0018 (0x0648 - 0x0630)
class UEventItemWidget final : public UPlatformWidgetButton
{
public:
	uint8                                         Pad_630[0x8];                                      // 0x0630(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventItemEntryObject*                  _entryObject;                                      // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEventBannerTitleWidget*                _eventBannerTitle;                                 // 0x0640(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnSetEventImage(class UPaperSprite* PaperSprite);
	void OnSetEventName(const class FText& EventName);
	void OnSetEventTime(const struct FTimespan& Timespan);
	void OnSetStateEvent(int32 State);

	class UEventItemEntryObject* GetEntryObject() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EventItemWidget">();
	}
	static class UEventItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventItemWidget>();
	}
};
static_assert(alignof(UEventItemWidget) == 0x000008, "Wrong alignment on UEventItemWidget");
static_assert(sizeof(UEventItemWidget) == 0x000648, "Wrong size on UEventItemWidget");
static_assert(offsetof(UEventItemWidget, _entryObject) == 0x000638, "Member 'UEventItemWidget::_entryObject' has a wrong offset!");
static_assert(offsetof(UEventItemWidget, _eventBannerTitle) == 0x000640, "Member 'UEventItemWidget::_eventBannerTitle' has a wrong offset!");

// Class OutGameModule.EventMissionListItem
// 0x0058 (0x04E0 - 0x0488)
class UEventMissionListItem final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAdjustTextWidget*                      _title;                                            // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTimeWidget*                            _timer;                                            // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _banner;                                           // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _noticeIcon;                                       // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEventBannerTitleWidget*                _bannerTitle;                                      // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEventMissionListItemObject*            _listItem;                                         // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _grayOutColor;                                     // 0x04C0(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4D0[0x10];                                     // 0x04D0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SwitchViewTimer(const bool bViewRewardTimer);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EventMissionListItem">();
	}
	static class UEventMissionListItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventMissionListItem>();
	}
};
static_assert(alignof(UEventMissionListItem) == 0x000008, "Wrong alignment on UEventMissionListItem");
static_assert(sizeof(UEventMissionListItem) == 0x0004E0, "Wrong size on UEventMissionListItem");
static_assert(offsetof(UEventMissionListItem, _title) == 0x000490, "Member 'UEventMissionListItem::_title' has a wrong offset!");
static_assert(offsetof(UEventMissionListItem, _timer) == 0x000498, "Member 'UEventMissionListItem::_timer' has a wrong offset!");
static_assert(offsetof(UEventMissionListItem, _banner) == 0x0004A0, "Member 'UEventMissionListItem::_banner' has a wrong offset!");
static_assert(offsetof(UEventMissionListItem, _noticeIcon) == 0x0004A8, "Member 'UEventMissionListItem::_noticeIcon' has a wrong offset!");
static_assert(offsetof(UEventMissionListItem, _bannerTitle) == 0x0004B0, "Member 'UEventMissionListItem::_bannerTitle' has a wrong offset!");
static_assert(offsetof(UEventMissionListItem, _listItem) == 0x0004B8, "Member 'UEventMissionListItem::_listItem' has a wrong offset!");
static_assert(offsetof(UEventMissionListItem, _grayOutColor) == 0x0004C0, "Member 'UEventMissionListItem::_grayOutColor' has a wrong offset!");

// Class OutGameModule.EventMissionListItemObject
// 0x0060 (0x0088 - 0x0028)
class UEventMissionListItemObject final : public UObject
{
public:
	uint8                                         Pad_28[0x48];                                      // 0x0028(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           _banner;                                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_78[0x10];                                      // 0x0078(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDecide(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EventMissionListItemObject">();
	}
	static class UEventMissionListItemObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventMissionListItemObject>();
	}
};
static_assert(alignof(UEventMissionListItemObject) == 0x000008, "Wrong alignment on UEventMissionListItemObject");
static_assert(sizeof(UEventMissionListItemObject) == 0x000088, "Wrong size on UEventMissionListItemObject");
static_assert(offsetof(UEventMissionListItemObject, _banner) == 0x000070, "Member 'UEventMissionListItemObject::_banner' has a wrong offset!");

// Class OutGameModule.GuildLevelUpResultWindow
// 0x0040 (0x0390 - 0x0350)
class UGuildLevelUpResultWindow final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   _boostCountTextFormat;                             // 0x0360(0x0018)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                   _memberMaxTextFormat;                              // 0x0378(0x0018)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

public:
	void GetLevelUpDetailText(TArray<class FText>* LevelUpTextArray);
	void OnSetLevel(int32 PrevLevel, int32 NextLevel);
	void SetLevel(int32 PrevLevel, int32 NextLevel);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildLevelUpResultWindow">();
	}
	static class UGuildLevelUpResultWindow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildLevelUpResultWindow>();
	}
};
static_assert(alignof(UGuildLevelUpResultWindow) == 0x000008, "Wrong alignment on UGuildLevelUpResultWindow");
static_assert(sizeof(UGuildLevelUpResultWindow) == 0x000390, "Wrong size on UGuildLevelUpResultWindow");
static_assert(offsetof(UGuildLevelUpResultWindow, _boostCountTextFormat) == 0x000360, "Member 'UGuildLevelUpResultWindow::_boostCountTextFormat' has a wrong offset!");
static_assert(offsetof(UGuildLevelUpResultWindow, _memberMaxTextFormat) == 0x000378, "Member 'UGuildLevelUpResultWindow::_memberMaxTextFormat' has a wrong offset!");

// Class OutGameModule.EventPanelListWidget
// 0x0038 (0x0388 - 0x0350)
class UEventPanelListWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x28];                                     // 0x0350(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class UListView*                              _listView;                                         // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_380[0x8];                                      // 0x0380(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DoCustomWidgetNavigation(EUINavigation UiNavigation);
	void OnFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EventPanelListWidget">();
	}
	static class UEventPanelListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventPanelListWidget>();
	}
};
static_assert(alignof(UEventPanelListWidget) == 0x000008, "Wrong alignment on UEventPanelListWidget");
static_assert(sizeof(UEventPanelListWidget) == 0x000388, "Wrong size on UEventPanelListWidget");
static_assert(offsetof(UEventPanelListWidget, _listView) == 0x000378, "Member 'UEventPanelListWidget::_listView' has a wrong offset!");

// Class OutGameModule.EventPanelWidget
// 0x0028 (0x0658 - 0x0630)
class UEventPanelWidget final : public UPlatformWidgetButton
{
public:
	uint8                                         Pad_630[0x8];                                      // 0x0630(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventPanelEntryObject*                 _entryObject;                                      // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCoinWidget*                            _eventPoint;                                       // 0x0640(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 _eventBanner;                                      // 0x0648(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEventBannerTitleWidget*                _bannerTitle;                                      // 0x0650(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnSetEventState(int32 AvtiveIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EventPanelWidget">();
	}
	static class UEventPanelWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventPanelWidget>();
	}
};
static_assert(alignof(UEventPanelWidget) == 0x000008, "Wrong alignment on UEventPanelWidget");
static_assert(sizeof(UEventPanelWidget) == 0x000658, "Wrong size on UEventPanelWidget");
static_assert(offsetof(UEventPanelWidget, _entryObject) == 0x000638, "Member 'UEventPanelWidget::_entryObject' has a wrong offset!");
static_assert(offsetof(UEventPanelWidget, _eventPoint) == 0x000640, "Member 'UEventPanelWidget::_eventPoint' has a wrong offset!");
static_assert(offsetof(UEventPanelWidget, _eventBanner) == 0x000648, "Member 'UEventPanelWidget::_eventBanner' has a wrong offset!");
static_assert(offsetof(UEventPanelWidget, _bannerTitle) == 0x000650, "Member 'UEventPanelWidget::_bannerTitle' has a wrong offset!");

// Class OutGameModule.GuildStatics
// 0x0000 (0x0028 - 0x0028)
class UGuildStatics final : public UBlueprintFunctionLibrary
{
public:
	static TSoftObjectPtr<class UTexture2D> GetBgFullScreenTexture(int32 Level, class UDataTable* GuildDataTable);
	static TSoftObjectPtr<class UTexture2D> GetBgMainTexture(int32 Level, class UDataTable* GuildDataTable);
	static float GetBgmControlValue(int32 Level, class UDataTable* GuildDataTable);
	static void UpdateCheckGuildLevelUp(int32 PrevLevel, int32 Level, class UDataTable* GuildDataTable, bool* bLevelUp);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildStatics">();
	}
	static class UGuildStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildStatics>();
	}
};
static_assert(alignof(UGuildStatics) == 0x000008, "Wrong alignment on UGuildStatics");
static_assert(sizeof(UGuildStatics) == 0x000028, "Wrong size on UGuildStatics");

// Class OutGameModule.EventPreviewWidget
// 0x0010 (0x0360 - 0x0350)
class UEventPreviewWidget final : public UWidgetBase
{
public:
	class UImage*                                 _bgTexture;                                        // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEventTimerWidget*                      _timer;                                            // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void HiddenPreviewEvent();
	void SetClosedEventPanelEvent(bool Visible);
	void UpdateEventCategory(EEventCategory Categpry);
	void VisiblePreviewEvent();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EventPreviewWidget">();
	}
	static class UEventPreviewWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventPreviewWidget>();
	}
};
static_assert(alignof(UEventPreviewWidget) == 0x000008, "Wrong alignment on UEventPreviewWidget");
static_assert(sizeof(UEventPreviewWidget) == 0x000360, "Wrong size on UEventPreviewWidget");
static_assert(offsetof(UEventPreviewWidget, _bgTexture) == 0x000350, "Member 'UEventPreviewWidget::_bgTexture' has a wrong offset!");
static_assert(offsetof(UEventPreviewWidget, _timer) == 0x000358, "Member 'UEventPreviewWidget::_timer' has a wrong offset!");

// Class OutGameModule.EventRewardItemWidget
// 0x0038 (0x04C0 - 0x0488)
class UEventRewardItemWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             _charaName;                                        // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _itemName;                                         // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCanvasPanel*                           _specialEffectPanel;                               // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGashaIconWidget*                       _gashaIcon;                                        // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _specialEffectNum;                                 // 0x04B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEventRewardEntryObject*                _entryObject;                                      // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EventRewardItemWidget">();
	}
	static class UEventRewardItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventRewardItemWidget>();
	}
};
static_assert(alignof(UEventRewardItemWidget) == 0x000008, "Wrong alignment on UEventRewardItemWidget");
static_assert(sizeof(UEventRewardItemWidget) == 0x0004C0, "Wrong size on UEventRewardItemWidget");
static_assert(offsetof(UEventRewardItemWidget, _charaName) == 0x000490, "Member 'UEventRewardItemWidget::_charaName' has a wrong offset!");
static_assert(offsetof(UEventRewardItemWidget, _itemName) == 0x000498, "Member 'UEventRewardItemWidget::_itemName' has a wrong offset!");
static_assert(offsetof(UEventRewardItemWidget, _specialEffectPanel) == 0x0004A0, "Member 'UEventRewardItemWidget::_specialEffectPanel' has a wrong offset!");
static_assert(offsetof(UEventRewardItemWidget, _gashaIcon) == 0x0004A8, "Member 'UEventRewardItemWidget::_gashaIcon' has a wrong offset!");
static_assert(offsetof(UEventRewardItemWidget, _specialEffectNum) == 0x0004B0, "Member 'UEventRewardItemWidget::_specialEffectNum' has a wrong offset!");
static_assert(offsetof(UEventRewardItemWidget, _entryObject) == 0x0004B8, "Member 'UEventRewardItemWidget::_entryObject' has a wrong offset!");

// Class OutGameModule.GuildMemberWidget
// 0x00A8 (0x04B8 - 0x0410)
class UGuildMemberWidget final : public UGuildPageWidgetBase
{
public:
	class UCustomListView*                        _listView;                                         // 0x0410(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGeneralPageCarouselWidget*             _pageCarouselWidget;                               // 0x0418(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _viewItemCount;                                    // 0x0420(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_424[0x94];                                     // 0x0424(0x0094)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool AddLike(class UGuildMemberItemWidget* MemberWidget);
	void ClearFocusMember();
	void CreateMemberList(int32 PageIndex);
	class UWidget* DoCustomWidgetNavigation(EUINavigation UiNavigation);
	class UUserWidget* FocusMember();
	void OnFetchFinishedDynamicDelegate__DelegateSignature();
	void OnLoadComplete(int32 RequestId);
	void OnReceivedCloseWebApiErrorWindow();
	void OnReceivedUpdateWebApiError();
	void OnUpdateComplete(int32 RequestId);
	void RequestCommissionCalls_CancelSubLeader(class UGuildMemberItemWidget* MemberWidget, TDelegate<void()> OnFechFinishedDynamicDelegate);
	void RequestCommissionCalls_RemoveMember(class UGuildMemberItemWidget* MemberWidget, TDelegate<void()> OnFechFinishedDynamicDelegate);
	void RequestCommissionCalls_SubLeader(class UGuildMemberItemWidget* MemberWidget, TDelegate<void()> OnFechFinishedDynamicDelegate);
	void RequestCommissionCalls_TakeOver(class UGuildMemberItemWidget* MemberWidget, TDelegate<void()> OnFechFinishedDynamicDelegate);
	void RequestCreateMemberList(int32 PageIndex);
	void RequestUpdateLike();
	void SetFriendCount(int32 Num, int32 Max);
	void SetMemberSort(EGuildMemberSort MemberSort);
	void ShowListView();
	void ShowNetworkWaiting();
	void ShowNoneList();
	void UpdateFriendCount();

	EGuildPosition GetMyLeaderFlg() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildMemberWidget">();
	}
	static class UGuildMemberWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildMemberWidget>();
	}
};
static_assert(alignof(UGuildMemberWidget) == 0x000008, "Wrong alignment on UGuildMemberWidget");
static_assert(sizeof(UGuildMemberWidget) == 0x0004B8, "Wrong size on UGuildMemberWidget");
static_assert(offsetof(UGuildMemberWidget, _listView) == 0x000410, "Member 'UGuildMemberWidget::_listView' has a wrong offset!");
static_assert(offsetof(UGuildMemberWidget, _pageCarouselWidget) == 0x000418, "Member 'UGuildMemberWidget::_pageCarouselWidget' has a wrong offset!");
static_assert(offsetof(UGuildMemberWidget, _viewItemCount) == 0x000420, "Member 'UGuildMemberWidget::_viewItemCount' has a wrong offset!");

// Class OutGameModule.EventRewardListWidget
// 0x0020 (0x0370 - 0x0350)
class UEventRewardListWidget final : public UWidgetBase
{
public:
	EEventRewardType                              _eventRewardType;                                  // 0x0350(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTileView*                              _tileView;                                         // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEventRewardEntryObject*                _selectObject;                                     // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEventWidget*                           _eventWidget;                                      // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnChangeExplanationText();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EventRewardListWidget">();
	}
	static class UEventRewardListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventRewardListWidget>();
	}
};
static_assert(alignof(UEventRewardListWidget) == 0x000008, "Wrong alignment on UEventRewardListWidget");
static_assert(sizeof(UEventRewardListWidget) == 0x000370, "Wrong size on UEventRewardListWidget");
static_assert(offsetof(UEventRewardListWidget, _eventRewardType) == 0x000350, "Member 'UEventRewardListWidget::_eventRewardType' has a wrong offset!");
static_assert(offsetof(UEventRewardListWidget, _tileView) == 0x000358, "Member 'UEventRewardListWidget::_tileView' has a wrong offset!");
static_assert(offsetof(UEventRewardListWidget, _selectObject) == 0x000360, "Member 'UEventRewardListWidget::_selectObject' has a wrong offset!");
static_assert(offsetof(UEventRewardListWidget, _eventWidget) == 0x000368, "Member 'UEventRewardListWidget::_eventWidget' has a wrong offset!");

// Class OutGameModule.EventsMissionContents
// 0x0070 (0x03C0 - 0x0350)
class UEventsMissionContents final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStarMissionContents>       _starMissionConentsClass;                          // 0x0360(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UItemMissionContents>       _itemMissionConentsClass;                          // 0x0368(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _eventSwitcher;                                    // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMissionBaseWidget*                     _missionBase;                                      // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UListView*                              _eventList;                                        // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_388[0x38];                                     // 0x0388(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ReturnEventList();

	bool IsOpenMissionList() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EventsMissionContents">();
	}
	static class UEventsMissionContents* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventsMissionContents>();
	}
};
static_assert(alignof(UEventsMissionContents) == 0x000008, "Wrong alignment on UEventsMissionContents");
static_assert(sizeof(UEventsMissionContents) == 0x0003C0, "Wrong size on UEventsMissionContents");
static_assert(offsetof(UEventsMissionContents, _starMissionConentsClass) == 0x000360, "Member 'UEventsMissionContents::_starMissionConentsClass' has a wrong offset!");
static_assert(offsetof(UEventsMissionContents, _itemMissionConentsClass) == 0x000368, "Member 'UEventsMissionContents::_itemMissionConentsClass' has a wrong offset!");
static_assert(offsetof(UEventsMissionContents, _eventSwitcher) == 0x000370, "Member 'UEventsMissionContents::_eventSwitcher' has a wrong offset!");
static_assert(offsetof(UEventsMissionContents, _missionBase) == 0x000378, "Member 'UEventsMissionContents::_missionBase' has a wrong offset!");
static_assert(offsetof(UEventsMissionContents, _eventList) == 0x000380, "Member 'UEventsMissionContents::_eventList' has a wrong offset!");

// Class OutGameModule.GuildInstitutionWidget
// 0x01A0 (0x04F0 - 0x0350)
class UGuildInstitutionWidget final : public UWidgetBase
{
public:
	EGuildFacility                                _guildFacility;                                    // 0x0350(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bMySelf;                                          // 0x0351(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bSelect;                                          // 0x0352(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_353[0x5];                                      // 0x0353(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EGuildFacility, struct FSlateBrush>      _bgBrushColorMap;                                  // 0x0358(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	TMap<EGuildFacility, struct FSlateBrush>      _bgBrushImageMap;                                  // 0x03A8(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	TMap<EGuildFacility, struct FLinearColor>     _progressColorMap;                                 // 0x03F8(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	TMap<EGuildFacility, class FText>             _institutionNameMap;                               // 0x0448(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	TMap<EGuildFacility, class FText>             _effectNameMap;                                    // 0x0498(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_4E8[0x8];                                      // 0x04E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DecideAddCoin(int32 AddCoin, bool* bLevelUp, int32* NowLevel, int32* NextLevel);
	void OnBgColorView(const struct FSlateBrush& bgBrush);
	void OnBgImageView(const struct FSlateBrush& bgBrush);
	void OnCompleteDonateGuild(bool bLevelUp);
	void OnEffectNameView(const class FText& EffectName);
	void OnGaugeView(float Percent);
	void OnInstitutionNameView(const class FText& InstitutionName);
	void OnInstitutionView(int32 Level, int32 CostNow, int32 CostMax, float EffectPercent);
	void OnProgressColorView(const struct FLinearColor& ProgressColor);
	void OnUpdateComplete(int32 RequestId);
	void RequestDonateGuild(int32 AddCoin);
	void SetAddCoinView(int32 AddCoin);
	void SetSelectInstitution();
	void UpdateInstitutionView();

	int32 GetMaxLevelAddCoin() const;
	int32 GetNextLevelAddCoin() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildInstitutionWidget">();
	}
	static class UGuildInstitutionWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildInstitutionWidget>();
	}
};
static_assert(alignof(UGuildInstitutionWidget) == 0x000008, "Wrong alignment on UGuildInstitutionWidget");
static_assert(sizeof(UGuildInstitutionWidget) == 0x0004F0, "Wrong size on UGuildInstitutionWidget");
static_assert(offsetof(UGuildInstitutionWidget, _guildFacility) == 0x000350, "Member 'UGuildInstitutionWidget::_guildFacility' has a wrong offset!");
static_assert(offsetof(UGuildInstitutionWidget, _bMySelf) == 0x000351, "Member 'UGuildInstitutionWidget::_bMySelf' has a wrong offset!");
static_assert(offsetof(UGuildInstitutionWidget, _bSelect) == 0x000352, "Member 'UGuildInstitutionWidget::_bSelect' has a wrong offset!");
static_assert(offsetof(UGuildInstitutionWidget, _bgBrushColorMap) == 0x000358, "Member 'UGuildInstitutionWidget::_bgBrushColorMap' has a wrong offset!");
static_assert(offsetof(UGuildInstitutionWidget, _bgBrushImageMap) == 0x0003A8, "Member 'UGuildInstitutionWidget::_bgBrushImageMap' has a wrong offset!");
static_assert(offsetof(UGuildInstitutionWidget, _progressColorMap) == 0x0003F8, "Member 'UGuildInstitutionWidget::_progressColorMap' has a wrong offset!");
static_assert(offsetof(UGuildInstitutionWidget, _institutionNameMap) == 0x000448, "Member 'UGuildInstitutionWidget::_institutionNameMap' has a wrong offset!");
static_assert(offsetof(UGuildInstitutionWidget, _effectNameMap) == 0x000498, "Member 'UGuildInstitutionWidget::_effectNameMap' has a wrong offset!");

// Class OutGameModule.MissionContents
// 0x00C8 (0x0418 - 0x0350)
class UMissionContents : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	EMdMissionCategory                            _missionCategory;                                  // 0x0360(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UListView*                              _outGameMissionList;                               // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UListView*                              _missionList;                                      // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMissionBaseWidget*                     _missionBase;                                      // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_380[0x8];                                      // 0x0380(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionColorInfo                      _itemsColor;                                       // 0x0388(0x0060)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E8[0x30];                                     // 0x03E8(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BulkReceiveNavigation(EUINavigation UiNavigation);
	void CloseItemGetListWidget();
	void OnAddedToFocusMissionListItemWidget(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnFocusNavigationMissionList(EUINavigation UiNavigation);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MissionContents">();
	}
	static class UMissionContents* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionContents>();
	}
};
static_assert(alignof(UMissionContents) == 0x000008, "Wrong alignment on UMissionContents");
static_assert(sizeof(UMissionContents) == 0x000418, "Wrong size on UMissionContents");
static_assert(offsetof(UMissionContents, _missionCategory) == 0x000360, "Member 'UMissionContents::_missionCategory' has a wrong offset!");
static_assert(offsetof(UMissionContents, _outGameMissionList) == 0x000368, "Member 'UMissionContents::_outGameMissionList' has a wrong offset!");
static_assert(offsetof(UMissionContents, _missionList) == 0x000370, "Member 'UMissionContents::_missionList' has a wrong offset!");
static_assert(offsetof(UMissionContents, _missionBase) == 0x000378, "Member 'UMissionContents::_missionBase' has a wrong offset!");
static_assert(offsetof(UMissionContents, _itemsColor) == 0x000388, "Member 'UMissionContents::_itemsColor' has a wrong offset!");

// Class OutGameModule.StarMissionContents
// 0x00A0 (0x04B8 - 0x0418)
class UStarMissionContents : public UMissionContents
{
public:
	class UListView*                              _starList;                                         // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_420[0x78];                                     // 0x0420(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           _starItemBGColor;                                  // 0x0498(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _starItemTopColor;                                 // 0x04A8(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnAddedToFocusStarListItemWidget(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnFocusNavigationStarList(EUINavigation UiNavigation);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StarMissionContents">();
	}
	static class UStarMissionContents* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStarMissionContents>();
	}
};
static_assert(alignof(UStarMissionContents) == 0x000008, "Wrong alignment on UStarMissionContents");
static_assert(sizeof(UStarMissionContents) == 0x0004B8, "Wrong size on UStarMissionContents");
static_assert(offsetof(UStarMissionContents, _starList) == 0x000418, "Member 'UStarMissionContents::_starList' has a wrong offset!");
static_assert(offsetof(UStarMissionContents, _starItemBGColor) == 0x000498, "Member 'UStarMissionContents::_starItemBGColor' has a wrong offset!");
static_assert(offsetof(UStarMissionContents, _starItemTopColor) == 0x0004A8, "Member 'UStarMissionContents::_starItemTopColor' has a wrong offset!");

// Class OutGameModule.GuildSearchItemWidget
// 0x00C0 (0x06F0 - 0x0630)
class UGuildSearchItemWidget final : public UPlatformWidgetButton
{
public:
	uint8                                         Pad_630[0x10];                                     // 0x0630(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             _guildLevelTextBlock;                              // 0x0640(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGuildEmblemIconImage*                  _guildEmblemIconImage;                             // 0x0648(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _guildMemberNumTextBlock;                          // 0x0650(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _guildMemberMaxTextBlock;                          // 0x0658(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _guildPolicyTextBlock;                             // 0x0660(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _authenticationSwitcher;                           // 0x0668(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           _requestCanvas;                                    // 0x0670(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<EGuildPolicy, class FText>               _guildPolicyTextMap;                               // 0x0678(0x0050)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                   _guildLevelTextFormat;                             // 0x06C8(0x0018)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_6E0[0x10];                                     // 0x06E0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnSetGuildName(const class FText& GuildName);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildSearchItemWidget">();
	}
	static class UGuildSearchItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildSearchItemWidget>();
	}
};
static_assert(alignof(UGuildSearchItemWidget) == 0x000008, "Wrong alignment on UGuildSearchItemWidget");
static_assert(sizeof(UGuildSearchItemWidget) == 0x0006F0, "Wrong size on UGuildSearchItemWidget");
static_assert(offsetof(UGuildSearchItemWidget, _guildLevelTextBlock) == 0x000640, "Member 'UGuildSearchItemWidget::_guildLevelTextBlock' has a wrong offset!");
static_assert(offsetof(UGuildSearchItemWidget, _guildEmblemIconImage) == 0x000648, "Member 'UGuildSearchItemWidget::_guildEmblemIconImage' has a wrong offset!");
static_assert(offsetof(UGuildSearchItemWidget, _guildMemberNumTextBlock) == 0x000650, "Member 'UGuildSearchItemWidget::_guildMemberNumTextBlock' has a wrong offset!");
static_assert(offsetof(UGuildSearchItemWidget, _guildMemberMaxTextBlock) == 0x000658, "Member 'UGuildSearchItemWidget::_guildMemberMaxTextBlock' has a wrong offset!");
static_assert(offsetof(UGuildSearchItemWidget, _guildPolicyTextBlock) == 0x000660, "Member 'UGuildSearchItemWidget::_guildPolicyTextBlock' has a wrong offset!");
static_assert(offsetof(UGuildSearchItemWidget, _authenticationSwitcher) == 0x000668, "Member 'UGuildSearchItemWidget::_authenticationSwitcher' has a wrong offset!");
static_assert(offsetof(UGuildSearchItemWidget, _requestCanvas) == 0x000670, "Member 'UGuildSearchItemWidget::_requestCanvas' has a wrong offset!");
static_assert(offsetof(UGuildSearchItemWidget, _guildPolicyTextMap) == 0x000678, "Member 'UGuildSearchItemWidget::_guildPolicyTextMap' has a wrong offset!");
static_assert(offsetof(UGuildSearchItemWidget, _guildLevelTextFormat) == 0x0006C8, "Member 'UGuildSearchItemWidget::_guildLevelTextFormat' has a wrong offset!");

// Class OutGameModule.EventStarMissionContents
// 0x0000 (0x04B8 - 0x04B8)
class UEventStarMissionContents final : public UStarMissionContents
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EventStarMissionContents">();
	}
	static class UEventStarMissionContents* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventStarMissionContents>();
	}
};
static_assert(alignof(UEventStarMissionContents) == 0x000008, "Wrong alignment on UEventStarMissionContents");
static_assert(sizeof(UEventStarMissionContents) == 0x0004B8, "Wrong size on UEventStarMissionContents");

// Class OutGameModule.EventTimerWidget
// 0x0008 (0x03E8 - 0x03E0)
class UEventTimerWidget final : public UTimeWidget
{
public:
	class UTextBlock*                             _stateText;                                        // 0x03E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EventTimerWidget">();
	}
	static class UEventTimerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventTimerWidget>();
	}
};
static_assert(alignof(UEventTimerWidget) == 0x000008, "Wrong alignment on UEventTimerWidget");
static_assert(sizeof(UEventTimerWidget) == 0x0003E8, "Wrong size on UEventTimerWidget");
static_assert(offsetof(UEventTimerWidget, _stateText) == 0x0003E0, "Member 'UEventTimerWidget::_stateText' has a wrong offset!");

// Class OutGameModule.ItemIconAppealWidget
// 0x0010 (0x0360 - 0x0350)
class UItemIconAppealWidget final : public UWidgetBase
{
public:
	class UItemIconWidget*                        _itemIcon;                                         // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconImage*                         _ItemIconImage;                                    // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemIconAppealWidget">();
	}
	static class UItemIconAppealWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemIconAppealWidget>();
	}
};
static_assert(alignof(UItemIconAppealWidget) == 0x000008, "Wrong alignment on UItemIconAppealWidget");
static_assert(sizeof(UItemIconAppealWidget) == 0x000360, "Wrong size on UItemIconAppealWidget");
static_assert(offsetof(UItemIconAppealWidget, _itemIcon) == 0x000350, "Member 'UItemIconAppealWidget::_itemIcon' has a wrong offset!");
static_assert(offsetof(UItemIconAppealWidget, _ItemIconImage) == 0x000358, "Member 'UItemIconAppealWidget::_ItemIconImage' has a wrong offset!");

// Class OutGameModule.EventWidget
// 0x0028 (0x0378 - 0x0350)
class UEventWidget final : public UWidgetBase
{
public:
	class UEventPanelListWidget*                  _eventPanelList;                                   // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEventButtonListWidget*                 _eventButtonList;                                  // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEventPreviewWidget*                    _preview;                                          // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULoadIconWidget*                        _loadingIcon;                                      // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_370[0x8];                                      // 0x0370(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void UpdateCompleted(int32 ID);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EventWidget">();
	}
	static class UEventWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventWidget>();
	}
};
static_assert(alignof(UEventWidget) == 0x000008, "Wrong alignment on UEventWidget");
static_assert(sizeof(UEventWidget) == 0x000378, "Wrong size on UEventWidget");
static_assert(offsetof(UEventWidget, _eventPanelList) == 0x000350, "Member 'UEventWidget::_eventPanelList' has a wrong offset!");
static_assert(offsetof(UEventWidget, _eventButtonList) == 0x000358, "Member 'UEventWidget::_eventButtonList' has a wrong offset!");
static_assert(offsetof(UEventWidget, _preview) == 0x000360, "Member 'UEventWidget::_preview' has a wrong offset!");
static_assert(offsetof(UEventWidget, _loadingIcon) == 0x000368, "Member 'UEventWidget::_loadingIcon' has a wrong offset!");

// Class OutGameModule.FindSquadWidget
// 0x0000 (0x0350 - 0x0350)
class UFindSquadWidget final : public UWidgetBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FindSquadWidget">();
	}
	static class UFindSquadWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFindSquadWidget>();
	}
};
static_assert(alignof(UFindSquadWidget) == 0x000008, "Wrong alignment on UFindSquadWidget");
static_assert(sizeof(UFindSquadWidget) == 0x000350, "Wrong size on UFindSquadWidget");

// Class OutGameModule.IncentiveStatics
// 0x0000 (0x0028 - 0x0028)
class UIncentiveStatics final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"IncentiveStatics">();
	}
	static class UIncentiveStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIncentiveStatics>();
	}
};
static_assert(alignof(UIncentiveStatics) == 0x000008, "Wrong alignment on UIncentiveStatics");
static_assert(sizeof(UIncentiveStatics) == 0x000028, "Wrong size on UIncentiveStatics");

// Class OutGameModule.FriendAppWidget
// 0x00C8 (0x0418 - 0x0350)
class UFriendAppWidget final : public UWidgetBase
{
public:
	class UCanvasPanel*                           _window;                                           // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _filterOpenButton;                                 // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFriendSubMenuAppWidget*                _filterWidget;                                     // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFriendSubMenuAppWidget*                _changeCategoryWidget;                             // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _listWidgetSwitcher;                               // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFriendListHasWidget*                   _friendListWidget;                                 // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFriendListHasWidget*                   _friendApprovalWaitingListWidget;                  // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFriendListHasWidget*                   _friendApprovalApplyingListWidget;                 // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFriendListHasWidget*                   _friendAddFriendPlayedListWidget;                  // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFriendListHasWidget*                   _friendAddFriendGuildMemberListWidget;             // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFriendListHasWidget*                   _friendAddFriendPlatformListWidget;                // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFriendListItemSubWidget*               _subMenu;                                          // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFriendListItemSubWidget*               _subMenuApprovalWaiting;                           // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameSequenceWork*                      _gameSequenceWork;                                 // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerDatabaseWork*                    _playerDatabaseWork;                               // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C8[0x50];                                     // 0x03C8(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_AddItemListView();
	void BP_OnChangeTab();
	void BP_OnTryChangeTab();
	void BP_RemoveItemListView();
	void BP_SetFocusCategoryWidget();
	void BP_SetFocusWidget();
	class UWidget* DoCustomWidgetNavigation_Button(EUINavigation UiNavigation);
	void OnDecideButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnReceivedCustomWidgetNavigation(EUINavigation UiNavigation);
	void OnReceivedLeftInputEscNavigation();
	void OnReceivedRequestFriendListCustom(EFriendListType FriendType, EFriendStatus FriendStatus);
	void SetFocusCategoryWidget();
	void SetFocusWidget();
	void UpdateDataAfterFriendFetch();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FriendAppWidget">();
	}
	static class UFriendAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFriendAppWidget>();
	}
};
static_assert(alignof(UFriendAppWidget) == 0x000008, "Wrong alignment on UFriendAppWidget");
static_assert(sizeof(UFriendAppWidget) == 0x000418, "Wrong size on UFriendAppWidget");
static_assert(offsetof(UFriendAppWidget, _window) == 0x000350, "Member 'UFriendAppWidget::_window' has a wrong offset!");
static_assert(offsetof(UFriendAppWidget, _filterOpenButton) == 0x000358, "Member 'UFriendAppWidget::_filterOpenButton' has a wrong offset!");
static_assert(offsetof(UFriendAppWidget, _filterWidget) == 0x000360, "Member 'UFriendAppWidget::_filterWidget' has a wrong offset!");
static_assert(offsetof(UFriendAppWidget, _changeCategoryWidget) == 0x000368, "Member 'UFriendAppWidget::_changeCategoryWidget' has a wrong offset!");
static_assert(offsetof(UFriendAppWidget, _listWidgetSwitcher) == 0x000370, "Member 'UFriendAppWidget::_listWidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UFriendAppWidget, _friendListWidget) == 0x000378, "Member 'UFriendAppWidget::_friendListWidget' has a wrong offset!");
static_assert(offsetof(UFriendAppWidget, _friendApprovalWaitingListWidget) == 0x000380, "Member 'UFriendAppWidget::_friendApprovalWaitingListWidget' has a wrong offset!");
static_assert(offsetof(UFriendAppWidget, _friendApprovalApplyingListWidget) == 0x000388, "Member 'UFriendAppWidget::_friendApprovalApplyingListWidget' has a wrong offset!");
static_assert(offsetof(UFriendAppWidget, _friendAddFriendPlayedListWidget) == 0x000390, "Member 'UFriendAppWidget::_friendAddFriendPlayedListWidget' has a wrong offset!");
static_assert(offsetof(UFriendAppWidget, _friendAddFriendGuildMemberListWidget) == 0x000398, "Member 'UFriendAppWidget::_friendAddFriendGuildMemberListWidget' has a wrong offset!");
static_assert(offsetof(UFriendAppWidget, _friendAddFriendPlatformListWidget) == 0x0003A0, "Member 'UFriendAppWidget::_friendAddFriendPlatformListWidget' has a wrong offset!");
static_assert(offsetof(UFriendAppWidget, _subMenu) == 0x0003A8, "Member 'UFriendAppWidget::_subMenu' has a wrong offset!");
static_assert(offsetof(UFriendAppWidget, _subMenuApprovalWaiting) == 0x0003B0, "Member 'UFriendAppWidget::_subMenuApprovalWaiting' has a wrong offset!");
static_assert(offsetof(UFriendAppWidget, _gameSequenceWork) == 0x0003B8, "Member 'UFriendAppWidget::_gameSequenceWork' has a wrong offset!");
static_assert(offsetof(UFriendAppWidget, _playerDatabaseWork) == 0x0003C0, "Member 'UFriendAppWidget::_playerDatabaseWork' has a wrong offset!");

// Class OutGameModule.FriendListButtonWidget
// 0x0048 (0x0678 - 0x0630)
class UFriendListButtonWidget final : public UPlatformWidgetButton
{
public:
	bool                                          _bSquadButton;                                     // 0x0630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_631[0x7];                                      // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFriendListViewEntryObject*             _item;                                             // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPaperFlipbook*                         _ImageFB;                                          // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProfileDisplayEmblemWidget*            _emblem;                                           // 0x0648(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _backImage;                                        // 0x0650(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTimeWidget*                            _timeWidget;                                       // 0x0658(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _onlineStatusText;                                 // 0x0660(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _playerName;                                       // 0x0668(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusAnimationWidget*                  _focusIcon;                                        // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_SetPlayerName(const class FText& InName);
	void BP_UpdateDisplayDataInternal();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FriendListButtonWidget">();
	}
	static class UFriendListButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFriendListButtonWidget>();
	}
};
static_assert(alignof(UFriendListButtonWidget) == 0x000008, "Wrong alignment on UFriendListButtonWidget");
static_assert(sizeof(UFriendListButtonWidget) == 0x000678, "Wrong size on UFriendListButtonWidget");
static_assert(offsetof(UFriendListButtonWidget, _bSquadButton) == 0x000630, "Member 'UFriendListButtonWidget::_bSquadButton' has a wrong offset!");
static_assert(offsetof(UFriendListButtonWidget, _item) == 0x000638, "Member 'UFriendListButtonWidget::_item' has a wrong offset!");
static_assert(offsetof(UFriendListButtonWidget, _ImageFB) == 0x000640, "Member 'UFriendListButtonWidget::_ImageFB' has a wrong offset!");
static_assert(offsetof(UFriendListButtonWidget, _emblem) == 0x000648, "Member 'UFriendListButtonWidget::_emblem' has a wrong offset!");
static_assert(offsetof(UFriendListButtonWidget, _backImage) == 0x000650, "Member 'UFriendListButtonWidget::_backImage' has a wrong offset!");
static_assert(offsetof(UFriendListButtonWidget, _timeWidget) == 0x000658, "Member 'UFriendListButtonWidget::_timeWidget' has a wrong offset!");
static_assert(offsetof(UFriendListButtonWidget, _onlineStatusText) == 0x000660, "Member 'UFriendListButtonWidget::_onlineStatusText' has a wrong offset!");
static_assert(offsetof(UFriendListButtonWidget, _playerName) == 0x000668, "Member 'UFriendListButtonWidget::_playerName' has a wrong offset!");
static_assert(offsetof(UFriendListButtonWidget, _focusIcon) == 0x000670, "Member 'UFriendListButtonWidget::_focusIcon' has a wrong offset!");

// Class OutGameModule.GuildScoreWidget
// 0x0058 (0x03A8 - 0x0350)
class UGuildScoreWidget final : public UWidgetBase
{
public:
	bool                                          _bSelect;                                          // 0x0350(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class FText>                      _leagueNameMap;                                    // 0x0358(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)

public:
	void OnScoreView(const class FText& LeagueName, int32 Ranking, int32 Point);
	void UpdateScoreView();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildScoreWidget">();
	}
	static class UGuildScoreWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildScoreWidget>();
	}
};
static_assert(alignof(UGuildScoreWidget) == 0x000008, "Wrong alignment on UGuildScoreWidget");
static_assert(sizeof(UGuildScoreWidget) == 0x0003A8, "Wrong size on UGuildScoreWidget");
static_assert(offsetof(UGuildScoreWidget, _bSelect) == 0x000350, "Member 'UGuildScoreWidget::_bSelect' has a wrong offset!");
static_assert(offsetof(UGuildScoreWidget, _leagueNameMap) == 0x000358, "Member 'UGuildScoreWidget::_leagueNameMap' has a wrong offset!");

// Class OutGameModule.FriendListHasWidget
// 0x0038 (0x0388 - 0x0350)
class UFriendListHasWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class USortTextWidget*                        _friendsNumWidget;                                 // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGeneralPageCarouselWidget*             _generalPageCarousel;                              // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFriendListWidget*                      _friendListWidget;                                 // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameSequenceWork*                      _gameSequenceWork;                                 // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerDatabaseWork*                    _playerDatabaseWork;                               // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void GeneralPageCarouselNavigation(EUINavigation UiNavigation);
	void GeneralPageCarouselNavigationRight(EUINavigation UiNavigation);
	void OnChangedIndexEvent(int32 NewIndex, bool IsFocus);
	void OnReceivedUpInputEscNavigation();
	void UpdateTextCount(int32 Num, int32 Maxnum, int32 Maxpage);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FriendListHasWidget">();
	}
	static class UFriendListHasWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFriendListHasWidget>();
	}
};
static_assert(alignof(UFriendListHasWidget) == 0x000008, "Wrong alignment on UFriendListHasWidget");
static_assert(sizeof(UFriendListHasWidget) == 0x000388, "Wrong size on UFriendListHasWidget");
static_assert(offsetof(UFriendListHasWidget, _friendsNumWidget) == 0x000360, "Member 'UFriendListHasWidget::_friendsNumWidget' has a wrong offset!");
static_assert(offsetof(UFriendListHasWidget, _generalPageCarousel) == 0x000368, "Member 'UFriendListHasWidget::_generalPageCarousel' has a wrong offset!");
static_assert(offsetof(UFriendListHasWidget, _friendListWidget) == 0x000370, "Member 'UFriendListHasWidget::_friendListWidget' has a wrong offset!");
static_assert(offsetof(UFriendListHasWidget, _gameSequenceWork) == 0x000378, "Member 'UFriendListHasWidget::_gameSequenceWork' has a wrong offset!");
static_assert(offsetof(UFriendListHasWidget, _playerDatabaseWork) == 0x000380, "Member 'UFriendListHasWidget::_playerDatabaseWork' has a wrong offset!");

// Class OutGameModule.FriendListItemSubWidget
// 0x0038 (0x0420 - 0x03E8)
class UFriendListItemSubWidget final : public UAppWidget
{
public:
	FMulticastInlineDelegateProperty_             OnDecidedSubMenu;                                  // 0x03E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UWidgetGeneralEmptyWindow*              _window;                                           // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _cancelButton;                                     // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _buttonHangar;                                     // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UWidgetButton*>                  _buttonWidgetList;                                 // 0x0410(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	bool BP_IsOpen();
	void BP_Open(bool IsOpen, bool IsSoundRequeset);
	void OnAddedToFocusSubMenuEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnClosedWindowEvent();
	void OnDecidedSubMenuEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecidedSubMenuEventDelegate__DelegateSignature(int32 Index_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FriendListItemSubWidget">();
	}
	static class UFriendListItemSubWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFriendListItemSubWidget>();
	}
};
static_assert(alignof(UFriendListItemSubWidget) == 0x000008, "Wrong alignment on UFriendListItemSubWidget");
static_assert(sizeof(UFriendListItemSubWidget) == 0x000420, "Wrong size on UFriendListItemSubWidget");
static_assert(offsetof(UFriendListItemSubWidget, OnDecidedSubMenu) == 0x0003E8, "Member 'UFriendListItemSubWidget::OnDecidedSubMenu' has a wrong offset!");
static_assert(offsetof(UFriendListItemSubWidget, _window) == 0x0003F8, "Member 'UFriendListItemSubWidget::_window' has a wrong offset!");
static_assert(offsetof(UFriendListItemSubWidget, _cancelButton) == 0x000400, "Member 'UFriendListItemSubWidget::_cancelButton' has a wrong offset!");
static_assert(offsetof(UFriendListItemSubWidget, _buttonHangar) == 0x000408, "Member 'UFriendListItemSubWidget::_buttonHangar' has a wrong offset!");
static_assert(offsetof(UFriendListItemSubWidget, _buttonWidgetList) == 0x000410, "Member 'UFriendListItemSubWidget::_buttonWidgetList' has a wrong offset!");

// Class OutGameModule.ItemGetListItemWidget
// 0x0040 (0x04C8 - 0x0488)
class UItemGetListItemWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemIconWithNameWidget*                _itemIcon;                                         // 0x0490(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _ani_GetIn;                                        // 0x0498(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _ani_GetLoop;                                      // 0x04A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4A8[0x10];                                     // 0x04A8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _delayGetInTime;                                   // 0x04B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemGetListIEntryObject*               _itemObject;                                       // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	const struct FItemGetListItemParam GetParam();
	void OnAnimationGetInFinished();
	void PlayGetInAnimation();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemGetListItemWidget">();
	}
	static class UItemGetListItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemGetListItemWidget>();
	}
};
static_assert(alignof(UItemGetListItemWidget) == 0x000008, "Wrong alignment on UItemGetListItemWidget");
static_assert(sizeof(UItemGetListItemWidget) == 0x0004C8, "Wrong size on UItemGetListItemWidget");
static_assert(offsetof(UItemGetListItemWidget, _itemIcon) == 0x000490, "Member 'UItemGetListItemWidget::_itemIcon' has a wrong offset!");
static_assert(offsetof(UItemGetListItemWidget, _ani_GetIn) == 0x000498, "Member 'UItemGetListItemWidget::_ani_GetIn' has a wrong offset!");
static_assert(offsetof(UItemGetListItemWidget, _ani_GetLoop) == 0x0004A0, "Member 'UItemGetListItemWidget::_ani_GetLoop' has a wrong offset!");
static_assert(offsetof(UItemGetListItemWidget, _delayGetInTime) == 0x0004B8, "Member 'UItemGetListItemWidget::_delayGetInTime' has a wrong offset!");
static_assert(offsetof(UItemGetListItemWidget, _itemObject) == 0x0004C0, "Member 'UItemGetListItemWidget::_itemObject' has a wrong offset!");

// Class OutGameModule.FriendListItemWidget
// 0x0018 (0x0648 - 0x0630)
class UFriendListItemWidget final : public UPlatformWidgetButton
{
public:
	uint8                                         Pad_630[0x8];                                      // 0x0630(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UFriendListButtonWidget*                _button;                                           // 0x0638(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFriendListViewEntryObject*             _item;                                             // 0x0640(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FriendListItemWidget">();
	}
	static class UFriendListItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFriendListItemWidget>();
	}
};
static_assert(alignof(UFriendListItemWidget) == 0x000008, "Wrong alignment on UFriendListItemWidget");
static_assert(sizeof(UFriendListItemWidget) == 0x000648, "Wrong size on UFriendListItemWidget");
static_assert(offsetof(UFriendListItemWidget, _button) == 0x000638, "Member 'UFriendListItemWidget::_button' has a wrong offset!");
static_assert(offsetof(UFriendListItemWidget, _item) == 0x000640, "Member 'UFriendListItemWidget::_item' has a wrong offset!");

// Class OutGameModule.FriendListViewEntryObject
// 0x0050 (0x0080 - 0x0030)
class UFriendListViewEntryObject : public UListViewEntryObjectBase
{
public:
	struct FFriendInfo                            _data;                                             // 0x0030(0x0048)(Protected, NativeAccessSpecifierProtected)
	int32                                         _maxNum;                                           // 0x0078(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _columNum;                                         // 0x007C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FriendListViewEntryObject">();
	}
	static class UFriendListViewEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFriendListViewEntryObject>();
	}
};
static_assert(alignof(UFriendListViewEntryObject) == 0x000008, "Wrong alignment on UFriendListViewEntryObject");
static_assert(sizeof(UFriendListViewEntryObject) == 0x000080, "Wrong size on UFriendListViewEntryObject");
static_assert(offsetof(UFriendListViewEntryObject, _data) == 0x000030, "Member 'UFriendListViewEntryObject::_data' has a wrong offset!");
static_assert(offsetof(UFriendListViewEntryObject, _maxNum) == 0x000078, "Member 'UFriendListViewEntryObject::_maxNum' has a wrong offset!");
static_assert(offsetof(UFriendListViewEntryObject, _columNum) == 0x00007C, "Member 'UFriendListViewEntryObject::_columNum' has a wrong offset!");

// Class OutGameModule.ItemMissionContents
// 0x0000 (0x0418 - 0x0418)
class UItemMissionContents final : public UMissionContents
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemMissionContents">();
	}
	static class UItemMissionContents* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemMissionContents>();
	}
};
static_assert(alignof(UItemMissionContents) == 0x000008, "Wrong alignment on UItemMissionContents");
static_assert(sizeof(UItemMissionContents) == 0x000418, "Wrong size on UItemMissionContents");

// Class OutGameModule.FriendListWidget
// 0x00A8 (0x03F8 - 0x0350)
class UFriendListWidget final : public UWidgetBase
{
public:
	class UCustomTileView*                        _tileView;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetBase*                            _emptyDisplay;                                     // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULoadIconWidget*                        _networkWaiting;                                   // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _charaImage;                                       // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              _charaImagePos;                                    // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _navigationColumnCount;                            // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _entryWidth;                                       // 0x037C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _entryHeight;                                      // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              _emptyWindowOffset;                                // 0x0384(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _friendCount;                                      // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _friendCountMax;                                   // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _friendPageMax;                                    // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bAutoFocus;                                       // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             _onCreatedFriendList;                              // 0x03A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             _onDecideDelegate;                                 // 0x03B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             _onChangeFriendCount;                              // 0x03C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnUpInputEscNavigation;                            // 0x03D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnLeftInputEscNavigation;                          // 0x03E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F0[0x8];                                      // 0x03F0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_RequestFriendList(bool bIgnoreFriendStatus, bool bResetPage);
	void BP_RequestFriendList_Friend(bool bIgnoreFriendStatus, bool bResetPage);
	void BP_RequestFriendList_Guild(bool bIgnoreFriendStatus, bool bResetPage);
	void BP_RequestFriendList_Platform(bool bIgnoreFriendStatus, bool bResetPage);
	void BP_RequestFriendList_RecentlyPlayedWith(bool bIgnoreFriendStatus, bool bResetPage);
	void BP_RequestFriendListByName(bool bIgnoreFriendStatus, const class FString& SearchName);
	void BP_RequestFriendListCustom(EFriendListType FriendType, EFriendStatus FriendStatus, bool bIgnoreFriendStatus, bool bResetPage);
	void BP_RequestGuildInvite_Friend(bool bIgnoreFriendStatus, bool bResetPage);
	void BP_RequestGuildInvitePlatform(bool bIgnoreFriendStatus, bool bResetPage);
	void BP_RequestGuildInviteRecentlyPlayedWith(bool bIgnoreFriendStatus, bool bResetPage);
	class UWidget* DoCustomTileViewWidgetNavigation(EUINavigation UiNavigation);
	class UWidget* NavigationSet(int32 Index_0);
	class UWidget* NavigationSetItem();
	void OnAddedToFocusItemWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnChangeFriendCount__DelegateSignature(int32 Num, int32 Maxnum, int32 Maxpage);
	void OnCreatedFriendList__DelegateSignature();
	void OnDecideButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnInputEscNavigation__DelegateSignature();
	void OnInputEventDelegate__DelegateSignature(class UAppWidget* Widget, EWidgetInputType InputType);
	void ReceivedOnLoadCompleteEvent(int32 RequestId);
	void SetPageNo(int32 PageNo);

	const class UFriendListViewEntryObject* GetSelectedItem() const;
	class FString GetSelectedUserId() const;
	class FString GetSelectedUserName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FriendListWidget">();
	}
	static class UFriendListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFriendListWidget>();
	}
};
static_assert(alignof(UFriendListWidget) == 0x000008, "Wrong alignment on UFriendListWidget");
static_assert(sizeof(UFriendListWidget) == 0x0003F8, "Wrong size on UFriendListWidget");
static_assert(offsetof(UFriendListWidget, _tileView) == 0x000350, "Member 'UFriendListWidget::_tileView' has a wrong offset!");
static_assert(offsetof(UFriendListWidget, _emptyDisplay) == 0x000358, "Member 'UFriendListWidget::_emptyDisplay' has a wrong offset!");
static_assert(offsetof(UFriendListWidget, _networkWaiting) == 0x000360, "Member 'UFriendListWidget::_networkWaiting' has a wrong offset!");
static_assert(offsetof(UFriendListWidget, _charaImage) == 0x000368, "Member 'UFriendListWidget::_charaImage' has a wrong offset!");
static_assert(offsetof(UFriendListWidget, _charaImagePos) == 0x000370, "Member 'UFriendListWidget::_charaImagePos' has a wrong offset!");
static_assert(offsetof(UFriendListWidget, _navigationColumnCount) == 0x000378, "Member 'UFriendListWidget::_navigationColumnCount' has a wrong offset!");
static_assert(offsetof(UFriendListWidget, _entryWidth) == 0x00037C, "Member 'UFriendListWidget::_entryWidth' has a wrong offset!");
static_assert(offsetof(UFriendListWidget, _entryHeight) == 0x000380, "Member 'UFriendListWidget::_entryHeight' has a wrong offset!");
static_assert(offsetof(UFriendListWidget, _emptyWindowOffset) == 0x000384, "Member 'UFriendListWidget::_emptyWindowOffset' has a wrong offset!");
static_assert(offsetof(UFriendListWidget, _friendCount) == 0x00038C, "Member 'UFriendListWidget::_friendCount' has a wrong offset!");
static_assert(offsetof(UFriendListWidget, _friendCountMax) == 0x000390, "Member 'UFriendListWidget::_friendCountMax' has a wrong offset!");
static_assert(offsetof(UFriendListWidget, _friendPageMax) == 0x000394, "Member 'UFriendListWidget::_friendPageMax' has a wrong offset!");
static_assert(offsetof(UFriendListWidget, _bAutoFocus) == 0x000398, "Member 'UFriendListWidget::_bAutoFocus' has a wrong offset!");
static_assert(offsetof(UFriendListWidget, _onCreatedFriendList) == 0x0003A0, "Member 'UFriendListWidget::_onCreatedFriendList' has a wrong offset!");
static_assert(offsetof(UFriendListWidget, _onDecideDelegate) == 0x0003B0, "Member 'UFriendListWidget::_onDecideDelegate' has a wrong offset!");
static_assert(offsetof(UFriendListWidget, _onChangeFriendCount) == 0x0003C0, "Member 'UFriendListWidget::_onChangeFriendCount' has a wrong offset!");
static_assert(offsetof(UFriendListWidget, OnUpInputEscNavigation) == 0x0003D0, "Member 'UFriendListWidget::OnUpInputEscNavigation' has a wrong offset!");
static_assert(offsetof(UFriendListWidget, OnLeftInputEscNavigation) == 0x0003E0, "Member 'UFriendListWidget::OnLeftInputEscNavigation' has a wrong offset!");

// Class OutGameModule.FriendRequesetMenuAppWidget
// 0x0058 (0x0440 - 0x03E8)
class UFriendRequesetMenuAppWidget final : public UAppWidget
{
public:
	FMulticastInlineDelegateProperty_             OnCloseLevelEventDelegate;                         // 0x03E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          _bIsSubLevel;                                      // 0x03F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bIsSkipConfirm;                                   // 0x03F9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EFriendRequesetType                           _categoryType;                                     // 0x03FA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3FB[0x5];                                      // 0x03FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetGeneralWindow*                   _generalWindow;                                    // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _popupWindow;                                      // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _blockListWindow;                                  // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_418[0x28];                                     // 0x0418(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CloseConfirmWindow();
	void ClosedBlockListWindow();
	void OnCancelBlockListWindow(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnCancelConfirmWindow(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnCancelFriendRequestWindow(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnClickedBlockBGRequest();
	void OnClosedBlockListWindow();
	void OnClosedConfirmWindow();
	void OnClosedFriendRequestWindow();
	void OnCloseLevelEventDelegate__DelegateSignature();
	void OnDecideBlockListWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnDecideConfirmWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnDecideFriendRequestWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnFinishFetchDataEvent(int32 RequestId);
	void OnReceivedCloseWebApiErrorWindow();
	void OnReceivedUpdateWebApiError();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FriendRequesetMenuAppWidget">();
	}
	static class UFriendRequesetMenuAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFriendRequesetMenuAppWidget>();
	}
};
static_assert(alignof(UFriendRequesetMenuAppWidget) == 0x000008, "Wrong alignment on UFriendRequesetMenuAppWidget");
static_assert(sizeof(UFriendRequesetMenuAppWidget) == 0x000440, "Wrong size on UFriendRequesetMenuAppWidget");
static_assert(offsetof(UFriendRequesetMenuAppWidget, OnCloseLevelEventDelegate) == 0x0003E8, "Member 'UFriendRequesetMenuAppWidget::OnCloseLevelEventDelegate' has a wrong offset!");
static_assert(offsetof(UFriendRequesetMenuAppWidget, _bIsSubLevel) == 0x0003F8, "Member 'UFriendRequesetMenuAppWidget::_bIsSubLevel' has a wrong offset!");
static_assert(offsetof(UFriendRequesetMenuAppWidget, _bIsSkipConfirm) == 0x0003F9, "Member 'UFriendRequesetMenuAppWidget::_bIsSkipConfirm' has a wrong offset!");
static_assert(offsetof(UFriendRequesetMenuAppWidget, _categoryType) == 0x0003FA, "Member 'UFriendRequesetMenuAppWidget::_categoryType' has a wrong offset!");
static_assert(offsetof(UFriendRequesetMenuAppWidget, _generalWindow) == 0x000400, "Member 'UFriendRequesetMenuAppWidget::_generalWindow' has a wrong offset!");
static_assert(offsetof(UFriendRequesetMenuAppWidget, _popupWindow) == 0x000408, "Member 'UFriendRequesetMenuAppWidget::_popupWindow' has a wrong offset!");
static_assert(offsetof(UFriendRequesetMenuAppWidget, _blockListWindow) == 0x000410, "Member 'UFriendRequesetMenuAppWidget::_blockListWindow' has a wrong offset!");

// Class OutGameModule.ItemIconVoiceWidget
// 0x0020 (0x0370 - 0x0350)
class UItemIconVoiceWidget final : public UWidgetBase
{
public:
	class UImage*                                 _iconImage;                                        // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _serifText;                                        // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _minFontSize;                                      // 0x0360(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _maxFontSize;                                      // 0x0364(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               _iconMaterial;                                     // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemIconVoiceWidget">();
	}
	static class UItemIconVoiceWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemIconVoiceWidget>();
	}
};
static_assert(alignof(UItemIconVoiceWidget) == 0x000008, "Wrong alignment on UItemIconVoiceWidget");
static_assert(sizeof(UItemIconVoiceWidget) == 0x000370, "Wrong size on UItemIconVoiceWidget");
static_assert(offsetof(UItemIconVoiceWidget, _iconImage) == 0x000350, "Member 'UItemIconVoiceWidget::_iconImage' has a wrong offset!");
static_assert(offsetof(UItemIconVoiceWidget, _serifText) == 0x000358, "Member 'UItemIconVoiceWidget::_serifText' has a wrong offset!");
static_assert(offsetof(UItemIconVoiceWidget, _minFontSize) == 0x000360, "Member 'UItemIconVoiceWidget::_minFontSize' has a wrong offset!");
static_assert(offsetof(UItemIconVoiceWidget, _maxFontSize) == 0x000364, "Member 'UItemIconVoiceWidget::_maxFontSize' has a wrong offset!");
static_assert(offsetof(UItemIconVoiceWidget, _iconMaterial) == 0x000368, "Member 'UItemIconVoiceWidget::_iconMaterial' has a wrong offset!");

// Class OutGameModule.FriendSubMenuAppWidget
// 0x00D0 (0x04B8 - 0x03E8)
class UFriendSubMenuAppWidget final : public UAppWidget
{
public:
	FMulticastInlineDelegateProperty_             RequestFetchEventDelegate;                         // 0x03E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             DoCustomWidgetNavigationDelegate;                  // 0x03F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnDecidedButtonEvent;                              // 0x0408(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UWidgetButton*                          _firendListButton;                                 // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _appliedListButton;                                // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _applyingListButton;                               // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _addFriendButton;                                  // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _addFriendGuildButton;                             // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _addFriendPlatformButton;                          // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USortPopupWidget*                       _sortPopup;                                        // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<EFriendListType, class UWidgetButton*>   _hasAppWidgetList;                                 // 0x0450(0x0050)(Edit, BlueprintVisible, ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _focusCategoryButton;                              // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameSequenceWork*                      _gameSequenceWork;                                 // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerDatabaseWork*                    _playerDatabaseWork;                               // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class UWidget* DoCustomNavigation(EUINavigation UiNavigation);
	void DoCustomWidgetNavigation__DelegateSignature(EUINavigation UiNavigation);
	void OnAddedToFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecidedButtonEvent__DelegateSignature();
	void OnDecideEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnReceivedDecideDelegateEvent();
	void OnReceivedError_RequestFriend();
	void OnReceivedFinish_RequestFriend();
	void OnRequestFetchEventDelegate__DelegateSignature(EFriendListType FriendType, EFriendStatus FriendStatus);
	void RequestFriend(bool Focus);
	void SetFocusWidget();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FriendSubMenuAppWidget">();
	}
	static class UFriendSubMenuAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFriendSubMenuAppWidget>();
	}
};
static_assert(alignof(UFriendSubMenuAppWidget) == 0x000008, "Wrong alignment on UFriendSubMenuAppWidget");
static_assert(sizeof(UFriendSubMenuAppWidget) == 0x0004B8, "Wrong size on UFriendSubMenuAppWidget");
static_assert(offsetof(UFriendSubMenuAppWidget, RequestFetchEventDelegate) == 0x0003E8, "Member 'UFriendSubMenuAppWidget::RequestFetchEventDelegate' has a wrong offset!");
static_assert(offsetof(UFriendSubMenuAppWidget, DoCustomWidgetNavigationDelegate) == 0x0003F8, "Member 'UFriendSubMenuAppWidget::DoCustomWidgetNavigationDelegate' has a wrong offset!");
static_assert(offsetof(UFriendSubMenuAppWidget, OnDecidedButtonEvent) == 0x000408, "Member 'UFriendSubMenuAppWidget::OnDecidedButtonEvent' has a wrong offset!");
static_assert(offsetof(UFriendSubMenuAppWidget, _firendListButton) == 0x000418, "Member 'UFriendSubMenuAppWidget::_firendListButton' has a wrong offset!");
static_assert(offsetof(UFriendSubMenuAppWidget, _appliedListButton) == 0x000420, "Member 'UFriendSubMenuAppWidget::_appliedListButton' has a wrong offset!");
static_assert(offsetof(UFriendSubMenuAppWidget, _applyingListButton) == 0x000428, "Member 'UFriendSubMenuAppWidget::_applyingListButton' has a wrong offset!");
static_assert(offsetof(UFriendSubMenuAppWidget, _addFriendButton) == 0x000430, "Member 'UFriendSubMenuAppWidget::_addFriendButton' has a wrong offset!");
static_assert(offsetof(UFriendSubMenuAppWidget, _addFriendGuildButton) == 0x000438, "Member 'UFriendSubMenuAppWidget::_addFriendGuildButton' has a wrong offset!");
static_assert(offsetof(UFriendSubMenuAppWidget, _addFriendPlatformButton) == 0x000440, "Member 'UFriendSubMenuAppWidget::_addFriendPlatformButton' has a wrong offset!");
static_assert(offsetof(UFriendSubMenuAppWidget, _sortPopup) == 0x000448, "Member 'UFriendSubMenuAppWidget::_sortPopup' has a wrong offset!");
static_assert(offsetof(UFriendSubMenuAppWidget, _hasAppWidgetList) == 0x000450, "Member 'UFriendSubMenuAppWidget::_hasAppWidgetList' has a wrong offset!");
static_assert(offsetof(UFriendSubMenuAppWidget, _focusCategoryButton) == 0x0004A0, "Member 'UFriendSubMenuAppWidget::_focusCategoryButton' has a wrong offset!");
static_assert(offsetof(UFriendSubMenuAppWidget, _gameSequenceWork) == 0x0004A8, "Member 'UFriendSubMenuAppWidget::_gameSequenceWork' has a wrong offset!");
static_assert(offsetof(UFriendSubMenuAppWidget, _playerDatabaseWork) == 0x0004B0, "Member 'UFriendSubMenuAppWidget::_playerDatabaseWork' has a wrong offset!");

// Class OutGameModule.FriendSubMenuButtonWidget
// 0x0008 (0x0638 - 0x0630)
class UFriendSubMenuButtonWidget final : public UPlatformWidgetButton
{
public:
	class UFocusAnimationWidget*                  _focusIcon;                                        // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FriendSubMenuButtonWidget">();
	}
	static class UFriendSubMenuButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFriendSubMenuButtonWidget>();
	}
};
static_assert(alignof(UFriendSubMenuButtonWidget) == 0x000008, "Wrong alignment on UFriendSubMenuButtonWidget");
static_assert(sizeof(UFriendSubMenuButtonWidget) == 0x000638, "Wrong size on UFriendSubMenuButtonWidget");
static_assert(offsetof(UFriendSubMenuButtonWidget, _focusIcon) == 0x000630, "Member 'UFriendSubMenuButtonWidget::_focusIcon' has a wrong offset!");

// Class OutGameModule.ItemDetailsWidget
// 0x0048 (0x0398 - 0x0350)
class UItemDetailsWidget : public UWidgetBase
{
public:
	class UItemIconImage*                         _itemIcon;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEmblemDisplayWidget*                   _itemIconEmblem;                                   // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconVoiceWidget*                   _itemIconVoice;                                    // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconAppealWidget*                  _itemIconAppeal;                                   // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMyADPartsWidget*                       _myADParts;                                        // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _itemName;                                         // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _subText01;                                        // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _subText02;                                        // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bSmallIcon;                                       // 0x0390(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Hide();
	void Show(int32 ItemCode, const class FString& ItemCategory);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemDetailsWidget">();
	}
	static class UItemDetailsWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemDetailsWidget>();
	}
};
static_assert(alignof(UItemDetailsWidget) == 0x000008, "Wrong alignment on UItemDetailsWidget");
static_assert(sizeof(UItemDetailsWidget) == 0x000398, "Wrong size on UItemDetailsWidget");
static_assert(offsetof(UItemDetailsWidget, _itemIcon) == 0x000350, "Member 'UItemDetailsWidget::_itemIcon' has a wrong offset!");
static_assert(offsetof(UItemDetailsWidget, _itemIconEmblem) == 0x000358, "Member 'UItemDetailsWidget::_itemIconEmblem' has a wrong offset!");
static_assert(offsetof(UItemDetailsWidget, _itemIconVoice) == 0x000360, "Member 'UItemDetailsWidget::_itemIconVoice' has a wrong offset!");
static_assert(offsetof(UItemDetailsWidget, _itemIconAppeal) == 0x000368, "Member 'UItemDetailsWidget::_itemIconAppeal' has a wrong offset!");
static_assert(offsetof(UItemDetailsWidget, _myADParts) == 0x000370, "Member 'UItemDetailsWidget::_myADParts' has a wrong offset!");
static_assert(offsetof(UItemDetailsWidget, _itemName) == 0x000378, "Member 'UItemDetailsWidget::_itemName' has a wrong offset!");
static_assert(offsetof(UItemDetailsWidget, _subText01) == 0x000380, "Member 'UItemDetailsWidget::_subText01' has a wrong offset!");
static_assert(offsetof(UItemDetailsWidget, _subText02) == 0x000388, "Member 'UItemDetailsWidget::_subText02' has a wrong offset!");
static_assert(offsetof(UItemDetailsWidget, _bSmallIcon) == 0x000390, "Member 'UItemDetailsWidget::_bSmallIcon' has a wrong offset!");

// Class OutGameModule.GalleryBlackPanelWidget
// 0x0028 (0x04B0 - 0x0488)
class UGalleryBlackPanelWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x18];                                     // 0x0488(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UGalleryBlackPanelEntryObject*          _entryObject;                                      // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        _panelSwicher;                                     // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void FinishAnimationEvent(class UWidgetBase* Widget, const class UWidgetAnimation* Animation);
	void OpenPanel(bool IsOpen);
	void PlayOpenAnimEvent();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GalleryBlackPanelWidget">();
	}
	static class UGalleryBlackPanelWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGalleryBlackPanelWidget>();
	}
};
static_assert(alignof(UGalleryBlackPanelWidget) == 0x000008, "Wrong alignment on UGalleryBlackPanelWidget");
static_assert(sizeof(UGalleryBlackPanelWidget) == 0x0004B0, "Wrong size on UGalleryBlackPanelWidget");
static_assert(offsetof(UGalleryBlackPanelWidget, _entryObject) == 0x0004A0, "Member 'UGalleryBlackPanelWidget::_entryObject' has a wrong offset!");
static_assert(offsetof(UGalleryBlackPanelWidget, _panelSwicher) == 0x0004A8, "Member 'UGalleryBlackPanelWidget::_panelSwicher' has a wrong offset!");

// Class OutGameModule.GalleryDialogWidget
// 0x0028 (0x0378 - 0x0350)
class UGalleryDialogWidget final : public UWidgetBase
{
public:
	int32                                         _ticketType;                                       // 0x0350(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetButton*                          _addButton;                                        // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _removeButton;                                     // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGalleryTradeTicketWidget*              _galleryTradeTicket;                               // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_370[0x8];                                      // 0x0370(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EnableAddButton(bool Enable);
	void OnDecideAddButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideRemoveButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnNagativButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GalleryDialogWidget">();
	}
	static class UGalleryDialogWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGalleryDialogWidget>();
	}
};
static_assert(alignof(UGalleryDialogWidget) == 0x000008, "Wrong alignment on UGalleryDialogWidget");
static_assert(sizeof(UGalleryDialogWidget) == 0x000378, "Wrong size on UGalleryDialogWidget");
static_assert(offsetof(UGalleryDialogWidget, _ticketType) == 0x000350, "Member 'UGalleryDialogWidget::_ticketType' has a wrong offset!");
static_assert(offsetof(UGalleryDialogWidget, _addButton) == 0x000358, "Member 'UGalleryDialogWidget::_addButton' has a wrong offset!");
static_assert(offsetof(UGalleryDialogWidget, _removeButton) == 0x000360, "Member 'UGalleryDialogWidget::_removeButton' has a wrong offset!");
static_assert(offsetof(UGalleryDialogWidget, _galleryTradeTicket) == 0x000368, "Member 'UGalleryDialogWidget::_galleryTradeTicket' has a wrong offset!");

// Class OutGameModule.NoticeListWidget
// 0x0040 (0x0390 - 0x0350)
class UNoticeListWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x28];                                     // 0x0350(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class UListView*                              _listView;                                         // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_380[0x8];                                      // 0x0380(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UNoticePanelEntryObject*                _selectObject;                                     // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void DoCustomWidgetNavigation(EUINavigation UiNavigation);
	void OnAddFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NoticeListWidget">();
	}
	static class UNoticeListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNoticeListWidget>();
	}
};
static_assert(alignof(UNoticeListWidget) == 0x000008, "Wrong alignment on UNoticeListWidget");
static_assert(sizeof(UNoticeListWidget) == 0x000390, "Wrong size on UNoticeListWidget");
static_assert(offsetof(UNoticeListWidget, _listView) == 0x000378, "Member 'UNoticeListWidget::_listView' has a wrong offset!");
static_assert(offsetof(UNoticeListWidget, _selectObject) == 0x000388, "Member 'UNoticeListWidget::_selectObject' has a wrong offset!");

// Class OutGameModule.GalleryFullScreenWidget
// 0x0018 (0x0368 - 0x0350)
class UGalleryFullScreenWidget final : public UWidgetBase
{
public:
	class UGalleryStoryWidget*                    _storyPanel;                                       // 0x0350(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGalleryTexture*                        _mainImage;                                        // 0x0358(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGalleryPanelEntryObject*               _entryObject;                                      // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GalleryFullScreenWidget">();
	}
	static class UGalleryFullScreenWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGalleryFullScreenWidget>();
	}
};
static_assert(alignof(UGalleryFullScreenWidget) == 0x000008, "Wrong alignment on UGalleryFullScreenWidget");
static_assert(sizeof(UGalleryFullScreenWidget) == 0x000368, "Wrong size on UGalleryFullScreenWidget");
static_assert(offsetof(UGalleryFullScreenWidget, _storyPanel) == 0x000350, "Member 'UGalleryFullScreenWidget::_storyPanel' has a wrong offset!");
static_assert(offsetof(UGalleryFullScreenWidget, _mainImage) == 0x000358, "Member 'UGalleryFullScreenWidget::_mainImage' has a wrong offset!");
static_assert(offsetof(UGalleryFullScreenWidget, _entryObject) == 0x000360, "Member 'UGalleryFullScreenWidget::_entryObject' has a wrong offset!");

// Class OutGameModule.GalleryItemIconWidget
// 0x0008 (0x0358 - 0x0350)
class UGalleryItemIconWidget final : public UWidgetBase
{
public:
	class UTextBlock*                             _itemNumText;                                      // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GalleryItemIconWidget">();
	}
	static class UGalleryItemIconWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGalleryItemIconWidget>();
	}
};
static_assert(alignof(UGalleryItemIconWidget) == 0x000008, "Wrong alignment on UGalleryItemIconWidget");
static_assert(sizeof(UGalleryItemIconWidget) == 0x000358, "Wrong size on UGalleryItemIconWidget");
static_assert(offsetof(UGalleryItemIconWidget, _itemNumText) == 0x000350, "Member 'UGalleryItemIconWidget::_itemNumText' has a wrong offset!");

// Class OutGameModule.KeyConfigItemObject
// 0x0020 (0x0048 - 0x0028)
class UKeyConfigItemObject final : public UObject
{
public:
	EKeyConfigurableCommand                       _command;                                          // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   _key;                                              // 0x0030(0x0018)(BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KeyConfigItemObject">();
	}
	static class UKeyConfigItemObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKeyConfigItemObject>();
	}
};
static_assert(alignof(UKeyConfigItemObject) == 0x000008, "Wrong alignment on UKeyConfigItemObject");
static_assert(sizeof(UKeyConfigItemObject) == 0x000048, "Wrong size on UKeyConfigItemObject");
static_assert(offsetof(UKeyConfigItemObject, _command) == 0x000028, "Member 'UKeyConfigItemObject::_command' has a wrong offset!");
static_assert(offsetof(UKeyConfigItemObject, _key) == 0x000030, "Member 'UKeyConfigItemObject::_key' has a wrong offset!");

// Class OutGameModule.GalleryListWidget
// 0x00B0 (0x0400 - 0x0350)
class UGalleryListWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x18];                                     // 0x0350(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UGalleryPanelEntryObject*               _selectPanelEntryObject;                           // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGalleryPanelEntryObject*               _openSelectedPanelEntryObject;                     // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGalleryStoryWidget*                    _storyPanel;                                       // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _itemShortageWindow;                               // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _openPanelWindow;                                  // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bUseBlackPanel;                                   // 0x0390(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UListView*                              _listView;                                         // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGalleryWindowWidget*                   _galleryWindow;                                    // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UReturnButtonWidget*                    _returnButton;                                     // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCoinWidget*                            _ticket1;                                          // 0x03B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCoinWidget*                            _ticket2;                                          // 0x03B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCoinWidget*                            _ticket3;                                          // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        _swicher;                                          // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _possibleOpenPanelNum;                             // 0x03D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetBase*                            _loadingIcon;                                      // 0x03D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGalleryPanelWidget*                    _selectPanelWidget;                                // 0x03E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGalleryPanelWidget*                    _openSelectedPanelWidget;                          // 0x03E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3F0[0x10];                                     // 0x03F0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UGalleryPanelEntryObject* BP_GetEntryObject();
	void DoCustomWidgetNavigation(EUINavigation UiNavigation);
	void FadeOutFinishEvent();
	void OnAddedToFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnCompleteLoad(int32 Code);
	void OnDecideButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDicedeReturnButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OpenFullScreenSubMenu(class UGalleryPanelWidget* PanelWidget);
	void OpenSubMenu(class UGalleryPanelWidget* PanelWidget, int32 SubmenuType);
	void PlayFullOpenAnimEvent();
	void SetFocusBlackPanel();
	void SetTopFocusPanel(ETutorialPopupScene Scence);
	void UpdateCompleted(int32 ID);
	void UpdateOpendPanel();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GalleryListWidget">();
	}
	static class UGalleryListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGalleryListWidget>();
	}
};
static_assert(alignof(UGalleryListWidget) == 0x000008, "Wrong alignment on UGalleryListWidget");
static_assert(sizeof(UGalleryListWidget) == 0x000400, "Wrong size on UGalleryListWidget");
static_assert(offsetof(UGalleryListWidget, _selectPanelEntryObject) == 0x000368, "Member 'UGalleryListWidget::_selectPanelEntryObject' has a wrong offset!");
static_assert(offsetof(UGalleryListWidget, _openSelectedPanelEntryObject) == 0x000370, "Member 'UGalleryListWidget::_openSelectedPanelEntryObject' has a wrong offset!");
static_assert(offsetof(UGalleryListWidget, _storyPanel) == 0x000378, "Member 'UGalleryListWidget::_storyPanel' has a wrong offset!");
static_assert(offsetof(UGalleryListWidget, _itemShortageWindow) == 0x000380, "Member 'UGalleryListWidget::_itemShortageWindow' has a wrong offset!");
static_assert(offsetof(UGalleryListWidget, _openPanelWindow) == 0x000388, "Member 'UGalleryListWidget::_openPanelWindow' has a wrong offset!");
static_assert(offsetof(UGalleryListWidget, _bUseBlackPanel) == 0x000390, "Member 'UGalleryListWidget::_bUseBlackPanel' has a wrong offset!");
static_assert(offsetof(UGalleryListWidget, _listView) == 0x000398, "Member 'UGalleryListWidget::_listView' has a wrong offset!");
static_assert(offsetof(UGalleryListWidget, _galleryWindow) == 0x0003A0, "Member 'UGalleryListWidget::_galleryWindow' has a wrong offset!");
static_assert(offsetof(UGalleryListWidget, _returnButton) == 0x0003A8, "Member 'UGalleryListWidget::_returnButton' has a wrong offset!");
static_assert(offsetof(UGalleryListWidget, _ticket1) == 0x0003B0, "Member 'UGalleryListWidget::_ticket1' has a wrong offset!");
static_assert(offsetof(UGalleryListWidget, _ticket2) == 0x0003B8, "Member 'UGalleryListWidget::_ticket2' has a wrong offset!");
static_assert(offsetof(UGalleryListWidget, _ticket3) == 0x0003C0, "Member 'UGalleryListWidget::_ticket3' has a wrong offset!");
static_assert(offsetof(UGalleryListWidget, _swicher) == 0x0003C8, "Member 'UGalleryListWidget::_swicher' has a wrong offset!");
static_assert(offsetof(UGalleryListWidget, _possibleOpenPanelNum) == 0x0003D0, "Member 'UGalleryListWidget::_possibleOpenPanelNum' has a wrong offset!");
static_assert(offsetof(UGalleryListWidget, _loadingIcon) == 0x0003D8, "Member 'UGalleryListWidget::_loadingIcon' has a wrong offset!");
static_assert(offsetof(UGalleryListWidget, _selectPanelWidget) == 0x0003E0, "Member 'UGalleryListWidget::_selectPanelWidget' has a wrong offset!");
static_assert(offsetof(UGalleryListWidget, _openSelectedPanelWidget) == 0x0003E8, "Member 'UGalleryListWidget::_openSelectedPanelWidget' has a wrong offset!");

// Class OutGameModule.GalleryPanelEntryObject
// 0x01E8 (0x0218 - 0x0030)
class UGalleryPanelEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x1E8];                                     // 0x0030(0x01E8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 GetOpenPossiblePanelNum();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GalleryPanelEntryObject">();
	}
	static class UGalleryPanelEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGalleryPanelEntryObject>();
	}
};
static_assert(alignof(UGalleryPanelEntryObject) == 0x000008, "Wrong alignment on UGalleryPanelEntryObject");
static_assert(sizeof(UGalleryPanelEntryObject) == 0x000218, "Wrong size on UGalleryPanelEntryObject");

// Class OutGameModule.NoticeTopWidget
// 0x0018 (0x0368 - 0x0350)
class UNoticeTopWidget : public UWidgetBase
{
public:
	class UNoticeListWidget*                      _noticeList;                                       // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNoticeImageWidget*                     _noticeImage;                                      // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNoticeExplanationWidget*               _noticeExplanation;                                // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnChangeSelectPanelEvent(const class UNoticePanelEntryObject* EntryObject);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NoticeTopWidget">();
	}
	static class UNoticeTopWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNoticeTopWidget>();
	}
};
static_assert(alignof(UNoticeTopWidget) == 0x000008, "Wrong alignment on UNoticeTopWidget");
static_assert(sizeof(UNoticeTopWidget) == 0x000368, "Wrong size on UNoticeTopWidget");
static_assert(offsetof(UNoticeTopWidget, _noticeList) == 0x000350, "Member 'UNoticeTopWidget::_noticeList' has a wrong offset!");
static_assert(offsetof(UNoticeTopWidget, _noticeImage) == 0x000358, "Member 'UNoticeTopWidget::_noticeImage' has a wrong offset!");
static_assert(offsetof(UNoticeTopWidget, _noticeExplanation) == 0x000360, "Member 'UNoticeTopWidget::_noticeExplanation' has a wrong offset!");

// Class OutGameModule.NoticeTopTestWidget
// 0x0010 (0x0378 - 0x0368)
class UNoticeTopTestWidget final : public UNoticeTopWidget
{
public:
	uint8                                         Pad_368[0x10];                                     // 0x0368(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NoticeTopTestWidget">();
	}
	static class UNoticeTopTestWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNoticeTopTestWidget>();
	}
};
static_assert(alignof(UNoticeTopTestWidget) == 0x000008, "Wrong alignment on UNoticeTopTestWidget");
static_assert(sizeof(UNoticeTopTestWidget) == 0x000378, "Wrong size on UNoticeTopTestWidget");

// Class OutGameModule.GalleryBlackPanelEntryObject
// 0x0008 (0x0038 - 0x0030)
class UGalleryBlackPanelEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GalleryBlackPanelEntryObject">();
	}
	static class UGalleryBlackPanelEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGalleryBlackPanelEntryObject>();
	}
};
static_assert(alignof(UGalleryBlackPanelEntryObject) == 0x000008, "Wrong alignment on UGalleryBlackPanelEntryObject");
static_assert(sizeof(UGalleryBlackPanelEntryObject) == 0x000038, "Wrong size on UGalleryBlackPanelEntryObject");

// Class OutGameModule.GalleryPanelWidget
// 0x0018 (0x0648 - 0x0630)
class UGalleryPanelWidget final : public UPlatformWidgetButton
{
public:
	uint8                                         Pad_630[0x8];                                      // 0x0630(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UGalleryPanelEntryObject*               _galleryPanelEntryObject;                          // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAdjustTextWidget*                      _name;                                             // 0x0640(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnOpenEvent(bool bOpen);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GalleryPanelWidget">();
	}
	static class UGalleryPanelWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGalleryPanelWidget>();
	}
};
static_assert(alignof(UGalleryPanelWidget) == 0x000008, "Wrong alignment on UGalleryPanelWidget");
static_assert(sizeof(UGalleryPanelWidget) == 0x000648, "Wrong size on UGalleryPanelWidget");
static_assert(offsetof(UGalleryPanelWidget, _galleryPanelEntryObject) == 0x000638, "Member 'UGalleryPanelWidget::_galleryPanelEntryObject' has a wrong offset!");
static_assert(offsetof(UGalleryPanelWidget, _name) == 0x000640, "Member 'UGalleryPanelWidget::_name' has a wrong offset!");

// Class OutGameModule.NoticeItemWidget
// 0x0008 (0x0358 - 0x0350)
class UNoticeItemWidget final : public UWidgetBase
{
public:
	class UItemIconWidget*                        _itemIcon;                                         // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NoticeItemWidget">();
	}
	static class UNoticeItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNoticeItemWidget>();
	}
};
static_assert(alignof(UNoticeItemWidget) == 0x000008, "Wrong alignment on UNoticeItemWidget");
static_assert(sizeof(UNoticeItemWidget) == 0x000358, "Wrong size on UNoticeItemWidget");
static_assert(offsetof(UNoticeItemWidget, _itemIcon) == 0x000350, "Member 'UNoticeItemWidget::_itemIcon' has a wrong offset!");

// Class OutGameModule.GalleryStoryWidget
// 0x0030 (0x0380 - 0x0350)
class UGalleryStoryWidget final : public UWidgetBase
{
public:
	class UCanvasPanel*                           _unOpenPanel;                                      // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                             _scrollBox;                                        // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   _storyText;                                        // 0x0360(0x0018)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void MoveScroll(const struct FAnalogInputEvent& KeyEvent);
	void SetStoryText();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GalleryStoryWidget">();
	}
	static class UGalleryStoryWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGalleryStoryWidget>();
	}
};
static_assert(alignof(UGalleryStoryWidget) == 0x000008, "Wrong alignment on UGalleryStoryWidget");
static_assert(sizeof(UGalleryStoryWidget) == 0x000380, "Wrong size on UGalleryStoryWidget");
static_assert(offsetof(UGalleryStoryWidget, _unOpenPanel) == 0x000350, "Member 'UGalleryStoryWidget::_unOpenPanel' has a wrong offset!");
static_assert(offsetof(UGalleryStoryWidget, _scrollBox) == 0x000358, "Member 'UGalleryStoryWidget::_scrollBox' has a wrong offset!");
static_assert(offsetof(UGalleryStoryWidget, _storyText) == 0x000360, "Member 'UGalleryStoryWidget::_storyText' has a wrong offset!");

// Class OutGameModule.GalleryTexture
// 0x0020 (0x0370 - 0x0350)
class UGalleryTexture : public UWidgetBase
{
public:
	bool                                          _bUseImageSizeOverride;                            // 0x0350(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 _imageSize;                                        // 0x0358(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _galleryImage;                                     // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BP_SetImageCode(const int32 Code);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GalleryTexture">();
	}
	static class UGalleryTexture* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGalleryTexture>();
	}
};
static_assert(alignof(UGalleryTexture) == 0x000008, "Wrong alignment on UGalleryTexture");
static_assert(sizeof(UGalleryTexture) == 0x000370, "Wrong size on UGalleryTexture");
static_assert(offsetof(UGalleryTexture, _bUseImageSizeOverride) == 0x000350, "Member 'UGalleryTexture::_bUseImageSizeOverride' has a wrong offset!");
static_assert(offsetof(UGalleryTexture, _imageSize) == 0x000358, "Member 'UGalleryTexture::_imageSize' has a wrong offset!");
static_assert(offsetof(UGalleryTexture, _galleryImage) == 0x000368, "Member 'UGalleryTexture::_galleryImage' has a wrong offset!");

// Class OutGameModule.ItemRankUpWidget
// 0x0048 (0x0398 - 0x0350)
class UItemRankUpWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             _currentRank;                                      // 0x0360(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _currentExp;                                       // 0x0368(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _currentMaxExp;                                    // 0x0370(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _nextRank;                                         // 0x0378(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _nextExp;                                          // 0x0380(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _nextMaxExp;                                       // 0x0388(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _countUpAnim;                                      // 0x0390(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void AddRank(int32 Value);
	void CreateItemRankUpWidget(int32 Rank, int32 Exp, int32 Max);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemRankUpWidget">();
	}
	static class UItemRankUpWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemRankUpWidget>();
	}
};
static_assert(alignof(UItemRankUpWidget) == 0x000008, "Wrong alignment on UItemRankUpWidget");
static_assert(sizeof(UItemRankUpWidget) == 0x000398, "Wrong size on UItemRankUpWidget");
static_assert(offsetof(UItemRankUpWidget, _currentRank) == 0x000360, "Member 'UItemRankUpWidget::_currentRank' has a wrong offset!");
static_assert(offsetof(UItemRankUpWidget, _currentExp) == 0x000368, "Member 'UItemRankUpWidget::_currentExp' has a wrong offset!");
static_assert(offsetof(UItemRankUpWidget, _currentMaxExp) == 0x000370, "Member 'UItemRankUpWidget::_currentMaxExp' has a wrong offset!");
static_assert(offsetof(UItemRankUpWidget, _nextRank) == 0x000378, "Member 'UItemRankUpWidget::_nextRank' has a wrong offset!");
static_assert(offsetof(UItemRankUpWidget, _nextExp) == 0x000380, "Member 'UItemRankUpWidget::_nextExp' has a wrong offset!");
static_assert(offsetof(UItemRankUpWidget, _nextMaxExp) == 0x000388, "Member 'UItemRankUpWidget::_nextMaxExp' has a wrong offset!");
static_assert(offsetof(UItemRankUpWidget, _countUpAnim) == 0x000390, "Member 'UItemRankUpWidget::_countUpAnim' has a wrong offset!");

// Class OutGameModule.GalleryTicketWidget
// 0x0038 (0x0438 - 0x0400)
class UGalleryTicketWidget final : public UCoinWidget
{
public:
	class UProgressBar*                           _progressBar;                                      // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScaleBox*                              _scaleBox;                                         // 0x0408(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FColor>                         _progressColor;                                    // 0x0410(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          _bUseIconPositionOverride;                         // 0x0420(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_421[0x3];                                      // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              _iconPosition;                                     // 0x0424(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bUseBlackBack;                                    // 0x042C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_42D[0x3];                                      // 0x042D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 _blackBack;                                        // 0x0430(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GalleryTicketWidget">();
	}
	static class UGalleryTicketWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGalleryTicketWidget>();
	}
};
static_assert(alignof(UGalleryTicketWidget) == 0x000008, "Wrong alignment on UGalleryTicketWidget");
static_assert(sizeof(UGalleryTicketWidget) == 0x000438, "Wrong size on UGalleryTicketWidget");
static_assert(offsetof(UGalleryTicketWidget, _progressBar) == 0x000400, "Member 'UGalleryTicketWidget::_progressBar' has a wrong offset!");
static_assert(offsetof(UGalleryTicketWidget, _scaleBox) == 0x000408, "Member 'UGalleryTicketWidget::_scaleBox' has a wrong offset!");
static_assert(offsetof(UGalleryTicketWidget, _progressColor) == 0x000410, "Member 'UGalleryTicketWidget::_progressColor' has a wrong offset!");
static_assert(offsetof(UGalleryTicketWidget, _bUseIconPositionOverride) == 0x000420, "Member 'UGalleryTicketWidget::_bUseIconPositionOverride' has a wrong offset!");
static_assert(offsetof(UGalleryTicketWidget, _iconPosition) == 0x000424, "Member 'UGalleryTicketWidget::_iconPosition' has a wrong offset!");
static_assert(offsetof(UGalleryTicketWidget, _bUseBlackBack) == 0x00042C, "Member 'UGalleryTicketWidget::_bUseBlackBack' has a wrong offset!");
static_assert(offsetof(UGalleryTicketWidget, _blackBack) == 0x000430, "Member 'UGalleryTicketWidget::_blackBack' has a wrong offset!");

// Class OutGameModule.GalleryTradeTicketWidget
// 0x0048 (0x04D0 - 0x0488)
class UGalleryTradeTicketWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x20];                                     // 0x0488(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _ticketType;                                       // 0x04A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGalleryTicketWidget*                   _ticketSelect;                                     // 0x04B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGalleryTicketWidget*                   _galleryTicket;                                    // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4C0[0x10];                                     // 0x04C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GalleryTradeTicketWidget">();
	}
	static class UGalleryTradeTicketWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGalleryTradeTicketWidget>();
	}
};
static_assert(alignof(UGalleryTradeTicketWidget) == 0x000008, "Wrong alignment on UGalleryTradeTicketWidget");
static_assert(sizeof(UGalleryTradeTicketWidget) == 0x0004D0, "Wrong size on UGalleryTradeTicketWidget");
static_assert(offsetof(UGalleryTradeTicketWidget, _ticketType) == 0x0004A8, "Member 'UGalleryTradeTicketWidget::_ticketType' has a wrong offset!");
static_assert(offsetof(UGalleryTradeTicketWidget, _ticketSelect) == 0x0004B0, "Member 'UGalleryTradeTicketWidget::_ticketSelect' has a wrong offset!");
static_assert(offsetof(UGalleryTradeTicketWidget, _galleryTicket) == 0x0004B8, "Member 'UGalleryTradeTicketWidget::_galleryTicket' has a wrong offset!");

// Class OutGameModule.LoginBonusDailyListItemWidget
// 0x0198 (0x0620 - 0x0488)
class ULoginBonusDailyListItemWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x38];                                     // 0x0488(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            _toDayTextColorAndOpacity;                         // 0x04C0(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                            _dayTextColorAndOpacity;                           // 0x04E8(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	class UWidget*                                _nextPanel;                                        // 0x0510(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _day;                                              // 0x0518(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _iconHeader;                                       // 0x0520(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _activeCursor;                                     // 0x0528(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _wholeGrayOut;                                     // 0x0530(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _freeIcon;                                         // 0x0538(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconWidget*                        _freeItem;                                         // 0x0540(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _freeLock;                                         // 0x0548(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _freeGet;                                          // 0x0550(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _freeGrayOut;                                      // 0x0558(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _freeNumText;                                      // 0x0560(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _premiumIcon;                                      // 0x0568(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconWidget*                        _premiumItem;                                      // 0x0570(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _premiumLock;                                      // 0x0578(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _premiumGet;                                       // 0x0580(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _premiumGrayOut;                                   // 0x0588(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _premiumNumText;                                   // 0x0590(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _ani_FreeGetIn;                                    // 0x0598(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5A0[0x10];                                     // 0x05A0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       _ani_PremiumGetIn;                                 // 0x05B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5B8[0x10];                                     // 0x05B8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       _ani_CursorIn;                                     // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5D0[0x10];                                     // 0x05D0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       _ani_CursorOut;                                    // 0x05E0(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5E8[0x10];                                     // 0x05E8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       _ani_NextCursorIn;                                 // 0x05F8(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_600[0x10];                                     // 0x0600(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       _ani_CursorInWait;                                 // 0x0610(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_618[0x8];                                      // 0x0618(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnCursorInAnimationFinished();
	void OnCursorOutAnimationFinished();
	void OnFreeGetInAnimationFinished();
	void OnGetStampPlayItemAnimationEvent();
	void OnNextCursorInAnimationFinished();
	void OnPremiumGetInAnimationFinished();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoginBonusDailyListItemWidget">();
	}
	static class ULoginBonusDailyListItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoginBonusDailyListItemWidget>();
	}
};
static_assert(alignof(ULoginBonusDailyListItemWidget) == 0x000008, "Wrong alignment on ULoginBonusDailyListItemWidget");
static_assert(sizeof(ULoginBonusDailyListItemWidget) == 0x000620, "Wrong size on ULoginBonusDailyListItemWidget");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _toDayTextColorAndOpacity) == 0x0004C0, "Member 'ULoginBonusDailyListItemWidget::_toDayTextColorAndOpacity' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _dayTextColorAndOpacity) == 0x0004E8, "Member 'ULoginBonusDailyListItemWidget::_dayTextColorAndOpacity' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _nextPanel) == 0x000510, "Member 'ULoginBonusDailyListItemWidget::_nextPanel' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _day) == 0x000518, "Member 'ULoginBonusDailyListItemWidget::_day' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _iconHeader) == 0x000520, "Member 'ULoginBonusDailyListItemWidget::_iconHeader' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _activeCursor) == 0x000528, "Member 'ULoginBonusDailyListItemWidget::_activeCursor' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _wholeGrayOut) == 0x000530, "Member 'ULoginBonusDailyListItemWidget::_wholeGrayOut' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _freeIcon) == 0x000538, "Member 'ULoginBonusDailyListItemWidget::_freeIcon' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _freeItem) == 0x000540, "Member 'ULoginBonusDailyListItemWidget::_freeItem' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _freeLock) == 0x000548, "Member 'ULoginBonusDailyListItemWidget::_freeLock' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _freeGet) == 0x000550, "Member 'ULoginBonusDailyListItemWidget::_freeGet' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _freeGrayOut) == 0x000558, "Member 'ULoginBonusDailyListItemWidget::_freeGrayOut' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _freeNumText) == 0x000560, "Member 'ULoginBonusDailyListItemWidget::_freeNumText' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _premiumIcon) == 0x000568, "Member 'ULoginBonusDailyListItemWidget::_premiumIcon' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _premiumItem) == 0x000570, "Member 'ULoginBonusDailyListItemWidget::_premiumItem' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _premiumLock) == 0x000578, "Member 'ULoginBonusDailyListItemWidget::_premiumLock' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _premiumGet) == 0x000580, "Member 'ULoginBonusDailyListItemWidget::_premiumGet' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _premiumGrayOut) == 0x000588, "Member 'ULoginBonusDailyListItemWidget::_premiumGrayOut' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _premiumNumText) == 0x000590, "Member 'ULoginBonusDailyListItemWidget::_premiumNumText' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _ani_FreeGetIn) == 0x000598, "Member 'ULoginBonusDailyListItemWidget::_ani_FreeGetIn' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _ani_PremiumGetIn) == 0x0005B0, "Member 'ULoginBonusDailyListItemWidget::_ani_PremiumGetIn' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _ani_CursorIn) == 0x0005C8, "Member 'ULoginBonusDailyListItemWidget::_ani_CursorIn' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _ani_CursorOut) == 0x0005E0, "Member 'ULoginBonusDailyListItemWidget::_ani_CursorOut' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _ani_NextCursorIn) == 0x0005F8, "Member 'ULoginBonusDailyListItemWidget::_ani_NextCursorIn' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyListItemWidget, _ani_CursorInWait) == 0x000610, "Member 'ULoginBonusDailyListItemWidget::_ani_CursorInWait' has a wrong offset!");

// Class OutGameModule.GalleryTradeWidget
// 0x0050 (0x03A0 - 0x0350)
class UGalleryTradeWidget final : public UWidgetBase
{
public:
	class UWidgetGeneralWindowFrame*              _windowFrame;                                      // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGalleryDialogWidget*                   _dialog1;                                          // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGalleryDialogWidget*                   _dialog2;                                          // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGalleryDialogWidget*                   _dialog3;                                          // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetButton*                          _maxButton;                                        // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGalleryPanelEntryObject*               _selectPanelEntryObject;                           // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGalleryDialogWidget*>           _dialogs;                                          // 0x0380(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_390[0x10];                                     // 0x0390(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddToFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void BP_OnDecideEvent();
	void DoCustomMaxButtonNavigation(EUINavigation UiNavigation);
	void DoCustomWidgetNavigation(EUINavigation UiNavigation);
	void OnCompleteEvent(int32 ID);
	void OnDecideMaxButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void SetTicketPanelEvent(int32 TicketNum);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GalleryTradeWidget">();
	}
	static class UGalleryTradeWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGalleryTradeWidget>();
	}
};
static_assert(alignof(UGalleryTradeWidget) == 0x000008, "Wrong alignment on UGalleryTradeWidget");
static_assert(sizeof(UGalleryTradeWidget) == 0x0003A0, "Wrong size on UGalleryTradeWidget");
static_assert(offsetof(UGalleryTradeWidget, _windowFrame) == 0x000350, "Member 'UGalleryTradeWidget::_windowFrame' has a wrong offset!");
static_assert(offsetof(UGalleryTradeWidget, _dialog1) == 0x000358, "Member 'UGalleryTradeWidget::_dialog1' has a wrong offset!");
static_assert(offsetof(UGalleryTradeWidget, _dialog2) == 0x000360, "Member 'UGalleryTradeWidget::_dialog2' has a wrong offset!");
static_assert(offsetof(UGalleryTradeWidget, _dialog3) == 0x000368, "Member 'UGalleryTradeWidget::_dialog3' has a wrong offset!");
static_assert(offsetof(UGalleryTradeWidget, _maxButton) == 0x000370, "Member 'UGalleryTradeWidget::_maxButton' has a wrong offset!");
static_assert(offsetof(UGalleryTradeWidget, _selectPanelEntryObject) == 0x000378, "Member 'UGalleryTradeWidget::_selectPanelEntryObject' has a wrong offset!");
static_assert(offsetof(UGalleryTradeWidget, _dialogs) == 0x000380, "Member 'UGalleryTradeWidget::_dialogs' has a wrong offset!");

// Class OutGameModule.GalleryWindowWidget
// 0x0088 (0x0470 - 0x03E8)
class UGalleryWindowWidget final : public UAppWidget
{
public:
	uint8                                         Pad_3E8[0x20];                                     // 0x03E8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _navigationColumCount;                             // 0x0408(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGalleryTexture*                        _galleryTexture;                                   // 0x0410(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCoinWidget*                            _ticket1;                                          // 0x0418(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCoinWidget*                            _ticket2;                                          // 0x0420(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCoinWidget*                            _ticket3;                                          // 0x0428(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTileView*                              _tileView;                                         // 0x0430(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                         _iconBox;                                          // 0x0438(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGalleryBlackPanelEntryObject*          _focusObject;                                      // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGalleryPanelEntryObject*               _selectPanelObject;                                // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGalleryBlackPanelWidget*               _selectPanel;                                      // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_458[0x18];                                     // 0x0458(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DoCustomWidgetNavigation(EUINavigation UiNavigation);
	void OnAddToFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDicideEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnPressEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnRemoveToFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GalleryWindowWidget">();
	}
	static class UGalleryWindowWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGalleryWindowWidget>();
	}
};
static_assert(alignof(UGalleryWindowWidget) == 0x000008, "Wrong alignment on UGalleryWindowWidget");
static_assert(sizeof(UGalleryWindowWidget) == 0x000470, "Wrong size on UGalleryWindowWidget");
static_assert(offsetof(UGalleryWindowWidget, _navigationColumCount) == 0x000408, "Member 'UGalleryWindowWidget::_navigationColumCount' has a wrong offset!");
static_assert(offsetof(UGalleryWindowWidget, _galleryTexture) == 0x000410, "Member 'UGalleryWindowWidget::_galleryTexture' has a wrong offset!");
static_assert(offsetof(UGalleryWindowWidget, _ticket1) == 0x000418, "Member 'UGalleryWindowWidget::_ticket1' has a wrong offset!");
static_assert(offsetof(UGalleryWindowWidget, _ticket2) == 0x000420, "Member 'UGalleryWindowWidget::_ticket2' has a wrong offset!");
static_assert(offsetof(UGalleryWindowWidget, _ticket3) == 0x000428, "Member 'UGalleryWindowWidget::_ticket3' has a wrong offset!");
static_assert(offsetof(UGalleryWindowWidget, _tileView) == 0x000430, "Member 'UGalleryWindowWidget::_tileView' has a wrong offset!");
static_assert(offsetof(UGalleryWindowWidget, _iconBox) == 0x000438, "Member 'UGalleryWindowWidget::_iconBox' has a wrong offset!");
static_assert(offsetof(UGalleryWindowWidget, _focusObject) == 0x000440, "Member 'UGalleryWindowWidget::_focusObject' has a wrong offset!");
static_assert(offsetof(UGalleryWindowWidget, _selectPanelObject) == 0x000448, "Member 'UGalleryWindowWidget::_selectPanelObject' has a wrong offset!");
static_assert(offsetof(UGalleryWindowWidget, _selectPanel) == 0x000450, "Member 'UGalleryWindowWidget::_selectPanel' has a wrong offset!");

// Class OutGameModule.KeyConfigElemObject
// 0x0020 (0x0048 - 0x0028)
class UKeyConfigElemObject final : public UObject
{
public:
	EKeyConfigurableCommand                       _command;                                          // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   _key;                                              // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KeyConfigElemObject">();
	}
	static class UKeyConfigElemObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKeyConfigElemObject>();
	}
};
static_assert(alignof(UKeyConfigElemObject) == 0x000008, "Wrong alignment on UKeyConfigElemObject");
static_assert(sizeof(UKeyConfigElemObject) == 0x000048, "Wrong size on UKeyConfigElemObject");
static_assert(offsetof(UKeyConfigElemObject, _command) == 0x000028, "Member 'UKeyConfigElemObject::_command' has a wrong offset!");
static_assert(offsetof(UKeyConfigElemObject, _key) == 0x000030, "Member 'UKeyConfigElemObject::_key' has a wrong offset!");

// Class OutGameModule.GameModeOutGame
// 0x0000 (0x0340 - 0x0340)
class AGameModeOutGame : public AHerovsGameMode
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameModeOutGame">();
	}
	static class AGameModeOutGame* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameModeOutGame>();
	}
};
static_assert(alignof(AGameModeOutGame) == 0x000008, "Wrong alignment on AGameModeOutGame");
static_assert(sizeof(AGameModeOutGame) == 0x000340, "Wrong size on AGameModeOutGame");

// Class OutGameModule.GameModeAvatarCreate
// 0x0000 (0x0340 - 0x0340)
class AGameModeAvatarCreate final : public AGameModeOutGame
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameModeAvatarCreate">();
	}
	static class AGameModeAvatarCreate* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameModeAvatarCreate>();
	}
};
static_assert(alignof(AGameModeAvatarCreate) == 0x000008, "Wrong alignment on AGameModeAvatarCreate");
static_assert(sizeof(AGameModeAvatarCreate) == 0x000340, "Wrong size on AGameModeAvatarCreate");

// Class OutGameModule.MissionDetailsObject
// 0x00A8 (0x00D0 - 0x0028)
class UMissionDetailsObject : public UObject
{
public:
	uint8                                         Pad_28[0xA8];                                      // 0x0028(0x00A8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MissionDetailsObject">();
	}
	static class UMissionDetailsObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionDetailsObject>();
	}
};
static_assert(alignof(UMissionDetailsObject) == 0x000008, "Wrong alignment on UMissionDetailsObject");
static_assert(sizeof(UMissionDetailsObject) == 0x0000D0, "Wrong size on UMissionDetailsObject");

// Class OutGameModule.GameModeCustomize
// 0x0000 (0x0340 - 0x0340)
class AGameModeCustomize final : public AGameModeOutGame
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameModeCustomize">();
	}
	static class AGameModeCustomize* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameModeCustomize>();
	}
};
static_assert(alignof(AGameModeCustomize) == 0x000008, "Wrong alignment on AGameModeCustomize");
static_assert(sizeof(AGameModeCustomize) == 0x000340, "Wrong size on AGameModeCustomize");

// Class OutGameModule.GameModeDevOnlineMenu
// 0x0000 (0x0340 - 0x0340)
class AGameModeDevOnlineMenu final : public AHerovsGameMode
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameModeDevOnlineMenu">();
	}
	static class AGameModeDevOnlineMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameModeDevOnlineMenu>();
	}
};
static_assert(alignof(AGameModeDevOnlineMenu) == 0x000008, "Wrong alignment on AGameModeDevOnlineMenu");
static_assert(sizeof(AGameModeDevOnlineMenu) == 0x000340, "Wrong size on AGameModeDevOnlineMenu");

// Class OutGameModule.LoadingTitleWidget
// 0x0010 (0x0360 - 0x0350)
class ULoadingTitleWidget : public UWidgetBase
{
public:
	class UProgressBar*                           _lodingBar;                                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _loadingtText;                                     // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoadingTitleWidget">();
	}
	static class ULoadingTitleWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadingTitleWidget>();
	}
};
static_assert(alignof(ULoadingTitleWidget) == 0x000008, "Wrong alignment on ULoadingTitleWidget");
static_assert(sizeof(ULoadingTitleWidget) == 0x000360, "Wrong size on ULoadingTitleWidget");
static_assert(offsetof(ULoadingTitleWidget, _lodingBar) == 0x000350, "Member 'ULoadingTitleWidget::_lodingBar' has a wrong offset!");
static_assert(offsetof(ULoadingTitleWidget, _loadingtText) == 0x000358, "Member 'ULoadingTitleWidget::_loadingtText' has a wrong offset!");

// Class OutGameModule.GameModeGasha
// 0x0000 (0x0340 - 0x0340)
class AGameModeGasha final : public AGameModeOutGame
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameModeGasha">();
	}
	static class AGameModeGasha* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameModeGasha>();
	}
};
static_assert(alignof(AGameModeGasha) == 0x000008, "Wrong alignment on AGameModeGasha");
static_assert(sizeof(AGameModeGasha) == 0x000340, "Wrong size on AGameModeGasha");

// Class OutGameModule.GameModeMainMenu
// 0x0000 (0x0340 - 0x0340)
class AGameModeMainMenu final : public AGameModeOutGame
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameModeMainMenu">();
	}
	static class AGameModeMainMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameModeMainMenu>();
	}
};
static_assert(alignof(AGameModeMainMenu) == 0x000008, "Wrong alignment on AGameModeMainMenu");
static_assert(sizeof(AGameModeMainMenu) == 0x000340, "Wrong size on AGameModeMainMenu");

// Class OutGameModule.TermsOfServiceWidget
// 0x0058 (0x03A8 - 0x0350)
class UTermsOfServiceWidget final : public UWidgetBase
{
public:
	bool                                          _bLoginFinishedFlag;                               // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UWorld>                  _loginBonusMap;                                    // 0x0358(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  _mainMenuMap;                                      // 0x0380(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void LoginRequest();
	void OnFinishedFadeIn(EPlatform Platform);
	void OnFinishedFadeOut();
	void OnLoginFinished(bool LoginCompleted);
	void OnNativeFadeIn();
	void OnNativeFadeOut();
	void StopNowPlayingMusic();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TermsOfServiceWidget">();
	}
	static class UTermsOfServiceWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTermsOfServiceWidget>();
	}
};
static_assert(alignof(UTermsOfServiceWidget) == 0x000008, "Wrong alignment on UTermsOfServiceWidget");
static_assert(sizeof(UTermsOfServiceWidget) == 0x0003A8, "Wrong size on UTermsOfServiceWidget");
static_assert(offsetof(UTermsOfServiceWidget, _bLoginFinishedFlag) == 0x000350, "Member 'UTermsOfServiceWidget::_bLoginFinishedFlag' has a wrong offset!");
static_assert(offsetof(UTermsOfServiceWidget, _loginBonusMap) == 0x000358, "Member 'UTermsOfServiceWidget::_loginBonusMap' has a wrong offset!");
static_assert(offsetof(UTermsOfServiceWidget, _mainMenuMap) == 0x000380, "Member 'UTermsOfServiceWidget::_mainMenuMap' has a wrong offset!");

// Class OutGameModule.MainMenuBarListEntryObject
// 0x0040 (0x0070 - 0x0030)
class UMainMenuBarListEntryObject final : public UListViewEntryObjectBase
{
public:
	TSubclassOf<class UMainMenuBarButtonWidget>   _mainMenuBarButton;                                // 0x0030(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   _text;                                             // 0x0038(0x0018)(BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPublic)
	class FText                                   _titleText;                                        // 0x0050(0x0018)(BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPublic)
	ETutorialStepNo                               _grayedOutTutorialNo;                              // 0x0068(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          _bHiddenFlag;                                      // 0x0069(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MainMenuBarListEntryObject">();
	}
	static class UMainMenuBarListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMainMenuBarListEntryObject>();
	}
};
static_assert(alignof(UMainMenuBarListEntryObject) == 0x000008, "Wrong alignment on UMainMenuBarListEntryObject");
static_assert(sizeof(UMainMenuBarListEntryObject) == 0x000070, "Wrong size on UMainMenuBarListEntryObject");
static_assert(offsetof(UMainMenuBarListEntryObject, _mainMenuBarButton) == 0x000030, "Member 'UMainMenuBarListEntryObject::_mainMenuBarButton' has a wrong offset!");
static_assert(offsetof(UMainMenuBarListEntryObject, _text) == 0x000038, "Member 'UMainMenuBarListEntryObject::_text' has a wrong offset!");
static_assert(offsetof(UMainMenuBarListEntryObject, _titleText) == 0x000050, "Member 'UMainMenuBarListEntryObject::_titleText' has a wrong offset!");
static_assert(offsetof(UMainMenuBarListEntryObject, _grayedOutTutorialNo) == 0x000068, "Member 'UMainMenuBarListEntryObject::_grayedOutTutorialNo' has a wrong offset!");
static_assert(offsetof(UMainMenuBarListEntryObject, _bHiddenFlag) == 0x000069, "Member 'UMainMenuBarListEntryObject::_bHiddenFlag' has a wrong offset!");

// Class OutGameModule.GameModeSeasonPass
// 0x0000 (0x0340 - 0x0340)
class AGameModeSeasonPass final : public AGameModeOutGame
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameModeSeasonPass">();
	}
	static class AGameModeSeasonPass* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameModeSeasonPass>();
	}
};
static_assert(alignof(AGameModeSeasonPass) == 0x000008, "Wrong alignment on AGameModeSeasonPass");
static_assert(sizeof(AGameModeSeasonPass) == 0x000340, "Wrong size on AGameModeSeasonPass");

// Class OutGameModule.GameModeShop
// 0x0000 (0x0340 - 0x0340)
class AGameModeShop final : public AGameModeOutGame
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameModeShop">();
	}
	static class AGameModeShop* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameModeShop>();
	}
};
static_assert(alignof(AGameModeShop) == 0x000008, "Wrong alignment on AGameModeShop");
static_assert(sizeof(AGameModeShop) == 0x000340, "Wrong size on AGameModeShop");

// Class OutGameModule.LoginBonusEventWidget
// 0x00D8 (0x0428 - 0x0350)
class ULoginBonusEventWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x20];                                     // 0x0350(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       _ani_in;                                           // 0x0370(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_378[0x10];                                     // 0x0378(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UTileView*                              _itemTileView;                                     // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _availableAtText;                                  // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _expireAtText;                                     // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _logo;                                             // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _bg;                                               // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _itemListPanel;                                    // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTimeWidget*                            _remainTime;                                       // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C0[0x60];                                     // 0x03C0(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         _birthdayVoice;                                    // 0x0420(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnCutAnimationFinished_Internal();
	void OnFadeOutFinished();
	void OnIconCursorOutAnimationFinished();
	void OnIconGetInAnimationFinished();
	void OnInAnimationFinished_Internal();
	void OnItemGetListClosed();
	void OnNextCursorInAnimationFinished();
	void OnOpenFinishedEvent();
	void OpenItemGetList();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoginBonusEventWidget">();
	}
	static class ULoginBonusEventWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoginBonusEventWidget>();
	}
};
static_assert(alignof(ULoginBonusEventWidget) == 0x000008, "Wrong alignment on ULoginBonusEventWidget");
static_assert(sizeof(ULoginBonusEventWidget) == 0x000428, "Wrong size on ULoginBonusEventWidget");
static_assert(offsetof(ULoginBonusEventWidget, _ani_in) == 0x000370, "Member 'ULoginBonusEventWidget::_ani_in' has a wrong offset!");
static_assert(offsetof(ULoginBonusEventWidget, _itemTileView) == 0x000388, "Member 'ULoginBonusEventWidget::_itemTileView' has a wrong offset!");
static_assert(offsetof(ULoginBonusEventWidget, _availableAtText) == 0x000390, "Member 'ULoginBonusEventWidget::_availableAtText' has a wrong offset!");
static_assert(offsetof(ULoginBonusEventWidget, _expireAtText) == 0x000398, "Member 'ULoginBonusEventWidget::_expireAtText' has a wrong offset!");
static_assert(offsetof(ULoginBonusEventWidget, _logo) == 0x0003A0, "Member 'ULoginBonusEventWidget::_logo' has a wrong offset!");
static_assert(offsetof(ULoginBonusEventWidget, _bg) == 0x0003A8, "Member 'ULoginBonusEventWidget::_bg' has a wrong offset!");
static_assert(offsetof(ULoginBonusEventWidget, _itemListPanel) == 0x0003B0, "Member 'ULoginBonusEventWidget::_itemListPanel' has a wrong offset!");
static_assert(offsetof(ULoginBonusEventWidget, _remainTime) == 0x0003B8, "Member 'ULoginBonusEventWidget::_remainTime' has a wrong offset!");
static_assert(offsetof(ULoginBonusEventWidget, _birthdayVoice) == 0x000420, "Member 'ULoginBonusEventWidget::_birthdayVoice' has a wrong offset!");

// Class OutGameModule.GameModeTitle
// 0x0000 (0x0340 - 0x0340)
class AGameModeTitle final : public AGameModeOutGame
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameModeTitle">();
	}
	static class AGameModeTitle* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameModeTitle>();
	}
};
static_assert(alignof(AGameModeTitle) == 0x000008, "Wrong alignment on AGameModeTitle");
static_assert(sizeof(AGameModeTitle) == 0x000340, "Wrong size on AGameModeTitle");

// Class OutGameModule.GamePlaySettingWidget
// 0x01C8 (0x0538 - 0x0370)
class UGamePlaySettingWidget final : public UBaseSettingWidget
{
public:
	class USettingButtonSwitchWidget*             _notification;                                     // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _recieveTextChat;                                  // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonChoicesWidget*            _playLanguage;                                     // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _recordHide;                                       // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonChoicesWidget*            _playServer;                                       // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _miniMapRotation;                                  // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _aimAssist;                                        // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _dashHold;                                         // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _squatHold;                                        // 0x03B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _aimHold;                                          // 0x03B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSliderWidget*             _aimSensitivityX;                                  // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSliderWidget*             _aimSensitivityY;                                  // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSliderWidget*             _aimModeSensitivityX;                              // 0x03D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSliderWidget*             _aimModeSensitivityY;                              // 0x03D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSliderWidget*             _aimMagnification;                                 // 0x03E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _gyro;                                             // 0x03E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSliderWidget*             _gyroSensitivityX;                                 // 0x03F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSliderWidget*             _gyroSensitivityY;                                 // 0x03F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _cameraInversionX;                                 // 0x0400(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _cameraInversionY;                                 // 0x0408(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSliderWidget*             _aimDeadZone;                                      // 0x0410(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSliderWidget*             _moveDeadZone;                                     // 0x0418(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonChoicesWidget*            _cameraAccelerationType;                           // 0x0420(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _pad;                                              // 0x0428(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _vibration;                                        // 0x0430(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _miniMapSide;                                      // 0x0438(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _isAutoLevelUp;                                    // 0x0440(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _levelUpShortCut;                                  // 0x0448(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _cameraDirection;                                  // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonChoicesWidget*            _auraDispType;                                     // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _readTextChat;                                     // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _voiceChatText;                                    // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _aimAssistPanel;                                   // 0x0470(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _recordHidePanel;                                  // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _miniMapRotationPanel;                             // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _miniMapSidePanel;                                 // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _gyroPanel;                                        // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _gyroSensitivityXPanel;                            // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _gyroSensitivityYPanel;                            // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _playLanguagePanel;                                // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _playServerPanel;                                  // 0x04B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _padPanel;                                         // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _vibrationPanel;                                   // 0x04C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _cameraAccelerationTypePanel;                      // 0x04C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _levelUpShortCutPanel;                             // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _isAutoLevelUpPanel;                               // 0x04D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _auraDispTypePanel;                                // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                             _list;                                             // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _tipsText;                                         // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _prevTitle;                                        // 0x04F8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameOption*                            _gameOption;                                       // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_508[0x30];                                     // 0x0508(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAddedToFocusEndItem(EWidgetInputType InputType, const struct FFocusEvent& InFocusEvent);
	void OnAddedToFocusStartItem(EWidgetInputType InputType, const struct FFocusEvent& InFocusEvent);
	void OnCameraAccelerationTypeValueChanged(int32 SelectedIndex);
	void OnLoadSettingLoadComplete(int32 RequestId);
	void OnSaveSettingLoadComplete(int32 RequestId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GamePlaySettingWidget">();
	}
	static class UGamePlaySettingWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGamePlaySettingWidget>();
	}
};
static_assert(alignof(UGamePlaySettingWidget) == 0x000008, "Wrong alignment on UGamePlaySettingWidget");
static_assert(sizeof(UGamePlaySettingWidget) == 0x000538, "Wrong size on UGamePlaySettingWidget");
static_assert(offsetof(UGamePlaySettingWidget, _notification) == 0x000370, "Member 'UGamePlaySettingWidget::_notification' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _recieveTextChat) == 0x000378, "Member 'UGamePlaySettingWidget::_recieveTextChat' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _playLanguage) == 0x000380, "Member 'UGamePlaySettingWidget::_playLanguage' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _recordHide) == 0x000388, "Member 'UGamePlaySettingWidget::_recordHide' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _playServer) == 0x000390, "Member 'UGamePlaySettingWidget::_playServer' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _miniMapRotation) == 0x000398, "Member 'UGamePlaySettingWidget::_miniMapRotation' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _aimAssist) == 0x0003A0, "Member 'UGamePlaySettingWidget::_aimAssist' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _dashHold) == 0x0003A8, "Member 'UGamePlaySettingWidget::_dashHold' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _squatHold) == 0x0003B0, "Member 'UGamePlaySettingWidget::_squatHold' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _aimHold) == 0x0003B8, "Member 'UGamePlaySettingWidget::_aimHold' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _aimSensitivityX) == 0x0003C0, "Member 'UGamePlaySettingWidget::_aimSensitivityX' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _aimSensitivityY) == 0x0003C8, "Member 'UGamePlaySettingWidget::_aimSensitivityY' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _aimModeSensitivityX) == 0x0003D0, "Member 'UGamePlaySettingWidget::_aimModeSensitivityX' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _aimModeSensitivityY) == 0x0003D8, "Member 'UGamePlaySettingWidget::_aimModeSensitivityY' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _aimMagnification) == 0x0003E0, "Member 'UGamePlaySettingWidget::_aimMagnification' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _gyro) == 0x0003E8, "Member 'UGamePlaySettingWidget::_gyro' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _gyroSensitivityX) == 0x0003F0, "Member 'UGamePlaySettingWidget::_gyroSensitivityX' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _gyroSensitivityY) == 0x0003F8, "Member 'UGamePlaySettingWidget::_gyroSensitivityY' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _cameraInversionX) == 0x000400, "Member 'UGamePlaySettingWidget::_cameraInversionX' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _cameraInversionY) == 0x000408, "Member 'UGamePlaySettingWidget::_cameraInversionY' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _aimDeadZone) == 0x000410, "Member 'UGamePlaySettingWidget::_aimDeadZone' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _moveDeadZone) == 0x000418, "Member 'UGamePlaySettingWidget::_moveDeadZone' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _cameraAccelerationType) == 0x000420, "Member 'UGamePlaySettingWidget::_cameraAccelerationType' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _pad) == 0x000428, "Member 'UGamePlaySettingWidget::_pad' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _vibration) == 0x000430, "Member 'UGamePlaySettingWidget::_vibration' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _miniMapSide) == 0x000438, "Member 'UGamePlaySettingWidget::_miniMapSide' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _isAutoLevelUp) == 0x000440, "Member 'UGamePlaySettingWidget::_isAutoLevelUp' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _levelUpShortCut) == 0x000448, "Member 'UGamePlaySettingWidget::_levelUpShortCut' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _cameraDirection) == 0x000450, "Member 'UGamePlaySettingWidget::_cameraDirection' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _auraDispType) == 0x000458, "Member 'UGamePlaySettingWidget::_auraDispType' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _readTextChat) == 0x000460, "Member 'UGamePlaySettingWidget::_readTextChat' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _voiceChatText) == 0x000468, "Member 'UGamePlaySettingWidget::_voiceChatText' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _aimAssistPanel) == 0x000470, "Member 'UGamePlaySettingWidget::_aimAssistPanel' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _recordHidePanel) == 0x000478, "Member 'UGamePlaySettingWidget::_recordHidePanel' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _miniMapRotationPanel) == 0x000480, "Member 'UGamePlaySettingWidget::_miniMapRotationPanel' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _miniMapSidePanel) == 0x000488, "Member 'UGamePlaySettingWidget::_miniMapSidePanel' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _gyroPanel) == 0x000490, "Member 'UGamePlaySettingWidget::_gyroPanel' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _gyroSensitivityXPanel) == 0x000498, "Member 'UGamePlaySettingWidget::_gyroSensitivityXPanel' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _gyroSensitivityYPanel) == 0x0004A0, "Member 'UGamePlaySettingWidget::_gyroSensitivityYPanel' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _playLanguagePanel) == 0x0004A8, "Member 'UGamePlaySettingWidget::_playLanguagePanel' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _playServerPanel) == 0x0004B0, "Member 'UGamePlaySettingWidget::_playServerPanel' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _padPanel) == 0x0004B8, "Member 'UGamePlaySettingWidget::_padPanel' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _vibrationPanel) == 0x0004C0, "Member 'UGamePlaySettingWidget::_vibrationPanel' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _cameraAccelerationTypePanel) == 0x0004C8, "Member 'UGamePlaySettingWidget::_cameraAccelerationTypePanel' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _levelUpShortCutPanel) == 0x0004D0, "Member 'UGamePlaySettingWidget::_levelUpShortCutPanel' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _isAutoLevelUpPanel) == 0x0004D8, "Member 'UGamePlaySettingWidget::_isAutoLevelUpPanel' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _auraDispTypePanel) == 0x0004E0, "Member 'UGamePlaySettingWidget::_auraDispTypePanel' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _list) == 0x0004E8, "Member 'UGamePlaySettingWidget::_list' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _tipsText) == 0x0004F0, "Member 'UGamePlaySettingWidget::_tipsText' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _prevTitle) == 0x0004F8, "Member 'UGamePlaySettingWidget::_prevTitle' has a wrong offset!");
static_assert(offsetof(UGamePlaySettingWidget, _gameOption) == 0x000500, "Member 'UGamePlaySettingWidget::_gameOption' has a wrong offset!");

// Class OutGameModule.LeaderboardPanelWidget
// 0x0148 (0x05F8 - 0x04B0)
class ULeaderboardPanelWidget final : public UWidgetButtonDetails
{
public:
	struct FLeaderboardDisplayData                _data;                                             // 0x04B0(0x0038)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	ELeaderboardFramType                          _type;                                             // 0x04E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     _sameTeamBackMat;                                  // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     _enemyTeamBackMat;                                 // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               _sameTeamBackMatDynamic;                           // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               _enemyTeamBackMatDynamic;                          // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     _sameTeamTitleMat;                                 // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     _enemyTeamTitleMat;                                // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     _sameTeamNameMat;                                  // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     _enemyTeamNameMat;                                 // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               _sameTeamTitleMatDynamic;                          // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               _enemyTeamTitleMatDynamic;                         // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               _sameTeamNameMatDynamic;                           // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               _enemyTeamNameMatDynamic;                          // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _sameTeamColor;                                    // 0x0550(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _enemyTeamColor;                                   // 0x0560(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _goodPanel;                                        // 0x0570(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _goodCountText;                                    // 0x0578(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _noneSwitcher;                                     // 0x0580(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                      _charaImageMaterial;                               // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         _matPanelNumber;                                   // 0x0590(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_591[0x7];                                      // 0x0591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASceneCaptureCreatorMultiple*           _sceneCaptureCreator;                              // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _nameText;                                         // 0x05A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _pointText;                                        // 0x05A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _unitText;                                         // 0x05B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _titleText;                                        // 0x05B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _titleImage;                                       // 0x05C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _nameImage;                                        // 0x05C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _charaImage;                                       // 0x05D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _shadow;                                           // 0x05D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _backImage;                                        // 0x05E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5E8[0x10];                                     // 0x05E8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDecideButton(class UAppWidget* Widget, const struct FKey& Key, const EWidgetInputType InputType);
	void OnFinishedCharaSetupDelegate();
	void OnFinishedSetupDelegate();
	void OpenProfile();
	void PlaySECharacterPress_Internal();
	void PlaySendLike();
	void PlaySENoneCharacterPress_Internal();
	void SetupSceneCaptureCreator();
	void UpdateFocusImage(bool* bLeftArrow, bool* bRightArrow);

	bool IsNull() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LeaderboardPanelWidget">();
	}
	static class ULeaderboardPanelWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULeaderboardPanelWidget>();
	}
};
static_assert(alignof(ULeaderboardPanelWidget) == 0x000008, "Wrong alignment on ULeaderboardPanelWidget");
static_assert(sizeof(ULeaderboardPanelWidget) == 0x0005F8, "Wrong size on ULeaderboardPanelWidget");
static_assert(offsetof(ULeaderboardPanelWidget, _data) == 0x0004B0, "Member 'ULeaderboardPanelWidget::_data' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _type) == 0x0004E8, "Member 'ULeaderboardPanelWidget::_type' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _sameTeamBackMat) == 0x0004F0, "Member 'ULeaderboardPanelWidget::_sameTeamBackMat' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _enemyTeamBackMat) == 0x0004F8, "Member 'ULeaderboardPanelWidget::_enemyTeamBackMat' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _sameTeamBackMatDynamic) == 0x000500, "Member 'ULeaderboardPanelWidget::_sameTeamBackMatDynamic' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _enemyTeamBackMatDynamic) == 0x000508, "Member 'ULeaderboardPanelWidget::_enemyTeamBackMatDynamic' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _sameTeamTitleMat) == 0x000510, "Member 'ULeaderboardPanelWidget::_sameTeamTitleMat' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _enemyTeamTitleMat) == 0x000518, "Member 'ULeaderboardPanelWidget::_enemyTeamTitleMat' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _sameTeamNameMat) == 0x000520, "Member 'ULeaderboardPanelWidget::_sameTeamNameMat' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _enemyTeamNameMat) == 0x000528, "Member 'ULeaderboardPanelWidget::_enemyTeamNameMat' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _sameTeamTitleMatDynamic) == 0x000530, "Member 'ULeaderboardPanelWidget::_sameTeamTitleMatDynamic' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _enemyTeamTitleMatDynamic) == 0x000538, "Member 'ULeaderboardPanelWidget::_enemyTeamTitleMatDynamic' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _sameTeamNameMatDynamic) == 0x000540, "Member 'ULeaderboardPanelWidget::_sameTeamNameMatDynamic' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _enemyTeamNameMatDynamic) == 0x000548, "Member 'ULeaderboardPanelWidget::_enemyTeamNameMatDynamic' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _sameTeamColor) == 0x000550, "Member 'ULeaderboardPanelWidget::_sameTeamColor' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _enemyTeamColor) == 0x000560, "Member 'ULeaderboardPanelWidget::_enemyTeamColor' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _goodPanel) == 0x000570, "Member 'ULeaderboardPanelWidget::_goodPanel' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _goodCountText) == 0x000578, "Member 'ULeaderboardPanelWidget::_goodCountText' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _noneSwitcher) == 0x000580, "Member 'ULeaderboardPanelWidget::_noneSwitcher' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _charaImageMaterial) == 0x000588, "Member 'ULeaderboardPanelWidget::_charaImageMaterial' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _matPanelNumber) == 0x000590, "Member 'ULeaderboardPanelWidget::_matPanelNumber' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _sceneCaptureCreator) == 0x000598, "Member 'ULeaderboardPanelWidget::_sceneCaptureCreator' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _nameText) == 0x0005A0, "Member 'ULeaderboardPanelWidget::_nameText' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _pointText) == 0x0005A8, "Member 'ULeaderboardPanelWidget::_pointText' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _unitText) == 0x0005B0, "Member 'ULeaderboardPanelWidget::_unitText' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _titleText) == 0x0005B8, "Member 'ULeaderboardPanelWidget::_titleText' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _titleImage) == 0x0005C0, "Member 'ULeaderboardPanelWidget::_titleImage' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _nameImage) == 0x0005C8, "Member 'ULeaderboardPanelWidget::_nameImage' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _charaImage) == 0x0005D0, "Member 'ULeaderboardPanelWidget::_charaImage' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _shadow) == 0x0005D8, "Member 'ULeaderboardPanelWidget::_shadow' has a wrong offset!");
static_assert(offsetof(ULeaderboardPanelWidget, _backImage) == 0x0005E0, "Member 'ULeaderboardPanelWidget::_backImage' has a wrong offset!");

// Class OutGameModule.GameStateOutGame
// 0x0090 (0x03E0 - 0x0350)
class AGameStateOutGame : public AHerovsGameState
{
public:
	TArray<class ACameraActorOutGame*>            _outStageCameras;                                  // 0x0350(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class ACharacterOutGameSpawnPoint*>    _outCharacterSpawnPoint;                           // 0x0360(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class ACharacterOutGame*>              _outMainMenuCharacterArray;                        // 0x0370(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<class FString, class ACharacterOutGame*> _characterOutGameMap;                              // 0x0380(0x0050)(NativeAccessSpecifierPrivate)
	class ACameraActorOutGame*                    _bindCamera;                                       // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3D8[0x8];                                      // 0x03D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameStateOutGame">();
	}
	static class AGameStateOutGame* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameStateOutGame>();
	}
};
static_assert(alignof(AGameStateOutGame) == 0x000008, "Wrong alignment on AGameStateOutGame");
static_assert(sizeof(AGameStateOutGame) == 0x0003E0, "Wrong size on AGameStateOutGame");
static_assert(offsetof(AGameStateOutGame, _outStageCameras) == 0x000350, "Member 'AGameStateOutGame::_outStageCameras' has a wrong offset!");
static_assert(offsetof(AGameStateOutGame, _outCharacterSpawnPoint) == 0x000360, "Member 'AGameStateOutGame::_outCharacterSpawnPoint' has a wrong offset!");
static_assert(offsetof(AGameStateOutGame, _outMainMenuCharacterArray) == 0x000370, "Member 'AGameStateOutGame::_outMainMenuCharacterArray' has a wrong offset!");
static_assert(offsetof(AGameStateOutGame, _characterOutGameMap) == 0x000380, "Member 'AGameStateOutGame::_characterOutGameMap' has a wrong offset!");
static_assert(offsetof(AGameStateOutGame, _bindCamera) == 0x0003D0, "Member 'AGameStateOutGame::_bindCamera' has a wrong offset!");

// Class OutGameModule.GameStateAvatarCreate
// 0x0000 (0x03E0 - 0x03E0)
class AGameStateAvatarCreate final : public AGameStateOutGame
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameStateAvatarCreate">();
	}
	static class AGameStateAvatarCreate* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameStateAvatarCreate>();
	}
};
static_assert(alignof(AGameStateAvatarCreate) == 0x000008, "Wrong alignment on AGameStateAvatarCreate");
static_assert(sizeof(AGameStateAvatarCreate) == 0x0003E0, "Wrong size on AGameStateAvatarCreate");

// Class OutGameModule.LoginBonusWidget
// 0x0040 (0x0390 - 0x0350)
class ULoginBonusWidget final : public UWidgetBase
{
public:
	class UWidgetSwitcher*                        _showEventSwitcher;                                // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULoginBonusDailyWidget*                 _dailyLoginBonus;                                  // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULoginBonusEventWidget*                 _eventLoginBonus;                                  // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _nextButton;                                       // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_370[0x20];                                     // 0x0370(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_NextSequence();
	void NextLoginBonus();
	void OnBuyPremiumLoginBonus(bool Buy);
	void OnChangeIdleStatusEvent(bool Idle);
	void OnFadeOutFinished();
	void OnLoadCompleteEvent();
	void OnReceiveDLoadCompleteEvent(int32 RequestId);
	void OpenFinished();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoginBonusWidget">();
	}
	static class ULoginBonusWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoginBonusWidget>();
	}
};
static_assert(alignof(ULoginBonusWidget) == 0x000008, "Wrong alignment on ULoginBonusWidget");
static_assert(sizeof(ULoginBonusWidget) == 0x000390, "Wrong size on ULoginBonusWidget");
static_assert(offsetof(ULoginBonusWidget, _showEventSwitcher) == 0x000350, "Member 'ULoginBonusWidget::_showEventSwitcher' has a wrong offset!");
static_assert(offsetof(ULoginBonusWidget, _dailyLoginBonus) == 0x000358, "Member 'ULoginBonusWidget::_dailyLoginBonus' has a wrong offset!");
static_assert(offsetof(ULoginBonusWidget, _eventLoginBonus) == 0x000360, "Member 'ULoginBonusWidget::_eventLoginBonus' has a wrong offset!");
static_assert(offsetof(ULoginBonusWidget, _nextButton) == 0x000368, "Member 'ULoginBonusWidget::_nextButton' has a wrong offset!");

// Class OutGameModule.GameStateCustomize
// 0x0000 (0x03E0 - 0x03E0)
class AGameStateCustomize final : public AGameStateOutGame
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameStateCustomize">();
	}
	static class AGameStateCustomize* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameStateCustomize>();
	}
};
static_assert(alignof(AGameStateCustomize) == 0x000008, "Wrong alignment on AGameStateCustomize");
static_assert(sizeof(AGameStateCustomize) == 0x0003E0, "Wrong size on AGameStateCustomize");

// Class OutGameModule.GameStateDevOnlineMenu
// 0x0018 (0x02A8 - 0x0290)
class AGameStateDevOnlineMenu final : public AGameState
{
public:
	int32                                         _sharedState;                                      // 0x0290(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         _stageIndex;                                       // 0x0294(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         _playerCount;                                      // 0x0298(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            _currentWidget;                                    // 0x02A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnChanged_ExtListButton(const class FString& Str, ESelectInfo Type);
	void OnChanged_FriendListButton(const class FString& Str, ESelectInfo Type);
	void OnChanged_MatchModeButton(const class FString& Str, ESelectInfo Type);
	void OnChanged_SessionListButton(const class FString& Str, ESelectInfo Type);
	void OnClicked_BackButton();
	void OnClicked_Ext1();
	void OnClicked_Ext2();
	void OnClicked_ExtListButton();
	void OnClicked_FindSessionsButton();
	void OnClicked_FriendListButton();
	void OnClicked_GetRanking();
	void OnClicked_GetTrophy();
	void OnClicked_LoginUIButton();
	void OnClicked_MatchModeButton();
	void OnClicked_ProfileUI();
	void OnClicked_RemoveClient();
	void OnClicked_SearchFriend();
	void OnClicked_SendInvites();
	void OnClicked_SessionAutoButton();
	void OnClicked_SessionHostButton();
	void OnClicked_SessionJoinButton();
	void OnClicked_SessionListButton();
	void OnClicked_SetRanking();
	void OnClicked_SetTrophy0();
	void OnClicked_SetTrophy1();
	void OnClicked_StartBattle();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameStateDevOnlineMenu">();
	}
	static class AGameStateDevOnlineMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameStateDevOnlineMenu>();
	}
};
static_assert(alignof(AGameStateDevOnlineMenu) == 0x000008, "Wrong alignment on AGameStateDevOnlineMenu");
static_assert(sizeof(AGameStateDevOnlineMenu) == 0x0002A8, "Wrong size on AGameStateDevOnlineMenu");
static_assert(offsetof(AGameStateDevOnlineMenu, _sharedState) == 0x000290, "Member 'AGameStateDevOnlineMenu::_sharedState' has a wrong offset!");
static_assert(offsetof(AGameStateDevOnlineMenu, _stageIndex) == 0x000294, "Member 'AGameStateDevOnlineMenu::_stageIndex' has a wrong offset!");
static_assert(offsetof(AGameStateDevOnlineMenu, _playerCount) == 0x000298, "Member 'AGameStateDevOnlineMenu::_playerCount' has a wrong offset!");
static_assert(offsetof(AGameStateDevOnlineMenu, _currentWidget) == 0x0002A0, "Member 'AGameStateDevOnlineMenu::_currentWidget' has a wrong offset!");

// Class OutGameModule.TrainingMenuOutGameWidget
// 0x0000 (0x03E8 - 0x03E8)
class UTrainingMenuOutGameWidget final : public UAppWidget
{
public:
	void Decide();
	void OnGetAiCharacter(int32 Index_0, ECharacterId* CharacterId, int32* DefUnique1Level, int32* DefUnique2Level, int32* DefUnique3Level, int32* SkillVariationCode, int32* AiActionIndex);
	void OnGetPlayerCharacter(ECharacterId* CharacterId, int32* DefUnique1Level, int32* DefUnique2Level, int32* DefUnique3Level, int32* SkillVariationCode);
	void OnGetSetting(int32* DamageTypeIndex, bool* bFriendlyFire);
	void OnSetAiCharacter(int32 Index_0, ECharacterId CharacterId, int32 DefUnique1Level, int32 DefUnique2Level, int32 DefUnique3Level, int32 SkillVariationCode, int32 AiActionIndex);
	void OnSetPlayerCharacter(ECharacterId CharacterId, int32 DefUnique1Level, int32 DefUnique2Level, int32 DefUnique3Level, int32 SkillVariationCode);
	void OnSetSetting(int32 DamageTypeIndex, bool bFriendlyFire);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TrainingMenuOutGameWidget">();
	}
	static class UTrainingMenuOutGameWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrainingMenuOutGameWidget>();
	}
};
static_assert(alignof(UTrainingMenuOutGameWidget) == 0x000008, "Wrong alignment on UTrainingMenuOutGameWidget");
static_assert(sizeof(UTrainingMenuOutGameWidget) == 0x0003E8, "Wrong size on UTrainingMenuOutGameWidget");

// Class OutGameModule.MissionStarWidgetBase
// 0x0050 (0x03A0 - 0x0350)
class UMissionStarWidgetBase : public UWidgetBase
{
public:
	EHorizontalAlignment                          _horizontalAlignment;                              // 0x0350(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EHorizontalAlignment                          _magnificationAlignment;                           // 0x0351(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_352[0x2];                                      // 0x0352(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              _size;                                             // 0x0354(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              _magnificationStarSize;                            // 0x035C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBox*                         _horizontalBox;                                    // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UMissionStarItemWidget>     _starWidgetClass;                                  // 0x0370(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_378[0x28];                                     // 0x0378(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MissionStarWidgetBase">();
	}
	static class UMissionStarWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionStarWidgetBase>();
	}
};
static_assert(alignof(UMissionStarWidgetBase) == 0x000008, "Wrong alignment on UMissionStarWidgetBase");
static_assert(sizeof(UMissionStarWidgetBase) == 0x0003A0, "Wrong size on UMissionStarWidgetBase");
static_assert(offsetof(UMissionStarWidgetBase, _horizontalAlignment) == 0x000350, "Member 'UMissionStarWidgetBase::_horizontalAlignment' has a wrong offset!");
static_assert(offsetof(UMissionStarWidgetBase, _magnificationAlignment) == 0x000351, "Member 'UMissionStarWidgetBase::_magnificationAlignment' has a wrong offset!");
static_assert(offsetof(UMissionStarWidgetBase, _size) == 0x000354, "Member 'UMissionStarWidgetBase::_size' has a wrong offset!");
static_assert(offsetof(UMissionStarWidgetBase, _magnificationStarSize) == 0x00035C, "Member 'UMissionStarWidgetBase::_magnificationStarSize' has a wrong offset!");
static_assert(offsetof(UMissionStarWidgetBase, _horizontalBox) == 0x000368, "Member 'UMissionStarWidgetBase::_horizontalBox' has a wrong offset!");
static_assert(offsetof(UMissionStarWidgetBase, _starWidgetClass) == 0x000370, "Member 'UMissionStarWidgetBase::_starWidgetClass' has a wrong offset!");

// Class OutGameModule.MissionMagnificationStarWidget
// 0x0010 (0x03B0 - 0x03A0)
class UMissionMagnificationStarWidget final : public UMissionStarWidgetBase
{
public:
	bool                                          _bOverhang;                                        // 0x03A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMissionStarMagnificationWidget*        _starMagnification;                                // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MissionMagnificationStarWidget">();
	}
	static class UMissionMagnificationStarWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionMagnificationStarWidget>();
	}
};
static_assert(alignof(UMissionMagnificationStarWidget) == 0x000008, "Wrong alignment on UMissionMagnificationStarWidget");
static_assert(sizeof(UMissionMagnificationStarWidget) == 0x0003B0, "Wrong size on UMissionMagnificationStarWidget");
static_assert(offsetof(UMissionMagnificationStarWidget, _bOverhang) == 0x0003A0, "Member 'UMissionMagnificationStarWidget::_bOverhang' has a wrong offset!");
static_assert(offsetof(UMissionMagnificationStarWidget, _starMagnification) == 0x0003A8, "Member 'UMissionMagnificationStarWidget::_starMagnification' has a wrong offset!");

// Class OutGameModule.GameStateGasha
// 0x0000 (0x0220 - 0x0220)
class AGameStateGasha final : public AActor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameStateGasha">();
	}
	static class AGameStateGasha* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameStateGasha>();
	}
};
static_assert(alignof(AGameStateGasha) == 0x000008, "Wrong alignment on AGameStateGasha");
static_assert(sizeof(AGameStateGasha) == 0x000220, "Wrong size on AGameStateGasha");

// Class OutGameModule.GameStateMainMenu
// 0x0000 (0x03E0 - 0x03E0)
class AGameStateMainMenu final : public AGameStateOutGame
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameStateMainMenu">();
	}
	static class AGameStateMainMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameStateMainMenu>();
	}
};
static_assert(alignof(AGameStateMainMenu) == 0x000008, "Wrong alignment on AGameStateMainMenu");
static_assert(sizeof(AGameStateMainMenu) == 0x0003E0, "Wrong size on AGameStateMainMenu");

// Class OutGameModule.MainMenuBarWidget
// 0x0028 (0x0378 - 0x0350)
class UMainMenuBarWidget final : public UWidgetBase
{
public:
	ETutorialStepNo                               _grayedOutTutorialNo;                              // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTileView*                              _barTile;                                          // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _generalButtonRight;                               // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _generalButtonLeft;                                // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _setBarIndex;                                      // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 GetBarTileIndex();
	void OnDecideNextButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecidePrevButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnHoveredChangedEvent(class UObject* Item, bool bHovered);
	void OnUpdate();
	void OnUpdateTutorial();
	void SetBarTileEnable(bool bEnable);
	void SetBarTileIndex(int32 Index_0);
	void SetLRButtonEnable(bool bEnable);
	void SwitchNextTab(int32 AddNum, bool bIsLoop);
	void SwitchPrevTab(int32 SubNum, bool bIsLoop);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MainMenuBarWidget">();
	}
	static class UMainMenuBarWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMainMenuBarWidget>();
	}
};
static_assert(alignof(UMainMenuBarWidget) == 0x000008, "Wrong alignment on UMainMenuBarWidget");
static_assert(sizeof(UMainMenuBarWidget) == 0x000378, "Wrong size on UMainMenuBarWidget");
static_assert(offsetof(UMainMenuBarWidget, _grayedOutTutorialNo) == 0x000350, "Member 'UMainMenuBarWidget::_grayedOutTutorialNo' has a wrong offset!");
static_assert(offsetof(UMainMenuBarWidget, _barTile) == 0x000358, "Member 'UMainMenuBarWidget::_barTile' has a wrong offset!");
static_assert(offsetof(UMainMenuBarWidget, _generalButtonRight) == 0x000360, "Member 'UMainMenuBarWidget::_generalButtonRight' has a wrong offset!");
static_assert(offsetof(UMainMenuBarWidget, _generalButtonLeft) == 0x000368, "Member 'UMainMenuBarWidget::_generalButtonLeft' has a wrong offset!");
static_assert(offsetof(UMainMenuBarWidget, _setBarIndex) == 0x000370, "Member 'UMainMenuBarWidget::_setBarIndex' has a wrong offset!");

// Class OutGameModule.GameStateResult
// 0x00B8 (0x0498 - 0x03E0)
class AGameStateResult final : public AGameStateOutGame
{
public:
	TSubclassOf<class UUserWidget>                _resultTabClass;                                   // 0x03E0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>                _itemDropClass;                                    // 0x03E8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>                _rankMachRewardClass;                              // 0x03F0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>                _battleRewardSwitcherClass;                        // 0x03F8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _currentViewWidget;                                // 0x0400(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_408[0x90];                                     // 0x0408(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void NextSequence(class UWidget* Widget);
	void OnCompletedSendPhaseLike(int32 RequestId);
	void OnLoadedMission(int32 RequestId);
	void OnLoadedResult(int32 RequestId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameStateResult">();
	}
	static class AGameStateResult* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameStateResult>();
	}
};
static_assert(alignof(AGameStateResult) == 0x000008, "Wrong alignment on AGameStateResult");
static_assert(sizeof(AGameStateResult) == 0x000498, "Wrong size on AGameStateResult");
static_assert(offsetof(AGameStateResult, _resultTabClass) == 0x0003E0, "Member 'AGameStateResult::_resultTabClass' has a wrong offset!");
static_assert(offsetof(AGameStateResult, _itemDropClass) == 0x0003E8, "Member 'AGameStateResult::_itemDropClass' has a wrong offset!");
static_assert(offsetof(AGameStateResult, _rankMachRewardClass) == 0x0003F0, "Member 'AGameStateResult::_rankMachRewardClass' has a wrong offset!");
static_assert(offsetof(AGameStateResult, _battleRewardSwitcherClass) == 0x0003F8, "Member 'AGameStateResult::_battleRewardSwitcherClass' has a wrong offset!");
static_assert(offsetof(AGameStateResult, _currentViewWidget) == 0x000400, "Member 'AGameStateResult::_currentViewWidget' has a wrong offset!");

// Class OutGameModule.GameStateSeasonPass
// 0x0000 (0x03E0 - 0x03E0)
class AGameStateSeasonPass final : public AGameStateOutGame
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameStateSeasonPass">();
	}
	static class AGameStateSeasonPass* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameStateSeasonPass>();
	}
};
static_assert(alignof(AGameStateSeasonPass) == 0x000008, "Wrong alignment on AGameStateSeasonPass");
static_assert(sizeof(AGameStateSeasonPass) == 0x0003E0, "Wrong size on AGameStateSeasonPass");

// Class OutGameModule.TabWidget
// 0x0180 (0x0528 - 0x03A8)
class UTabWidget final : public USwitcherControllerWidget
{
public:
	FMulticastInlineDelegateProperty_             OnSetupTabWidget;                                  // 0x03A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          _bResize;                                          // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B9[0x3];                                      // 0x03B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               _anchors;                                          // 0x03BC(0x0010)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FMargin                                _offsets;                                          // 0x03CC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector2D                              _position;                                         // 0x03DC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              _size;                                             // 0x03E4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanel*                           _clippingMaskCanvasPanel;                          // 0x03F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _topLayerCanvasPanel;                              // 0x03F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTabInfo>                       _tabs;                                             // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UClippingWidget*                        _clipping;                                         // 0x0410(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URetainerBox*                           _headerTextureRetainerBox;                         // 0x0418(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URetainerBox*                           _bodyTextureRetainerBox;                           // 0x0420(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bRatio;                                           // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_429[0x3];                                      // 0x0429(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _topPatternSize;                                   // 0x042C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _bottomPatternSize;                                // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanel*                           _defaultBG;                                        // 0x0438(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _blurCanvasPanel;                                  // 0x0440(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _bgSlotCanvasPanel;                                // 0x0448(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _topPattern;                                       // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _bottomPattern;                                    // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ULevelStreaming*>                _subLevelList;                                     // 0x0460(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UWidgetBase>                _tabHeaderBGClass;                                 // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UTabHeaderWidget>           _tabHeaderFrameClass;                              // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UWidgetBase>                _tabHeaderEdgeBGClass;                             // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UTabHeaderWidget>           _tabHeaderEdgeFrameClass;                          // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EOffsetsType                                  _offsetsType;                                      // 0x0490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_491[0x3];                                      // 0x0491(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _spaceLeft;                                        // 0x0494(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _spaceRight;                                       // 0x0498(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bButtonGuide;                                     // 0x049C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_49D[0x3];                                      // 0x049D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanel*                           _tabHeaderBGCanvasPanel;                           // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _tabHeaderFrameCanvasPanel;                        // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAppWidget*                             _guideL1Button;                                    // 0x04B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAppWidget*                             _guideR1Button;                                    // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C0[0x68];                                     // 0x04C0(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 BP_GetTabNum();
	void BP_RequestSwitchTab(const int32 TabIdx, bool bSeRequeset);
	void BP_SetSpecifyTabEnable(const int32 TabIdx, bool bEnable);
	void BP_SetViewTabIcon(const int32 TabIdx, const bool bView);
	void BP_SwitchLeft();
	void BP_SwitchRight();
	void OnSetupTabWidgetEventDelegate__DelegateSignature();
	void OnSwitchLeft(class UAppWidget* Button, EWidgetInputType InputType);
	void OnSwitchRight(class UAppWidget* Button, EWidgetInputType InputType);
	void SwitchLeft();
	void SwitchRight();
	void Update();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TabWidget">();
	}
	static class UTabWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTabWidget>();
	}
};
static_assert(alignof(UTabWidget) == 0x000008, "Wrong alignment on UTabWidget");
static_assert(sizeof(UTabWidget) == 0x000528, "Wrong size on UTabWidget");
static_assert(offsetof(UTabWidget, OnSetupTabWidget) == 0x0003A8, "Member 'UTabWidget::OnSetupTabWidget' has a wrong offset!");
static_assert(offsetof(UTabWidget, _bResize) == 0x0003B8, "Member 'UTabWidget::_bResize' has a wrong offset!");
static_assert(offsetof(UTabWidget, _anchors) == 0x0003BC, "Member 'UTabWidget::_anchors' has a wrong offset!");
static_assert(offsetof(UTabWidget, _offsets) == 0x0003CC, "Member 'UTabWidget::_offsets' has a wrong offset!");
static_assert(offsetof(UTabWidget, _position) == 0x0003DC, "Member 'UTabWidget::_position' has a wrong offset!");
static_assert(offsetof(UTabWidget, _size) == 0x0003E4, "Member 'UTabWidget::_size' has a wrong offset!");
static_assert(offsetof(UTabWidget, _clippingMaskCanvasPanel) == 0x0003F0, "Member 'UTabWidget::_clippingMaskCanvasPanel' has a wrong offset!");
static_assert(offsetof(UTabWidget, _topLayerCanvasPanel) == 0x0003F8, "Member 'UTabWidget::_topLayerCanvasPanel' has a wrong offset!");
static_assert(offsetof(UTabWidget, _tabs) == 0x000400, "Member 'UTabWidget::_tabs' has a wrong offset!");
static_assert(offsetof(UTabWidget, _clipping) == 0x000410, "Member 'UTabWidget::_clipping' has a wrong offset!");
static_assert(offsetof(UTabWidget, _headerTextureRetainerBox) == 0x000418, "Member 'UTabWidget::_headerTextureRetainerBox' has a wrong offset!");
static_assert(offsetof(UTabWidget, _bodyTextureRetainerBox) == 0x000420, "Member 'UTabWidget::_bodyTextureRetainerBox' has a wrong offset!");
static_assert(offsetof(UTabWidget, _bRatio) == 0x000428, "Member 'UTabWidget::_bRatio' has a wrong offset!");
static_assert(offsetof(UTabWidget, _topPatternSize) == 0x00042C, "Member 'UTabWidget::_topPatternSize' has a wrong offset!");
static_assert(offsetof(UTabWidget, _bottomPatternSize) == 0x000430, "Member 'UTabWidget::_bottomPatternSize' has a wrong offset!");
static_assert(offsetof(UTabWidget, _defaultBG) == 0x000438, "Member 'UTabWidget::_defaultBG' has a wrong offset!");
static_assert(offsetof(UTabWidget, _blurCanvasPanel) == 0x000440, "Member 'UTabWidget::_blurCanvasPanel' has a wrong offset!");
static_assert(offsetof(UTabWidget, _bgSlotCanvasPanel) == 0x000448, "Member 'UTabWidget::_bgSlotCanvasPanel' has a wrong offset!");
static_assert(offsetof(UTabWidget, _topPattern) == 0x000450, "Member 'UTabWidget::_topPattern' has a wrong offset!");
static_assert(offsetof(UTabWidget, _bottomPattern) == 0x000458, "Member 'UTabWidget::_bottomPattern' has a wrong offset!");
static_assert(offsetof(UTabWidget, _subLevelList) == 0x000460, "Member 'UTabWidget::_subLevelList' has a wrong offset!");
static_assert(offsetof(UTabWidget, _tabHeaderBGClass) == 0x000470, "Member 'UTabWidget::_tabHeaderBGClass' has a wrong offset!");
static_assert(offsetof(UTabWidget, _tabHeaderFrameClass) == 0x000478, "Member 'UTabWidget::_tabHeaderFrameClass' has a wrong offset!");
static_assert(offsetof(UTabWidget, _tabHeaderEdgeBGClass) == 0x000480, "Member 'UTabWidget::_tabHeaderEdgeBGClass' has a wrong offset!");
static_assert(offsetof(UTabWidget, _tabHeaderEdgeFrameClass) == 0x000488, "Member 'UTabWidget::_tabHeaderEdgeFrameClass' has a wrong offset!");
static_assert(offsetof(UTabWidget, _offsetsType) == 0x000490, "Member 'UTabWidget::_offsetsType' has a wrong offset!");
static_assert(offsetof(UTabWidget, _spaceLeft) == 0x000494, "Member 'UTabWidget::_spaceLeft' has a wrong offset!");
static_assert(offsetof(UTabWidget, _spaceRight) == 0x000498, "Member 'UTabWidget::_spaceRight' has a wrong offset!");
static_assert(offsetof(UTabWidget, _bButtonGuide) == 0x00049C, "Member 'UTabWidget::_bButtonGuide' has a wrong offset!");
static_assert(offsetof(UTabWidget, _tabHeaderBGCanvasPanel) == 0x0004A0, "Member 'UTabWidget::_tabHeaderBGCanvasPanel' has a wrong offset!");
static_assert(offsetof(UTabWidget, _tabHeaderFrameCanvasPanel) == 0x0004A8, "Member 'UTabWidget::_tabHeaderFrameCanvasPanel' has a wrong offset!");
static_assert(offsetof(UTabWidget, _guideL1Button) == 0x0004B0, "Member 'UTabWidget::_guideL1Button' has a wrong offset!");
static_assert(offsetof(UTabWidget, _guideR1Button) == 0x0004B8, "Member 'UTabWidget::_guideR1Button' has a wrong offset!");

// Class OutGameModule.LoginBonusListItemWidget
// 0x0140 (0x05C8 - 0x0488)
class ULoginBonusListItemWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x38];                                     // 0x0488(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            _toDayTextColorAndOpacity;                         // 0x04C0(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                            _dayTextColorAndOpacity;                           // 0x04E8(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _day;                                              // 0x0510(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _iconHeader;                                       // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _activeCursor;                                     // 0x0520(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconWidget*                        _itemIcon;                                         // 0x0528(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _nextPanel;                                        // 0x0530(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _getIcon;                                          // 0x0538(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _lockIcon;                                         // 0x0540(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _grayOut;                                          // 0x0548(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _numText;                                          // 0x0550(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _ani_GetIn;                                        // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_560[0x10];                                     // 0x0560(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       _ani_CursorIn;                                     // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_578[0x10];                                     // 0x0578(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       _ani_CursorOut;                                    // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_590[0x10];                                     // 0x0590(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       _ani_NextCursorIn;                                 // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5A8[0x10];                                     // 0x05A8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       _ani_CursorInWait;                                 // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULoginBonusItemEntryObject*             _itemObject;                                       // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnCursorInAnimationFinished();
	void OnCursorOutAnimationFinished();
	void OnGetInAnimationFinished();
	void OnGetStampPlayItemAnimationEvent();
	void OnNextCursorInAnimationFinished();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoginBonusListItemWidget">();
	}
	static class ULoginBonusListItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoginBonusListItemWidget>();
	}
};
static_assert(alignof(ULoginBonusListItemWidget) == 0x000008, "Wrong alignment on ULoginBonusListItemWidget");
static_assert(sizeof(ULoginBonusListItemWidget) == 0x0005C8, "Wrong size on ULoginBonusListItemWidget");
static_assert(offsetof(ULoginBonusListItemWidget, _toDayTextColorAndOpacity) == 0x0004C0, "Member 'ULoginBonusListItemWidget::_toDayTextColorAndOpacity' has a wrong offset!");
static_assert(offsetof(ULoginBonusListItemWidget, _dayTextColorAndOpacity) == 0x0004E8, "Member 'ULoginBonusListItemWidget::_dayTextColorAndOpacity' has a wrong offset!");
static_assert(offsetof(ULoginBonusListItemWidget, _day) == 0x000510, "Member 'ULoginBonusListItemWidget::_day' has a wrong offset!");
static_assert(offsetof(ULoginBonusListItemWidget, _iconHeader) == 0x000518, "Member 'ULoginBonusListItemWidget::_iconHeader' has a wrong offset!");
static_assert(offsetof(ULoginBonusListItemWidget, _activeCursor) == 0x000520, "Member 'ULoginBonusListItemWidget::_activeCursor' has a wrong offset!");
static_assert(offsetof(ULoginBonusListItemWidget, _itemIcon) == 0x000528, "Member 'ULoginBonusListItemWidget::_itemIcon' has a wrong offset!");
static_assert(offsetof(ULoginBonusListItemWidget, _nextPanel) == 0x000530, "Member 'ULoginBonusListItemWidget::_nextPanel' has a wrong offset!");
static_assert(offsetof(ULoginBonusListItemWidget, _getIcon) == 0x000538, "Member 'ULoginBonusListItemWidget::_getIcon' has a wrong offset!");
static_assert(offsetof(ULoginBonusListItemWidget, _lockIcon) == 0x000540, "Member 'ULoginBonusListItemWidget::_lockIcon' has a wrong offset!");
static_assert(offsetof(ULoginBonusListItemWidget, _grayOut) == 0x000548, "Member 'ULoginBonusListItemWidget::_grayOut' has a wrong offset!");
static_assert(offsetof(ULoginBonusListItemWidget, _numText) == 0x000550, "Member 'ULoginBonusListItemWidget::_numText' has a wrong offset!");
static_assert(offsetof(ULoginBonusListItemWidget, _ani_GetIn) == 0x000558, "Member 'ULoginBonusListItemWidget::_ani_GetIn' has a wrong offset!");
static_assert(offsetof(ULoginBonusListItemWidget, _ani_CursorIn) == 0x000570, "Member 'ULoginBonusListItemWidget::_ani_CursorIn' has a wrong offset!");
static_assert(offsetof(ULoginBonusListItemWidget, _ani_CursorOut) == 0x000588, "Member 'ULoginBonusListItemWidget::_ani_CursorOut' has a wrong offset!");
static_assert(offsetof(ULoginBonusListItemWidget, _ani_NextCursorIn) == 0x0005A0, "Member 'ULoginBonusListItemWidget::_ani_NextCursorIn' has a wrong offset!");
static_assert(offsetof(ULoginBonusListItemWidget, _ani_CursorInWait) == 0x0005B8, "Member 'ULoginBonusListItemWidget::_ani_CursorInWait' has a wrong offset!");
static_assert(offsetof(ULoginBonusListItemWidget, _itemObject) == 0x0005C0, "Member 'ULoginBonusListItemWidget::_itemObject' has a wrong offset!");

// Class OutGameModule.GameStateShop
// 0x0000 (0x03E0 - 0x03E0)
class AGameStateShop final : public AGameStateOutGame
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameStateShop">();
	}
	static class AGameStateShop* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameStateShop>();
	}
};
static_assert(alignof(AGameStateShop) == 0x000008, "Wrong alignment on AGameStateShop");
static_assert(sizeof(AGameStateShop) == 0x0003E0, "Wrong size on AGameStateShop");

// Class OutGameModule.GameStateTitle
// 0x0000 (0x03E0 - 0x03E0)
class AGameStateTitle final : public AGameStateOutGame
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameStateTitle">();
	}
	static class AGameStateTitle* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameStateTitle>();
	}
};
static_assert(alignof(AGameStateTitle) == 0x000008, "Wrong alignment on AGameStateTitle");
static_assert(sizeof(AGameStateTitle) == 0x0003E0, "Wrong size on AGameStateTitle");

// Class OutGameModule.GuildChatWindowWidget
// 0x0020 (0x0430 - 0x0410)
class UGuildChatWindowWidget final : public UGuildPageWidgetBase
{
public:
	uint8                                         Pad_410[0x10];                                     // 0x0410(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UGuildChatListObject*>           _chatArray;                                        // 0x0420(0x0010)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	bool CheckTextBoxFirstFocus(bool Value);
	float GetScrollSpeedRate(float AnalogValue, float DefaultSpeedRate, float MasSpeedRate, float AddSpeedRate);
	void OnCommitChangeText(bool IsEmpty, bool _isFirstFocus);
	void ScrollBottom();
	void SetActiveSendButton(bool IsSendable);
	void SetupList(class UGuildChatListObject* Obj);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildChatWindowWidget">();
	}
	static class UGuildChatWindowWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildChatWindowWidget>();
	}
};
static_assert(alignof(UGuildChatWindowWidget) == 0x000008, "Wrong alignment on UGuildChatWindowWidget");
static_assert(sizeof(UGuildChatWindowWidget) == 0x000430, "Wrong size on UGuildChatWindowWidget");
static_assert(offsetof(UGuildChatWindowWidget, _chatArray) == 0x000420, "Member 'UGuildChatWindowWidget::_chatArray' has a wrong offset!");

// Class OutGameModule.GashaAuraIconListEntryObject
// 0x0018 (0x0048 - 0x0030)
class UGashaAuraIconListEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x18];                                      // 0x0030(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaAuraIconListEntryObject">();
	}
	static class UGashaAuraIconListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaAuraIconListEntryObject>();
	}
};
static_assert(alignof(UGashaAuraIconListEntryObject) == 0x000008, "Wrong alignment on UGashaAuraIconListEntryObject");
static_assert(sizeof(UGashaAuraIconListEntryObject) == 0x000048, "Wrong size on UGashaAuraIconListEntryObject");

// Class OutGameModule.GashaAuraIconWidget
// 0x0028 (0x0378 - 0x0350)
class UGashaAuraIconWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x8];                                      // 0x0350(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UGashaAuraIconListEntryObject*          _itemObject;                                       // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _bgIcon;                                           // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _mainIcon;                                         // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _ani_get;                                          // 0x0370(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	int32 GetAuraLevel();
	bool IsHero();
	void OnAuraInAnim();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaAuraIconWidget">();
	}
	static class UGashaAuraIconWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaAuraIconWidget>();
	}
};
static_assert(alignof(UGashaAuraIconWidget) == 0x000008, "Wrong alignment on UGashaAuraIconWidget");
static_assert(sizeof(UGashaAuraIconWidget) == 0x000378, "Wrong size on UGashaAuraIconWidget");
static_assert(offsetof(UGashaAuraIconWidget, _itemObject) == 0x000358, "Member 'UGashaAuraIconWidget::_itemObject' has a wrong offset!");
static_assert(offsetof(UGashaAuraIconWidget, _bgIcon) == 0x000360, "Member 'UGashaAuraIconWidget::_bgIcon' has a wrong offset!");
static_assert(offsetof(UGashaAuraIconWidget, _mainIcon) == 0x000368, "Member 'UGashaAuraIconWidget::_mainIcon' has a wrong offset!");
static_assert(offsetof(UGashaAuraIconWidget, _ani_get) == 0x000370, "Member 'UGashaAuraIconWidget::_ani_get' has a wrong offset!");

// Class OutGameModule.MissionStatics
// 0x0000 (0x0028 - 0x0028)
class UMissionStatics final : public UBlueprintFunctionLibrary
{
public:
	static void PlayFocusSound(const class UWidget* FocusWidget);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MissionStatics">();
	}
	static class UMissionStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionStatics>();
	}
};
static_assert(alignof(UMissionStatics) == 0x000008, "Wrong alignment on UMissionStatics");
static_assert(sizeof(UMissionStatics) == 0x000028, "Wrong size on UMissionStatics");

// Class OutGameModule.GashaBannerListEntryObject
// 0x0030 (0x0060 - 0x0030)
class UGashaBannerListEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x30];                                      // 0x0030(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaBannerListEntryObject">();
	}
	static class UGashaBannerListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaBannerListEntryObject>();
	}
};
static_assert(alignof(UGashaBannerListEntryObject) == 0x000008, "Wrong alignment on UGashaBannerListEntryObject");
static_assert(sizeof(UGashaBannerListEntryObject) == 0x000060, "Wrong size on UGashaBannerListEntryObject");

// Class OutGameModule.GashaBannerListItemWidget
// 0x0028 (0x04B0 - 0x0488)
class UGashaBannerListItemWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UGashaBannerListEntryObject*            _itemObject;                                       // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                _isSelectPanel;                                    // 0x0498(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _banner;                                           // 0x04A0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _logo;                                             // 0x04A8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnDecide(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaBannerListItemWidget">();
	}
	static class UGashaBannerListItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaBannerListItemWidget>();
	}
};
static_assert(alignof(UGashaBannerListItemWidget) == 0x000008, "Wrong alignment on UGashaBannerListItemWidget");
static_assert(sizeof(UGashaBannerListItemWidget) == 0x0004B0, "Wrong size on UGashaBannerListItemWidget");
static_assert(offsetof(UGashaBannerListItemWidget, _itemObject) == 0x000490, "Member 'UGashaBannerListItemWidget::_itemObject' has a wrong offset!");
static_assert(offsetof(UGashaBannerListItemWidget, _isSelectPanel) == 0x000498, "Member 'UGashaBannerListItemWidget::_isSelectPanel' has a wrong offset!");
static_assert(offsetof(UGashaBannerListItemWidget, _banner) == 0x0004A0, "Member 'UGashaBannerListItemWidget::_banner' has a wrong offset!");
static_assert(offsetof(UGashaBannerListItemWidget, _logo) == 0x0004A8, "Member 'UGashaBannerListItemWidget::_logo' has a wrong offset!");

// Class OutGameModule.GuildEmblemListItemObject
// 0x0008 (0x0030 - 0x0028)
class UGuildEmblemListItemObject final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_SetItemId(int32 ItemId);
	void BP_SetSelect(bool bSelect);

	int32 BP_GetItemId() const;
	bool BP_GetSelect() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildEmblemListItemObject">();
	}
	static class UGuildEmblemListItemObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildEmblemListItemObject>();
	}
};
static_assert(alignof(UGuildEmblemListItemObject) == 0x000008, "Wrong alignment on UGuildEmblemListItemObject");
static_assert(sizeof(UGuildEmblemListItemObject) == 0x000030, "Wrong size on UGuildEmblemListItemObject");

// Class OutGameModule.GashaBannerListWidget
// 0x0038 (0x0388 - 0x0350)
class UGashaBannerListWidget final : public UWidgetBase
{
public:
	class UCustomTileView*                        _bannerList;                                       // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_358[0x30];                                     // 0x0358(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnListItemIsHoveredChanged(class UObject* Item, bool bHovered);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaBannerListWidget">();
	}
	static class UGashaBannerListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaBannerListWidget>();
	}
};
static_assert(alignof(UGashaBannerListWidget) == 0x000008, "Wrong alignment on UGashaBannerListWidget");
static_assert(sizeof(UGashaBannerListWidget) == 0x000388, "Wrong size on UGashaBannerListWidget");
static_assert(offsetof(UGashaBannerListWidget, _bannerList) == 0x000350, "Member 'UGashaBannerListWidget::_bannerList' has a wrong offset!");

// Class OutGameModule.GashaBaseWindow
// 0x00B0 (0x0400 - 0x0350)
class UGashaBaseWindow : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x30];                                     // 0x0350(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 _logo;                                             // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTimeWidget*                            _remainTime;                                       // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _pickupItemName;                                   // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UGashaButtonWidget*>             _gashaButtons;                                     // 0x0398(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _explanationButton;                                // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _offerRatioButton;                                 // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _sctButton;                                        // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _psaButton;                                        // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _exChangeButton;                                   // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomTileView*                        _iconTileView;                                     // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTileView*                              _buttonTileView;                                   // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _pickupIndex;                                      // 0x03E0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _gashaIndex;                                       // 0x03E4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ELotteryLotteryType                           _currentGashaType;                                 // 0x03E8(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E9[0x17];                                     // 0x03E9(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnBackInfo();
	void BP_OpenCheckPopup(int32 PaymentIndex);
	bool BP_SelectPickupItem(int32 Select, bool bInit);
	class UWidget* DoExChangeButtonWidgetNavigation(EUINavigation UiNavigation);
	class UWidget* DoExplanationWidgetNavigation(EUINavigation UiNavigation);
	class UWidget* DoFocuslistWidgetNavigation(EUINavigation UiNavigation);
	class UWidget* DoMultiButtonWidgetNavigation(EUINavigation UiNavigation);
	class UWidget* DoOnceButtonWidgetNavigation(EUINavigation UiNavigation);
	void OnBackInfo();
	void OnBaseCharaChangeEventDelegate__DelegateSignature(ECharacterId CharacterId, int32 Code, EItemCategory Category);
	void OnExplanation(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnNotPickUpCharacterFinishedDelegate__DelegateSignature();
	void OnOfferRatio(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnPaymentServicesAct(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnSpecifiedCommercialTransaction(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaBaseWindow">();
	}
	static class UGashaBaseWindow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaBaseWindow>();
	}
};
static_assert(alignof(UGashaBaseWindow) == 0x000008, "Wrong alignment on UGashaBaseWindow");
static_assert(sizeof(UGashaBaseWindow) == 0x000400, "Wrong size on UGashaBaseWindow");
static_assert(offsetof(UGashaBaseWindow, _logo) == 0x000380, "Member 'UGashaBaseWindow::_logo' has a wrong offset!");
static_assert(offsetof(UGashaBaseWindow, _remainTime) == 0x000388, "Member 'UGashaBaseWindow::_remainTime' has a wrong offset!");
static_assert(offsetof(UGashaBaseWindow, _pickupItemName) == 0x000390, "Member 'UGashaBaseWindow::_pickupItemName' has a wrong offset!");
static_assert(offsetof(UGashaBaseWindow, _gashaButtons) == 0x000398, "Member 'UGashaBaseWindow::_gashaButtons' has a wrong offset!");
static_assert(offsetof(UGashaBaseWindow, _explanationButton) == 0x0003A8, "Member 'UGashaBaseWindow::_explanationButton' has a wrong offset!");
static_assert(offsetof(UGashaBaseWindow, _offerRatioButton) == 0x0003B0, "Member 'UGashaBaseWindow::_offerRatioButton' has a wrong offset!");
static_assert(offsetof(UGashaBaseWindow, _sctButton) == 0x0003B8, "Member 'UGashaBaseWindow::_sctButton' has a wrong offset!");
static_assert(offsetof(UGashaBaseWindow, _psaButton) == 0x0003C0, "Member 'UGashaBaseWindow::_psaButton' has a wrong offset!");
static_assert(offsetof(UGashaBaseWindow, _exChangeButton) == 0x0003C8, "Member 'UGashaBaseWindow::_exChangeButton' has a wrong offset!");
static_assert(offsetof(UGashaBaseWindow, _iconTileView) == 0x0003D0, "Member 'UGashaBaseWindow::_iconTileView' has a wrong offset!");
static_assert(offsetof(UGashaBaseWindow, _buttonTileView) == 0x0003D8, "Member 'UGashaBaseWindow::_buttonTileView' has a wrong offset!");
static_assert(offsetof(UGashaBaseWindow, _pickupIndex) == 0x0003E0, "Member 'UGashaBaseWindow::_pickupIndex' has a wrong offset!");
static_assert(offsetof(UGashaBaseWindow, _gashaIndex) == 0x0003E4, "Member 'UGashaBaseWindow::_gashaIndex' has a wrong offset!");
static_assert(offsetof(UGashaBaseWindow, _currentGashaType) == 0x0003E8, "Member 'UGashaBaseWindow::_currentGashaType' has a wrong offset!");

// Class OutGameModule.GuildChatEntryWidget
// 0x0010 (0x0360 - 0x0350)
class UGuildChatEntryWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildChatEntryWidget">();
	}
	static class UGuildChatEntryWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildChatEntryWidget>();
	}
};
static_assert(alignof(UGuildChatEntryWidget) == 0x000008, "Wrong alignment on UGuildChatEntryWidget");
static_assert(sizeof(UGuildChatEntryWidget) == 0x000360, "Wrong size on UGuildChatEntryWidget");

// Class OutGameModule.GashaButtonWidget
// 0x00D8 (0x0428 - 0x0350)
class UGashaButtonWidget final : public UWidgetBase
{
public:
	TMap<class FString, struct FVector2D>         _numPos;                                           // 0x0350(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	class UWidget*                                _panel;                                            // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _button;                                           // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _numText;                                          // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _costText;                                         // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconImage*                         _costIcon;                                         // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _disabledImage;                                    // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         _costIconRichText;                                 // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _switcher;                                         // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UItemIconImage*>                 _costIcons;                                        // 0x03E0(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class URichTextBlock*>                 _costIconRichTexts;                                // 0x03F0(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UTextBlock*>                     _costTexts;                                        // 0x0400(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	int32                                         _gashaIndex;                                       // 0x0410(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGashaPaymentSelectData>        _paymentSelectDatas;                               // 0x0418(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	void BackUsePopUp();
	void BP_BackUsePopUp();
	void OpenUseCheck(int32 Index_0, int32 CurrencyCode, int32 CurrencyCost);
	void OpenUseCurrencySelect();
	void OpenUsePopUp();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaButtonWidget">();
	}
	static class UGashaButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaButtonWidget>();
	}
};
static_assert(alignof(UGashaButtonWidget) == 0x000008, "Wrong alignment on UGashaButtonWidget");
static_assert(sizeof(UGashaButtonWidget) == 0x000428, "Wrong size on UGashaButtonWidget");
static_assert(offsetof(UGashaButtonWidget, _numPos) == 0x000350, "Member 'UGashaButtonWidget::_numPos' has a wrong offset!");
static_assert(offsetof(UGashaButtonWidget, _panel) == 0x0003A0, "Member 'UGashaButtonWidget::_panel' has a wrong offset!");
static_assert(offsetof(UGashaButtonWidget, _button) == 0x0003A8, "Member 'UGashaButtonWidget::_button' has a wrong offset!");
static_assert(offsetof(UGashaButtonWidget, _numText) == 0x0003B0, "Member 'UGashaButtonWidget::_numText' has a wrong offset!");
static_assert(offsetof(UGashaButtonWidget, _costText) == 0x0003B8, "Member 'UGashaButtonWidget::_costText' has a wrong offset!");
static_assert(offsetof(UGashaButtonWidget, _costIcon) == 0x0003C0, "Member 'UGashaButtonWidget::_costIcon' has a wrong offset!");
static_assert(offsetof(UGashaButtonWidget, _disabledImage) == 0x0003C8, "Member 'UGashaButtonWidget::_disabledImage' has a wrong offset!");
static_assert(offsetof(UGashaButtonWidget, _costIconRichText) == 0x0003D0, "Member 'UGashaButtonWidget::_costIconRichText' has a wrong offset!");
static_assert(offsetof(UGashaButtonWidget, _switcher) == 0x0003D8, "Member 'UGashaButtonWidget::_switcher' has a wrong offset!");
static_assert(offsetof(UGashaButtonWidget, _costIcons) == 0x0003E0, "Member 'UGashaButtonWidget::_costIcons' has a wrong offset!");
static_assert(offsetof(UGashaButtonWidget, _costIconRichTexts) == 0x0003F0, "Member 'UGashaButtonWidget::_costIconRichTexts' has a wrong offset!");
static_assert(offsetof(UGashaButtonWidget, _costTexts) == 0x000400, "Member 'UGashaButtonWidget::_costTexts' has a wrong offset!");
static_assert(offsetof(UGashaButtonWidget, _gashaIndex) == 0x000410, "Member 'UGashaButtonWidget::_gashaIndex' has a wrong offset!");
static_assert(offsetof(UGashaButtonWidget, _paymentSelectDatas) == 0x000418, "Member 'UGashaButtonWidget::_paymentSelectDatas' has a wrong offset!");

// Class OutGameModule.GashaHelpWidget
// 0x0000 (0x0350 - 0x0350)
class UGashaHelpWidget final : public UWidgetBase
{
public:
	void SetHelpText(class UTextBlock* Text);
	void SetImage(class UImage* Image);
	void SetTitleText(class UTextBlock* Text);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaHelpWidget">();
	}
	static class UGashaHelpWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaHelpWidget>();
	}
};
static_assert(alignof(UGashaHelpWidget) == 0x000008, "Wrong alignment on UGashaHelpWidget");
static_assert(sizeof(UGashaHelpWidget) == 0x000350, "Wrong size on UGashaHelpWidget");

// Class OutGameModule.MissionStarMagnificationWidget
// 0x0008 (0x0358 - 0x0350)
class UMissionStarMagnificationWidget final : public UWidgetBase
{
public:
	class UTextBlock*                             _magnification;                                    // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MissionStarMagnificationWidget">();
	}
	static class UMissionStarMagnificationWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionStarMagnificationWidget>();
	}
};
static_assert(alignof(UMissionStarMagnificationWidget) == 0x000008, "Wrong alignment on UMissionStarMagnificationWidget");
static_assert(sizeof(UMissionStarMagnificationWidget) == 0x000358, "Wrong size on UMissionStarMagnificationWidget");
static_assert(offsetof(UMissionStarMagnificationWidget, _magnification) == 0x000350, "Member 'UMissionStarMagnificationWidget::_magnification' has a wrong offset!");

// Class OutGameModule.GashaHistoryListEntryObject
// 0x0028 (0x0058 - 0x0030)
class UGashaHistoryListEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x28];                                      // 0x0030(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaHistoryListEntryObject">();
	}
	static class UGashaHistoryListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaHistoryListEntryObject>();
	}
};
static_assert(alignof(UGashaHistoryListEntryObject) == 0x000008, "Wrong alignment on UGashaHistoryListEntryObject");
static_assert(sizeof(UGashaHistoryListEntryObject) == 0x000058, "Wrong size on UGashaHistoryListEntryObject");

// Class OutGameModule.GashaHistoryListItemWidget
// 0x0048 (0x04D0 - 0x0488)
class UGashaHistoryListItemWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UGashaIconWidget*                       _gashaIcon;                                        // 0x0490(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconWidget*                        _itemIcon;                                         // 0x0498(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _itemName;                                         // 0x04A0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _availablePoint;                                   // 0x04A8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTimeWidget*                            _availableTime;                                    // 0x04B0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _numTextPanel;                                     // 0x04B8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _numText;                                          // 0x04C0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGashaHistoryListEntryObject*           _itemObject;                                       // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaHistoryListItemWidget">();
	}
	static class UGashaHistoryListItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaHistoryListItemWidget>();
	}
};
static_assert(alignof(UGashaHistoryListItemWidget) == 0x000008, "Wrong alignment on UGashaHistoryListItemWidget");
static_assert(sizeof(UGashaHistoryListItemWidget) == 0x0004D0, "Wrong size on UGashaHistoryListItemWidget");
static_assert(offsetof(UGashaHistoryListItemWidget, _gashaIcon) == 0x000490, "Member 'UGashaHistoryListItemWidget::_gashaIcon' has a wrong offset!");
static_assert(offsetof(UGashaHistoryListItemWidget, _itemIcon) == 0x000498, "Member 'UGashaHistoryListItemWidget::_itemIcon' has a wrong offset!");
static_assert(offsetof(UGashaHistoryListItemWidget, _itemName) == 0x0004A0, "Member 'UGashaHistoryListItemWidget::_itemName' has a wrong offset!");
static_assert(offsetof(UGashaHistoryListItemWidget, _availablePoint) == 0x0004A8, "Member 'UGashaHistoryListItemWidget::_availablePoint' has a wrong offset!");
static_assert(offsetof(UGashaHistoryListItemWidget, _availableTime) == 0x0004B0, "Member 'UGashaHistoryListItemWidget::_availableTime' has a wrong offset!");
static_assert(offsetof(UGashaHistoryListItemWidget, _numTextPanel) == 0x0004B8, "Member 'UGashaHistoryListItemWidget::_numTextPanel' has a wrong offset!");
static_assert(offsetof(UGashaHistoryListItemWidget, _numText) == 0x0004C0, "Member 'UGashaHistoryListItemWidget::_numText' has a wrong offset!");
static_assert(offsetof(UGashaHistoryListItemWidget, _itemObject) == 0x0004C8, "Member 'UGashaHistoryListItemWidget::_itemObject' has a wrong offset!");

// Class OutGameModule.MyADListEntryObject
// 0x00E8 (0x0118 - 0x0030)
class UMyADListEntryObject final : public UListViewEntryObjectBase
{
public:
	struct FDbAdDataParam                         _data;                                             // 0x0030(0x00E0)(BlueprintVisible, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	bool                                          _bUnLocked;                                        // 0x0110(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _needNum;                                          // 0x0114(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MyADListEntryObject">();
	}
	static class UMyADListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMyADListEntryObject>();
	}
};
static_assert(alignof(UMyADListEntryObject) == 0x000008, "Wrong alignment on UMyADListEntryObject");
static_assert(sizeof(UMyADListEntryObject) == 0x000118, "Wrong size on UMyADListEntryObject");
static_assert(offsetof(UMyADListEntryObject, _data) == 0x000030, "Member 'UMyADListEntryObject::_data' has a wrong offset!");
static_assert(offsetof(UMyADListEntryObject, _bUnLocked) == 0x000110, "Member 'UMyADListEntryObject::_bUnLocked' has a wrong offset!");
static_assert(offsetof(UMyADListEntryObject, _needNum) == 0x000114, "Member 'UMyADListEntryObject::_needNum' has a wrong offset!");

// Class OutGameModule.GashaHistoryWidget
// 0x0078 (0x03C8 - 0x0350)
class UGashaHistoryWidget final : public UWidgetBase
{
public:
	class UCustomTileView*                        _historyTileView;                                  // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _noList;                                           // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _viewSwitcher;                                     // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _pageText;                                         // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _pageMaxText;                                      // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _page1PrevButton;                                  // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _page1NextButton;                                  // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _pageHeadButton;                                   // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _pageTailButton;                                   // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _dummyButton;                                      // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _maxNum;                                           // 0x03A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3A4[0x24];                                     // 0x03A4(0x0024)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_SetFocusWidget();
	void BP_SetPageHead();
	void BP_SetPageNext();
	void BP_SetPagePrev();
	void BP_SetPageTail();
	void LoadLotteryHistory();
	void OnLoadLotteryHistoryCompleteEvent(int32 RequestId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaHistoryWidget">();
	}
	static class UGashaHistoryWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaHistoryWidget>();
	}
};
static_assert(alignof(UGashaHistoryWidget) == 0x000008, "Wrong alignment on UGashaHistoryWidget");
static_assert(sizeof(UGashaHistoryWidget) == 0x0003C8, "Wrong size on UGashaHistoryWidget");
static_assert(offsetof(UGashaHistoryWidget, _historyTileView) == 0x000350, "Member 'UGashaHistoryWidget::_historyTileView' has a wrong offset!");
static_assert(offsetof(UGashaHistoryWidget, _noList) == 0x000358, "Member 'UGashaHistoryWidget::_noList' has a wrong offset!");
static_assert(offsetof(UGashaHistoryWidget, _viewSwitcher) == 0x000360, "Member 'UGashaHistoryWidget::_viewSwitcher' has a wrong offset!");
static_assert(offsetof(UGashaHistoryWidget, _pageText) == 0x000368, "Member 'UGashaHistoryWidget::_pageText' has a wrong offset!");
static_assert(offsetof(UGashaHistoryWidget, _pageMaxText) == 0x000370, "Member 'UGashaHistoryWidget::_pageMaxText' has a wrong offset!");
static_assert(offsetof(UGashaHistoryWidget, _page1PrevButton) == 0x000378, "Member 'UGashaHistoryWidget::_page1PrevButton' has a wrong offset!");
static_assert(offsetof(UGashaHistoryWidget, _page1NextButton) == 0x000380, "Member 'UGashaHistoryWidget::_page1NextButton' has a wrong offset!");
static_assert(offsetof(UGashaHistoryWidget, _pageHeadButton) == 0x000388, "Member 'UGashaHistoryWidget::_pageHeadButton' has a wrong offset!");
static_assert(offsetof(UGashaHistoryWidget, _pageTailButton) == 0x000390, "Member 'UGashaHistoryWidget::_pageTailButton' has a wrong offset!");
static_assert(offsetof(UGashaHistoryWidget, _dummyButton) == 0x000398, "Member 'UGashaHistoryWidget::_dummyButton' has a wrong offset!");
static_assert(offsetof(UGashaHistoryWidget, _maxNum) == 0x0003A0, "Member 'UGashaHistoryWidget::_maxNum' has a wrong offset!");

// Class OutGameModule.GashaIconListEntryObject
// 0x0038 (0x0068 - 0x0030)
class UGashaIconListEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0xC];                                       // 0x0030(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGashaResultData                       _resultData;                                       // 0x003C(0x0018)(BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_54[0x14];                                      // 0x0054(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaIconListEntryObject">();
	}
	static class UGashaIconListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaIconListEntryObject>();
	}
};
static_assert(alignof(UGashaIconListEntryObject) == 0x000008, "Wrong alignment on UGashaIconListEntryObject");
static_assert(sizeof(UGashaIconListEntryObject) == 0x000068, "Wrong size on UGashaIconListEntryObject");
static_assert(offsetof(UGashaIconListEntryObject, _resultData) == 0x00003C, "Member 'UGashaIconListEntryObject::_resultData' has a wrong offset!");

// Class OutGameModule.MyADDisplayWidget
// 0x0178 (0x04C8 - 0x0350)
class UMyADDisplayWidget final : public UWidgetBase
{
public:
	struct FMyADDisplayData                       _data;                                             // 0x0350(0x0060)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FEmblemDisplayData                     _emblemData;                                       // 0x03B0(0x000C)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          _bSmall;                                           // 0x03BC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bSyncLoad;                                        // 0x03BD(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3BE[0x2];                                      // 0x03BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            _textColorAndOpacity;                              // 0x03C0(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FSlateFontInfo                         _font;                                             // 0x03E8(0x0058)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              _shadowOffset;                                     // 0x0440(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _shadowColor;                                      // 0x0448(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _top;                                              // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMyADPartsWidget*                       _myADPartsWidget;                                  // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProfileDisplayEmblemWidget*            _emblemWidget;                                     // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCanvasPanel*                           _messagePanel;                                     // 0x0470(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        _messageSwitcher;                                  // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAdjustTextWidget*                      _leftTopText;                                      // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAdjustTextWidget*                      _centerTopText;                                    // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAdjustTextWidget*                      _rightTopText;                                     // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAdjustTextWidget*                      _leftMiddleText;                                   // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAdjustTextWidget*                      _centerMiddleText;                                 // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAdjustTextWidget*                      _rightMiddleText;                                  // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAdjustTextWidget*                      _leftBottomText;                                   // 0x04B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAdjustTextWidget*                      _centerBottomText;                                 // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAdjustTextWidget*                      _rightBottomText;                                  // 0x04C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BP_SetupDisplayData(const struct FMyADDisplayData& Data, bool UpdateFlag);
	void BP_SetupEmblemDisplayData(const struct FEmblemDisplayData& Data, bool UpdateFlag);
	void BP_UpdateDisplayData();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MyADDisplayWidget">();
	}
	static class UMyADDisplayWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMyADDisplayWidget>();
	}
};
static_assert(alignof(UMyADDisplayWidget) == 0x000008, "Wrong alignment on UMyADDisplayWidget");
static_assert(sizeof(UMyADDisplayWidget) == 0x0004C8, "Wrong size on UMyADDisplayWidget");
static_assert(offsetof(UMyADDisplayWidget, _data) == 0x000350, "Member 'UMyADDisplayWidget::_data' has a wrong offset!");
static_assert(offsetof(UMyADDisplayWidget, _emblemData) == 0x0003B0, "Member 'UMyADDisplayWidget::_emblemData' has a wrong offset!");
static_assert(offsetof(UMyADDisplayWidget, _bSmall) == 0x0003BC, "Member 'UMyADDisplayWidget::_bSmall' has a wrong offset!");
static_assert(offsetof(UMyADDisplayWidget, _bSyncLoad) == 0x0003BD, "Member 'UMyADDisplayWidget::_bSyncLoad' has a wrong offset!");
static_assert(offsetof(UMyADDisplayWidget, _textColorAndOpacity) == 0x0003C0, "Member 'UMyADDisplayWidget::_textColorAndOpacity' has a wrong offset!");
static_assert(offsetof(UMyADDisplayWidget, _font) == 0x0003E8, "Member 'UMyADDisplayWidget::_font' has a wrong offset!");
static_assert(offsetof(UMyADDisplayWidget, _shadowOffset) == 0x000440, "Member 'UMyADDisplayWidget::_shadowOffset' has a wrong offset!");
static_assert(offsetof(UMyADDisplayWidget, _shadowColor) == 0x000448, "Member 'UMyADDisplayWidget::_shadowColor' has a wrong offset!");
static_assert(offsetof(UMyADDisplayWidget, _top) == 0x000458, "Member 'UMyADDisplayWidget::_top' has a wrong offset!");
static_assert(offsetof(UMyADDisplayWidget, _myADPartsWidget) == 0x000460, "Member 'UMyADDisplayWidget::_myADPartsWidget' has a wrong offset!");
static_assert(offsetof(UMyADDisplayWidget, _emblemWidget) == 0x000468, "Member 'UMyADDisplayWidget::_emblemWidget' has a wrong offset!");
static_assert(offsetof(UMyADDisplayWidget, _messagePanel) == 0x000470, "Member 'UMyADDisplayWidget::_messagePanel' has a wrong offset!");
static_assert(offsetof(UMyADDisplayWidget, _messageSwitcher) == 0x000478, "Member 'UMyADDisplayWidget::_messageSwitcher' has a wrong offset!");
static_assert(offsetof(UMyADDisplayWidget, _leftTopText) == 0x000480, "Member 'UMyADDisplayWidget::_leftTopText' has a wrong offset!");
static_assert(offsetof(UMyADDisplayWidget, _centerTopText) == 0x000488, "Member 'UMyADDisplayWidget::_centerTopText' has a wrong offset!");
static_assert(offsetof(UMyADDisplayWidget, _rightTopText) == 0x000490, "Member 'UMyADDisplayWidget::_rightTopText' has a wrong offset!");
static_assert(offsetof(UMyADDisplayWidget, _leftMiddleText) == 0x000498, "Member 'UMyADDisplayWidget::_leftMiddleText' has a wrong offset!");
static_assert(offsetof(UMyADDisplayWidget, _centerMiddleText) == 0x0004A0, "Member 'UMyADDisplayWidget::_centerMiddleText' has a wrong offset!");
static_assert(offsetof(UMyADDisplayWidget, _rightMiddleText) == 0x0004A8, "Member 'UMyADDisplayWidget::_rightMiddleText' has a wrong offset!");
static_assert(offsetof(UMyADDisplayWidget, _leftBottomText) == 0x0004B0, "Member 'UMyADDisplayWidget::_leftBottomText' has a wrong offset!");
static_assert(offsetof(UMyADDisplayWidget, _centerBottomText) == 0x0004B8, "Member 'UMyADDisplayWidget::_centerBottomText' has a wrong offset!");
static_assert(offsetof(UMyADDisplayWidget, _rightBottomText) == 0x0004C0, "Member 'UMyADDisplayWidget::_rightBottomText' has a wrong offset!");

// Class OutGameModule.GashaIconWidget
// 0x0168 (0x05F0 - 0x0488)
class UGashaIconWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _starVisible;                                      // 0x0490(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _newTextVisible;                                   // 0x0491(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bResultIcon;                                      // 0x0492(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bItemDetail;                                      // 0x0493(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 _appealIcon;                                       // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _costumeIcon;                                      // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _voiceIcon;                                        // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _currencyIcon;                                     // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _charaIcon;                                        // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _variationIcon;                                    // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _switcherBG;                                       // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _appealBG;                                         // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _costumeBG;                                        // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _voiceBG;                                          // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _currencyBG;                                       // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _charaBG;                                          // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _variationBG;                                      // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _switcherText;                                     // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _appealText;                                       // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _costumeText;                                      // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _voiceText;                                        // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _currencyText;                                     // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _charaText;                                        // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _variationText;                                    // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _switcherFlame;                                    // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _flameN;                                           // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _flameSR;                                          // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _flameSSR;                                         // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _newTextPanel;                                     // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _numPanel;                                         // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _numText;                                          // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _star1;                                            // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _star2;                                            // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _star3;                                            // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _auraAureolaSwitcher;                              // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _auraIconSwitcher;                                 // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _heroSoul;                                         // 0x0598(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _auraPanel;                                        // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _ani_iconIn;                                       // 0x05A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5B0[0x10];                                     // 0x05B0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       _ani_soulIdle;                                     // 0x05C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _ani_change;                                       // 0x05C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5D0[0x10];                                     // 0x05D0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       _ani_default;                                      // 0x05E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGashaIconListEntryObject*              _itemObject;                                       // 0x05E8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_SetupAll();
	void OnChangeAnimationInFinished();
	void OnDecide(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnInAnimationInFinished();
	void OnItemDetailSubLevelClosed();
	class UWidget* OnLeftRightNavigation(EUINavigation UiNavigation);
	void OnLoadedIconImage(class UPaperSprite* Sprite);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaIconWidget">();
	}
	static class UGashaIconWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaIconWidget>();
	}
};
static_assert(alignof(UGashaIconWidget) == 0x000008, "Wrong alignment on UGashaIconWidget");
static_assert(sizeof(UGashaIconWidget) == 0x0005F0, "Wrong size on UGashaIconWidget");
static_assert(offsetof(UGashaIconWidget, _starVisible) == 0x000490, "Member 'UGashaIconWidget::_starVisible' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _newTextVisible) == 0x000491, "Member 'UGashaIconWidget::_newTextVisible' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _bResultIcon) == 0x000492, "Member 'UGashaIconWidget::_bResultIcon' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _bItemDetail) == 0x000493, "Member 'UGashaIconWidget::_bItemDetail' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _appealIcon) == 0x000498, "Member 'UGashaIconWidget::_appealIcon' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _costumeIcon) == 0x0004A0, "Member 'UGashaIconWidget::_costumeIcon' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _voiceIcon) == 0x0004A8, "Member 'UGashaIconWidget::_voiceIcon' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _currencyIcon) == 0x0004B0, "Member 'UGashaIconWidget::_currencyIcon' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _charaIcon) == 0x0004B8, "Member 'UGashaIconWidget::_charaIcon' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _variationIcon) == 0x0004C0, "Member 'UGashaIconWidget::_variationIcon' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _switcherBG) == 0x0004C8, "Member 'UGashaIconWidget::_switcherBG' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _appealBG) == 0x0004D0, "Member 'UGashaIconWidget::_appealBG' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _costumeBG) == 0x0004D8, "Member 'UGashaIconWidget::_costumeBG' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _voiceBG) == 0x0004E0, "Member 'UGashaIconWidget::_voiceBG' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _currencyBG) == 0x0004E8, "Member 'UGashaIconWidget::_currencyBG' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _charaBG) == 0x0004F0, "Member 'UGashaIconWidget::_charaBG' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _variationBG) == 0x0004F8, "Member 'UGashaIconWidget::_variationBG' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _switcherText) == 0x000500, "Member 'UGashaIconWidget::_switcherText' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _appealText) == 0x000508, "Member 'UGashaIconWidget::_appealText' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _costumeText) == 0x000510, "Member 'UGashaIconWidget::_costumeText' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _voiceText) == 0x000518, "Member 'UGashaIconWidget::_voiceText' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _currencyText) == 0x000520, "Member 'UGashaIconWidget::_currencyText' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _charaText) == 0x000528, "Member 'UGashaIconWidget::_charaText' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _variationText) == 0x000530, "Member 'UGashaIconWidget::_variationText' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _switcherFlame) == 0x000538, "Member 'UGashaIconWidget::_switcherFlame' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _flameN) == 0x000540, "Member 'UGashaIconWidget::_flameN' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _flameSR) == 0x000548, "Member 'UGashaIconWidget::_flameSR' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _flameSSR) == 0x000550, "Member 'UGashaIconWidget::_flameSSR' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _newTextPanel) == 0x000558, "Member 'UGashaIconWidget::_newTextPanel' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _numPanel) == 0x000560, "Member 'UGashaIconWidget::_numPanel' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _numText) == 0x000568, "Member 'UGashaIconWidget::_numText' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _star1) == 0x000570, "Member 'UGashaIconWidget::_star1' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _star2) == 0x000578, "Member 'UGashaIconWidget::_star2' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _star3) == 0x000580, "Member 'UGashaIconWidget::_star3' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _auraAureolaSwitcher) == 0x000588, "Member 'UGashaIconWidget::_auraAureolaSwitcher' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _auraIconSwitcher) == 0x000590, "Member 'UGashaIconWidget::_auraIconSwitcher' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _heroSoul) == 0x000598, "Member 'UGashaIconWidget::_heroSoul' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _auraPanel) == 0x0005A0, "Member 'UGashaIconWidget::_auraPanel' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _ani_iconIn) == 0x0005A8, "Member 'UGashaIconWidget::_ani_iconIn' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _ani_soulIdle) == 0x0005C0, "Member 'UGashaIconWidget::_ani_soulIdle' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _ani_change) == 0x0005C8, "Member 'UGashaIconWidget::_ani_change' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _ani_default) == 0x0005E0, "Member 'UGashaIconWidget::_ani_default' has a wrong offset!");
static_assert(offsetof(UGashaIconWidget, _itemObject) == 0x0005E8, "Member 'UGashaIconWidget::_itemObject' has a wrong offset!");

// Class OutGameModule.GashaOfferRatioListCellWidget
// 0x0028 (0x0378 - 0x0350)
class UGashaOfferRatioListCellWidget : public UWidgetBase
{
public:
	class UAdjustTextWidget*                      _textBlock;                                        // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _starIcon1;                                        // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _starIcon2;                                        // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _starIcon3;                                        // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _bg;                                               // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaOfferRatioListCellWidget">();
	}
	static class UGashaOfferRatioListCellWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaOfferRatioListCellWidget>();
	}
};
static_assert(alignof(UGashaOfferRatioListCellWidget) == 0x000008, "Wrong alignment on UGashaOfferRatioListCellWidget");
static_assert(sizeof(UGashaOfferRatioListCellWidget) == 0x000378, "Wrong size on UGashaOfferRatioListCellWidget");
static_assert(offsetof(UGashaOfferRatioListCellWidget, _textBlock) == 0x000350, "Member 'UGashaOfferRatioListCellWidget::_textBlock' has a wrong offset!");
static_assert(offsetof(UGashaOfferRatioListCellWidget, _starIcon1) == 0x000358, "Member 'UGashaOfferRatioListCellWidget::_starIcon1' has a wrong offset!");
static_assert(offsetof(UGashaOfferRatioListCellWidget, _starIcon2) == 0x000360, "Member 'UGashaOfferRatioListCellWidget::_starIcon2' has a wrong offset!");
static_assert(offsetof(UGashaOfferRatioListCellWidget, _starIcon3) == 0x000368, "Member 'UGashaOfferRatioListCellWidget::_starIcon3' has a wrong offset!");
static_assert(offsetof(UGashaOfferRatioListCellWidget, _bg) == 0x000370, "Member 'UGashaOfferRatioListCellWidget::_bg' has a wrong offset!");

// Class OutGameModule.MissionStarCountWidget
// 0x0028 (0x0378 - 0x0350)
class UMissionStarCountWidget final : public UWidgetBase
{
public:
	class UMissionStarCountItemWidget*            _starCount;                                        // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMissionStarCountItemWidget*            _addStarCount;                                     // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _spacerLeft;                                       // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _spacerRight;                                      // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bViewAddStarNone;                                 // 0x0370(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MissionStarCountWidget">();
	}
	static class UMissionStarCountWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionStarCountWidget>();
	}
};
static_assert(alignof(UMissionStarCountWidget) == 0x000008, "Wrong alignment on UMissionStarCountWidget");
static_assert(sizeof(UMissionStarCountWidget) == 0x000378, "Wrong size on UMissionStarCountWidget");
static_assert(offsetof(UMissionStarCountWidget, _starCount) == 0x000350, "Member 'UMissionStarCountWidget::_starCount' has a wrong offset!");
static_assert(offsetof(UMissionStarCountWidget, _addStarCount) == 0x000358, "Member 'UMissionStarCountWidget::_addStarCount' has a wrong offset!");
static_assert(offsetof(UMissionStarCountWidget, _spacerLeft) == 0x000360, "Member 'UMissionStarCountWidget::_spacerLeft' has a wrong offset!");
static_assert(offsetof(UMissionStarCountWidget, _spacerRight) == 0x000368, "Member 'UMissionStarCountWidget::_spacerRight' has a wrong offset!");
static_assert(offsetof(UMissionStarCountWidget, _bViewAddStarNone) == 0x000370, "Member 'UMissionStarCountWidget::_bViewAddStarNone' has a wrong offset!");

// Class OutGameModule.GashaOfferRatioWidget
// 0x0188 (0x04D8 - 0x0350)
class UGashaOfferRatioWidget final : public UWidgetBase
{
public:
	class UTextBlock*                             _textTitle;                                        // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _textSubTitle;                                     // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _explanationText;                                  // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGridPanel*                             _gridPanel;                                        // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTabWidget*                             _tabWidget;                                        // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGashaOfferRatioOrderItem>      _orderList;                                        // 0x0378(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<EGashaOfferRatioColorIndex, struct FColor> _lineColors;                                       // 0x0388(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TMap<EGashaOfferRatioColorIndex, struct FColor> _textColors;                                       // 0x03D8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                   _costumeTextFormat;                                // 0x0428(0x0018)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                   _appealTextFormat;                                 // 0x0440(0x0018)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                   _voiceTextFormat;                                  // 0x0458(0x0018)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                   _ticketTextFormat;                                 // 0x0470(0x0018)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                   _variationTextFormat;                              // 0x0488(0x0018)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UWidget*                                _contents;                                         // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULoadIconWidget*                        _networkLoadingIcon;                               // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4B0[0x28];                                     // 0x04B0(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void LoadLotteryRate();
	void OnLoadOfferRatioCompleteEvent(int32 RequestId);
	void OnSwichTabWidgetEvent(int32 NewSelectTab);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaOfferRatioWidget">();
	}
	static class UGashaOfferRatioWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaOfferRatioWidget>();
	}
};
static_assert(alignof(UGashaOfferRatioWidget) == 0x000008, "Wrong alignment on UGashaOfferRatioWidget");
static_assert(sizeof(UGashaOfferRatioWidget) == 0x0004D8, "Wrong size on UGashaOfferRatioWidget");
static_assert(offsetof(UGashaOfferRatioWidget, _textTitle) == 0x000350, "Member 'UGashaOfferRatioWidget::_textTitle' has a wrong offset!");
static_assert(offsetof(UGashaOfferRatioWidget, _textSubTitle) == 0x000358, "Member 'UGashaOfferRatioWidget::_textSubTitle' has a wrong offset!");
static_assert(offsetof(UGashaOfferRatioWidget, _explanationText) == 0x000360, "Member 'UGashaOfferRatioWidget::_explanationText' has a wrong offset!");
static_assert(offsetof(UGashaOfferRatioWidget, _gridPanel) == 0x000368, "Member 'UGashaOfferRatioWidget::_gridPanel' has a wrong offset!");
static_assert(offsetof(UGashaOfferRatioWidget, _tabWidget) == 0x000370, "Member 'UGashaOfferRatioWidget::_tabWidget' has a wrong offset!");
static_assert(offsetof(UGashaOfferRatioWidget, _orderList) == 0x000378, "Member 'UGashaOfferRatioWidget::_orderList' has a wrong offset!");
static_assert(offsetof(UGashaOfferRatioWidget, _lineColors) == 0x000388, "Member 'UGashaOfferRatioWidget::_lineColors' has a wrong offset!");
static_assert(offsetof(UGashaOfferRatioWidget, _textColors) == 0x0003D8, "Member 'UGashaOfferRatioWidget::_textColors' has a wrong offset!");
static_assert(offsetof(UGashaOfferRatioWidget, _costumeTextFormat) == 0x000428, "Member 'UGashaOfferRatioWidget::_costumeTextFormat' has a wrong offset!");
static_assert(offsetof(UGashaOfferRatioWidget, _appealTextFormat) == 0x000440, "Member 'UGashaOfferRatioWidget::_appealTextFormat' has a wrong offset!");
static_assert(offsetof(UGashaOfferRatioWidget, _voiceTextFormat) == 0x000458, "Member 'UGashaOfferRatioWidget::_voiceTextFormat' has a wrong offset!");
static_assert(offsetof(UGashaOfferRatioWidget, _ticketTextFormat) == 0x000470, "Member 'UGashaOfferRatioWidget::_ticketTextFormat' has a wrong offset!");
static_assert(offsetof(UGashaOfferRatioWidget, _variationTextFormat) == 0x000488, "Member 'UGashaOfferRatioWidget::_variationTextFormat' has a wrong offset!");
static_assert(offsetof(UGashaOfferRatioWidget, _contents) == 0x0004A0, "Member 'UGashaOfferRatioWidget::_contents' has a wrong offset!");
static_assert(offsetof(UGashaOfferRatioWidget, _networkLoadingIcon) == 0x0004A8, "Member 'UGashaOfferRatioWidget::_networkLoadingIcon' has a wrong offset!");

// Class OutGameModule.GashaOpenUIWidget
// 0x0000 (0x0350 - 0x0350)
class UGashaOpenUIWidget final : public UWidgetBase
{
public:
	void BP_PlayOpenBox(int32 OpenIndex, bool bFirst);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaOpenUIWidget">();
	}
	static class UGashaOpenUIWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaOpenUIWidget>();
	}
};
static_assert(alignof(UGashaOpenUIWidget) == 0x000008, "Wrong alignment on UGashaOpenUIWidget");
static_assert(sizeof(UGashaOpenUIWidget) == 0x000350, "Wrong size on UGashaOpenUIWidget");

// Class OutGameModule.MyADEditWidget
// 0x0050 (0x0450 - 0x0400)
class UMyADEditWidget : public UCustomTileViewHasWidget
{
public:
	FMulticastInlineDelegateProperty_             OnChangedEditCodeDelegate;                         // 0x0400(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnChangedEditMessageDelegate;                      // 0x0410(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UMyADEditSelectButtonWidget*            _selectedButton;                                   // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EMyAdPartsCategory                            _partsType;                                        // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBuyItemWidget*                         _buyItem;                                          // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameSequenceWork*                      _gameSequenceWork;                                 // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerDatabaseWork*                    _playerDatabaseWork;                               // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBackendSubsystem*                      _backendSubsystem;                                 // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnAddedToFocusButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnChangedEditCodeDelegate__DelegateSignature(int32 Code, EMyAdPartsCategory PartsType);
	void OnChangedEditMessageDelegate__DelegateSignature(int32 Code);
	void OnDecideButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnNegativeButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnPressButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void UpdatePreview();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MyADEditWidget">();
	}
	static class UMyADEditWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMyADEditWidget>();
	}
};
static_assert(alignof(UMyADEditWidget) == 0x000008, "Wrong alignment on UMyADEditWidget");
static_assert(sizeof(UMyADEditWidget) == 0x000450, "Wrong size on UMyADEditWidget");
static_assert(offsetof(UMyADEditWidget, OnChangedEditCodeDelegate) == 0x000400, "Member 'UMyADEditWidget::OnChangedEditCodeDelegate' has a wrong offset!");
static_assert(offsetof(UMyADEditWidget, OnChangedEditMessageDelegate) == 0x000410, "Member 'UMyADEditWidget::OnChangedEditMessageDelegate' has a wrong offset!");
static_assert(offsetof(UMyADEditWidget, _selectedButton) == 0x000420, "Member 'UMyADEditWidget::_selectedButton' has a wrong offset!");
static_assert(offsetof(UMyADEditWidget, _partsType) == 0x000428, "Member 'UMyADEditWidget::_partsType' has a wrong offset!");
static_assert(offsetof(UMyADEditWidget, _buyItem) == 0x000430, "Member 'UMyADEditWidget::_buyItem' has a wrong offset!");
static_assert(offsetof(UMyADEditWidget, _gameSequenceWork) == 0x000438, "Member 'UMyADEditWidget::_gameSequenceWork' has a wrong offset!");
static_assert(offsetof(UMyADEditWidget, _playerDatabaseWork) == 0x000440, "Member 'UMyADEditWidget::_playerDatabaseWork' has a wrong offset!");
static_assert(offsetof(UMyADEditWidget, _backendSubsystem) == 0x000448, "Member 'UMyADEditWidget::_backendSubsystem' has a wrong offset!");

// Class OutGameModule.GashaOtherIconListItemWidget
// 0x00D8 (0x0428 - 0x0350)
class UGashaOtherIconListItemWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x8];                                      // 0x0350(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UGashaWindowIconListIEntryObject*       _itemObject;                                       // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _appealIcon;                                       // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _costumeIcon;                                      // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _voiceIcon;                                        // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _currencyIcon;                                     // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _charaIcon;                                        // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _variationIcon;                                    // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _switcherBG;                                       // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _appealBG;                                         // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _costumeBG;                                        // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _voiceBG;                                          // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _currencyBG;                                       // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _charaBG;                                          // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _variationBG;                                      // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _switcherText;                                     // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _appealText;                                       // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _costumeText;                                      // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _voiceText;                                        // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _currencyText;                                     // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _charaText;                                        // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _variationText;                                    // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _switcherFlame;                                    // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _flameN;                                           // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _flameSR;                                          // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _flameSSR;                                         // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_420[0x8];                                      // 0x0420(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnLoadedIconImage(class UPaperSprite* Sprite);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaOtherIconListItemWidget">();
	}
	static class UGashaOtherIconListItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaOtherIconListItemWidget>();
	}
};
static_assert(alignof(UGashaOtherIconListItemWidget) == 0x000008, "Wrong alignment on UGashaOtherIconListItemWidget");
static_assert(sizeof(UGashaOtherIconListItemWidget) == 0x000428, "Wrong size on UGashaOtherIconListItemWidget");
static_assert(offsetof(UGashaOtherIconListItemWidget, _itemObject) == 0x000358, "Member 'UGashaOtherIconListItemWidget::_itemObject' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _appealIcon) == 0x000360, "Member 'UGashaOtherIconListItemWidget::_appealIcon' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _costumeIcon) == 0x000368, "Member 'UGashaOtherIconListItemWidget::_costumeIcon' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _voiceIcon) == 0x000370, "Member 'UGashaOtherIconListItemWidget::_voiceIcon' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _currencyIcon) == 0x000378, "Member 'UGashaOtherIconListItemWidget::_currencyIcon' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _charaIcon) == 0x000380, "Member 'UGashaOtherIconListItemWidget::_charaIcon' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _variationIcon) == 0x000388, "Member 'UGashaOtherIconListItemWidget::_variationIcon' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _switcherBG) == 0x000390, "Member 'UGashaOtherIconListItemWidget::_switcherBG' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _appealBG) == 0x000398, "Member 'UGashaOtherIconListItemWidget::_appealBG' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _costumeBG) == 0x0003A0, "Member 'UGashaOtherIconListItemWidget::_costumeBG' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _voiceBG) == 0x0003A8, "Member 'UGashaOtherIconListItemWidget::_voiceBG' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _currencyBG) == 0x0003B0, "Member 'UGashaOtherIconListItemWidget::_currencyBG' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _charaBG) == 0x0003B8, "Member 'UGashaOtherIconListItemWidget::_charaBG' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _variationBG) == 0x0003C0, "Member 'UGashaOtherIconListItemWidget::_variationBG' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _switcherText) == 0x0003C8, "Member 'UGashaOtherIconListItemWidget::_switcherText' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _appealText) == 0x0003D0, "Member 'UGashaOtherIconListItemWidget::_appealText' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _costumeText) == 0x0003D8, "Member 'UGashaOtherIconListItemWidget::_costumeText' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _voiceText) == 0x0003E0, "Member 'UGashaOtherIconListItemWidget::_voiceText' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _currencyText) == 0x0003E8, "Member 'UGashaOtherIconListItemWidget::_currencyText' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _charaText) == 0x0003F0, "Member 'UGashaOtherIconListItemWidget::_charaText' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _variationText) == 0x0003F8, "Member 'UGashaOtherIconListItemWidget::_variationText' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _switcherFlame) == 0x000400, "Member 'UGashaOtherIconListItemWidget::_switcherFlame' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _flameN) == 0x000408, "Member 'UGashaOtherIconListItemWidget::_flameN' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _flameSR) == 0x000410, "Member 'UGashaOtherIconListItemWidget::_flameSR' has a wrong offset!");
static_assert(offsetof(UGashaOtherIconListItemWidget, _flameSSR) == 0x000418, "Member 'UGashaOtherIconListItemWidget::_flameSSR' has a wrong offset!");

// Class OutGameModule.GashaResultWidget
// 0x00E8 (0x0438 - 0x0350)
class UGashaResultWidget final : public UWidgetBase
{
public:
	FMulticastInlineDelegateProperty_             _sequenceListFinished;                             // 0x0350(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             _ssrSequenceFinished;                              // 0x0360(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FGashaLevelSequence>            _SequenceList;                                     // 0x0370(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGashaLevelSequence                    _ssrSequence;                                      // 0x0380(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGashaLevelSequence                    _charaSequence;                                    // 0x0390(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGashaLevelSequence                    _actionSequence;                                   // 0x03A0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class ACPP_SequenceActorBase*                 SequenceActor;                                     // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _skipFlag;                                         // 0x03B8(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetButton*                          _backButton;                                       // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _acceptButton;                                     // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _retryButton;                                      // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _skipPanel;                                        // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _debugPanelNotPlaySeq;                             // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _debugPanelPlaySeq;                                // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _notPlaylevelSequence;                             // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _playlevelSequence;                                // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGashaOpenUIWidget*                     _openUI;                                           // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGashaSSROpenUIWidget*                  _ssrOpenUI;                                        // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTileView*                              _iconTileView;                                     // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_418[0x20];                                     // 0x0418(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_DebugPlaySequenceList(int32 StartIndex, int32 Num);
	void BP_FPS30();
	void BP_InitializeSequence(EGashaLevelSequenceRarity Rarity, EGashaLevelSequenceType SeqType);
	void BP_OnGashaFinished();
	void BP_Pause();
	void BP_PlayActionSequence(int32 Index_0);
	void BP_PlayCharaSequence();
	void BP_PlaySequenceList(int32 StartIndex);
	void BP_PlaySSRSequence();
	class UAtomComponent* BP_PlayVoice(EMdRarityItemCategory Category, EMdRarity Rarity, ECharacterId CharacterId);
	void BP_Resume();
	void BP_ReTryRunGasha();
	void BP_SetListView(float InDelayTime, float ChangeDelayTime);
	void BP_Skip(int32 Frame);
	void BP_SpawnSSRCharacter(int32 Index_0);
	void BP_Stop();
	void BP_StopSequenceList();
	void BP_SwitchUI(bool IsPlaylevelSequence);
	void DebugSkip();
	class UWidget* DoNextButtonWidgetNavigation(EUINavigation UiNavigation);
	void OnFadeInFinishedDelegate();
	void OnFadeOutFinishedDelegate();
	void OnGashaRunFinishDelegate();
	void OnSequenceFinished__DelegateSignature();
	void PauseSequencer();
	void ResumeSequencer(class UAppWidget* Widget, EWidgetInputType InputType);
	void ReTryPlaySequenceList();
	void StartGashaMusic();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaResultWidget">();
	}
	static class UGashaResultWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaResultWidget>();
	}
};
static_assert(alignof(UGashaResultWidget) == 0x000008, "Wrong alignment on UGashaResultWidget");
static_assert(sizeof(UGashaResultWidget) == 0x000438, "Wrong size on UGashaResultWidget");
static_assert(offsetof(UGashaResultWidget, _sequenceListFinished) == 0x000350, "Member 'UGashaResultWidget::_sequenceListFinished' has a wrong offset!");
static_assert(offsetof(UGashaResultWidget, _ssrSequenceFinished) == 0x000360, "Member 'UGashaResultWidget::_ssrSequenceFinished' has a wrong offset!");
static_assert(offsetof(UGashaResultWidget, _SequenceList) == 0x000370, "Member 'UGashaResultWidget::_SequenceList' has a wrong offset!");
static_assert(offsetof(UGashaResultWidget, _ssrSequence) == 0x000380, "Member 'UGashaResultWidget::_ssrSequence' has a wrong offset!");
static_assert(offsetof(UGashaResultWidget, _charaSequence) == 0x000390, "Member 'UGashaResultWidget::_charaSequence' has a wrong offset!");
static_assert(offsetof(UGashaResultWidget, _actionSequence) == 0x0003A0, "Member 'UGashaResultWidget::_actionSequence' has a wrong offset!");
static_assert(offsetof(UGashaResultWidget, SequenceActor) == 0x0003B0, "Member 'UGashaResultWidget::SequenceActor' has a wrong offset!");
static_assert(offsetof(UGashaResultWidget, _skipFlag) == 0x0003B8, "Member 'UGashaResultWidget::_skipFlag' has a wrong offset!");
static_assert(offsetof(UGashaResultWidget, _backButton) == 0x0003C0, "Member 'UGashaResultWidget::_backButton' has a wrong offset!");
static_assert(offsetof(UGashaResultWidget, _acceptButton) == 0x0003C8, "Member 'UGashaResultWidget::_acceptButton' has a wrong offset!");
static_assert(offsetof(UGashaResultWidget, _retryButton) == 0x0003D0, "Member 'UGashaResultWidget::_retryButton' has a wrong offset!");
static_assert(offsetof(UGashaResultWidget, _skipPanel) == 0x0003D8, "Member 'UGashaResultWidget::_skipPanel' has a wrong offset!");
static_assert(offsetof(UGashaResultWidget, _debugPanelNotPlaySeq) == 0x0003E0, "Member 'UGashaResultWidget::_debugPanelNotPlaySeq' has a wrong offset!");
static_assert(offsetof(UGashaResultWidget, _debugPanelPlaySeq) == 0x0003E8, "Member 'UGashaResultWidget::_debugPanelPlaySeq' has a wrong offset!");
static_assert(offsetof(UGashaResultWidget, _notPlaylevelSequence) == 0x0003F0, "Member 'UGashaResultWidget::_notPlaylevelSequence' has a wrong offset!");
static_assert(offsetof(UGashaResultWidget, _playlevelSequence) == 0x0003F8, "Member 'UGashaResultWidget::_playlevelSequence' has a wrong offset!");
static_assert(offsetof(UGashaResultWidget, _openUI) == 0x000400, "Member 'UGashaResultWidget::_openUI' has a wrong offset!");
static_assert(offsetof(UGashaResultWidget, _ssrOpenUI) == 0x000408, "Member 'UGashaResultWidget::_ssrOpenUI' has a wrong offset!");
static_assert(offsetof(UGashaResultWidget, _iconTileView) == 0x000410, "Member 'UGashaResultWidget::_iconTileView' has a wrong offset!");

// Class OutGameModule.NoticeExplanationTimer
// 0x0018 (0x0368 - 0x0350)
class UNoticeExplanationTimer final : public UWidgetBase
{
public:
	class UNoticeTimerWidget*                     _noticeTimer;                                      // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        _bkSwicher;                                        // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _text;                                             // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NoticeExplanationTimer">();
	}
	static class UNoticeExplanationTimer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNoticeExplanationTimer>();
	}
};
static_assert(alignof(UNoticeExplanationTimer) == 0x000008, "Wrong alignment on UNoticeExplanationTimer");
static_assert(sizeof(UNoticeExplanationTimer) == 0x000368, "Wrong size on UNoticeExplanationTimer");
static_assert(offsetof(UNoticeExplanationTimer, _noticeTimer) == 0x000350, "Member 'UNoticeExplanationTimer::_noticeTimer' has a wrong offset!");
static_assert(offsetof(UNoticeExplanationTimer, _bkSwicher) == 0x000358, "Member 'UNoticeExplanationTimer::_bkSwicher' has a wrong offset!");
static_assert(offsetof(UNoticeExplanationTimer, _text) == 0x000360, "Member 'UNoticeExplanationTimer::_text' has a wrong offset!");

// Class OutGameModule.GashaSequenceGUIWidget
// 0x0000 (0x0350 - 0x0350)
class UGashaSequenceGUIWidget final : public UWidgetBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaSequenceGUIWidget">();
	}
	static class UGashaSequenceGUIWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaSequenceGUIWidget>();
	}
};
static_assert(alignof(UGashaSequenceGUIWidget) == 0x000008, "Wrong alignment on UGashaSequenceGUIWidget");
static_assert(sizeof(UGashaSequenceGUIWidget) == 0x000350, "Wrong size on UGashaSequenceGUIWidget");

// Class OutGameModule.GashaSlotIconEntryObject
// 0x0000 (0x0030 - 0x0030)
class UGashaSlotIconEntryObject final : public UListViewEntryObjectBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaSlotIconEntryObject">();
	}
	static class UGashaSlotIconEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaSlotIconEntryObject>();
	}
};
static_assert(alignof(UGashaSlotIconEntryObject) == 0x000008, "Wrong alignment on UGashaSlotIconEntryObject");
static_assert(sizeof(UGashaSlotIconEntryObject) == 0x000030, "Wrong size on UGashaSlotIconEntryObject");

// Class OutGameModule.MyADPartsWidget
// 0x0108 (0x0458 - 0x0350)
class UMyADPartsWidget final : public UWidgetBase
{
public:
	TMap<EMyAdPartsCategory, int32>               _itemCodeMap;                                      // 0x0350(0x0050)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_3A0[0x50];                                     // 0x03A0(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _bCommonParts;                                     // 0x03F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bSmall;                                           // 0x03F1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bSyncLoad;                                        // 0x03F2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3F3[0x5];                                      // 0x03F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanel*                           _iconImagePanel;                                   // 0x03F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCanvasPanel*                           _effectImagePanel;                                 // 0x0400(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMyADBaseWidget*                        _myADWidget;                                       // 0x0408(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMyADBaseWidget*                        _myADEffectWidget;                                 // 0x0410(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScaleBox*                              _iconImageScaleBoxPanel;                           // 0x0418(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScaleBox*                              _effectImageScaleBoxPanel;                         // 0x0420(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrimaryAssetItemIcon*                  _primaryAsset;                                     // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   _widgetClass;                                      // 0x0430(0x0028)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnLoadedEffectImage(TSubclassOf<class UWidgetBase> WidgetClass);
	void OnLoadedImage(TSubclassOf<class UWidgetBase> WidgetClass);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MyADPartsWidget">();
	}
	static class UMyADPartsWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMyADPartsWidget>();
	}
};
static_assert(alignof(UMyADPartsWidget) == 0x000008, "Wrong alignment on UMyADPartsWidget");
static_assert(sizeof(UMyADPartsWidget) == 0x000458, "Wrong size on UMyADPartsWidget");
static_assert(offsetof(UMyADPartsWidget, _itemCodeMap) == 0x000350, "Member 'UMyADPartsWidget::_itemCodeMap' has a wrong offset!");
static_assert(offsetof(UMyADPartsWidget, _bCommonParts) == 0x0003F0, "Member 'UMyADPartsWidget::_bCommonParts' has a wrong offset!");
static_assert(offsetof(UMyADPartsWidget, _bSmall) == 0x0003F1, "Member 'UMyADPartsWidget::_bSmall' has a wrong offset!");
static_assert(offsetof(UMyADPartsWidget, _bSyncLoad) == 0x0003F2, "Member 'UMyADPartsWidget::_bSyncLoad' has a wrong offset!");
static_assert(offsetof(UMyADPartsWidget, _iconImagePanel) == 0x0003F8, "Member 'UMyADPartsWidget::_iconImagePanel' has a wrong offset!");
static_assert(offsetof(UMyADPartsWidget, _effectImagePanel) == 0x000400, "Member 'UMyADPartsWidget::_effectImagePanel' has a wrong offset!");
static_assert(offsetof(UMyADPartsWidget, _myADWidget) == 0x000408, "Member 'UMyADPartsWidget::_myADWidget' has a wrong offset!");
static_assert(offsetof(UMyADPartsWidget, _myADEffectWidget) == 0x000410, "Member 'UMyADPartsWidget::_myADEffectWidget' has a wrong offset!");
static_assert(offsetof(UMyADPartsWidget, _iconImageScaleBoxPanel) == 0x000418, "Member 'UMyADPartsWidget::_iconImageScaleBoxPanel' has a wrong offset!");
static_assert(offsetof(UMyADPartsWidget, _effectImageScaleBoxPanel) == 0x000420, "Member 'UMyADPartsWidget::_effectImageScaleBoxPanel' has a wrong offset!");
static_assert(offsetof(UMyADPartsWidget, _primaryAsset) == 0x000428, "Member 'UMyADPartsWidget::_primaryAsset' has a wrong offset!");
static_assert(offsetof(UMyADPartsWidget, _widgetClass) == 0x000430, "Member 'UMyADPartsWidget::_widgetClass' has a wrong offset!");

// Class OutGameModule.GashaSSROpenUIWidget
// 0x0070 (0x03C0 - 0x0350)
class UGashaSSROpenUIWidget final : public UWidgetBase
{
public:
	class UWidgetButton*                          _nextButton;                                       // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTileView*                              _auraView;                                         // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _nextButtonPanel;                                  // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _auraPanel;                                        // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _playableCharacterPanel;                           // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _playableVoiceTextPanel;                           // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _detailPanel;                                      // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _playableVoiceText;                                // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _playableVoiceText_fx;                             // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _ani_aura;                                         // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3A0[0x10];                                     // 0x03A0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UGashaAuraIconListEntryObject*>  _iconlist;                                         // 0x03B0(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	void BP_PlayGetAuraAnim(int32 OpenIndex);
	void BP_PlayInAnim(int32 OpenIndex);
	void BP_PlayPlayableCharacterAnim(int32 OpenIndex);
	void BP_PlayPlayableVoiceTextAnim(int32 OpenIndex);
	void InitPanel();
	void OnAniAuraAnimFinished();
	class UAtomComponent* PlayPlaybleVoice(ECharacterId ID);
	void SetPlaybleVoiceText(ECharacterId ID);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaSSROpenUIWidget">();
	}
	static class UGashaSSROpenUIWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaSSROpenUIWidget>();
	}
};
static_assert(alignof(UGashaSSROpenUIWidget) == 0x000008, "Wrong alignment on UGashaSSROpenUIWidget");
static_assert(sizeof(UGashaSSROpenUIWidget) == 0x0003C0, "Wrong size on UGashaSSROpenUIWidget");
static_assert(offsetof(UGashaSSROpenUIWidget, _nextButton) == 0x000350, "Member 'UGashaSSROpenUIWidget::_nextButton' has a wrong offset!");
static_assert(offsetof(UGashaSSROpenUIWidget, _auraView) == 0x000358, "Member 'UGashaSSROpenUIWidget::_auraView' has a wrong offset!");
static_assert(offsetof(UGashaSSROpenUIWidget, _nextButtonPanel) == 0x000360, "Member 'UGashaSSROpenUIWidget::_nextButtonPanel' has a wrong offset!");
static_assert(offsetof(UGashaSSROpenUIWidget, _auraPanel) == 0x000368, "Member 'UGashaSSROpenUIWidget::_auraPanel' has a wrong offset!");
static_assert(offsetof(UGashaSSROpenUIWidget, _playableCharacterPanel) == 0x000370, "Member 'UGashaSSROpenUIWidget::_playableCharacterPanel' has a wrong offset!");
static_assert(offsetof(UGashaSSROpenUIWidget, _playableVoiceTextPanel) == 0x000378, "Member 'UGashaSSROpenUIWidget::_playableVoiceTextPanel' has a wrong offset!");
static_assert(offsetof(UGashaSSROpenUIWidget, _detailPanel) == 0x000380, "Member 'UGashaSSROpenUIWidget::_detailPanel' has a wrong offset!");
static_assert(offsetof(UGashaSSROpenUIWidget, _playableVoiceText) == 0x000388, "Member 'UGashaSSROpenUIWidget::_playableVoiceText' has a wrong offset!");
static_assert(offsetof(UGashaSSROpenUIWidget, _playableVoiceText_fx) == 0x000390, "Member 'UGashaSSROpenUIWidget::_playableVoiceText_fx' has a wrong offset!");
static_assert(offsetof(UGashaSSROpenUIWidget, _ani_aura) == 0x000398, "Member 'UGashaSSROpenUIWidget::_ani_aura' has a wrong offset!");
static_assert(offsetof(UGashaSSROpenUIWidget, _iconlist) == 0x0003B0, "Member 'UGashaSSROpenUIWidget::_iconlist' has a wrong offset!");

// Class OutGameModule.GashaSuggestVoiceCutInWidget
// 0x0000 (0x0350 - 0x0350)
class UGashaSuggestVoiceCutInWidget final : public UWidgetBase
{
public:
	void SetImage(class UImage* Image);
	void SetText(class UAdjustTextWidget* AdjustText);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaSuggestVoiceCutInWidget">();
	}
	static class UGashaSuggestVoiceCutInWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaSuggestVoiceCutInWidget>();
	}
};
static_assert(alignof(UGashaSuggestVoiceCutInWidget) == 0x000008, "Wrong alignment on UGashaSuggestVoiceCutInWidget");
static_assert(sizeof(UGashaSuggestVoiceCutInWidget) == 0x000350, "Wrong size on UGashaSuggestVoiceCutInWidget");

// Class OutGameModule.MyADEditSelectHasButtonWidget
// 0x0010 (0x0498 - 0x0488)
class UMyADEditSelectHasButtonWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMyADEditSelectButtonWidget*            _listButton;                                       // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MyADEditSelectHasButtonWidget">();
	}
	static class UMyADEditSelectHasButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMyADEditSelectHasButtonWidget>();
	}
};
static_assert(alignof(UMyADEditSelectHasButtonWidget) == 0x000008, "Wrong alignment on UMyADEditSelectHasButtonWidget");
static_assert(sizeof(UMyADEditSelectHasButtonWidget) == 0x000498, "Wrong size on UMyADEditSelectHasButtonWidget");
static_assert(offsetof(UMyADEditSelectHasButtonWidget, _listButton) == 0x000490, "Member 'UMyADEditSelectHasButtonWidget::_listButton' has a wrong offset!");

// Class OutGameModule.GashaUpperLimitExChangeListIEntryObject
// 0x0040 (0x0070 - 0x0030)
class UGashaUpperLimitExChangeListIEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x40];                                      // 0x0030(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaUpperLimitExChangeListIEntryObject">();
	}
	static class UGashaUpperLimitExChangeListIEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaUpperLimitExChangeListIEntryObject>();
	}
};
static_assert(alignof(UGashaUpperLimitExChangeListIEntryObject) == 0x000008, "Wrong alignment on UGashaUpperLimitExChangeListIEntryObject");
static_assert(sizeof(UGashaUpperLimitExChangeListIEntryObject) == 0x000070, "Wrong size on UGashaUpperLimitExChangeListIEntryObject");

// Class OutGameModule.GashaUpperLimitExChangeListItemWidget
// 0x0040 (0x04C8 - 0x0488)
class UGashaUpperLimitExChangeListItemWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UGashaUpperLimitExChangeListIEntryObject* _itemObject;                                       // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGashaIconWidget*                       _icon;                                             // 0x0498(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _star1;                                            // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _star2;                                            // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _star3;                                            // 0x04B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _star4;                                            // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _consumptionPoint;                                 // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class UWidget* DoWindowButtonWidgetNavigation(EUINavigation UiNavigation);
	void OnDecide(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaUpperLimitExChangeListItemWidget">();
	}
	static class UGashaUpperLimitExChangeListItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaUpperLimitExChangeListItemWidget>();
	}
};
static_assert(alignof(UGashaUpperLimitExChangeListItemWidget) == 0x000008, "Wrong alignment on UGashaUpperLimitExChangeListItemWidget");
static_assert(sizeof(UGashaUpperLimitExChangeListItemWidget) == 0x0004C8, "Wrong size on UGashaUpperLimitExChangeListItemWidget");
static_assert(offsetof(UGashaUpperLimitExChangeListItemWidget, _itemObject) == 0x000490, "Member 'UGashaUpperLimitExChangeListItemWidget::_itemObject' has a wrong offset!");
static_assert(offsetof(UGashaUpperLimitExChangeListItemWidget, _icon) == 0x000498, "Member 'UGashaUpperLimitExChangeListItemWidget::_icon' has a wrong offset!");
static_assert(offsetof(UGashaUpperLimitExChangeListItemWidget, _star1) == 0x0004A0, "Member 'UGashaUpperLimitExChangeListItemWidget::_star1' has a wrong offset!");
static_assert(offsetof(UGashaUpperLimitExChangeListItemWidget, _star2) == 0x0004A8, "Member 'UGashaUpperLimitExChangeListItemWidget::_star2' has a wrong offset!");
static_assert(offsetof(UGashaUpperLimitExChangeListItemWidget, _star3) == 0x0004B0, "Member 'UGashaUpperLimitExChangeListItemWidget::_star3' has a wrong offset!");
static_assert(offsetof(UGashaUpperLimitExChangeListItemWidget, _star4) == 0x0004B8, "Member 'UGashaUpperLimitExChangeListItemWidget::_star4' has a wrong offset!");
static_assert(offsetof(UGashaUpperLimitExChangeListItemWidget, _consumptionPoint) == 0x0004C0, "Member 'UGashaUpperLimitExChangeListItemWidget::_consumptionPoint' has a wrong offset!");

// Class OutGameModule.NoticePanelEntryObject
// 0x0080 (0x00B0 - 0x0030)
class UNoticePanelEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x80];                                      // 0x0030(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NoticePanelEntryObject">();
	}
	static class UNoticePanelEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNoticePanelEntryObject>();
	}
};
static_assert(alignof(UNoticePanelEntryObject) == 0x000008, "Wrong alignment on UNoticePanelEntryObject");
static_assert(sizeof(UNoticePanelEntryObject) == 0x0000B0, "Wrong size on UNoticePanelEntryObject");

// Class OutGameModule.GashaUpperLimitExChangePopupWidget
// 0x0010 (0x0360 - 0x0350)
class UGashaUpperLimitExChangePopupWidget final : public UWidgetBase
{
public:
	class UTextBlock*                             _text;                                             // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGashaIconWidget*                       _icon;                                             // 0x0358(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_ExChange();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaUpperLimitExChangePopupWidget">();
	}
	static class UGashaUpperLimitExChangePopupWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaUpperLimitExChangePopupWidget>();
	}
};
static_assert(alignof(UGashaUpperLimitExChangePopupWidget) == 0x000008, "Wrong alignment on UGashaUpperLimitExChangePopupWidget");
static_assert(sizeof(UGashaUpperLimitExChangePopupWidget) == 0x000360, "Wrong size on UGashaUpperLimitExChangePopupWidget");
static_assert(offsetof(UGashaUpperLimitExChangePopupWidget, _text) == 0x000350, "Member 'UGashaUpperLimitExChangePopupWidget::_text' has a wrong offset!");
static_assert(offsetof(UGashaUpperLimitExChangePopupWidget, _icon) == 0x000358, "Member 'UGashaUpperLimitExChangePopupWidget::_icon' has a wrong offset!");

// Class OutGameModule.GashaUpperLimitExChangeWidget
// 0x0038 (0x0388 - 0x0350)
class UGashaUpperLimitExChangeWidget final : public UWidgetBase
{
public:
	class UWidgetGeneralWindowFrame*              _windowFrame;                                      // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomTileView*                        _iconTileView;                                     // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _tileView;                                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _possessionPoint;                                  // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSubMenu*                         _subMenu;                                          // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_378[0x10];                                     // 0x0378(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_ExChange();
	class UWidget* DoWindowButtonNavigation(EUINavigation NavigationType);
	void OnExChangeItemClicked(int32 Index_0);
	void OnMileageInfoLoadComplete(int32 RequestId);
	void OnSubMenuClicked(int32 Index_0);
	void OnWindowFrameFocusButton();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaUpperLimitExChangeWidget">();
	}
	static class UGashaUpperLimitExChangeWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaUpperLimitExChangeWidget>();
	}
};
static_assert(alignof(UGashaUpperLimitExChangeWidget) == 0x000008, "Wrong alignment on UGashaUpperLimitExChangeWidget");
static_assert(sizeof(UGashaUpperLimitExChangeWidget) == 0x000388, "Wrong size on UGashaUpperLimitExChangeWidget");
static_assert(offsetof(UGashaUpperLimitExChangeWidget, _windowFrame) == 0x000350, "Member 'UGashaUpperLimitExChangeWidget::_windowFrame' has a wrong offset!");
static_assert(offsetof(UGashaUpperLimitExChangeWidget, _iconTileView) == 0x000358, "Member 'UGashaUpperLimitExChangeWidget::_iconTileView' has a wrong offset!");
static_assert(offsetof(UGashaUpperLimitExChangeWidget, _tileView) == 0x000360, "Member 'UGashaUpperLimitExChangeWidget::_tileView' has a wrong offset!");
static_assert(offsetof(UGashaUpperLimitExChangeWidget, _possessionPoint) == 0x000368, "Member 'UGashaUpperLimitExChangeWidget::_possessionPoint' has a wrong offset!");
static_assert(offsetof(UGashaUpperLimitExChangeWidget, _subMenu) == 0x000370, "Member 'UGashaUpperLimitExChangeWidget::_subMenu' has a wrong offset!");

// Class OutGameModule.NoticeTimerWidget
// 0x0008 (0x03E8 - 0x03E0)
class UNoticeTimerWidget final : public UTimeWidget
{
public:
	ETextJustify                                  _justification;                                    // 0x03E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NoticeTimerWidget">();
	}
	static class UNoticeTimerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNoticeTimerWidget>();
	}
};
static_assert(alignof(UNoticeTimerWidget) == 0x000008, "Wrong alignment on UNoticeTimerWidget");
static_assert(sizeof(UNoticeTimerWidget) == 0x0003E8, "Wrong size on UNoticeTimerWidget");
static_assert(offsetof(UNoticeTimerWidget, _justification) == 0x0003E0, "Member 'UNoticeTimerWidget::_justification' has a wrong offset!");

// Class OutGameModule.GashaWidget
// 0x0080 (0x03D0 - 0x0350)
class UGashaWidget final : public UWidgetBase
{
public:
	class UWidgetSwitcher*                        _waitSwitcher;                                     // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGashaWindowWidget*                     _prevGashaWindow;                                  // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGashaWindowWidget*                     _nextGashaWindow;                                  // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGashaBannerListWidget*                 _bannerList;                                       // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _debugWindowButton;                                // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _debugRunWindowButton;                             // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _ani_gashaWindowNext;                              // 0x0380(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _ani_gashaWindowPrev;                              // 0x0388(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _ani_wait;                                         // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_398[0x38];                                     // 0x0398(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddPickupItem(int32 Add);
	class UWidget* DoBannerListWidgetNavigation(EUINavigation UiNavigation);
	void OnBannerSelect(int32 GashaCode);
	void OnCharaChange();
	void OnCharaChangeLeft();
	void OnFinishAnimationInFinished();
	void OnFinishedCharaCaptureDelegate();
	void OnFinishedGashaListDelegate();
	void OnFinishedNoticeWindow();
	void OnFinishedSceneCaptureDelegate();
	void OnFocusList();
	void OnGashaRunFinishDelegate();
	void OnPreLoadComplete();
	void OnSetShowLoading(bool bShow);
	void OnStartAnimationInFinished();
	void OpenGashaLevel();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaWidget">();
	}
	static class UGashaWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaWidget>();
	}
};
static_assert(alignof(UGashaWidget) == 0x000008, "Wrong alignment on UGashaWidget");
static_assert(sizeof(UGashaWidget) == 0x0003D0, "Wrong size on UGashaWidget");
static_assert(offsetof(UGashaWidget, _waitSwitcher) == 0x000350, "Member 'UGashaWidget::_waitSwitcher' has a wrong offset!");
static_assert(offsetof(UGashaWidget, _prevGashaWindow) == 0x000358, "Member 'UGashaWidget::_prevGashaWindow' has a wrong offset!");
static_assert(offsetof(UGashaWidget, _nextGashaWindow) == 0x000360, "Member 'UGashaWidget::_nextGashaWindow' has a wrong offset!");
static_assert(offsetof(UGashaWidget, _bannerList) == 0x000368, "Member 'UGashaWidget::_bannerList' has a wrong offset!");
static_assert(offsetof(UGashaWidget, _debugWindowButton) == 0x000370, "Member 'UGashaWidget::_debugWindowButton' has a wrong offset!");
static_assert(offsetof(UGashaWidget, _debugRunWindowButton) == 0x000378, "Member 'UGashaWidget::_debugRunWindowButton' has a wrong offset!");
static_assert(offsetof(UGashaWidget, _ani_gashaWindowNext) == 0x000380, "Member 'UGashaWidget::_ani_gashaWindowNext' has a wrong offset!");
static_assert(offsetof(UGashaWidget, _ani_gashaWindowPrev) == 0x000388, "Member 'UGashaWidget::_ani_gashaWindowPrev' has a wrong offset!");
static_assert(offsetof(UGashaWidget, _ani_wait) == 0x000390, "Member 'UGashaWidget::_ani_wait' has a wrong offset!");

// Class OutGameModule.GashaWindowIconListIEntryObject
// 0x0008 (0x0038 - 0x0030)
class UGashaWindowIconListIEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaWindowIconListIEntryObject">();
	}
	static class UGashaWindowIconListIEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaWindowIconListIEntryObject>();
	}
};
static_assert(alignof(UGashaWindowIconListIEntryObject) == 0x000008, "Wrong alignment on UGashaWindowIconListIEntryObject");
static_assert(sizeof(UGashaWindowIconListIEntryObject) == 0x000038, "Wrong size on UGashaWindowIconListIEntryObject");

// Class OutGameModule.NoticeImageWidget
// 0x0010 (0x0360 - 0x0350)
class UNoticeImageWidget final : public UWidgetBase
{
public:
	class UImage*                                 _image;                                            // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 _logoImage;                                        // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NoticeImageWidget">();
	}
	static class UNoticeImageWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNoticeImageWidget>();
	}
};
static_assert(alignof(UNoticeImageWidget) == 0x000008, "Wrong alignment on UNoticeImageWidget");
static_assert(sizeof(UNoticeImageWidget) == 0x000360, "Wrong size on UNoticeImageWidget");
static_assert(offsetof(UNoticeImageWidget, _image) == 0x000350, "Member 'UNoticeImageWidget::_image' has a wrong offset!");
static_assert(offsetof(UNoticeImageWidget, _logoImage) == 0x000358, "Member 'UNoticeImageWidget::_logoImage' has a wrong offset!");

// Class OutGameModule.GashaWindowIconListItemWidget
// 0x0028 (0x0378 - 0x0350)
class UGashaWindowIconListItemWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x8];                                      // 0x0350(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UGashaWindowIconListIEntryObject*       _itemObject;                                       // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _select;                                           // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _bg;                                               // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconImage*                         _icon;                                             // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaWindowIconListItemWidget">();
	}
	static class UGashaWindowIconListItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaWindowIconListItemWidget>();
	}
};
static_assert(alignof(UGashaWindowIconListItemWidget) == 0x000008, "Wrong alignment on UGashaWindowIconListItemWidget");
static_assert(sizeof(UGashaWindowIconListItemWidget) == 0x000378, "Wrong size on UGashaWindowIconListItemWidget");
static_assert(offsetof(UGashaWindowIconListItemWidget, _itemObject) == 0x000358, "Member 'UGashaWindowIconListItemWidget::_itemObject' has a wrong offset!");
static_assert(offsetof(UGashaWindowIconListItemWidget, _select) == 0x000360, "Member 'UGashaWindowIconListItemWidget::_select' has a wrong offset!");
static_assert(offsetof(UGashaWindowIconListItemWidget, _bg) == 0x000368, "Member 'UGashaWindowIconListItemWidget::_bg' has a wrong offset!");
static_assert(offsetof(UGashaWindowIconListItemWidget, _icon) == 0x000370, "Member 'UGashaWindowIconListItemWidget::_icon' has a wrong offset!");

// Class OutGameModule.GashaWindowWidget
// 0x0130 (0x0530 - 0x0400)
class UGashaWindowWidget final : public UGashaBaseWindow
{
public:
	uint8                                         Pad_400[0x20];                                     // 0x0400(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetSwitcher*                        _pickupImageSwitcher;                              // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _pickupVariationImage;                             // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _pickupCharaImage;                                 // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _windowBGSwitcher;                                 // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _windowSwitcher;                                   // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _normalGasha;                                      // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _upperLimitGasha;                                  // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _retryableGasha;                                   // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _boxGasha;                                         // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _stepUpGasha;                                      // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FString, class UWidget*>           _BGPanels;                                         // 0x0470(0x0050)(BlueprintVisible, ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UItemIconImage*>                 _priceIcons;                                       // 0x04C0(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class URichTextBlock*>                 _priceIconRichTexts;                               // 0x04D0(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UTextBlock*>                     _priceTexts;                                       // 0x04E0(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UWidget*>                        _pricePanels;                                      // 0x04F0(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UTextBlock*                             _mileageNum;                                       // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _gashaName;                                        // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _otherItemDescription;                             // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _otherItemViewMaxSize;                             // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTileView*                              _otherItemView;                                    // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_528[0x8];                                      // 0x0528(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UWidget* DoUpperLimitExplanationWidgetNavigation(EUINavigation UiNavigation);
	void OnCharaChange(ECharacterId CharacterId, int32 Code, EItemCategory Category);
	void OnFocusList();
	void OnNotPickUpCharacterFinishedDelegate();
	void OnSceneCaptureFinished__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GashaWindowWidget">();
	}
	static class UGashaWindowWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGashaWindowWidget>();
	}
};
static_assert(alignof(UGashaWindowWidget) == 0x000008, "Wrong alignment on UGashaWindowWidget");
static_assert(sizeof(UGashaWindowWidget) == 0x000530, "Wrong size on UGashaWindowWidget");
static_assert(offsetof(UGashaWindowWidget, _pickupImageSwitcher) == 0x000420, "Member 'UGashaWindowWidget::_pickupImageSwitcher' has a wrong offset!");
static_assert(offsetof(UGashaWindowWidget, _pickupVariationImage) == 0x000428, "Member 'UGashaWindowWidget::_pickupVariationImage' has a wrong offset!");
static_assert(offsetof(UGashaWindowWidget, _pickupCharaImage) == 0x000430, "Member 'UGashaWindowWidget::_pickupCharaImage' has a wrong offset!");
static_assert(offsetof(UGashaWindowWidget, _windowBGSwitcher) == 0x000438, "Member 'UGashaWindowWidget::_windowBGSwitcher' has a wrong offset!");
static_assert(offsetof(UGashaWindowWidget, _windowSwitcher) == 0x000440, "Member 'UGashaWindowWidget::_windowSwitcher' has a wrong offset!");
static_assert(offsetof(UGashaWindowWidget, _normalGasha) == 0x000448, "Member 'UGashaWindowWidget::_normalGasha' has a wrong offset!");
static_assert(offsetof(UGashaWindowWidget, _upperLimitGasha) == 0x000450, "Member 'UGashaWindowWidget::_upperLimitGasha' has a wrong offset!");
static_assert(offsetof(UGashaWindowWidget, _retryableGasha) == 0x000458, "Member 'UGashaWindowWidget::_retryableGasha' has a wrong offset!");
static_assert(offsetof(UGashaWindowWidget, _boxGasha) == 0x000460, "Member 'UGashaWindowWidget::_boxGasha' has a wrong offset!");
static_assert(offsetof(UGashaWindowWidget, _stepUpGasha) == 0x000468, "Member 'UGashaWindowWidget::_stepUpGasha' has a wrong offset!");
static_assert(offsetof(UGashaWindowWidget, _BGPanels) == 0x000470, "Member 'UGashaWindowWidget::_BGPanels' has a wrong offset!");
static_assert(offsetof(UGashaWindowWidget, _priceIcons) == 0x0004C0, "Member 'UGashaWindowWidget::_priceIcons' has a wrong offset!");
static_assert(offsetof(UGashaWindowWidget, _priceIconRichTexts) == 0x0004D0, "Member 'UGashaWindowWidget::_priceIconRichTexts' has a wrong offset!");
static_assert(offsetof(UGashaWindowWidget, _priceTexts) == 0x0004E0, "Member 'UGashaWindowWidget::_priceTexts' has a wrong offset!");
static_assert(offsetof(UGashaWindowWidget, _pricePanels) == 0x0004F0, "Member 'UGashaWindowWidget::_pricePanels' has a wrong offset!");
static_assert(offsetof(UGashaWindowWidget, _mileageNum) == 0x000500, "Member 'UGashaWindowWidget::_mileageNum' has a wrong offset!");
static_assert(offsetof(UGashaWindowWidget, _gashaName) == 0x000508, "Member 'UGashaWindowWidget::_gashaName' has a wrong offset!");
static_assert(offsetof(UGashaWindowWidget, _otherItemDescription) == 0x000510, "Member 'UGashaWindowWidget::_otherItemDescription' has a wrong offset!");
static_assert(offsetof(UGashaWindowWidget, _otherItemViewMaxSize) == 0x000518, "Member 'UGashaWindowWidget::_otherItemViewMaxSize' has a wrong offset!");
static_assert(offsetof(UGashaWindowWidget, _otherItemView) == 0x000520, "Member 'UGashaWindowWidget::_otherItemView' has a wrong offset!");

// Class OutGameModule.MyADWidget
// 0x00E0 (0x04C8 - 0x03E8)
class UMyADWidget final : public UAppWidget
{
public:
	class UMyADSelectButtonWidget*                _selectedButton;                                   // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _cancelButton;                                     // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMyADWidgetSubMenu*                     _subMenu;                                          // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                            _networkLoadingIcon;                               // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                            _networkLoadingIconPreview;                        // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMyADDisplayWidget*                     _previewMyAD;                                      // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMyADDisplayWidget*                     _previewMyADEffect;                                // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMyADDisplayWidget*                     _previewMyADBackImage;                             // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMyADDisplayWidget*                     _previewMyADMessage;                               // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                _previewMyADLockImage;                             // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCoinWidget*                            _goldWidget;                                       // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGeneralShoppingWidget*                 _shoppingWindow;                                   // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _popupWindow;                                      // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomScrollBox*                       _listScrollBox;                                    // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMyADSelectButtonWidget*                _myAdButton1;                                      // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMyADSelectButtonWidget*                _myAdButton2;                                      // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMyADSelectButtonWidget*                _myAdButton3;                                      // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMyADSelectButtonWidget*                _myAdButton4;                                      // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameSequenceWork*                      _gameSequenceWork;                                 // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerDatabaseWork*                    _playerDatabaseWork;                               // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBackendSubsystem*                      _backendSubsystem;                                 // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_490[0x18];                                     // 0x0490(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDbAdDataParam>                 _myADDataParam;                                    // 0x04A8(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UMyADSelectButtonWidget*>        _myADButtonList;                                   // 0x04B8(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	void CloseConfirm();
	void OnAddedToFocusButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideCancelButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideConfirm(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnDecideShopping(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnFadeOutEnd();
	void OnNegativeButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnPressButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnRemovedFromFocusButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnUpdateComplete(int32 RequestId);
	void OnUpdateWebApiError();
	void ReceivedOnLoadCompleteEvent(int32 RequestId);
	void SetSelectedButtonFocus(ETutorialPopupScene Scence);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MyADWidget">();
	}
	static class UMyADWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMyADWidget>();
	}
};
static_assert(alignof(UMyADWidget) == 0x000008, "Wrong alignment on UMyADWidget");
static_assert(sizeof(UMyADWidget) == 0x0004C8, "Wrong size on UMyADWidget");
static_assert(offsetof(UMyADWidget, _selectedButton) == 0x0003E8, "Member 'UMyADWidget::_selectedButton' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _cancelButton) == 0x0003F0, "Member 'UMyADWidget::_cancelButton' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _subMenu) == 0x0003F8, "Member 'UMyADWidget::_subMenu' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _networkLoadingIcon) == 0x000400, "Member 'UMyADWidget::_networkLoadingIcon' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _networkLoadingIconPreview) == 0x000408, "Member 'UMyADWidget::_networkLoadingIconPreview' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _previewMyAD) == 0x000410, "Member 'UMyADWidget::_previewMyAD' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _previewMyADEffect) == 0x000418, "Member 'UMyADWidget::_previewMyADEffect' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _previewMyADBackImage) == 0x000420, "Member 'UMyADWidget::_previewMyADBackImage' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _previewMyADMessage) == 0x000428, "Member 'UMyADWidget::_previewMyADMessage' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _previewMyADLockImage) == 0x000430, "Member 'UMyADWidget::_previewMyADLockImage' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _goldWidget) == 0x000438, "Member 'UMyADWidget::_goldWidget' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _shoppingWindow) == 0x000440, "Member 'UMyADWidget::_shoppingWindow' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _popupWindow) == 0x000448, "Member 'UMyADWidget::_popupWindow' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _listScrollBox) == 0x000450, "Member 'UMyADWidget::_listScrollBox' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _myAdButton1) == 0x000458, "Member 'UMyADWidget::_myAdButton1' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _myAdButton2) == 0x000460, "Member 'UMyADWidget::_myAdButton2' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _myAdButton3) == 0x000468, "Member 'UMyADWidget::_myAdButton3' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _myAdButton4) == 0x000470, "Member 'UMyADWidget::_myAdButton4' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _gameSequenceWork) == 0x000478, "Member 'UMyADWidget::_gameSequenceWork' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _playerDatabaseWork) == 0x000480, "Member 'UMyADWidget::_playerDatabaseWork' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _backendSubsystem) == 0x000488, "Member 'UMyADWidget::_backendSubsystem' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _myADDataParam) == 0x0004A8, "Member 'UMyADWidget::_myADDataParam' has a wrong offset!");
static_assert(offsetof(UMyADWidget, _myADButtonList) == 0x0004B8, "Member 'UMyADWidget::_myADButtonList' has a wrong offset!");

// Class OutGameModule.GaugeRankWidget
// 0x0018 (0x0368 - 0x0350)
class UGaugeRankWidget final : public UWidgetBase
{
public:
	class UImage*                                 _thresholdBar;                                     // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _rank;                                             // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _rankDirecting;                                    // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GaugeRankWidget">();
	}
	static class UGaugeRankWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGaugeRankWidget>();
	}
};
static_assert(alignof(UGaugeRankWidget) == 0x000008, "Wrong alignment on UGaugeRankWidget");
static_assert(sizeof(UGaugeRankWidget) == 0x000368, "Wrong size on UGaugeRankWidget");
static_assert(offsetof(UGaugeRankWidget, _thresholdBar) == 0x000350, "Member 'UGaugeRankWidget::_thresholdBar' has a wrong offset!");
static_assert(offsetof(UGaugeRankWidget, _rank) == 0x000358, "Member 'UGaugeRankWidget::_rank' has a wrong offset!");
static_assert(offsetof(UGaugeRankWidget, _rankDirecting) == 0x000360, "Member 'UGaugeRankWidget::_rankDirecting' has a wrong offset!");

// Class OutGameModule.GeneralCoinSelectButtonWidget
// 0x0060 (0x0690 - 0x0630)
class UGeneralCoinSelectButtonWidget final : public UPlatformWidgetButton
{
public:
	class URichTextBlock*                         _messageIcon;                                      // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         _messageCoinSelectText;                            // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _notEnoughText;                                    // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_648[0x48];                                     // 0x0648(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GeneralCoinSelectButtonWidget">();
	}
	static class UGeneralCoinSelectButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGeneralCoinSelectButtonWidget>();
	}
};
static_assert(alignof(UGeneralCoinSelectButtonWidget) == 0x000008, "Wrong alignment on UGeneralCoinSelectButtonWidget");
static_assert(sizeof(UGeneralCoinSelectButtonWidget) == 0x000690, "Wrong size on UGeneralCoinSelectButtonWidget");
static_assert(offsetof(UGeneralCoinSelectButtonWidget, _messageIcon) == 0x000630, "Member 'UGeneralCoinSelectButtonWidget::_messageIcon' has a wrong offset!");
static_assert(offsetof(UGeneralCoinSelectButtonWidget, _messageCoinSelectText) == 0x000638, "Member 'UGeneralCoinSelectButtonWidget::_messageCoinSelectText' has a wrong offset!");
static_assert(offsetof(UGeneralCoinSelectButtonWidget, _notEnoughText) == 0x000640, "Member 'UGeneralCoinSelectButtonWidget::_notEnoughText' has a wrong offset!");

// Class OutGameModule.GeneralCoinSelectWidget
// 0x00D0 (0x04D0 - 0x0400)
class UGeneralCoinSelectWidget final : public UCustomTileViewHasWidget
{
public:
	FMulticastInlineDelegateProperty_             OnPressSelectDelegate;                             // 0x0400(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnDecideSelectDelegate;                            // 0x0410(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UWidgetGeneralEmptyWindow*              _selectWindow;                                     // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGeneralShoppingWidget*                 _popupConfirmWindow;                               // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _popupWindow;                                      // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _popupMoveConfirmWindow;                           // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _itemIconCanvasPanel;                              // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconImage*                         _itemIcon;                                         // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _hederText;                                        // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _messageText;                                      // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         _messageCharaReleaseText;                          // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _backButton;                                       // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   _heder;                                            // 0x0470(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                   _message;                                          // 0x0488(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TArray<struct FSelectedCoinData>              _data;                                             // 0x04A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          _bOpenPickupGashaFlag;                             // 0x04B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UShopItemObject*                        _shopItemObject;                                   // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4C0[0x10];                                     // 0x04C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CloseConfirm();
	void CloseLevel();
	void FadeOutFinished();
	void ForcedCloseLevel();
	void OnClickedBlockBGMoveConfirmWindow();
	void OnDecideBackButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideConfirm(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnDecideElement(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideMoveConfirmWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnDecideShopping(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnGeneralCoinSelectInputEventDelegate__DelegateSignature(class UAppWidget* Widget, EWidgetInputType InputType, int32 Index_0);
	void OnPressBackButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnPressElement(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnUpdateComplete(int32 RequestId);
	void OnWebApiError();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GeneralCoinSelectWidget">();
	}
	static class UGeneralCoinSelectWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGeneralCoinSelectWidget>();
	}
};
static_assert(alignof(UGeneralCoinSelectWidget) == 0x000008, "Wrong alignment on UGeneralCoinSelectWidget");
static_assert(sizeof(UGeneralCoinSelectWidget) == 0x0004D0, "Wrong size on UGeneralCoinSelectWidget");
static_assert(offsetof(UGeneralCoinSelectWidget, OnPressSelectDelegate) == 0x000400, "Member 'UGeneralCoinSelectWidget::OnPressSelectDelegate' has a wrong offset!");
static_assert(offsetof(UGeneralCoinSelectWidget, OnDecideSelectDelegate) == 0x000410, "Member 'UGeneralCoinSelectWidget::OnDecideSelectDelegate' has a wrong offset!");
static_assert(offsetof(UGeneralCoinSelectWidget, _selectWindow) == 0x000420, "Member 'UGeneralCoinSelectWidget::_selectWindow' has a wrong offset!");
static_assert(offsetof(UGeneralCoinSelectWidget, _popupConfirmWindow) == 0x000428, "Member 'UGeneralCoinSelectWidget::_popupConfirmWindow' has a wrong offset!");
static_assert(offsetof(UGeneralCoinSelectWidget, _popupWindow) == 0x000430, "Member 'UGeneralCoinSelectWidget::_popupWindow' has a wrong offset!");
static_assert(offsetof(UGeneralCoinSelectWidget, _popupMoveConfirmWindow) == 0x000438, "Member 'UGeneralCoinSelectWidget::_popupMoveConfirmWindow' has a wrong offset!");
static_assert(offsetof(UGeneralCoinSelectWidget, _itemIconCanvasPanel) == 0x000440, "Member 'UGeneralCoinSelectWidget::_itemIconCanvasPanel' has a wrong offset!");
static_assert(offsetof(UGeneralCoinSelectWidget, _itemIcon) == 0x000448, "Member 'UGeneralCoinSelectWidget::_itemIcon' has a wrong offset!");
static_assert(offsetof(UGeneralCoinSelectWidget, _hederText) == 0x000450, "Member 'UGeneralCoinSelectWidget::_hederText' has a wrong offset!");
static_assert(offsetof(UGeneralCoinSelectWidget, _messageText) == 0x000458, "Member 'UGeneralCoinSelectWidget::_messageText' has a wrong offset!");
static_assert(offsetof(UGeneralCoinSelectWidget, _messageCharaReleaseText) == 0x000460, "Member 'UGeneralCoinSelectWidget::_messageCharaReleaseText' has a wrong offset!");
static_assert(offsetof(UGeneralCoinSelectWidget, _backButton) == 0x000468, "Member 'UGeneralCoinSelectWidget::_backButton' has a wrong offset!");
static_assert(offsetof(UGeneralCoinSelectWidget, _heder) == 0x000470, "Member 'UGeneralCoinSelectWidget::_heder' has a wrong offset!");
static_assert(offsetof(UGeneralCoinSelectWidget, _message) == 0x000488, "Member 'UGeneralCoinSelectWidget::_message' has a wrong offset!");
static_assert(offsetof(UGeneralCoinSelectWidget, _data) == 0x0004A0, "Member 'UGeneralCoinSelectWidget::_data' has a wrong offset!");
static_assert(offsetof(UGeneralCoinSelectWidget, _bOpenPickupGashaFlag) == 0x0004B0, "Member 'UGeneralCoinSelectWidget::_bOpenPickupGashaFlag' has a wrong offset!");
static_assert(offsetof(UGeneralCoinSelectWidget, _shopItemObject) == 0x0004B8, "Member 'UGeneralCoinSelectWidget::_shopItemObject' has a wrong offset!");

// Class OutGameModule.GeneralPageCarouselWidget
// 0x0078 (0x03C8 - 0x0350)
class UGeneralPageCarouselWidget final : public UWidgetBase
{
public:
	FMulticastInlineDelegateProperty_             OnChangeIndexDelegate;                             // 0x0350(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_360[0x10];                                     // 0x0360(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _skipListIndex;                                    // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetButton*                          _leftButtonA;                                      // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetButton*                          _leftButtonB;                                      // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetButton*                          _rightButtonA;                                     // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetButton*                          _rightButtonB;                                     // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _nowListText;                                      // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _maxListText;                                      // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3A8[0x10];                                     // 0x03A8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _continuousSeconds;                                // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _bLoopCarouselList;                                // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_SetFarLeftButtonFocas();
	void BP_SetFarRightButtonFocas();
	void BP_SetLeftButtonFocas();
	void BP_SetNavigationRuleBaseAllButton(EUINavigation Direction, EUINavigationRule Rule);
	void BP_SetNavigationRuleBaseLeftButtonA(EUINavigation Direction, EUINavigationRule Rule);
	void BP_SetNavigationRuleBaseLeftButtonB(EUINavigation Direction, EUINavigationRule Rule);
	void BP_SetNavigationRuleBaseRightButtonA(EUINavigation Direction, EUINavigationRule Rule);
	void BP_SetNavigationRuleBaseRightButtonB(EUINavigation Direction, EUINavigationRule Rule);
	void BP_SetRightButtonFocas();
	void InputEnd(const int32 Index_0);
	void NextCarousel(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnChangeIndexDelegate__DelegateSignature(int32 NewIndex, bool IsFoucas);
	void PrevCarousel(class UAppWidget* Widget, EWidgetInputType InputType);
	void SkipNextCarousel(class UAppWidget* Widget, EWidgetInputType InputType);
	void SkipPrevCarousel(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GeneralPageCarouselWidget">();
	}
	static class UGeneralPageCarouselWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGeneralPageCarouselWidget>();
	}
};
static_assert(alignof(UGeneralPageCarouselWidget) == 0x000008, "Wrong alignment on UGeneralPageCarouselWidget");
static_assert(sizeof(UGeneralPageCarouselWidget) == 0x0003C8, "Wrong size on UGeneralPageCarouselWidget");
static_assert(offsetof(UGeneralPageCarouselWidget, OnChangeIndexDelegate) == 0x000350, "Member 'UGeneralPageCarouselWidget::OnChangeIndexDelegate' has a wrong offset!");
static_assert(offsetof(UGeneralPageCarouselWidget, _skipListIndex) == 0x000370, "Member 'UGeneralPageCarouselWidget::_skipListIndex' has a wrong offset!");
static_assert(offsetof(UGeneralPageCarouselWidget, _leftButtonA) == 0x000378, "Member 'UGeneralPageCarouselWidget::_leftButtonA' has a wrong offset!");
static_assert(offsetof(UGeneralPageCarouselWidget, _leftButtonB) == 0x000380, "Member 'UGeneralPageCarouselWidget::_leftButtonB' has a wrong offset!");
static_assert(offsetof(UGeneralPageCarouselWidget, _rightButtonA) == 0x000388, "Member 'UGeneralPageCarouselWidget::_rightButtonA' has a wrong offset!");
static_assert(offsetof(UGeneralPageCarouselWidget, _rightButtonB) == 0x000390, "Member 'UGeneralPageCarouselWidget::_rightButtonB' has a wrong offset!");
static_assert(offsetof(UGeneralPageCarouselWidget, _nowListText) == 0x000398, "Member 'UGeneralPageCarouselWidget::_nowListText' has a wrong offset!");
static_assert(offsetof(UGeneralPageCarouselWidget, _maxListText) == 0x0003A0, "Member 'UGeneralPageCarouselWidget::_maxListText' has a wrong offset!");
static_assert(offsetof(UGeneralPageCarouselWidget, _continuousSeconds) == 0x0003B8, "Member 'UGeneralPageCarouselWidget::_continuousSeconds' has a wrong offset!");
static_assert(offsetof(UGeneralPageCarouselWidget, _bLoopCarouselList) == 0x0003C0, "Member 'UGeneralPageCarouselWidget::_bLoopCarouselList' has a wrong offset!");

// Class OutGameModule.GeneralPresetAppWidget
// 0x00B8 (0x04A0 - 0x03E8)
class UGeneralPresetAppWidget final : public UAppWidget
{
public:
	FMulticastInlineDelegateProperty_             OnDecidePresetDelegate;                            // 0x03E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnAddedToFocusPresetEventDelegate;                 // 0x03F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	EPresetWidgetType                             _type;                                             // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_409[0x3];                                      // 0x0409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _presetCount;                                      // 0x040C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   _headerText;                                       // 0x0410(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                   _characterText;                                    // 0x0428(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UScrollBox*                             _tileView;                                         // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _headerTextWidget;                                 // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _characterTextWidget;                              // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharacterIconButtonWidget*             _characterIconWidget;                              // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralEmptyWindow*              _window;                                           // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UWidgetButton*>                  _presetIcon;                                       // 0x0468(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UWidgetButton*>                  _presetAddButton;                                  // 0x0478(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	ECharacterId                                  _characterType;                                    // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGeneralPresetWidget*                   _selectedPresetWidget;                             // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetButton*                          _selectedPresetButton;                             // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BP_OpenWidget(bool IsOpen);
	void BP_SetCharacterText(const class FText& CharacterText);
	void BP_SetCharacterType(ECharacterId CharacterType);
	void BP_SetHeaderText(const class FText& HeaderText);
	void BP_SetOpen(bool IsOpen);
	void BP_SetTextCustomizePreset();
	class UWidget* DoCustomListNavigation(EUINavigation UiNavigation);
	void OnAddedToFocusPreset(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecidePreset(class UAppWidget* Widget, EWidgetInputType InputType, int32 Presetindex, EPresetWidgetType PresetType);

	const class FText BP_GetCharacterText() const;
	ECharacterId BP_GetCharacterType() const;
	const class FText BP_GetHeaderText() const;
	class UGeneralPresetWidget* BP_GetSelectedPresetWidget() const;
	bool BP_IsOpen() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GeneralPresetAppWidget">();
	}
	static class UGeneralPresetAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGeneralPresetAppWidget>();
	}
};
static_assert(alignof(UGeneralPresetAppWidget) == 0x000008, "Wrong alignment on UGeneralPresetAppWidget");
static_assert(sizeof(UGeneralPresetAppWidget) == 0x0004A0, "Wrong size on UGeneralPresetAppWidget");
static_assert(offsetof(UGeneralPresetAppWidget, OnDecidePresetDelegate) == 0x0003E8, "Member 'UGeneralPresetAppWidget::OnDecidePresetDelegate' has a wrong offset!");
static_assert(offsetof(UGeneralPresetAppWidget, OnAddedToFocusPresetEventDelegate) == 0x0003F8, "Member 'UGeneralPresetAppWidget::OnAddedToFocusPresetEventDelegate' has a wrong offset!");
static_assert(offsetof(UGeneralPresetAppWidget, _type) == 0x000408, "Member 'UGeneralPresetAppWidget::_type' has a wrong offset!");
static_assert(offsetof(UGeneralPresetAppWidget, _presetCount) == 0x00040C, "Member 'UGeneralPresetAppWidget::_presetCount' has a wrong offset!");
static_assert(offsetof(UGeneralPresetAppWidget, _headerText) == 0x000410, "Member 'UGeneralPresetAppWidget::_headerText' has a wrong offset!");
static_assert(offsetof(UGeneralPresetAppWidget, _characterText) == 0x000428, "Member 'UGeneralPresetAppWidget::_characterText' has a wrong offset!");
static_assert(offsetof(UGeneralPresetAppWidget, _tileView) == 0x000440, "Member 'UGeneralPresetAppWidget::_tileView' has a wrong offset!");
static_assert(offsetof(UGeneralPresetAppWidget, _headerTextWidget) == 0x000448, "Member 'UGeneralPresetAppWidget::_headerTextWidget' has a wrong offset!");
static_assert(offsetof(UGeneralPresetAppWidget, _characterTextWidget) == 0x000450, "Member 'UGeneralPresetAppWidget::_characterTextWidget' has a wrong offset!");
static_assert(offsetof(UGeneralPresetAppWidget, _characterIconWidget) == 0x000458, "Member 'UGeneralPresetAppWidget::_characterIconWidget' has a wrong offset!");
static_assert(offsetof(UGeneralPresetAppWidget, _window) == 0x000460, "Member 'UGeneralPresetAppWidget::_window' has a wrong offset!");
static_assert(offsetof(UGeneralPresetAppWidget, _presetIcon) == 0x000468, "Member 'UGeneralPresetAppWidget::_presetIcon' has a wrong offset!");
static_assert(offsetof(UGeneralPresetAppWidget, _presetAddButton) == 0x000478, "Member 'UGeneralPresetAppWidget::_presetAddButton' has a wrong offset!");
static_assert(offsetof(UGeneralPresetAppWidget, _characterType) == 0x000488, "Member 'UGeneralPresetAppWidget::_characterType' has a wrong offset!");
static_assert(offsetof(UGeneralPresetAppWidget, _selectedPresetWidget) == 0x000490, "Member 'UGeneralPresetAppWidget::_selectedPresetWidget' has a wrong offset!");
static_assert(offsetof(UGeneralPresetAppWidget, _selectedPresetButton) == 0x000498, "Member 'UGeneralPresetAppWidget::_selectedPresetButton' has a wrong offset!");

// Class OutGameModule.GeneralSelectionButtonWidget
// 0x0020 (0x04A8 - 0x0488)
class UGeneralSelectionButtonWidget final : public UWidgetButton
{
public:
	class UImage*                                 _image;                                            // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterial*                              _material;                                         // 0x0490(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPaperFlipbook*                         _spriteFlipbook;                                   // 0x0498(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EAvatarColorParts                             _customizeColorParts;                              // 0x04A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_SetColorPaletteType(EAvatarColorParts Parts);
	void BP_SetElementIndexAndColorPaletteType(EAvatarColorParts Parts, int32 ElementIndex);
	void BP_SetElementIndexAndSpriteFlipbook(const class UPaperFlipbook* SpriteFlipbook, class UMaterial* Material, bool bMatchSize, int32 ElementIndex);
	void BP_SetSpriteFlipbook(const class UPaperFlipbook* SpriteFlipbook, bool bMatchSize);

	class UImage* BP_GetImage() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GeneralSelectionButtonWidget">();
	}
	static class UGeneralSelectionButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGeneralSelectionButtonWidget>();
	}
};
static_assert(alignof(UGeneralSelectionButtonWidget) == 0x000008, "Wrong alignment on UGeneralSelectionButtonWidget");
static_assert(sizeof(UGeneralSelectionButtonWidget) == 0x0004A8, "Wrong size on UGeneralSelectionButtonWidget");
static_assert(offsetof(UGeneralSelectionButtonWidget, _image) == 0x000488, "Member 'UGeneralSelectionButtonWidget::_image' has a wrong offset!");
static_assert(offsetof(UGeneralSelectionButtonWidget, _material) == 0x000490, "Member 'UGeneralSelectionButtonWidget::_material' has a wrong offset!");
static_assert(offsetof(UGeneralSelectionButtonWidget, _spriteFlipbook) == 0x000498, "Member 'UGeneralSelectionButtonWidget::_spriteFlipbook' has a wrong offset!");
static_assert(offsetof(UGeneralSelectionButtonWidget, _customizeColorParts) == 0x0004A0, "Member 'UGeneralSelectionButtonWidget::_customizeColorParts' has a wrong offset!");

// Class OutGameModule.GeneralTradeWidget
// 0x00E0 (0x0430 - 0x0350)
class UGeneralTradeWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetGeneralEmptyWindow*              _emptyWindow;                                      // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconImage*                         _ItemIconImage;                                    // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _itemNameText;                                     // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _itemCountText;                                    // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _itemBuyCountText;                                 // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _notEnoughText;                                    // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCoinWidget*                            _hasCoinWidget;                                    // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCoinWidget*                            _needCoinWidget;                                   // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCoinWidget*                            _sumCoinWidget;                                    // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _minusButton;                                      // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _plusButton;                                       // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _closeButton;                                      // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _cancelButton;                                     // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _tradeButton;                                      // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _buttonSwitcher;                                   // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECurrencyType                                 _coinType;                                         // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3D9[0x3];                                      // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _needCoinNum;                                      // 0x03DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   _target;                                           // 0x03E0(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                   _cmd;                                              // 0x03F8(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	int32                                         _itemCategory;                                     // 0x0410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _itemCode;                                         // 0x0414(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _itemCount;                                        // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _maxBuyCount;                                      // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bShowCount;                                       // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_421[0xF];                                      // 0x0421(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_CallTradeButton(bool bTrade);
	void BP_SetBuyCount(bool bPlus);
	void BP_SetupImage(ECurrencyType Type, int32 NeedNum, const class FText& Target, const class FText& Cmd, int32 ItemCategory, int32 ItemCode, int32 ItemCount, int32 MaxBuyCount, bool bShowCount, bool bUpdate);
	void OnButtonEventDelegate__DelegateSignature(bool bTrade);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GeneralTradeWidget">();
	}
	static class UGeneralTradeWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGeneralTradeWidget>();
	}
};
static_assert(alignof(UGeneralTradeWidget) == 0x000008, "Wrong alignment on UGeneralTradeWidget");
static_assert(sizeof(UGeneralTradeWidget) == 0x000430, "Wrong size on UGeneralTradeWidget");
static_assert(offsetof(UGeneralTradeWidget, _emptyWindow) == 0x000360, "Member 'UGeneralTradeWidget::_emptyWindow' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _ItemIconImage) == 0x000368, "Member 'UGeneralTradeWidget::_ItemIconImage' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _itemNameText) == 0x000370, "Member 'UGeneralTradeWidget::_itemNameText' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _itemCountText) == 0x000378, "Member 'UGeneralTradeWidget::_itemCountText' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _itemBuyCountText) == 0x000380, "Member 'UGeneralTradeWidget::_itemBuyCountText' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _notEnoughText) == 0x000388, "Member 'UGeneralTradeWidget::_notEnoughText' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _hasCoinWidget) == 0x000390, "Member 'UGeneralTradeWidget::_hasCoinWidget' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _needCoinWidget) == 0x000398, "Member 'UGeneralTradeWidget::_needCoinWidget' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _sumCoinWidget) == 0x0003A0, "Member 'UGeneralTradeWidget::_sumCoinWidget' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _minusButton) == 0x0003A8, "Member 'UGeneralTradeWidget::_minusButton' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _plusButton) == 0x0003B0, "Member 'UGeneralTradeWidget::_plusButton' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _closeButton) == 0x0003B8, "Member 'UGeneralTradeWidget::_closeButton' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _cancelButton) == 0x0003C0, "Member 'UGeneralTradeWidget::_cancelButton' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _tradeButton) == 0x0003C8, "Member 'UGeneralTradeWidget::_tradeButton' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _buttonSwitcher) == 0x0003D0, "Member 'UGeneralTradeWidget::_buttonSwitcher' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _coinType) == 0x0003D8, "Member 'UGeneralTradeWidget::_coinType' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _needCoinNum) == 0x0003DC, "Member 'UGeneralTradeWidget::_needCoinNum' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _target) == 0x0003E0, "Member 'UGeneralTradeWidget::_target' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _cmd) == 0x0003F8, "Member 'UGeneralTradeWidget::_cmd' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _itemCategory) == 0x000410, "Member 'UGeneralTradeWidget::_itemCategory' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _itemCode) == 0x000414, "Member 'UGeneralTradeWidget::_itemCode' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _itemCount) == 0x000418, "Member 'UGeneralTradeWidget::_itemCount' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _maxBuyCount) == 0x00041C, "Member 'UGeneralTradeWidget::_maxBuyCount' has a wrong offset!");
static_assert(offsetof(UGeneralTradeWidget, _bShowCount) == 0x000420, "Member 'UGeneralTradeWidget::_bShowCount' has a wrong offset!");

// Class OutGameModule.GuildActivityStatusItemObject
// 0x0080 (0x00A8 - 0x0028)
class UGuildActivityStatusItemObject final : public UObject
{
public:
	uint8                                         Pad_28[0x80];                                      // 0x0028(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildActivityStatusItemObject">();
	}
	static class UGuildActivityStatusItemObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildActivityStatusItemObject>();
	}
};
static_assert(alignof(UGuildActivityStatusItemObject) == 0x000008, "Wrong alignment on UGuildActivityStatusItemObject");
static_assert(sizeof(UGuildActivityStatusItemObject) == 0x0000A8, "Wrong size on UGuildActivityStatusItemObject");

// Class OutGameModule.GuildApplicantListItemObject
// 0x0038 (0x0060 - 0x0028)
class UGuildApplicantListItemObject final : public UObject
{
public:
	uint8                                         Pad_28[0x38];                                      // 0x0028(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildApplicantListItemObject">();
	}
	static class UGuildApplicantListItemObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildApplicantListItemObject>();
	}
};
static_assert(alignof(UGuildApplicantListItemObject) == 0x000008, "Wrong alignment on UGuildApplicantListItemObject");
static_assert(sizeof(UGuildApplicantListItemObject) == 0x000060, "Wrong size on UGuildApplicantListItemObject");

// Class OutGameModule.GuildApplicantListWidget
// 0x0088 (0x03D8 - 0x0350)
class UGuildApplicantListWidget final : public UWidgetBase
{
public:
	class UCustomTileView*                        _tileView;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetBase*                            _emptyDisplay;                                     // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _networkWaiting;                                   // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _charaImage;                                       // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _navigationColumnCount;                            // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _entryWidth;                                       // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _entryHeight;                                      // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              _emptyWindowOffset;                                // 0x037C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _friendCount;                                      // 0x0384(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _friendCountMax;                                   // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _friendPageMax;                                    // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bAutoFocus;                                       // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGuildApplicantListItemWidget*          _selectItemWidget;                                 // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_             _onCreatedFriendList;                              // 0x03A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             _onDecideDelegate;                                 // 0x03B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             _onChangeFriendCount;                              // 0x03C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D0[0x8];                                      // 0x03D0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddItemListView();
	class UWidget* NavigationSet(int32 Index_0);
	class UWidget* NavigationSetItem();
	void OnAddedToFocusItemWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnChangeFriendCount__DelegateSignature(int32 Num, int32 Maxnum, int32 Maxpage);
	void OnCreatedFriendList__DelegateSignature();
	void OnDecideButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnInputEventDelegate__DelegateSignature(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnPressButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnRemovedFromFocusItemWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void ReceivedOnLoadCompleteEvent(int32 RequestId);
	void RequestLoadGuildPendingMemberList(int32 PageNo, EGuildMemberSort GuildMemberSort);

	const class UGuildApplicantListItemObject* GetSelectedItem() const;
	class FString GetSelectedUserId() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildApplicantListWidget">();
	}
	static class UGuildApplicantListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildApplicantListWidget>();
	}
};
static_assert(alignof(UGuildApplicantListWidget) == 0x000008, "Wrong alignment on UGuildApplicantListWidget");
static_assert(sizeof(UGuildApplicantListWidget) == 0x0003D8, "Wrong size on UGuildApplicantListWidget");
static_assert(offsetof(UGuildApplicantListWidget, _tileView) == 0x000350, "Member 'UGuildApplicantListWidget::_tileView' has a wrong offset!");
static_assert(offsetof(UGuildApplicantListWidget, _emptyDisplay) == 0x000358, "Member 'UGuildApplicantListWidget::_emptyDisplay' has a wrong offset!");
static_assert(offsetof(UGuildApplicantListWidget, _networkWaiting) == 0x000360, "Member 'UGuildApplicantListWidget::_networkWaiting' has a wrong offset!");
static_assert(offsetof(UGuildApplicantListWidget, _charaImage) == 0x000368, "Member 'UGuildApplicantListWidget::_charaImage' has a wrong offset!");
static_assert(offsetof(UGuildApplicantListWidget, _navigationColumnCount) == 0x000370, "Member 'UGuildApplicantListWidget::_navigationColumnCount' has a wrong offset!");
static_assert(offsetof(UGuildApplicantListWidget, _entryWidth) == 0x000374, "Member 'UGuildApplicantListWidget::_entryWidth' has a wrong offset!");
static_assert(offsetof(UGuildApplicantListWidget, _entryHeight) == 0x000378, "Member 'UGuildApplicantListWidget::_entryHeight' has a wrong offset!");
static_assert(offsetof(UGuildApplicantListWidget, _emptyWindowOffset) == 0x00037C, "Member 'UGuildApplicantListWidget::_emptyWindowOffset' has a wrong offset!");
static_assert(offsetof(UGuildApplicantListWidget, _friendCount) == 0x000384, "Member 'UGuildApplicantListWidget::_friendCount' has a wrong offset!");
static_assert(offsetof(UGuildApplicantListWidget, _friendCountMax) == 0x000388, "Member 'UGuildApplicantListWidget::_friendCountMax' has a wrong offset!");
static_assert(offsetof(UGuildApplicantListWidget, _friendPageMax) == 0x00038C, "Member 'UGuildApplicantListWidget::_friendPageMax' has a wrong offset!");
static_assert(offsetof(UGuildApplicantListWidget, _bAutoFocus) == 0x000390, "Member 'UGuildApplicantListWidget::_bAutoFocus' has a wrong offset!");
static_assert(offsetof(UGuildApplicantListWidget, _selectItemWidget) == 0x000398, "Member 'UGuildApplicantListWidget::_selectItemWidget' has a wrong offset!");
static_assert(offsetof(UGuildApplicantListWidget, _onCreatedFriendList) == 0x0003A0, "Member 'UGuildApplicantListWidget::_onCreatedFriendList' has a wrong offset!");
static_assert(offsetof(UGuildApplicantListWidget, _onDecideDelegate) == 0x0003B0, "Member 'UGuildApplicantListWidget::_onDecideDelegate' has a wrong offset!");
static_assert(offsetof(UGuildApplicantListWidget, _onChangeFriendCount) == 0x0003C0, "Member 'UGuildApplicantListWidget::_onChangeFriendCount' has a wrong offset!");

// Class OutGameModule.GuildCancelWidget
// 0x0008 (0x0358 - 0x0350)
class UGuildCancelWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x8];                                      // 0x0350(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnCancelCompleted();
	void OnCancelError();
	void OnUpdateComplete(int32 RequestId);
	void RequestCancelGuild();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildCancelWidget">();
	}
	static class UGuildCancelWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildCancelWidget>();
	}
};
static_assert(alignof(UGuildCancelWidget) == 0x000008, "Wrong alignment on UGuildCancelWidget");
static_assert(sizeof(UGuildCancelWidget) == 0x000358, "Wrong size on UGuildCancelWidget");

// Class OutGameModule.GuildChangeWidget
// 0x0008 (0x0358 - 0x0350)
class UGuildChangeWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x8];                                      // 0x0350(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnChangeCompleted(bool bSucsses);
	void OnUpdateComplete(int32 RequestId);
	bool RequestChangeGuildEmblem(int32 GuildEmblemId);
	bool RequestChangeGuildName(const class FText& GuildName);
	bool RequestChangeProfile(const class FText& Profile);
	bool RequestChangeTerms(EGuildPolicy GuildPolicy, EGuildJoinRule GuildJoinRule);

	int32 GetBeforeEmblemId() const;
	EGuildJoinRule GetGuildJoinRule() const;
	EGuildPolicy GetGuildPolicy() const;
	class FString GetMyGuildName() const;
	class FString GetMyGuildProfile() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildChangeWidget">();
	}
	static class UGuildChangeWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildChangeWidget>();
	}
};
static_assert(alignof(UGuildChangeWidget) == 0x000008, "Wrong alignment on UGuildChangeWidget");
static_assert(sizeof(UGuildChangeWidget) == 0x000358, "Wrong size on UGuildChangeWidget");

// Class OutGameModule.GuildChatListObject
// 0x0040 (0x0068 - 0x0028)
class UGuildChatListObject final : public UObject
{
public:
	uint8                                         Pad_28[0x40];                                      // 0x0028(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_SetItemText(const bool IsSelf, const class FString& DisplayName, const class FString& Text, const struct FDateTime& Date, const EGuildChatType Type);

	const struct FDateTime BP_GetDate() const;
	const class FString BP_GetDisplayName() const;
	const EGuildChatType BP_GetGuildChatType() const;
	const bool BP_GetIsSelf() const;
	const class FString BP_GetItemText() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildChatListObject">();
	}
	static class UGuildChatListObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildChatListObject>();
	}
};
static_assert(alignof(UGuildChatListObject) == 0x000008, "Wrong alignment on UGuildChatListObject");
static_assert(sizeof(UGuildChatListObject) == 0x000068, "Wrong size on UGuildChatListObject");

// Class OutGameModule.GuildCreateWidget
// 0x0008 (0x0418 - 0x0410)
class UGuildCreateWidget final : public UGuildPageWidgetBase
{
public:
	uint8                                         Pad_410[0x8];                                      // 0x0410(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnNgWordName();
	void OnNgWordProfile();
	void OnUpdateComplete(int32 RequestId);
	void RequestCreateGuild(const class FString& GuildName, EGuildPolicy GuildPolicy, EGuildJoinRule GuildJoinRule, const class FString& GuildProfile, int32 GuildEmblemCode);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildCreateWidget">();
	}
	static class UGuildCreateWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildCreateWidget>();
	}
};
static_assert(alignof(UGuildCreateWidget) == 0x000008, "Wrong alignment on UGuildCreateWidget");
static_assert(sizeof(UGuildCreateWidget) == 0x000418, "Wrong size on UGuildCreateWidget");

// Class OutGameModule.GuildEmblemIconImage
// 0x0010 (0x0270 - 0x0260)
class UGuildEmblemIconImage final : public UImage
{
public:
	int32                                         _itemId;                                           // 0x0260(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _bSyncLoad;                                        // 0x0264(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_265[0xB];                                      // 0x0265(0x000B)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_SetItemId(int32 ItemId);
	void OnLoadedIconImage(class UPaperSprite* Sprite);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildEmblemIconImage">();
	}
	static class UGuildEmblemIconImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildEmblemIconImage>();
	}
};
static_assert(alignof(UGuildEmblemIconImage) == 0x000010, "Wrong alignment on UGuildEmblemIconImage");
static_assert(sizeof(UGuildEmblemIconImage) == 0x000270, "Wrong size on UGuildEmblemIconImage");
static_assert(offsetof(UGuildEmblemIconImage, _itemId) == 0x000260, "Member 'UGuildEmblemIconImage::_itemId' has a wrong offset!");
static_assert(offsetof(UGuildEmblemIconImage, _bSyncLoad) == 0x000264, "Member 'UGuildEmblemIconImage::_bSyncLoad' has a wrong offset!");

// Class OutGameModule.GuildEmblemListWidget
// 0x0010 (0x0360 - 0x0350)
class UGuildEmblemListWidget final : public UWidgetBase
{
public:
	class UCustomTileView*                        _emblemTileView;                                   // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bSelectMode;                                      // 0x0358(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildEmblemListWidget">();
	}
	static class UGuildEmblemListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildEmblemListWidget>();
	}
};
static_assert(alignof(UGuildEmblemListWidget) == 0x000008, "Wrong alignment on UGuildEmblemListWidget");
static_assert(sizeof(UGuildEmblemListWidget) == 0x000360, "Wrong size on UGuildEmblemListWidget");
static_assert(offsetof(UGuildEmblemListWidget, _emblemTileView) == 0x000350, "Member 'UGuildEmblemListWidget::_emblemTileView' has a wrong offset!");
static_assert(offsetof(UGuildEmblemListWidget, _bSelectMode) == 0x000358, "Member 'UGuildEmblemListWidget::_bSelectMode' has a wrong offset!");

// Class OutGameModule.GuildInviteWidget
// 0x0038 (0x0388 - 0x0350)
class UGuildInviteWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x8];                                      // 0x0350(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetGeneralWindow*                   _inviteWindow;                                     // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _popupWindow;                                      // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _blockListWindow;                                  // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGeneralPageCarouselWidget*             _generalPageCarousel;                              // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_             OnCloseEventDelegate;                              // 0x0378(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void CloseWidget();
	void GeneralPageCarouselNavigation(EUINavigation UiNavigation);
	void GeneralPageCarouselNavigationRight(EUINavigation UiNavigation);
	void OnChangedIndexEvent(int32 NewIndex, bool IsFocus);
	void OnCloseWidgetEventDelegate__DelegateSignature();
	void OnInviteCompleted();
	void OnReceivedCloseWebApiErrorWindow();
	void OnReceivedUpdateWebApiError();
	void OnUpdateComplete(int32 RequestId);
	void RequestFriendList(bool bIgnoreFriendStatus);
	void RequestInviteGuild();
	void RequestInviteGuild_PlayerId(const class FString& PlayerId);
	void ResetTextCount();
	void UpdateTextCount(int32 Num, int32 Maxpage);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildInviteWidget">();
	}
	static class UGuildInviteWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildInviteWidget>();
	}
};
static_assert(alignof(UGuildInviteWidget) == 0x000008, "Wrong alignment on UGuildInviteWidget");
static_assert(sizeof(UGuildInviteWidget) == 0x000388, "Wrong size on UGuildInviteWidget");
static_assert(offsetof(UGuildInviteWidget, _inviteWindow) == 0x000358, "Member 'UGuildInviteWidget::_inviteWindow' has a wrong offset!");
static_assert(offsetof(UGuildInviteWidget, _popupWindow) == 0x000360, "Member 'UGuildInviteWidget::_popupWindow' has a wrong offset!");
static_assert(offsetof(UGuildInviteWidget, _blockListWindow) == 0x000368, "Member 'UGuildInviteWidget::_blockListWindow' has a wrong offset!");
static_assert(offsetof(UGuildInviteWidget, _generalPageCarousel) == 0x000370, "Member 'UGuildInviteWidget::_generalPageCarousel' has a wrong offset!");
static_assert(offsetof(UGuildInviteWidget, OnCloseEventDelegate) == 0x000378, "Member 'UGuildInviteWidget::OnCloseEventDelegate' has a wrong offset!");

// Class OutGameModule.GuildMainWidget
// 0x0130 (0x0540 - 0x0410)
class UGuildMainWidget final : public UGuildPageWidgetBase
{
public:
	class UTextBlock*                             _boostCountTextBlock;                              // 0x0410(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGuildScoreWidget*                      _guildScoreWidget;                                 // 0x0418(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _guildLevelTextBlock;                              // 0x0420(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _guildMemberTextBlock;                             // 0x0428(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _guildMemberMaxTextBlock;                          // 0x0430(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _boostTimeTextBlock;                               // 0x0438(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_440[0x10];                                     // 0x0440(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   _guildLevelTextFormat;                             // 0x0450(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                   _memberCountTextFormat;                            // 0x0468(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                   _boostTextFormat;                                  // 0x0480(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_498[0x8];                                      // 0x0498(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EGuildPolicy, class FText>               _policyTextMap;                                    // 0x04A0(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	TMap<EGuildJoinRule, class FText>             _termsTextMap;                                     // 0x04F0(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)

public:
	void HiddenNewNotice();
	void OnEnableBoostButton(bool bButtonEnable, bool bCanUsePosition);
	void OnErrorWindowClosed();
	void OnGoToMainMenu();
	void OnGuildLevel(int32 GuildLevel);
	void OnLoadComplete(int32 RequestId);
	void OnOpenBlockListPopup();
	void OnOpenLevelUp();
	void OnSetLeaderNameText(const class FText& LeaderNameText);
	void OnSetPolicyTextBlock(const class FText& PolicyText);
	void OnShowBoostTime(bool bShow);
	void OnShowLoading(bool bLoading);
	void OnShowNewNotice(bool bShow);
	void OnUpdateComplete(int32 RequestId);
	void OnUpdateGuild();
	void RequestGuildInfo();
	void RequestUseBoost();
	void SetBgmControlValue(float ControlValue);
	void UpdateBoostTime();
	void UpdateGuildView();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildMainWidget">();
	}
	static class UGuildMainWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildMainWidget>();
	}
};
static_assert(alignof(UGuildMainWidget) == 0x000008, "Wrong alignment on UGuildMainWidget");
static_assert(sizeof(UGuildMainWidget) == 0x000540, "Wrong size on UGuildMainWidget");
static_assert(offsetof(UGuildMainWidget, _boostCountTextBlock) == 0x000410, "Member 'UGuildMainWidget::_boostCountTextBlock' has a wrong offset!");
static_assert(offsetof(UGuildMainWidget, _guildScoreWidget) == 0x000418, "Member 'UGuildMainWidget::_guildScoreWidget' has a wrong offset!");
static_assert(offsetof(UGuildMainWidget, _guildLevelTextBlock) == 0x000420, "Member 'UGuildMainWidget::_guildLevelTextBlock' has a wrong offset!");
static_assert(offsetof(UGuildMainWidget, _guildMemberTextBlock) == 0x000428, "Member 'UGuildMainWidget::_guildMemberTextBlock' has a wrong offset!");
static_assert(offsetof(UGuildMainWidget, _guildMemberMaxTextBlock) == 0x000430, "Member 'UGuildMainWidget::_guildMemberMaxTextBlock' has a wrong offset!");
static_assert(offsetof(UGuildMainWidget, _boostTimeTextBlock) == 0x000438, "Member 'UGuildMainWidget::_boostTimeTextBlock' has a wrong offset!");
static_assert(offsetof(UGuildMainWidget, _guildLevelTextFormat) == 0x000450, "Member 'UGuildMainWidget::_guildLevelTextFormat' has a wrong offset!");
static_assert(offsetof(UGuildMainWidget, _memberCountTextFormat) == 0x000468, "Member 'UGuildMainWidget::_memberCountTextFormat' has a wrong offset!");
static_assert(offsetof(UGuildMainWidget, _boostTextFormat) == 0x000480, "Member 'UGuildMainWidget::_boostTextFormat' has a wrong offset!");
static_assert(offsetof(UGuildMainWidget, _policyTextMap) == 0x0004A0, "Member 'UGuildMainWidget::_policyTextMap' has a wrong offset!");
static_assert(offsetof(UGuildMainWidget, _termsTextMap) == 0x0004F0, "Member 'UGuildMainWidget::_termsTextMap' has a wrong offset!");

// Class OutGameModule.GuildMemberItemWidget
// 0x0060 (0x0690 - 0x0630)
class UGuildMemberItemWidget final : public UPlatformWidgetButton
{
public:
	uint8                                         Pad_630[0x10];                                     // 0x0630(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             _userNameTextBlock;                                // 0x0640(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _contributionTextBlock;                            // 0x0648(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _scoreTextBlock;                                   // 0x0650(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _chief;                                            // 0x0658(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _subChief;                                         // 0x0660(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _myself;                                           // 0x0668(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTimeWidget*                            _loginTime;                                        // 0x0670(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _likeCountTextBlock;                               // 0x0678(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _newWidget;                                        // 0x0680(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _likeRemainsTextBlock;                             // 0x0688(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnSetShowLikeRemainsView(bool bShow);
	void OnSetShowLoginView(bool bShow);

	bool CanAddLike() const;
	EGuildPosition GetLeaderFlg() const;
	bool GetMyself() const;
	class FString GetUserId() const;
	class FString GetUserName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildMemberItemWidget">();
	}
	static class UGuildMemberItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildMemberItemWidget>();
	}
};
static_assert(alignof(UGuildMemberItemWidget) == 0x000008, "Wrong alignment on UGuildMemberItemWidget");
static_assert(sizeof(UGuildMemberItemWidget) == 0x000690, "Wrong size on UGuildMemberItemWidget");
static_assert(offsetof(UGuildMemberItemWidget, _userNameTextBlock) == 0x000640, "Member 'UGuildMemberItemWidget::_userNameTextBlock' has a wrong offset!");
static_assert(offsetof(UGuildMemberItemWidget, _contributionTextBlock) == 0x000648, "Member 'UGuildMemberItemWidget::_contributionTextBlock' has a wrong offset!");
static_assert(offsetof(UGuildMemberItemWidget, _scoreTextBlock) == 0x000650, "Member 'UGuildMemberItemWidget::_scoreTextBlock' has a wrong offset!");
static_assert(offsetof(UGuildMemberItemWidget, _chief) == 0x000658, "Member 'UGuildMemberItemWidget::_chief' has a wrong offset!");
static_assert(offsetof(UGuildMemberItemWidget, _subChief) == 0x000660, "Member 'UGuildMemberItemWidget::_subChief' has a wrong offset!");
static_assert(offsetof(UGuildMemberItemWidget, _myself) == 0x000668, "Member 'UGuildMemberItemWidget::_myself' has a wrong offset!");
static_assert(offsetof(UGuildMemberItemWidget, _loginTime) == 0x000670, "Member 'UGuildMemberItemWidget::_loginTime' has a wrong offset!");
static_assert(offsetof(UGuildMemberItemWidget, _likeCountTextBlock) == 0x000678, "Member 'UGuildMemberItemWidget::_likeCountTextBlock' has a wrong offset!");
static_assert(offsetof(UGuildMemberItemWidget, _newWidget) == 0x000680, "Member 'UGuildMemberItemWidget::_newWidget' has a wrong offset!");
static_assert(offsetof(UGuildMemberItemWidget, _likeRemainsTextBlock) == 0x000688, "Member 'UGuildMemberItemWidget::_likeRemainsTextBlock' has a wrong offset!");

// Class OutGameModule.GuildMenuWindow
// 0x0010 (0x0360 - 0x0350)
class UGuildMenuWindow final : public UWidgetBase
{
public:
	TArray<class UWidgetBase*>                    _buttonArray;                                      // 0x0350(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	void HiddenNewNotice();
	void OnEnableApplicantButton(bool bEnable);
	void OnEnableChangeButton(bool bEnable);
	void OnShowNewNotice(bool bShow);
	void SetButtonArray(const TArray<class UWidgetBase*>& buttonArray);
	void UpdateButton();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildMenuWindow">();
	}
	static class UGuildMenuWindow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildMenuWindow>();
	}
};
static_assert(alignof(UGuildMenuWindow) == 0x000008, "Wrong alignment on UGuildMenuWindow");
static_assert(sizeof(UGuildMenuWindow) == 0x000360, "Wrong size on UGuildMenuWindow");
static_assert(offsetof(UGuildMenuWindow, _buttonArray) == 0x000350, "Member 'UGuildMenuWindow::_buttonArray' has a wrong offset!");

// Class OutGameModule.GuildSearchItemObject
// 0x0040 (0x0068 - 0x0028)
class UGuildSearchItemObject final : public UObject
{
public:
	uint8                                         Pad_28[0x40];                                      // 0x0028(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildSearchItemObject">();
	}
	static class UGuildSearchItemObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildSearchItemObject>();
	}
};
static_assert(alignof(UGuildSearchItemObject) == 0x000008, "Wrong alignment on UGuildSearchItemObject");
static_assert(sizeof(UGuildSearchItemObject) == 0x000068, "Wrong size on UGuildSearchItemObject");

// Class OutGameModule.GuildSearchWidget
// 0x0040 (0x0450 - 0x0410)
class UGuildSearchWidget final : public UGuildPageWidgetBase
{
public:
	class UCustomTileView*                        _tileView;                                         // 0x0410(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_418[0x38];                                     // 0x0418(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CreateGuildList();
	void OnButtonOpenGuildDetail(class UAppWidget* Button, EWidgetInputType InputType);
	void OnLoadComplete(int32 RequestId);
	void OpenGuildDetail();
	void RequestCreateGuildList();
	void SetSearchCondition(const struct FDbGuildSearchCondition& DbGuildSearchCondition);
	void ShowListView();
	void ShowNetworkWaiting();
	void ShowNoneList();

	bool IsFilter() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildSearchWidget">();
	}
	static class UGuildSearchWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildSearchWidget>();
	}
};
static_assert(alignof(UGuildSearchWidget) == 0x000008, "Wrong alignment on UGuildSearchWidget");
static_assert(sizeof(UGuildSearchWidget) == 0x000450, "Wrong size on UGuildSearchWidget");
static_assert(offsetof(UGuildSearchWidget, _tileView) == 0x000410, "Member 'UGuildSearchWidget::_tileView' has a wrong offset!");

// Class OutGameModule.GuildTopWidget
// 0x0068 (0x03B8 - 0x0350)
class UGuildTopWidget final : public UWidgetBase
{
public:
	class UWidgetSwitcher*                        _modeSwitcher;                                     // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetButton*                          _returnButton;                                     // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTabWidget*                             _createTab;                                        // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGuildPageWidgetBase*>           _createGuildPageWidgetArray;                       // 0x0368(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UGuildPageWidgetBase*>           _joinGuildPageWidgetArray;                         // 0x0378(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAnchorData                            _tabViewLayout;                                    // 0x0388(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	class UTabWidget*                             _joinTab;                                          // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	bool BP_CheckParentControl();
	void OnShowBgLevelUp();
	void OnShowLevelUp();
	void SetGuildPageWidget(const TArray<class UGuildPageWidgetBase*>& CreateGuildPageWidgetArray, const TArray<class UGuildPageWidgetBase*>& JoinGuildPageWidgetArray);
	void SetJoinGuildView(bool bJoin);
	void UpdateJoinGuild();
	void UpdateTab();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuildTopWidget">();
	}
	static class UGuildTopWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuildTopWidget>();
	}
};
static_assert(alignof(UGuildTopWidget) == 0x000008, "Wrong alignment on UGuildTopWidget");
static_assert(sizeof(UGuildTopWidget) == 0x0003B8, "Wrong size on UGuildTopWidget");
static_assert(offsetof(UGuildTopWidget, _modeSwitcher) == 0x000350, "Member 'UGuildTopWidget::_modeSwitcher' has a wrong offset!");
static_assert(offsetof(UGuildTopWidget, _returnButton) == 0x000358, "Member 'UGuildTopWidget::_returnButton' has a wrong offset!");
static_assert(offsetof(UGuildTopWidget, _createTab) == 0x000360, "Member 'UGuildTopWidget::_createTab' has a wrong offset!");
static_assert(offsetof(UGuildTopWidget, _createGuildPageWidgetArray) == 0x000368, "Member 'UGuildTopWidget::_createGuildPageWidgetArray' has a wrong offset!");
static_assert(offsetof(UGuildTopWidget, _joinGuildPageWidgetArray) == 0x000378, "Member 'UGuildTopWidget::_joinGuildPageWidgetArray' has a wrong offset!");
static_assert(offsetof(UGuildTopWidget, _tabViewLayout) == 0x000388, "Member 'UGuildTopWidget::_tabViewLayout' has a wrong offset!");
static_assert(offsetof(UGuildTopWidget, _joinTab) == 0x0003B0, "Member 'UGuildTopWidget::_joinTab' has a wrong offset!");

// Class OutGameModule.ItemDetailPopup
// 0x0008 (0x0358 - 0x0350)
class UItemDetailPopup final : public UWidgetBase
{
public:
	class UItemDetailsWidget*                     _ItemDetail;                                       // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemDetailPopup">();
	}
	static class UItemDetailPopup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemDetailPopup>();
	}
};
static_assert(alignof(UItemDetailPopup) == 0x000008, "Wrong alignment on UItemDetailPopup");
static_assert(sizeof(UItemDetailPopup) == 0x000358, "Wrong size on UItemDetailPopup");
static_assert(offsetof(UItemDetailPopup, _ItemDetail) == 0x000350, "Member 'UItemDetailPopup::_ItemDetail' has a wrong offset!");

// Class OutGameModule.ItemGetListIEntryObject
// 0x0020 (0x0050 - 0x0030)
class UItemGetListIEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x20];                                      // 0x0030(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemGetListIEntryObject">();
	}
	static class UItemGetListIEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemGetListIEntryObject>();
	}
};
static_assert(alignof(UItemGetListIEntryObject) == 0x000008, "Wrong alignment on UItemGetListIEntryObject");
static_assert(sizeof(UItemGetListIEntryObject) == 0x000050, "Wrong size on UItemGetListIEntryObject");

// Class OutGameModule.ItemGetListWidget
// 0x00B0 (0x0400 - 0x0350)
class UItemGetListWidget final : public UWidgetBase
{
public:
	class UWidgetAnimation*                       _ani_in;                                           // 0x0350(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_358[0x10];                                     // 0x0358(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetButton*                          _nextButton;                                       // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _showTypeSwitcher;                                 // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _adjustTextTitle;                                  // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _adjustTextSubTitle;                               // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _switchNormalView;                                 // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomTileView*                        _normalTileView;                                   // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _NormalName;                                       // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomTileView*                        _normalNamedTileView;                              // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _2LineLeftName;                                    // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomTileView*                        _2LineLeftTileView;                                // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _2LineRightName;                                   // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomTileView*                        _2LineRightTileView;                               // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _3LineLeftName;                                    // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomTileView*                        _3LineLeftTileView;                                // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _3LineCenterName;                                  // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomTileView*                        _3LineCenterTileView;                              // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _3LineRightName;                                   // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomTileView*                        _3LineRightTileView;                               // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3F8[0x8];                                      // 0x03F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_Close();
	void BP_Open();
	class UWidget* Do2LineLeftWidgetNavigation(EUINavigation UiNavigation);
	class UWidget* Do2LineRightWidgetNavigation(EUINavigation UiNavigation);
	class UWidget* Do3LineCenterWidgetNavigation(EUINavigation UiNavigation);
	class UWidget* Do3LineLeftWidgetNavigation(EUINavigation UiNavigation);
	class UWidget* Do3LineRightWidgetNavigation(EUINavigation UiNavigation);
	class UWidget* DoNextButtonWidgetNavigation(EUINavigation UiNavigation);
	void OnAnimationInFinished();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemGetListWidget">();
	}
	static class UItemGetListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemGetListWidget>();
	}
};
static_assert(alignof(UItemGetListWidget) == 0x000008, "Wrong alignment on UItemGetListWidget");
static_assert(sizeof(UItemGetListWidget) == 0x000400, "Wrong size on UItemGetListWidget");
static_assert(offsetof(UItemGetListWidget, _ani_in) == 0x000350, "Member 'UItemGetListWidget::_ani_in' has a wrong offset!");
static_assert(offsetof(UItemGetListWidget, _nextButton) == 0x000368, "Member 'UItemGetListWidget::_nextButton' has a wrong offset!");
static_assert(offsetof(UItemGetListWidget, _showTypeSwitcher) == 0x000370, "Member 'UItemGetListWidget::_showTypeSwitcher' has a wrong offset!");
static_assert(offsetof(UItemGetListWidget, _adjustTextTitle) == 0x000378, "Member 'UItemGetListWidget::_adjustTextTitle' has a wrong offset!");
static_assert(offsetof(UItemGetListWidget, _adjustTextSubTitle) == 0x000380, "Member 'UItemGetListWidget::_adjustTextSubTitle' has a wrong offset!");
static_assert(offsetof(UItemGetListWidget, _switchNormalView) == 0x000388, "Member 'UItemGetListWidget::_switchNormalView' has a wrong offset!");
static_assert(offsetof(UItemGetListWidget, _normalTileView) == 0x000390, "Member 'UItemGetListWidget::_normalTileView' has a wrong offset!");
static_assert(offsetof(UItemGetListWidget, _NormalName) == 0x000398, "Member 'UItemGetListWidget::_NormalName' has a wrong offset!");
static_assert(offsetof(UItemGetListWidget, _normalNamedTileView) == 0x0003A0, "Member 'UItemGetListWidget::_normalNamedTileView' has a wrong offset!");
static_assert(offsetof(UItemGetListWidget, _2LineLeftName) == 0x0003A8, "Member 'UItemGetListWidget::_2LineLeftName' has a wrong offset!");
static_assert(offsetof(UItemGetListWidget, _2LineLeftTileView) == 0x0003B0, "Member 'UItemGetListWidget::_2LineLeftTileView' has a wrong offset!");
static_assert(offsetof(UItemGetListWidget, _2LineRightName) == 0x0003B8, "Member 'UItemGetListWidget::_2LineRightName' has a wrong offset!");
static_assert(offsetof(UItemGetListWidget, _2LineRightTileView) == 0x0003C0, "Member 'UItemGetListWidget::_2LineRightTileView' has a wrong offset!");
static_assert(offsetof(UItemGetListWidget, _3LineLeftName) == 0x0003C8, "Member 'UItemGetListWidget::_3LineLeftName' has a wrong offset!");
static_assert(offsetof(UItemGetListWidget, _3LineLeftTileView) == 0x0003D0, "Member 'UItemGetListWidget::_3LineLeftTileView' has a wrong offset!");
static_assert(offsetof(UItemGetListWidget, _3LineCenterName) == 0x0003D8, "Member 'UItemGetListWidget::_3LineCenterName' has a wrong offset!");
static_assert(offsetof(UItemGetListWidget, _3LineCenterTileView) == 0x0003E0, "Member 'UItemGetListWidget::_3LineCenterTileView' has a wrong offset!");
static_assert(offsetof(UItemGetListWidget, _3LineRightName) == 0x0003E8, "Member 'UItemGetListWidget::_3LineRightName' has a wrong offset!");
static_assert(offsetof(UItemGetListWidget, _3LineRightTileView) == 0x0003F0, "Member 'UItemGetListWidget::_3LineRightTileView' has a wrong offset!");

// Class OutGameModule.ItemIconImage
// 0x0050 (0x02B0 - 0x0260)
class UItemIconImage final : public UImage
{
public:
	class FString                                 _itemCategory;                                     // 0x0260(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _itemCategoryCode;                                 // 0x0270(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EItemCategory                                 _itemCategoryEnum;                                 // 0x0274(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _itemId;                                           // 0x0278(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _bIsSmall;                                         // 0x027C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _bSyncLoad;                                        // 0x027D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_27E[0x2];                                      // 0x027E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UPaperSprite>            _spriteSoftPtr;                                    // 0x0280(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2A8[0x8];                                      // 0x02A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnLoadedIconImage(class UPaperSprite* Sprite);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemIconImage">();
	}
	static class UItemIconImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemIconImage>();
	}
};
static_assert(alignof(UItemIconImage) == 0x000010, "Wrong alignment on UItemIconImage");
static_assert(sizeof(UItemIconImage) == 0x0002B0, "Wrong size on UItemIconImage");
static_assert(offsetof(UItemIconImage, _itemCategory) == 0x000260, "Member 'UItemIconImage::_itemCategory' has a wrong offset!");
static_assert(offsetof(UItemIconImage, _itemCategoryCode) == 0x000270, "Member 'UItemIconImage::_itemCategoryCode' has a wrong offset!");
static_assert(offsetof(UItemIconImage, _itemCategoryEnum) == 0x000274, "Member 'UItemIconImage::_itemCategoryEnum' has a wrong offset!");
static_assert(offsetof(UItemIconImage, _itemId) == 0x000278, "Member 'UItemIconImage::_itemId' has a wrong offset!");
static_assert(offsetof(UItemIconImage, _bIsSmall) == 0x00027C, "Member 'UItemIconImage::_bIsSmall' has a wrong offset!");
static_assert(offsetof(UItemIconImage, _bSyncLoad) == 0x00027D, "Member 'UItemIconImage::_bSyncLoad' has a wrong offset!");
static_assert(offsetof(UItemIconImage, _spriteSoftPtr) == 0x000280, "Member 'UItemIconImage::_spriteSoftPtr' has a wrong offset!");

// Class OutGameModule.ItemListObject
// 0x0038 (0x0068 - 0x0030)
class UItemListObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x38];                                      // 0x0030(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 BP_GetItemId() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemListObject">();
	}
	static class UItemListObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemListObject>();
	}
};
static_assert(alignof(UItemListObject) == 0x000008, "Wrong alignment on UItemListObject");
static_assert(sizeof(UItemListObject) == 0x000068, "Wrong size on UItemListObject");

// Class OutGameModule.ItemListAppWidget
// 0x0058 (0x0458 - 0x0400)
class UItemListAppWidget final : public UCustomTileViewHasWidget
{
public:
	class UCanvasPanel*                           _window;                                           // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _itemDetailsPanel;                                 // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemDetailsWidget*                     _detailWidget;                                     // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetBase*                            _emptyDisplay;                                     // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _listOpenButton;                                   // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULoadIconWidget*                        _networkLoadingIcon;                               // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemSubMenuAppWidget*                  _filter;                                           // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_438[0x8];                                      // 0x0438(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemListObject*                        _selectedItem;                                     // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_448[0x10];                                     // 0x0448(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_AddItemListView();
	bool BP_HasItems();
	void BP_OnChangeTab();
	void BP_OnTryChangeTab();
	void BP_RemoveItemListView();
	class UWidget* DoCustomListOpenButtonNavigation(EUINavigation UiNavigation);
	void OnAddedToFocusButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnDecideButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnFinishFetchDataEvent(int32 RequestId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemListAppWidget">();
	}
	static class UItemListAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemListAppWidget>();
	}
};
static_assert(alignof(UItemListAppWidget) == 0x000008, "Wrong alignment on UItemListAppWidget");
static_assert(sizeof(UItemListAppWidget) == 0x000458, "Wrong size on UItemListAppWidget");
static_assert(offsetof(UItemListAppWidget, _window) == 0x000400, "Member 'UItemListAppWidget::_window' has a wrong offset!");
static_assert(offsetof(UItemListAppWidget, _itemDetailsPanel) == 0x000408, "Member 'UItemListAppWidget::_itemDetailsPanel' has a wrong offset!");
static_assert(offsetof(UItemListAppWidget, _detailWidget) == 0x000410, "Member 'UItemListAppWidget::_detailWidget' has a wrong offset!");
static_assert(offsetof(UItemListAppWidget, _emptyDisplay) == 0x000418, "Member 'UItemListAppWidget::_emptyDisplay' has a wrong offset!");
static_assert(offsetof(UItemListAppWidget, _listOpenButton) == 0x000420, "Member 'UItemListAppWidget::_listOpenButton' has a wrong offset!");
static_assert(offsetof(UItemListAppWidget, _networkLoadingIcon) == 0x000428, "Member 'UItemListAppWidget::_networkLoadingIcon' has a wrong offset!");
static_assert(offsetof(UItemListAppWidget, _filter) == 0x000430, "Member 'UItemListAppWidget::_filter' has a wrong offset!");
static_assert(offsetof(UItemListAppWidget, _selectedItem) == 0x000440, "Member 'UItemListAppWidget::_selectedItem' has a wrong offset!");

// Class OutGameModule.ItemMissionDetails
// 0x0028 (0x0610 - 0x05E8)
class UItemMissionDetails final : public UMissionDetails
{
public:
	class UItemIconWidget*                        _itemIcon;                                         // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _itemCount;                                        // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5F8[0x18];                                     // 0x05F8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemMissionDetails">();
	}
	static class UItemMissionDetails* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemMissionDetails>();
	}
};
static_assert(alignof(UItemMissionDetails) == 0x000008, "Wrong alignment on UItemMissionDetails");
static_assert(sizeof(UItemMissionDetails) == 0x000610, "Wrong size on UItemMissionDetails");
static_assert(offsetof(UItemMissionDetails, _itemIcon) == 0x0005E8, "Member 'UItemMissionDetails::_itemIcon' has a wrong offset!");
static_assert(offsetof(UItemMissionDetails, _itemCount) == 0x0005F0, "Member 'UItemMissionDetails::_itemCount' has a wrong offset!");

// Class OutGameModule.ItemMissionDetailsObject
// 0x0018 (0x00E8 - 0x00D0)
class UItemMissionDetailsObject final : public UMissionDetailsObject
{
public:
	struct FItemGetListItemParam                  _item;                                             // 0x00D0(0x0014)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemMissionDetailsObject">();
	}
	static class UItemMissionDetailsObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemMissionDetailsObject>();
	}
};
static_assert(alignof(UItemMissionDetailsObject) == 0x000008, "Wrong alignment on UItemMissionDetailsObject");
static_assert(sizeof(UItemMissionDetailsObject) == 0x0000E8, "Wrong size on UItemMissionDetailsObject");
static_assert(offsetof(UItemMissionDetailsObject, _item) == 0x0000D0, "Member 'UItemMissionDetailsObject::_item' has a wrong offset!");

// Class OutGameModule.ItemSubMenuAppWidget
// 0x0018 (0x0400 - 0x03E8)
class UItemSubMenuAppWidget final : public UAppWidget
{
public:
	FMulticastInlineDelegateProperty_             OnRequesetLoadItem;                                // 0x03E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class USortPopupWidget*                       _commonSortPopup;                                  // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ItemSubMenuAppWidget">();
	}
	static class UItemSubMenuAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemSubMenuAppWidget>();
	}
};
static_assert(alignof(UItemSubMenuAppWidget) == 0x000008, "Wrong alignment on UItemSubMenuAppWidget");
static_assert(sizeof(UItemSubMenuAppWidget) == 0x000400, "Wrong size on UItemSubMenuAppWidget");
static_assert(offsetof(UItemSubMenuAppWidget, OnRequesetLoadItem) == 0x0003E8, "Member 'UItemSubMenuAppWidget::OnRequesetLoadItem' has a wrong offset!");
static_assert(offsetof(UItemSubMenuAppWidget, _commonSortPopup) == 0x0003F8, "Member 'UItemSubMenuAppWidget::_commonSortPopup' has a wrong offset!");

// Class OutGameModule.KeyConfigSettingWidget
// 0x0180 (0x04F0 - 0x0370)
class UKeyConfigSettingWidget final : public UBaseSettingWidget
{
public:
	class UWidgetSwitcher*                        _padImage;                                         // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _operationSwitcher;                                // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _padOn;                                            // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _keyboardOn;                                       // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonKeyWidget*                _L2;                                               // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonKeyboardWidget*           _melee;                                            // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonKeyboardWidget*           _moveUp;                                           // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _changeButton;                                     // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<EKeyConfigurableCommand>               _commandList;                                      // 0x03B0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<EKeyConfigurableCommand>               _commandButtonList;                                // 0x03C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<EKeyConfigurableCommand>               _commandArrowList;                                 // 0x03D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<EKeyConfigurableCommand>               _commandLongArrowList;                             // 0x03E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          _bPadOperation;                                    // 0x03F0(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameOption*                            _gameOption;                                       // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_400[0xF0];                                     // 0x0400(0x00F0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_GameKeyboardButtonOptionDataSetting();
	void BP_GamePadButtonOptionDataSetting();
	void OnChangeControllerEvent();

	TArray<EKeyConfigurableCommand> BP_GetCommandList(EKeyConfigCommandListType KeyType) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KeyConfigSettingWidget">();
	}
	static class UKeyConfigSettingWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKeyConfigSettingWidget>();
	}
};
static_assert(alignof(UKeyConfigSettingWidget) == 0x000008, "Wrong alignment on UKeyConfigSettingWidget");
static_assert(sizeof(UKeyConfigSettingWidget) == 0x0004F0, "Wrong size on UKeyConfigSettingWidget");
static_assert(offsetof(UKeyConfigSettingWidget, _padImage) == 0x000370, "Member 'UKeyConfigSettingWidget::_padImage' has a wrong offset!");
static_assert(offsetof(UKeyConfigSettingWidget, _operationSwitcher) == 0x000378, "Member 'UKeyConfigSettingWidget::_operationSwitcher' has a wrong offset!");
static_assert(offsetof(UKeyConfigSettingWidget, _padOn) == 0x000380, "Member 'UKeyConfigSettingWidget::_padOn' has a wrong offset!");
static_assert(offsetof(UKeyConfigSettingWidget, _keyboardOn) == 0x000388, "Member 'UKeyConfigSettingWidget::_keyboardOn' has a wrong offset!");
static_assert(offsetof(UKeyConfigSettingWidget, _L2) == 0x000390, "Member 'UKeyConfigSettingWidget::_L2' has a wrong offset!");
static_assert(offsetof(UKeyConfigSettingWidget, _melee) == 0x000398, "Member 'UKeyConfigSettingWidget::_melee' has a wrong offset!");
static_assert(offsetof(UKeyConfigSettingWidget, _moveUp) == 0x0003A0, "Member 'UKeyConfigSettingWidget::_moveUp' has a wrong offset!");
static_assert(offsetof(UKeyConfigSettingWidget, _changeButton) == 0x0003A8, "Member 'UKeyConfigSettingWidget::_changeButton' has a wrong offset!");
static_assert(offsetof(UKeyConfigSettingWidget, _commandList) == 0x0003B0, "Member 'UKeyConfigSettingWidget::_commandList' has a wrong offset!");
static_assert(offsetof(UKeyConfigSettingWidget, _commandButtonList) == 0x0003C0, "Member 'UKeyConfigSettingWidget::_commandButtonList' has a wrong offset!");
static_assert(offsetof(UKeyConfigSettingWidget, _commandArrowList) == 0x0003D0, "Member 'UKeyConfigSettingWidget::_commandArrowList' has a wrong offset!");
static_assert(offsetof(UKeyConfigSettingWidget, _commandLongArrowList) == 0x0003E0, "Member 'UKeyConfigSettingWidget::_commandLongArrowList' has a wrong offset!");
static_assert(offsetof(UKeyConfigSettingWidget, _bPadOperation) == 0x0003F0, "Member 'UKeyConfigSettingWidget::_bPadOperation' has a wrong offset!");
static_assert(offsetof(UKeyConfigSettingWidget, _gameOption) == 0x0003F8, "Member 'UKeyConfigSettingWidget::_gameOption' has a wrong offset!");

// Class OutGameModule.KeyConfigWidget
// 0x0020 (0x0370 - 0x0350)
class UKeyConfigWidget final : public UWidgetBase
{
public:
	class UGameOption*                            _gameOption;                                       // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UListView*                              _gamePadKeyList;                                   // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UKeyConfigElemObject*>           _customizableKeyConfigObjects;                     // 0x0360(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KeyConfigWidget">();
	}
	static class UKeyConfigWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKeyConfigWidget>();
	}
};
static_assert(alignof(UKeyConfigWidget) == 0x000008, "Wrong alignment on UKeyConfigWidget");
static_assert(sizeof(UKeyConfigWidget) == 0x000370, "Wrong size on UKeyConfigWidget");
static_assert(offsetof(UKeyConfigWidget, _gameOption) == 0x000350, "Member 'UKeyConfigWidget::_gameOption' has a wrong offset!");
static_assert(offsetof(UKeyConfigWidget, _gamePadKeyList) == 0x000358, "Member 'UKeyConfigWidget::_gamePadKeyList' has a wrong offset!");
static_assert(offsetof(UKeyConfigWidget, _customizableKeyConfigObjects) == 0x000360, "Member 'UKeyConfigWidget::_customizableKeyConfigObjects' has a wrong offset!");

// Class OutGameModule.LoginBonusBuyWindowWidget
// 0x0010 (0x0360 - 0x0350)
class ULoginBonusBuyWindowWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 BP_GetNeedCoinNum();
	ECurrencyType BP_GetNeedCoinType();
	void BP_OnBuyCancel();
	void BP_OnBuyDecide();
	void BP_OnWidgetClose();
	void OnLoadCompleteEvent(int32 RequestId);
	void OpenShopTopLevel();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoginBonusBuyWindowWidget">();
	}
	static class ULoginBonusBuyWindowWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoginBonusBuyWindowWidget>();
	}
};
static_assert(alignof(ULoginBonusBuyWindowWidget) == 0x000008, "Wrong alignment on ULoginBonusBuyWindowWidget");
static_assert(sizeof(ULoginBonusBuyWindowWidget) == 0x000360, "Wrong size on ULoginBonusBuyWindowWidget");

// Class OutGameModule.LoginBonusDailyWidget
// 0x00D8 (0x0428 - 0x0350)
class ULoginBonusDailyWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x20];                                     // 0x0350(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       _ani_in;                                           // 0x0370(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_378[0x10];                                     // 0x0378(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 _charaImage;                                       // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTileView*                              _itemTileView;                                     // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _bg;                                               // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULoginBonusPremiumButtonWidget*         _premiumButton;                                    // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _tokushoButton;                                    // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTimeWidget*                            _remainTime;                                       // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _period;                                           // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _premiumSwitcher;                                  // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C8[0x60];                                     // 0x03C8(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool BP_IsBuyNowPremium();
	void CutAnimation_Internal();
	void OnFadeOutFinished();
	void OnIconCursorOutAnimationFinished();
	void OnIconGetInAnimationFinished();
	void OnIconPremiumGetAnimationFinished();
	void OnInAnimationFinished_Internal();
	void OnItemGetListClosed();
	void OnNextCursorInAnimationFinished();
	void OnOpenFinishedEvent();
	void OnPlayIconPremiumGetAnimation();
	void OpenItemGetList();
	void OpenPremiumButton();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoginBonusDailyWidget">();
	}
	static class ULoginBonusDailyWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoginBonusDailyWidget>();
	}
};
static_assert(alignof(ULoginBonusDailyWidget) == 0x000008, "Wrong alignment on ULoginBonusDailyWidget");
static_assert(sizeof(ULoginBonusDailyWidget) == 0x000428, "Wrong size on ULoginBonusDailyWidget");
static_assert(offsetof(ULoginBonusDailyWidget, _ani_in) == 0x000370, "Member 'ULoginBonusDailyWidget::_ani_in' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyWidget, _charaImage) == 0x000388, "Member 'ULoginBonusDailyWidget::_charaImage' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyWidget, _itemTileView) == 0x000390, "Member 'ULoginBonusDailyWidget::_itemTileView' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyWidget, _bg) == 0x000398, "Member 'ULoginBonusDailyWidget::_bg' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyWidget, _premiumButton) == 0x0003A0, "Member 'ULoginBonusDailyWidget::_premiumButton' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyWidget, _tokushoButton) == 0x0003A8, "Member 'ULoginBonusDailyWidget::_tokushoButton' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyWidget, _remainTime) == 0x0003B0, "Member 'ULoginBonusDailyWidget::_remainTime' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyWidget, _period) == 0x0003B8, "Member 'ULoginBonusDailyWidget::_period' has a wrong offset!");
static_assert(offsetof(ULoginBonusDailyWidget, _premiumSwitcher) == 0x0003C0, "Member 'ULoginBonusDailyWidget::_premiumSwitcher' has a wrong offset!");

// Class OutGameModule.LoginBonusItemEntryObject
// 0x0038 (0x0068 - 0x0030)
class ULoginBonusItemEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x38];                                      // 0x0030(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoginBonusItemEntryObject">();
	}
	static class ULoginBonusItemEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoginBonusItemEntryObject>();
	}
};
static_assert(alignof(ULoginBonusItemEntryObject) == 0x000008, "Wrong alignment on ULoginBonusItemEntryObject");
static_assert(sizeof(ULoginBonusItemEntryObject) == 0x000068, "Wrong size on ULoginBonusItemEntryObject");

// Class OutGameModule.LoginBonusPremiumButtonWidget
// 0x0028 (0x04B0 - 0x0488)
class ULoginBonusPremiumButtonWidget final : public UWidgetButton
{
public:
	class UItemIconImage*                         _costIcon;                                         // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         _costIconRichText;                                 // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _price;                                            // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _textSwitcher;                                     // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _period;                                           // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoginBonusPremiumButtonWidget">();
	}
	static class ULoginBonusPremiumButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoginBonusPremiumButtonWidget>();
	}
};
static_assert(alignof(ULoginBonusPremiumButtonWidget) == 0x000008, "Wrong alignment on ULoginBonusPremiumButtonWidget");
static_assert(sizeof(ULoginBonusPremiumButtonWidget) == 0x0004B0, "Wrong size on ULoginBonusPremiumButtonWidget");
static_assert(offsetof(ULoginBonusPremiumButtonWidget, _costIcon) == 0x000488, "Member 'ULoginBonusPremiumButtonWidget::_costIcon' has a wrong offset!");
static_assert(offsetof(ULoginBonusPremiumButtonWidget, _costIconRichText) == 0x000490, "Member 'ULoginBonusPremiumButtonWidget::_costIconRichText' has a wrong offset!");
static_assert(offsetof(ULoginBonusPremiumButtonWidget, _price) == 0x000498, "Member 'ULoginBonusPremiumButtonWidget::_price' has a wrong offset!");
static_assert(offsetof(ULoginBonusPremiumButtonWidget, _textSwitcher) == 0x0004A0, "Member 'ULoginBonusPremiumButtonWidget::_textSwitcher' has a wrong offset!");
static_assert(offsetof(ULoginBonusPremiumButtonWidget, _period) == 0x0004A8, "Member 'ULoginBonusPremiumButtonWidget::_period' has a wrong offset!");

// Class OutGameModule.MainMenuBarButtonWidget
// 0x0050 (0x03A0 - 0x0350)
class UMainMenuBarButtonWidget final : public UWidgetBase
{
public:
	class UWidgetSwitcher*                        _buttonSwitcher;                                   // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _titleText;                                        // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _titleTextOne;                                     // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _exText;                                           // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   _titleTextOnSpawn;                                 // 0x0370(0x0018)(BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPublic)
	class FText                                   _exTextOnSpawn;                                    // 0x0388(0x0018)(BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPublic)

public:
	void PlaySelectAnimation();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MainMenuBarButtonWidget">();
	}
	static class UMainMenuBarButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMainMenuBarButtonWidget>();
	}
};
static_assert(alignof(UMainMenuBarButtonWidget) == 0x000008, "Wrong alignment on UMainMenuBarButtonWidget");
static_assert(sizeof(UMainMenuBarButtonWidget) == 0x0003A0, "Wrong size on UMainMenuBarButtonWidget");
static_assert(offsetof(UMainMenuBarButtonWidget, _buttonSwitcher) == 0x000350, "Member 'UMainMenuBarButtonWidget::_buttonSwitcher' has a wrong offset!");
static_assert(offsetof(UMainMenuBarButtonWidget, _titleText) == 0x000358, "Member 'UMainMenuBarButtonWidget::_titleText' has a wrong offset!");
static_assert(offsetof(UMainMenuBarButtonWidget, _titleTextOne) == 0x000360, "Member 'UMainMenuBarButtonWidget::_titleTextOne' has a wrong offset!");
static_assert(offsetof(UMainMenuBarButtonWidget, _exText) == 0x000368, "Member 'UMainMenuBarButtonWidget::_exText' has a wrong offset!");
static_assert(offsetof(UMainMenuBarButtonWidget, _titleTextOnSpawn) == 0x000370, "Member 'UMainMenuBarButtonWidget::_titleTextOnSpawn' has a wrong offset!");
static_assert(offsetof(UMainMenuBarButtonWidget, _exTextOnSpawn) == 0x000388, "Member 'UMainMenuBarButtonWidget::_exTextOnSpawn' has a wrong offset!");

// Class OutGameModule.MainMenuBarListEntryWidget
// 0x0058 (0x03A8 - 0x0350)
class UMainMenuBarListEntryWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x8];                                      // 0x0350(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _bHiddenFlag;                                      // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          _debugJpFlag;                                      // 0x0359(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35A[0x6];                                      // 0x035A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNamedSlot*                             _imageSlot;                                        // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _selectFrame;                                      // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _inactiveSelectFrame;                              // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _nonActiveBoard;                                   // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _buttonSwitcher;                                   // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _noTranslationLabelText;                           // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _withTranslationLabelText;                         // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _withTranslationText;                              // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _withTranslationBoard;                             // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void IsHoverChanged(bool Select, bool Hovered);
	void OnChangeBattleSequence(EBattleStartSequenceType Sequence);
	void SetMainMenuBarEnable(bool bEnable);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MainMenuBarListEntryWidget">();
	}
	static class UMainMenuBarListEntryWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMainMenuBarListEntryWidget>();
	}
};
static_assert(alignof(UMainMenuBarListEntryWidget) == 0x000008, "Wrong alignment on UMainMenuBarListEntryWidget");
static_assert(sizeof(UMainMenuBarListEntryWidget) == 0x0003A8, "Wrong size on UMainMenuBarListEntryWidget");
static_assert(offsetof(UMainMenuBarListEntryWidget, _bHiddenFlag) == 0x000358, "Member 'UMainMenuBarListEntryWidget::_bHiddenFlag' has a wrong offset!");
static_assert(offsetof(UMainMenuBarListEntryWidget, _debugJpFlag) == 0x000359, "Member 'UMainMenuBarListEntryWidget::_debugJpFlag' has a wrong offset!");
static_assert(offsetof(UMainMenuBarListEntryWidget, _imageSlot) == 0x000360, "Member 'UMainMenuBarListEntryWidget::_imageSlot' has a wrong offset!");
static_assert(offsetof(UMainMenuBarListEntryWidget, _selectFrame) == 0x000368, "Member 'UMainMenuBarListEntryWidget::_selectFrame' has a wrong offset!");
static_assert(offsetof(UMainMenuBarListEntryWidget, _inactiveSelectFrame) == 0x000370, "Member 'UMainMenuBarListEntryWidget::_inactiveSelectFrame' has a wrong offset!");
static_assert(offsetof(UMainMenuBarListEntryWidget, _nonActiveBoard) == 0x000378, "Member 'UMainMenuBarListEntryWidget::_nonActiveBoard' has a wrong offset!");
static_assert(offsetof(UMainMenuBarListEntryWidget, _buttonSwitcher) == 0x000380, "Member 'UMainMenuBarListEntryWidget::_buttonSwitcher' has a wrong offset!");
static_assert(offsetof(UMainMenuBarListEntryWidget, _noTranslationLabelText) == 0x000388, "Member 'UMainMenuBarListEntryWidget::_noTranslationLabelText' has a wrong offset!");
static_assert(offsetof(UMainMenuBarListEntryWidget, _withTranslationLabelText) == 0x000390, "Member 'UMainMenuBarListEntryWidget::_withTranslationLabelText' has a wrong offset!");
static_assert(offsetof(UMainMenuBarListEntryWidget, _withTranslationText) == 0x000398, "Member 'UMainMenuBarListEntryWidget::_withTranslationText' has a wrong offset!");
static_assert(offsetof(UMainMenuBarListEntryWidget, _withTranslationBoard) == 0x0003A0, "Member 'UMainMenuBarListEntryWidget::_withTranslationBoard' has a wrong offset!");

// Class OutGameModule.MainMenuInterface
// 0x0000 (0x0028 - 0x0028)
class IMainMenuInterface final : public IInterface
{
public:
	class UTileView* GetBarTileWidget();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MainMenuInterface">();
	}
	static class IMainMenuInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IMainMenuInterface>();
	}
};
static_assert(alignof(IMainMenuInterface) == 0x000008, "Wrong alignment on IMainMenuInterface");
static_assert(sizeof(IMainMenuInterface) == 0x000028, "Wrong size on IMainMenuInterface");

// Class OutGameModule.TitleMenuWidget
// 0x0070 (0x03C0 - 0x0350)
class UTitleMenuWidget : public UWidgetBase
{
public:
	bool                                          _bOpenSubLevel;                                    // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UWorld>                  _openSubLevel;                                     // 0x0358(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_380[0x8];                                      // 0x0380(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanel*                           _exitGamePanel;                                    // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpacer*                                _endSpacer;                                        // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _bnidPanel;                                        // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpacer*                                _bnidSpacer;                                       // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _bnidButton;                                       // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _settingButton;                                    // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindowFrame*              _generalWindowFrame;                               // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_OpenSubLevel();
	void CloseSubLevel();
	void OnClickedBlockBGWindow();
	void OnClosedWindow();
	void OnDecideWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnLoadCompletedCheckBnIdStatus(int32 RequestId);
	void OnOpenedWindow();
	void OnReceivedCloseWebApiErrorWindow();
	void OnReceivedWebApiError();
	void OpenNetworkWaiting();
	void RequestCheckBnIdStatus();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TitleMenuWidget">();
	}
	static class UTitleMenuWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTitleMenuWidget>();
	}
};
static_assert(alignof(UTitleMenuWidget) == 0x000008, "Wrong alignment on UTitleMenuWidget");
static_assert(sizeof(UTitleMenuWidget) == 0x0003C0, "Wrong size on UTitleMenuWidget");
static_assert(offsetof(UTitleMenuWidget, _bOpenSubLevel) == 0x000350, "Member 'UTitleMenuWidget::_bOpenSubLevel' has a wrong offset!");
static_assert(offsetof(UTitleMenuWidget, _openSubLevel) == 0x000358, "Member 'UTitleMenuWidget::_openSubLevel' has a wrong offset!");
static_assert(offsetof(UTitleMenuWidget, _exitGamePanel) == 0x000388, "Member 'UTitleMenuWidget::_exitGamePanel' has a wrong offset!");
static_assert(offsetof(UTitleMenuWidget, _endSpacer) == 0x000390, "Member 'UTitleMenuWidget::_endSpacer' has a wrong offset!");
static_assert(offsetof(UTitleMenuWidget, _bnidPanel) == 0x000398, "Member 'UTitleMenuWidget::_bnidPanel' has a wrong offset!");
static_assert(offsetof(UTitleMenuWidget, _bnidSpacer) == 0x0003A0, "Member 'UTitleMenuWidget::_bnidSpacer' has a wrong offset!");
static_assert(offsetof(UTitleMenuWidget, _bnidButton) == 0x0003A8, "Member 'UTitleMenuWidget::_bnidButton' has a wrong offset!");
static_assert(offsetof(UTitleMenuWidget, _settingButton) == 0x0003B0, "Member 'UTitleMenuWidget::_settingButton' has a wrong offset!");
static_assert(offsetof(UTitleMenuWidget, _generalWindowFrame) == 0x0003B8, "Member 'UTitleMenuWidget::_generalWindowFrame' has a wrong offset!");

// Class OutGameModule.MainMenuWidget
// 0x0198 (0x0580 - 0x03E8)
class UMainMenuWidget final : public UAppWidget
{
public:
	uint8                                         Pad_3E8[0x8];                                      // 0x03E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMainMenuBarWidget*                     _mainMenuBar;                                      // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_             OnCloseAllPopupWindowDelegate;                     // 0x03F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                  _noticeWorldsMap;                                  // 0x0408(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                  _rankingWorldsMap;                                 // 0x0430(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UWorld>>          _defaultBackgroundWorldsMap;                       // 0x0458(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<int32, TSoftObjectPtr<class UWorld>>     _backgroundWorldsMap;                              // 0x0468(0x0050)(Edit, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                  _recommendNoticeLevel;                             // 0x04B8(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                  _maintenanceStartTimeLevel;                        // 0x04E0(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bDebugMaintenanceStartTimeLevelDisplay;           // 0x0508(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_509[0x1F];                                     // 0x0509(0x001F)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _currentStageIndex;                                // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_52C[0x4];                                      // 0x052C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreamingDynamic*                 _currentStageStreamingDynamic;                     // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULevelStreamingDynamic*                 _spawnLevelStreamingDynamic;                       // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULevelStreamingDynamic*                 _lightPostLevelStreamingDynamic;                   // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _levelShownFlag;                                   // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _outGameCharaLoad;                                 // 0x0549(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_54A[0x1E];                                     // 0x054A(0x001E)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreamingDynamic*                 _noticeSubLevelStreamingDynamic;                   // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULevelStreaming*                        _recommendNoticeLevelStreaming;                    // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelStreaming*                        _maintenanceStartTimeLevelStreaming;               // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_EndCharacterCamera();
	void BP_SetStageCamera(int32 CharacterNum, float Time);
	void BP_StartCharacterCamera();
	void BP_UpdateStageSubLevel();
	int32 CallDebugSquadCountUp(ECharacterId CharacterId);
	void CallFuncLevelOpen();
	void DebugTutorialForceFinished();
	void DefaultTabSetting();
	int32 GetTabIndex();
	void LastTabSetting();
	void OnChangedMainMenu(int32 Index_0);
	void OnChangeTab(int32 Index_0);
	void OnCloseAllPopupWindowDelegate__DelegateSignature();
	void OnLevelShown();
	void OnLevelShownGetStageData2();
	void OnLevelShownSpawnPointLevel();
	void OnNativeFadeIn();
	void OnOutGameCharaLoad();
	void OnRecommendNoticeLevelHidden();
	void OnSquadInfoChangedEvent();
	void OnSquadNumChanged(int32 SquadNum);
	void OnSubLevelHidden();
	void OnTeamUpAutoStartBattleCompleteEvent(EAutoStartBattleState State);
	void OpenMaintenanceTimeSubLevel();
	void OpenNoticeSubLevel();
	void OpenRankingSubLevel();
	void OpenRecommendSubLevel();
	void OpenTutorialTipsSubLevel();
	void ReceivedOnLoadCompleteEvent(int32 RequestId);
	void SetSequenceTab();
	void SetTabEnable(bool bEnable);
	void SetUseStandbyVoice(bool bUse);
	void StartBattle(bool bSpectatorOnly, const class FString& CustomServerAddress);
	void StartMainMenuWindow();
	void SubLevelHiddenTutorial(ETutorialPopupScene Scene);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MainMenuWidget">();
	}
	static class UMainMenuWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMainMenuWidget>();
	}
};
static_assert(alignof(UMainMenuWidget) == 0x000008, "Wrong alignment on UMainMenuWidget");
static_assert(sizeof(UMainMenuWidget) == 0x000580, "Wrong size on UMainMenuWidget");
static_assert(offsetof(UMainMenuWidget, _mainMenuBar) == 0x0003F0, "Member 'UMainMenuWidget::_mainMenuBar' has a wrong offset!");
static_assert(offsetof(UMainMenuWidget, OnCloseAllPopupWindowDelegate) == 0x0003F8, "Member 'UMainMenuWidget::OnCloseAllPopupWindowDelegate' has a wrong offset!");
static_assert(offsetof(UMainMenuWidget, _noticeWorldsMap) == 0x000408, "Member 'UMainMenuWidget::_noticeWorldsMap' has a wrong offset!");
static_assert(offsetof(UMainMenuWidget, _rankingWorldsMap) == 0x000430, "Member 'UMainMenuWidget::_rankingWorldsMap' has a wrong offset!");
static_assert(offsetof(UMainMenuWidget, _defaultBackgroundWorldsMap) == 0x000458, "Member 'UMainMenuWidget::_defaultBackgroundWorldsMap' has a wrong offset!");
static_assert(offsetof(UMainMenuWidget, _backgroundWorldsMap) == 0x000468, "Member 'UMainMenuWidget::_backgroundWorldsMap' has a wrong offset!");
static_assert(offsetof(UMainMenuWidget, _recommendNoticeLevel) == 0x0004B8, "Member 'UMainMenuWidget::_recommendNoticeLevel' has a wrong offset!");
static_assert(offsetof(UMainMenuWidget, _maintenanceStartTimeLevel) == 0x0004E0, "Member 'UMainMenuWidget::_maintenanceStartTimeLevel' has a wrong offset!");
static_assert(offsetof(UMainMenuWidget, _bDebugMaintenanceStartTimeLevelDisplay) == 0x000508, "Member 'UMainMenuWidget::_bDebugMaintenanceStartTimeLevelDisplay' has a wrong offset!");
static_assert(offsetof(UMainMenuWidget, _currentStageIndex) == 0x000528, "Member 'UMainMenuWidget::_currentStageIndex' has a wrong offset!");
static_assert(offsetof(UMainMenuWidget, _currentStageStreamingDynamic) == 0x000530, "Member 'UMainMenuWidget::_currentStageStreamingDynamic' has a wrong offset!");
static_assert(offsetof(UMainMenuWidget, _spawnLevelStreamingDynamic) == 0x000538, "Member 'UMainMenuWidget::_spawnLevelStreamingDynamic' has a wrong offset!");
static_assert(offsetof(UMainMenuWidget, _lightPostLevelStreamingDynamic) == 0x000540, "Member 'UMainMenuWidget::_lightPostLevelStreamingDynamic' has a wrong offset!");
static_assert(offsetof(UMainMenuWidget, _levelShownFlag) == 0x000548, "Member 'UMainMenuWidget::_levelShownFlag' has a wrong offset!");
static_assert(offsetof(UMainMenuWidget, _outGameCharaLoad) == 0x000549, "Member 'UMainMenuWidget::_outGameCharaLoad' has a wrong offset!");
static_assert(offsetof(UMainMenuWidget, _noticeSubLevelStreamingDynamic) == 0x000568, "Member 'UMainMenuWidget::_noticeSubLevelStreamingDynamic' has a wrong offset!");
static_assert(offsetof(UMainMenuWidget, _recommendNoticeLevelStreaming) == 0x000570, "Member 'UMainMenuWidget::_recommendNoticeLevelStreaming' has a wrong offset!");
static_assert(offsetof(UMainMenuWidget, _maintenanceStartTimeLevelStreaming) == 0x000578, "Member 'UMainMenuWidget::_maintenanceStartTimeLevelStreaming' has a wrong offset!");

// Class OutGameModule.MissionBaseWidget
// 0x0058 (0x03A8 - 0x0350)
class UMissionBaseWidget final : public UWidgetBase
{
public:
	class UWidgetButton*                          _receiveButton;                                    // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _switcher;                                         // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTimeWidget*                            _timer;                                            // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_368[0x40];                                     // 0x0368(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Receive(class UAppWidget* Widget, EWidgetInputType InputType);
	void SwitchViewTimer(const bool bViewRewardTimer);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MissionBaseWidget">();
	}
	static class UMissionBaseWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionBaseWidget>();
	}
};
static_assert(alignof(UMissionBaseWidget) == 0x000008, "Wrong alignment on UMissionBaseWidget");
static_assert(sizeof(UMissionBaseWidget) == 0x0003A8, "Wrong size on UMissionBaseWidget");
static_assert(offsetof(UMissionBaseWidget, _receiveButton) == 0x000350, "Member 'UMissionBaseWidget::_receiveButton' has a wrong offset!");
static_assert(offsetof(UMissionBaseWidget, _switcher) == 0x000358, "Member 'UMissionBaseWidget::_switcher' has a wrong offset!");
static_assert(offsetof(UMissionBaseWidget, _timer) == 0x000360, "Member 'UMissionBaseWidget::_timer' has a wrong offset!");

// Class OutGameModule.MissionDetailsWindow
// 0x0058 (0x03A8 - 0x0350)
class UMissionDetailsWindow final : public UWidgetBase
{
public:
	class UWidgetText*                            _title;                                            // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMissionProgressWidget*                 _progress;                                         // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconWidget*                        _item;                                             // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMissionStarAddWidget*                  _starCount;                                        // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _switcher;                                         // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _closeButton;                                      // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralEmptyWindow*              _window;                                           // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_388[0x20];                                     // 0x0388(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Close(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnClosed();
	void OnOpen();
	void OnOpened();
	void Transition(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MissionDetailsWindow">();
	}
	static class UMissionDetailsWindow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionDetailsWindow>();
	}
};
static_assert(alignof(UMissionDetailsWindow) == 0x000008, "Wrong alignment on UMissionDetailsWindow");
static_assert(sizeof(UMissionDetailsWindow) == 0x0003A8, "Wrong size on UMissionDetailsWindow");
static_assert(offsetof(UMissionDetailsWindow, _title) == 0x000350, "Member 'UMissionDetailsWindow::_title' has a wrong offset!");
static_assert(offsetof(UMissionDetailsWindow, _progress) == 0x000358, "Member 'UMissionDetailsWindow::_progress' has a wrong offset!");
static_assert(offsetof(UMissionDetailsWindow, _item) == 0x000360, "Member 'UMissionDetailsWindow::_item' has a wrong offset!");
static_assert(offsetof(UMissionDetailsWindow, _starCount) == 0x000368, "Member 'UMissionDetailsWindow::_starCount' has a wrong offset!");
static_assert(offsetof(UMissionDetailsWindow, _switcher) == 0x000370, "Member 'UMissionDetailsWindow::_switcher' has a wrong offset!");
static_assert(offsetof(UMissionDetailsWindow, _closeButton) == 0x000378, "Member 'UMissionDetailsWindow::_closeButton' has a wrong offset!");
static_assert(offsetof(UMissionDetailsWindow, _window) == 0x000380, "Member 'UMissionDetailsWindow::_window' has a wrong offset!");

// Class OutGameModule.MissionProgressWidget
// 0x0010 (0x0360 - 0x0350)
class UMissionProgressWidget final : public UWidgetBase
{
public:
	class UTextBlock*                             _progress;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _total;                                            // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MissionProgressWidget">();
	}
	static class UMissionProgressWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionProgressWidget>();
	}
};
static_assert(alignof(UMissionProgressWidget) == 0x000008, "Wrong alignment on UMissionProgressWidget");
static_assert(sizeof(UMissionProgressWidget) == 0x000360, "Wrong size on UMissionProgressWidget");
static_assert(offsetof(UMissionProgressWidget, _progress) == 0x000350, "Member 'UMissionProgressWidget::_progress' has a wrong offset!");
static_assert(offsetof(UMissionProgressWidget, _total) == 0x000358, "Member 'UMissionProgressWidget::_total' has a wrong offset!");

// Class OutGameModule.MissionStarAddWidget
// 0x0018 (0x0368 - 0x0350)
class UMissionStarAddWidget final : public UWidgetBase
{
public:
	class UMissionStarWidgetBase*                 _starCount;                                        // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMissionStarWidgetBase*                 _addStarCount;                                     // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _addText;                                          // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MissionStarAddWidget">();
	}
	static class UMissionStarAddWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionStarAddWidget>();
	}
};
static_assert(alignof(UMissionStarAddWidget) == 0x000008, "Wrong alignment on UMissionStarAddWidget");
static_assert(sizeof(UMissionStarAddWidget) == 0x000368, "Wrong size on UMissionStarAddWidget");
static_assert(offsetof(UMissionStarAddWidget, _starCount) == 0x000350, "Member 'UMissionStarAddWidget::_starCount' has a wrong offset!");
static_assert(offsetof(UMissionStarAddWidget, _addStarCount) == 0x000358, "Member 'UMissionStarAddWidget::_addStarCount' has a wrong offset!");
static_assert(offsetof(UMissionStarAddWidget, _addText) == 0x000360, "Member 'UMissionStarAddWidget::_addText' has a wrong offset!");

// Class OutGameModule.MissionStarCountItemWidget
// 0x0008 (0x0358 - 0x0350)
class UMissionStarCountItemWidget final : public UWidgetBase
{
public:
	class UWidgetText*                            _count;                                            // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MissionStarCountItemWidget">();
	}
	static class UMissionStarCountItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionStarCountItemWidget>();
	}
};
static_assert(alignof(UMissionStarCountItemWidget) == 0x000008, "Wrong alignment on UMissionStarCountItemWidget");
static_assert(sizeof(UMissionStarCountItemWidget) == 0x000358, "Wrong size on UMissionStarCountItemWidget");
static_assert(offsetof(UMissionStarCountItemWidget, _count) == 0x000350, "Member 'UMissionStarCountItemWidget::_count' has a wrong offset!");

// Class OutGameModule.MissionStarItemWidget
// 0x0038 (0x0388 - 0x0350)
class UMissionStarItemWidget final : public UWidgetBase
{
public:
	class UImage*                                 _starImage;                                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _aniValid;                                         // 0x0358(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_360[0x28];                                     // 0x0360(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnFinishPlayValid() const;
	void OnNextAddStar() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MissionStarItemWidget">();
	}
	static class UMissionStarItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionStarItemWidget>();
	}
};
static_assert(alignof(UMissionStarItemWidget) == 0x000008, "Wrong alignment on UMissionStarItemWidget");
static_assert(sizeof(UMissionStarItemWidget) == 0x000388, "Wrong size on UMissionStarItemWidget");
static_assert(offsetof(UMissionStarItemWidget, _starImage) == 0x000350, "Member 'UMissionStarItemWidget::_starImage' has a wrong offset!");
static_assert(offsetof(UMissionStarItemWidget, _aniValid) == 0x000358, "Member 'UMissionStarItemWidget::_aniValid' has a wrong offset!");

// Class OutGameModule.MissionStarWidget
// 0x0020 (0x03C0 - 0x03A0)
class UMissionStarWidget final : public UMissionStarWidgetBase
{
public:
	bool                                          _bFill;                                            // 0x03A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanel*                           _moveStarPanel;                                    // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B0[0x10];                                     // 0x03B0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void MoveStar();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MissionStarWidget">();
	}
	static class UMissionStarWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionStarWidget>();
	}
};
static_assert(alignof(UMissionStarWidget) == 0x000008, "Wrong alignment on UMissionStarWidget");
static_assert(sizeof(UMissionStarWidget) == 0x0003C0, "Wrong size on UMissionStarWidget");
static_assert(offsetof(UMissionStarWidget, _bFill) == 0x0003A0, "Member 'UMissionStarWidget::_bFill' has a wrong offset!");
static_assert(offsetof(UMissionStarWidget, _moveStarPanel) == 0x0003A8, "Member 'UMissionStarWidget::_moveStarPanel' has a wrong offset!");

// Class OutGameModule.MissionTabWidget
// 0x0030 (0x0380 - 0x0350)
class UMissionTabWidget final : public UWidgetBase
{
public:
	class UWidgetSwitcher*                        _missionSwitcher;                                  // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTabWidget*                             _tabWidget;                                        // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_360[0x20];                                     // 0x0360(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EndTutorial(int32 RequestId);
	void OnClosedTutorial();
	void OnEndAutoPlayTutorial();
	void OnLoadedMission(int32 RequestId);
	void OnPopupGeneralWindowClosed();
	void OnReceivedMission(int32 RequestId);
	void OnSwitchTab(int32 NewSelectTab);
	void OnSystemErrorEvent(int32 RequestId, const class FName Key, const class FName Message);
	void SetTutorialFlag(const bool bTutorial);
	void SwitchEventTab();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MissionTabWidget">();
	}
	static class UMissionTabWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionTabWidget>();
	}
};
static_assert(alignof(UMissionTabWidget) == 0x000008, "Wrong alignment on UMissionTabWidget");
static_assert(sizeof(UMissionTabWidget) == 0x000380, "Wrong size on UMissionTabWidget");
static_assert(offsetof(UMissionTabWidget, _missionSwitcher) == 0x000350, "Member 'UMissionTabWidget::_missionSwitcher' has a wrong offset!");
static_assert(offsetof(UMissionTabWidget, _tabWidget) == 0x000358, "Member 'UMissionTabWidget::_tabWidget' has a wrong offset!");

// Class OutGameModule.MyADEditSelectButtonWidget
// 0x0050 (0x0438 - 0x03E8)
class UMyADEditSelectButtonWidget final : public UAppWidget
{
public:
	uint8                                         Pad_3E8[0x8];                                      // 0x03E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMyADPartsListEntryObject*              _itemObject;                                       // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusAnimationWidget*                  _focusIcon;                                        // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _equipImage;                                       // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMyADPartsWidget*                       _myADPartsWidget;                                  // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _textSwitcher;                                     // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _itemAdjustText;                                   // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _itemAdjustTextBase;                               // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _itemAdjustTextSub;                                // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_430[0x8];                                      // 0x0430(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnReceivedChangedCustomizeMyADParts(EMyAdPartsCategory Type, int32 Code, bool Message);
	void UpdateMyADParts();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MyADEditSelectButtonWidget">();
	}
	static class UMyADEditSelectButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMyADEditSelectButtonWidget>();
	}
};
static_assert(alignof(UMyADEditSelectButtonWidget) == 0x000008, "Wrong alignment on UMyADEditSelectButtonWidget");
static_assert(sizeof(UMyADEditSelectButtonWidget) == 0x000438, "Wrong size on UMyADEditSelectButtonWidget");
static_assert(offsetof(UMyADEditSelectButtonWidget, _itemObject) == 0x0003F0, "Member 'UMyADEditSelectButtonWidget::_itemObject' has a wrong offset!");
static_assert(offsetof(UMyADEditSelectButtonWidget, _focusIcon) == 0x0003F8, "Member 'UMyADEditSelectButtonWidget::_focusIcon' has a wrong offset!");
static_assert(offsetof(UMyADEditSelectButtonWidget, _equipImage) == 0x000400, "Member 'UMyADEditSelectButtonWidget::_equipImage' has a wrong offset!");
static_assert(offsetof(UMyADEditSelectButtonWidget, _myADPartsWidget) == 0x000408, "Member 'UMyADEditSelectButtonWidget::_myADPartsWidget' has a wrong offset!");
static_assert(offsetof(UMyADEditSelectButtonWidget, _textSwitcher) == 0x000410, "Member 'UMyADEditSelectButtonWidget::_textSwitcher' has a wrong offset!");
static_assert(offsetof(UMyADEditSelectButtonWidget, _itemAdjustText) == 0x000418, "Member 'UMyADEditSelectButtonWidget::_itemAdjustText' has a wrong offset!");
static_assert(offsetof(UMyADEditSelectButtonWidget, _itemAdjustTextBase) == 0x000420, "Member 'UMyADEditSelectButtonWidget::_itemAdjustTextBase' has a wrong offset!");
static_assert(offsetof(UMyADEditSelectButtonWidget, _itemAdjustTextSub) == 0x000428, "Member 'UMyADEditSelectButtonWidget::_itemAdjustTextSub' has a wrong offset!");

// Class OutGameModule.MyADEditTopWidget
// 0x0028 (0x0378 - 0x0350)
class UMyADEditTopWidget final : public UWidgetBase
{
public:
	class UPlayerDatabaseWork*                    _playerDatabaseWork;                               // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMyADDisplayWidget*                     _previewMyAD;                                      // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMyADEditWidget*                        _backImage;                                        // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMyADEditWidget*                        _effect;                                           // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMyADEditWidget*                        _text;                                             // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnReceivedChangeEditCode(int32 Code, EMyAdPartsCategory PartsType);
	void OnReceivedChangeEditMessage(int32 Code);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MyADEditTopWidget">();
	}
	static class UMyADEditTopWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMyADEditTopWidget>();
	}
};
static_assert(alignof(UMyADEditTopWidget) == 0x000008, "Wrong alignment on UMyADEditTopWidget");
static_assert(sizeof(UMyADEditTopWidget) == 0x000378, "Wrong size on UMyADEditTopWidget");
static_assert(offsetof(UMyADEditTopWidget, _playerDatabaseWork) == 0x000350, "Member 'UMyADEditTopWidget::_playerDatabaseWork' has a wrong offset!");
static_assert(offsetof(UMyADEditTopWidget, _previewMyAD) == 0x000358, "Member 'UMyADEditTopWidget::_previewMyAD' has a wrong offset!");
static_assert(offsetof(UMyADEditTopWidget, _backImage) == 0x000360, "Member 'UMyADEditTopWidget::_backImage' has a wrong offset!");
static_assert(offsetof(UMyADEditTopWidget, _effect) == 0x000368, "Member 'UMyADEditTopWidget::_effect' has a wrong offset!");
static_assert(offsetof(UMyADEditTopWidget, _text) == 0x000370, "Member 'UMyADEditTopWidget::_text' has a wrong offset!");

// Class OutGameModule.MyADEditWidgetMessage
// 0x0088 (0x04D8 - 0x0450)
class UMyADEditWidgetMessage final : public UMyADEditWidget
{
public:
	class UWidgetGeneralSelectiveWindow*          _selectLanguage;                                   // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _selectLanguageButton;                             // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _textMoveSwitcher;                                 // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _leftButton;                                       // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _rightButton;                                      // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_478[0x10];                                     // 0x0478(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EMdLocalization, class FText>            _localizationMap;                                  // 0x0488(0x0050)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

public:
	void OnReceivedLeftButtonDecideDelegateEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnReceivedRightButtonDecideDelegateEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnReceivedSelectLanguageButtonDecideDelegateEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnReceivedSelectLanguageClosedDelegateEvent();
	void OnReceivedSelectLanguageDecideDelegateEvent(int32 Selectindex, class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MyADEditWidgetMessage">();
	}
	static class UMyADEditWidgetMessage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMyADEditWidgetMessage>();
	}
};
static_assert(alignof(UMyADEditWidgetMessage) == 0x000008, "Wrong alignment on UMyADEditWidgetMessage");
static_assert(sizeof(UMyADEditWidgetMessage) == 0x0004D8, "Wrong size on UMyADEditWidgetMessage");
static_assert(offsetof(UMyADEditWidgetMessage, _selectLanguage) == 0x000450, "Member 'UMyADEditWidgetMessage::_selectLanguage' has a wrong offset!");
static_assert(offsetof(UMyADEditWidgetMessage, _selectLanguageButton) == 0x000458, "Member 'UMyADEditWidgetMessage::_selectLanguageButton' has a wrong offset!");
static_assert(offsetof(UMyADEditWidgetMessage, _textMoveSwitcher) == 0x000460, "Member 'UMyADEditWidgetMessage::_textMoveSwitcher' has a wrong offset!");
static_assert(offsetof(UMyADEditWidgetMessage, _leftButton) == 0x000468, "Member 'UMyADEditWidgetMessage::_leftButton' has a wrong offset!");
static_assert(offsetof(UMyADEditWidgetMessage, _rightButton) == 0x000470, "Member 'UMyADEditWidgetMessage::_rightButton' has a wrong offset!");
static_assert(offsetof(UMyADEditWidgetMessage, _localizationMap) == 0x000488, "Member 'UMyADEditWidgetMessage::_localizationMap' has a wrong offset!");

// Class OutGameModule.MyADPartsListEntryObject
// 0x00B0 (0x00E0 - 0x0030)
class UMyADPartsListEntryObject final : public UListViewEntryObjectBase
{
public:
	struct FMasterDataMyAdParts                   _mdMyAdParts;                                      // 0x0030(0x0048)(BlueprintVisible, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	TArray<struct FMasterDataMyAdMessage>         _mdMyAdMessage;                                    // 0x0078(0x0010)(BlueprintVisible, ZeroConstructor, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	EMyAdPartsCategory                            _partsType;                                        // 0x0088(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bMessageFlag;                                     // 0x0089(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bEquipFlag;                                       // 0x008A(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bRemoveEquipFlag;                                 // 0x008B(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EMyAdPartsCategory, int32>               _itemCodeMap;                                      // 0x0090(0x0050)(BlueprintVisible, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MyADPartsListEntryObject">();
	}
	static class UMyADPartsListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMyADPartsListEntryObject>();
	}
};
static_assert(alignof(UMyADPartsListEntryObject) == 0x000008, "Wrong alignment on UMyADPartsListEntryObject");
static_assert(sizeof(UMyADPartsListEntryObject) == 0x0000E0, "Wrong size on UMyADPartsListEntryObject");
static_assert(offsetof(UMyADPartsListEntryObject, _mdMyAdParts) == 0x000030, "Member 'UMyADPartsListEntryObject::_mdMyAdParts' has a wrong offset!");
static_assert(offsetof(UMyADPartsListEntryObject, _mdMyAdMessage) == 0x000078, "Member 'UMyADPartsListEntryObject::_mdMyAdMessage' has a wrong offset!");
static_assert(offsetof(UMyADPartsListEntryObject, _partsType) == 0x000088, "Member 'UMyADPartsListEntryObject::_partsType' has a wrong offset!");
static_assert(offsetof(UMyADPartsListEntryObject, _bMessageFlag) == 0x000089, "Member 'UMyADPartsListEntryObject::_bMessageFlag' has a wrong offset!");
static_assert(offsetof(UMyADPartsListEntryObject, _bEquipFlag) == 0x00008A, "Member 'UMyADPartsListEntryObject::_bEquipFlag' has a wrong offset!");
static_assert(offsetof(UMyADPartsListEntryObject, _bRemoveEquipFlag) == 0x00008B, "Member 'UMyADPartsListEntryObject::_bRemoveEquipFlag' has a wrong offset!");
static_assert(offsetof(UMyADPartsListEntryObject, _itemCodeMap) == 0x000090, "Member 'UMyADPartsListEntryObject::_itemCodeMap' has a wrong offset!");

// Class OutGameModule.MyADSelectButtonWidget
// 0x00F8 (0x0580 - 0x0488)
class UMyADSelectButtonWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMyADListEntryObject*                   _itemObject;                                       // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FMyADDisplayData                       _displayData;                                      // 0x0498(0x0060)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                          _bDebugDisplay;                                    // 0x04F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bDebugProfileDisplay;                             // 0x04F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bDebugUnLocked;                                   // 0x04FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4FB[0x5];                                      // 0x04FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMyADDisplayData                       _debugDisplayData;                                 // 0x0500(0x0060)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UFocusAnimationWidget*                  _focusIcon;                                        // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _deliveryImage;                                    // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _lockSwitcher;                                     // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMyADDisplayWidget*                     _previewMyAD;                                      // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_UpdateDebugMyADDisplay();
	void ReceivedOnChangedCustomize(const class FString& Key);
	void ReceivedOnChangedCustomizeAll();
	void UpdateMyADDisplay();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MyADSelectButtonWidget">();
	}
	static class UMyADSelectButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMyADSelectButtonWidget>();
	}
};
static_assert(alignof(UMyADSelectButtonWidget) == 0x000008, "Wrong alignment on UMyADSelectButtonWidget");
static_assert(sizeof(UMyADSelectButtonWidget) == 0x000580, "Wrong size on UMyADSelectButtonWidget");
static_assert(offsetof(UMyADSelectButtonWidget, _itemObject) == 0x000490, "Member 'UMyADSelectButtonWidget::_itemObject' has a wrong offset!");
static_assert(offsetof(UMyADSelectButtonWidget, _displayData) == 0x000498, "Member 'UMyADSelectButtonWidget::_displayData' has a wrong offset!");
static_assert(offsetof(UMyADSelectButtonWidget, _bDebugDisplay) == 0x0004F8, "Member 'UMyADSelectButtonWidget::_bDebugDisplay' has a wrong offset!");
static_assert(offsetof(UMyADSelectButtonWidget, _bDebugProfileDisplay) == 0x0004F9, "Member 'UMyADSelectButtonWidget::_bDebugProfileDisplay' has a wrong offset!");
static_assert(offsetof(UMyADSelectButtonWidget, _bDebugUnLocked) == 0x0004FA, "Member 'UMyADSelectButtonWidget::_bDebugUnLocked' has a wrong offset!");
static_assert(offsetof(UMyADSelectButtonWidget, _debugDisplayData) == 0x000500, "Member 'UMyADSelectButtonWidget::_debugDisplayData' has a wrong offset!");
static_assert(offsetof(UMyADSelectButtonWidget, _focusIcon) == 0x000560, "Member 'UMyADSelectButtonWidget::_focusIcon' has a wrong offset!");
static_assert(offsetof(UMyADSelectButtonWidget, _deliveryImage) == 0x000568, "Member 'UMyADSelectButtonWidget::_deliveryImage' has a wrong offset!");
static_assert(offsetof(UMyADSelectButtonWidget, _lockSwitcher) == 0x000570, "Member 'UMyADSelectButtonWidget::_lockSwitcher' has a wrong offset!");
static_assert(offsetof(UMyADSelectButtonWidget, _previewMyAD) == 0x000578, "Member 'UMyADSelectButtonWidget::_previewMyAD' has a wrong offset!");

// Class OutGameModule.MyADWidgetSubMenu
// 0x0010 (0x0360 - 0x0350)
class UMyADWidgetSubMenu final : public UWidgetBase
{
public:
	class UWidgetGeneralWindowFrame*              _generalWindowFrame;                               // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EMyAdDeliveryStatus                           MyAdDeliveryStatus;                                // 0x0358(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Open();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MyADWidgetSubMenu">();
	}
	static class UMyADWidgetSubMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMyADWidgetSubMenu>();
	}
};
static_assert(alignof(UMyADWidgetSubMenu) == 0x000008, "Wrong alignment on UMyADWidgetSubMenu");
static_assert(sizeof(UMyADWidgetSubMenu) == 0x000360, "Wrong size on UMyADWidgetSubMenu");
static_assert(offsetof(UMyADWidgetSubMenu, _generalWindowFrame) == 0x000350, "Member 'UMyADWidgetSubMenu::_generalWindowFrame' has a wrong offset!");
static_assert(offsetof(UMyADWidgetSubMenu, MyAdDeliveryStatus) == 0x000358, "Member 'UMyADWidgetSubMenu::MyAdDeliveryStatus' has a wrong offset!");

// Class OutGameModule.NoticeExplanationText
// 0x0018 (0x0368 - 0x0350)
class UNoticeExplanationText final : public UWidgetBase
{
public:
	class UScrollBox*                             _scrollBox;                                        // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URichTextBlock*                         _mainText;                                         // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_360[0x8];                                      // 0x0360(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void MoveScroll(const struct FAnalogInputEvent& KeyEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NoticeExplanationText">();
	}
	static class UNoticeExplanationText* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNoticeExplanationText>();
	}
};
static_assert(alignof(UNoticeExplanationText) == 0x000008, "Wrong alignment on UNoticeExplanationText");
static_assert(sizeof(UNoticeExplanationText) == 0x000368, "Wrong size on UNoticeExplanationText");
static_assert(offsetof(UNoticeExplanationText, _scrollBox) == 0x000350, "Member 'UNoticeExplanationText::_scrollBox' has a wrong offset!");
static_assert(offsetof(UNoticeExplanationText, _mainText) == 0x000358, "Member 'UNoticeExplanationText::_mainText' has a wrong offset!");

// Class OutGameModule.NoticeExplanationWidget
// 0x0018 (0x0368 - 0x0350)
class UNoticeExplanationWidget final : public UWidgetBase
{
public:
	class UAdjustTextWidget*                      _titleText;                                        // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UNoticeExplanationText*                 _noticeExplanationText;                            // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UNoticeExplanationTimer*                _noticeExplanationTimer;                           // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NoticeExplanationWidget">();
	}
	static class UNoticeExplanationWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNoticeExplanationWidget>();
	}
};
static_assert(alignof(UNoticeExplanationWidget) == 0x000008, "Wrong alignment on UNoticeExplanationWidget");
static_assert(sizeof(UNoticeExplanationWidget) == 0x000368, "Wrong size on UNoticeExplanationWidget");
static_assert(offsetof(UNoticeExplanationWidget, _titleText) == 0x000350, "Member 'UNoticeExplanationWidget::_titleText' has a wrong offset!");
static_assert(offsetof(UNoticeExplanationWidget, _noticeExplanationText) == 0x000358, "Member 'UNoticeExplanationWidget::_noticeExplanationText' has a wrong offset!");
static_assert(offsetof(UNoticeExplanationWidget, _noticeExplanationTimer) == 0x000360, "Member 'UNoticeExplanationWidget::_noticeExplanationTimer' has a wrong offset!");

// Class OutGameModule.NoticeItemIconListWidget
// 0x0040 (0x0390 - 0x0350)
class UNoticeItemIconListWidget final : public UWidgetBase
{
public:
	int32                                         _itemCount;                                        // 0x0350(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNamedSlot*                             _templateWidget;                                   // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUniformGridPanel*                      _gridPanel;                                        // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UWidget*>                        _elementWidgets;                                   // 0x0368(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_378[0x18];                                     // 0x0378(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_ChangeItemIcon();
	void PlayChangeItemAnimationEvent();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NoticeItemIconListWidget">();
	}
	static class UNoticeItemIconListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNoticeItemIconListWidget>();
	}
};
static_assert(alignof(UNoticeItemIconListWidget) == 0x000008, "Wrong alignment on UNoticeItemIconListWidget");
static_assert(sizeof(UNoticeItemIconListWidget) == 0x000390, "Wrong size on UNoticeItemIconListWidget");
static_assert(offsetof(UNoticeItemIconListWidget, _itemCount) == 0x000350, "Member 'UNoticeItemIconListWidget::_itemCount' has a wrong offset!");
static_assert(offsetof(UNoticeItemIconListWidget, _templateWidget) == 0x000358, "Member 'UNoticeItemIconListWidget::_templateWidget' has a wrong offset!");
static_assert(offsetof(UNoticeItemIconListWidget, _gridPanel) == 0x000360, "Member 'UNoticeItemIconListWidget::_gridPanel' has a wrong offset!");
static_assert(offsetof(UNoticeItemIconListWidget, _elementWidgets) == 0x000368, "Member 'UNoticeItemIconListWidget::_elementWidgets' has a wrong offset!");

// Class OutGameModule.NoticeListPanelWidget
// 0x0038 (0x04C0 - 0x0488)
class UNoticeListPanelWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UNoticePanelEntryObject*                _entryObject;                                      // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _noticeText;                                       // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _newText;                                          // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UNoticeItemIconListWidget*              _noticeItemIconList;                               // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTimeWidget*                            _noticeTimer;                                      // 0x04B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        _bkImageSwitcher;                                  // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void PlayAnimationFlash();
	void PlayFlashAnimation();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NoticeListPanelWidget">();
	}
	static class UNoticeListPanelWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNoticeListPanelWidget>();
	}
};
static_assert(alignof(UNoticeListPanelWidget) == 0x000008, "Wrong alignment on UNoticeListPanelWidget");
static_assert(sizeof(UNoticeListPanelWidget) == 0x0004C0, "Wrong size on UNoticeListPanelWidget");
static_assert(offsetof(UNoticeListPanelWidget, _entryObject) == 0x000490, "Member 'UNoticeListPanelWidget::_entryObject' has a wrong offset!");
static_assert(offsetof(UNoticeListPanelWidget, _noticeText) == 0x000498, "Member 'UNoticeListPanelWidget::_noticeText' has a wrong offset!");
static_assert(offsetof(UNoticeListPanelWidget, _newText) == 0x0004A0, "Member 'UNoticeListPanelWidget::_newText' has a wrong offset!");
static_assert(offsetof(UNoticeListPanelWidget, _noticeItemIconList) == 0x0004A8, "Member 'UNoticeListPanelWidget::_noticeItemIconList' has a wrong offset!");
static_assert(offsetof(UNoticeListPanelWidget, _noticeTimer) == 0x0004B0, "Member 'UNoticeListPanelWidget::_noticeTimer' has a wrong offset!");
static_assert(offsetof(UNoticeListPanelWidget, _bkImageSwitcher) == 0x0004B8, "Member 'UNoticeListPanelWidget::_bkImageSwitcher' has a wrong offset!");

// Class OutGameModule.NoticeTestImageWidget
// 0x0020 (0x0370 - 0x0350)
class UNoticeTestImageWidget final : public UWidgetBase
{
public:
	class UEditableTextBox*                       _imageName;                                        // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEditableTextBox*                       _logoName;                                         // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USpinBox*                               _itemNumBox;                                       // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UNoticeTopTestWidget*                   _noticeTopWidget;                                  // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BP_LoadMasterData();
	void UpdateImage();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NoticeTestImageWidget">();
	}
	static class UNoticeTestImageWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNoticeTestImageWidget>();
	}
};
static_assert(alignof(UNoticeTestImageWidget) == 0x000008, "Wrong alignment on UNoticeTestImageWidget");
static_assert(sizeof(UNoticeTestImageWidget) == 0x000370, "Wrong size on UNoticeTestImageWidget");
static_assert(offsetof(UNoticeTestImageWidget, _imageName) == 0x000350, "Member 'UNoticeTestImageWidget::_imageName' has a wrong offset!");
static_assert(offsetof(UNoticeTestImageWidget, _logoName) == 0x000358, "Member 'UNoticeTestImageWidget::_logoName' has a wrong offset!");
static_assert(offsetof(UNoticeTestImageWidget, _itemNumBox) == 0x000360, "Member 'UNoticeTestImageWidget::_itemNumBox' has a wrong offset!");
static_assert(offsetof(UNoticeTestImageWidget, _noticeTopWidget) == 0x000368, "Member 'UNoticeTestImageWidget::_noticeTopWidget' has a wrong offset!");

// Class OutGameModule.OutGameCharacterWidget
// 0x0000 (0x0350 - 0x0350)
class UOutGameCharacterWidget final : public UWidgetBase
{
public:
	void ShowCharacterModel(ECharacterId CharacterId, int32 VariationNo);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OutGameCharacterWidget">();
	}
	static class UOutGameCharacterWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOutGameCharacterWidget>();
	}
};
static_assert(alignof(UOutGameCharacterWidget) == 0x000008, "Wrong alignment on UOutGameCharacterWidget");
static_assert(sizeof(UOutGameCharacterWidget) == 0x000350, "Wrong size on UOutGameCharacterWidget");

// Class OutGameModule.SquadMemberListWidget
// 0x0070 (0x03C0 - 0x0350)
class USquadMemberListWidget final : public UWidgetBase
{
public:
	TArray<class FString>                         _memberNameList;                                   // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         _memberIdList;                                     // 0x0360(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          _isListFocusable;                                  // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFriendListButtonWidget*                _friendListItem_Leader;                            // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFriendListButtonWidget*                _friendListItem_Member1;                           // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFriendListButtonWidget*                _friendListItem_Member2;                           // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSubMenu*                         _subMenu;                                          // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                        _listSwitcher;                                     // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FText>                           _kickableMemberSubMenuTextArray;                   // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FText>                           _memberSubMenuTextArray;                           // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	void KickSquadMember(int32 Number);
	void OpenSubMenu(class UWidgetBase* Widget, int32 Number);
	void ResetSquadList();
	class UWidget* SetFocuse(int32 Number);
	void SetSquadMember(const TArray<class FString>& MemberNameList, const TArray<class FString>& MemberIdList);
	void SetUpFocuse();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SquadMemberListWidget">();
	}
	static class USquadMemberListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USquadMemberListWidget>();
	}
};
static_assert(alignof(USquadMemberListWidget) == 0x000008, "Wrong alignment on USquadMemberListWidget");
static_assert(sizeof(USquadMemberListWidget) == 0x0003C0, "Wrong size on USquadMemberListWidget");
static_assert(offsetof(USquadMemberListWidget, _memberNameList) == 0x000350, "Member 'USquadMemberListWidget::_memberNameList' has a wrong offset!");
static_assert(offsetof(USquadMemberListWidget, _memberIdList) == 0x000360, "Member 'USquadMemberListWidget::_memberIdList' has a wrong offset!");
static_assert(offsetof(USquadMemberListWidget, _isListFocusable) == 0x000370, "Member 'USquadMemberListWidget::_isListFocusable' has a wrong offset!");
static_assert(offsetof(USquadMemberListWidget, _friendListItem_Leader) == 0x000378, "Member 'USquadMemberListWidget::_friendListItem_Leader' has a wrong offset!");
static_assert(offsetof(USquadMemberListWidget, _friendListItem_Member1) == 0x000380, "Member 'USquadMemberListWidget::_friendListItem_Member1' has a wrong offset!");
static_assert(offsetof(USquadMemberListWidget, _friendListItem_Member2) == 0x000388, "Member 'USquadMemberListWidget::_friendListItem_Member2' has a wrong offset!");
static_assert(offsetof(USquadMemberListWidget, _subMenu) == 0x000390, "Member 'USquadMemberListWidget::_subMenu' has a wrong offset!");
static_assert(offsetof(USquadMemberListWidget, _listSwitcher) == 0x000398, "Member 'USquadMemberListWidget::_listSwitcher' has a wrong offset!");
static_assert(offsetof(USquadMemberListWidget, _kickableMemberSubMenuTextArray) == 0x0003A0, "Member 'USquadMemberListWidget::_kickableMemberSubMenuTextArray' has a wrong offset!");
static_assert(offsetof(USquadMemberListWidget, _memberSubMenuTextArray) == 0x0003B0, "Member 'USquadMemberListWidget::_memberSubMenuTextArray' has a wrong offset!");

// Class OutGameModule.OwnerRankingDetails
// 0x0028 (0x0410 - 0x03E8)
class UOwnerRankingDetails final : public UAppWidget
{
public:
	uint8                                         Pad_3E8[0x8];                                      // 0x03E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _smallDatailsSize;                                 // 0x03F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _spaceSize;                                        // 0x03F4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _details;                                          // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_400[0x10];                                     // 0x0400(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OwnerRankingDetails">();
	}
	static class UOwnerRankingDetails* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOwnerRankingDetails>();
	}
};
static_assert(alignof(UOwnerRankingDetails) == 0x000008, "Wrong alignment on UOwnerRankingDetails");
static_assert(sizeof(UOwnerRankingDetails) == 0x000410, "Wrong size on UOwnerRankingDetails");
static_assert(offsetof(UOwnerRankingDetails, _smallDatailsSize) == 0x0003F0, "Member 'UOwnerRankingDetails::_smallDatailsSize' has a wrong offset!");
static_assert(offsetof(UOwnerRankingDetails, _spaceSize) == 0x0003F4, "Member 'UOwnerRankingDetails::_spaceSize' has a wrong offset!");
static_assert(offsetof(UOwnerRankingDetails, _details) == 0x0003F8, "Member 'UOwnerRankingDetails::_details' has a wrong offset!");

// Class OutGameModule.SortPopupWidget
// 0x0080 (0x0468 - 0x03E8)
class USortPopupWidget final : public UAppWidget
{
public:
	class UWidgetGeneralEmptyWindow*              _emptyWindow;                                      // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _cancelButton;                                     // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _decideButton;                                     // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           _sortItemPanel;                                    // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSortButtonText>                _sortButtonTextArray;                              // 0x0408(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class USettingButtonChoicesWidget> _settingButtonChoicesWidgetClass;                  // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USettingButtonChoicesWidget*>    _sortItemArray;                                    // 0x0420(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                          _bDecideCloseWindow;                               // 0x0430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_431[0x3];                                      // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _windowWidth;                                      // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _windowHeight;                                     // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _sortItemHeight;                                   // 0x043C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _showMinItemCount;                                 // 0x0440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_444[0x14];                                     // 0x0444(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnDecideDelegate;                                  // 0x0458(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)

public:
	void Close(bool bPlaySound);
	void OnButtonCancel(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnButtonDecide(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnClosedWindow();
	void OnInputEventDelegate__DelegateSignature();
	void OnOutSideButtonDown();
	void Open(bool bPlaySound);

	class UWidgetGeneralEmptyWindow* GetEmptyWindow() const;
	int32 GetSelectSortItemIndex(int32 Index_0) const;
	class FText GetSelectSortItemText(int32 Index_0) const;
	class FText GetSelectSortItemTextOnView(int32 Index_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SortPopupWidget">();
	}
	static class USortPopupWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USortPopupWidget>();
	}
};
static_assert(alignof(USortPopupWidget) == 0x000008, "Wrong alignment on USortPopupWidget");
static_assert(sizeof(USortPopupWidget) == 0x000468, "Wrong size on USortPopupWidget");
static_assert(offsetof(USortPopupWidget, _emptyWindow) == 0x0003E8, "Member 'USortPopupWidget::_emptyWindow' has a wrong offset!");
static_assert(offsetof(USortPopupWidget, _cancelButton) == 0x0003F0, "Member 'USortPopupWidget::_cancelButton' has a wrong offset!");
static_assert(offsetof(USortPopupWidget, _decideButton) == 0x0003F8, "Member 'USortPopupWidget::_decideButton' has a wrong offset!");
static_assert(offsetof(USortPopupWidget, _sortItemPanel) == 0x000400, "Member 'USortPopupWidget::_sortItemPanel' has a wrong offset!");
static_assert(offsetof(USortPopupWidget, _sortButtonTextArray) == 0x000408, "Member 'USortPopupWidget::_sortButtonTextArray' has a wrong offset!");
static_assert(offsetof(USortPopupWidget, _settingButtonChoicesWidgetClass) == 0x000418, "Member 'USortPopupWidget::_settingButtonChoicesWidgetClass' has a wrong offset!");
static_assert(offsetof(USortPopupWidget, _sortItemArray) == 0x000420, "Member 'USortPopupWidget::_sortItemArray' has a wrong offset!");
static_assert(offsetof(USortPopupWidget, _bDecideCloseWindow) == 0x000430, "Member 'USortPopupWidget::_bDecideCloseWindow' has a wrong offset!");
static_assert(offsetof(USortPopupWidget, _windowWidth) == 0x000434, "Member 'USortPopupWidget::_windowWidth' has a wrong offset!");
static_assert(offsetof(USortPopupWidget, _windowHeight) == 0x000438, "Member 'USortPopupWidget::_windowHeight' has a wrong offset!");
static_assert(offsetof(USortPopupWidget, _sortItemHeight) == 0x00043C, "Member 'USortPopupWidget::_sortItemHeight' has a wrong offset!");
static_assert(offsetof(USortPopupWidget, _showMinItemCount) == 0x000440, "Member 'USortPopupWidget::_showMinItemCount' has a wrong offset!");
static_assert(offsetof(USortPopupWidget, OnDecideDelegate) == 0x000458, "Member 'USortPopupWidget::OnDecideDelegate' has a wrong offset!");

// Class OutGameModule.PackItemListWidget
// 0x0018 (0x0368 - 0x0350)
class UPackItemListWidget final : public UWidgetBase
{
public:
	class UListView*                              _listView;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bAutoListSize;                                    // 0x0358(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _maxHeight;                                        // 0x035C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _itemHeight;                                       // 0x0360(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CreatePackList();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PackItemListWidget">();
	}
	static class UPackItemListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPackItemListWidget>();
	}
};
static_assert(alignof(UPackItemListWidget) == 0x000008, "Wrong alignment on UPackItemListWidget");
static_assert(sizeof(UPackItemListWidget) == 0x000368, "Wrong size on UPackItemListWidget");
static_assert(offsetof(UPackItemListWidget, _listView) == 0x000350, "Member 'UPackItemListWidget::_listView' has a wrong offset!");
static_assert(offsetof(UPackItemListWidget, _bAutoListSize) == 0x000358, "Member 'UPackItemListWidget::_bAutoListSize' has a wrong offset!");
static_assert(offsetof(UPackItemListWidget, _maxHeight) == 0x00035C, "Member 'UPackItemListWidget::_maxHeight' has a wrong offset!");
static_assert(offsetof(UPackItemListWidget, _itemHeight) == 0x000360, "Member 'UPackItemListWidget::_itemHeight' has a wrong offset!");

// Class OutGameModule.PackItemWidget
// 0x0010 (0x0498 - 0x0488)
class UPackItemWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UPackItemEntryObject*                   _entryObject;                                      // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnSetItemName(const class FText& ItemName);
	void OnSetQuantity(int32 Quantity);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PackItemWidget">();
	}
	static class UPackItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPackItemWidget>();
	}
};
static_assert(alignof(UPackItemWidget) == 0x000008, "Wrong alignment on UPackItemWidget");
static_assert(sizeof(UPackItemWidget) == 0x000498, "Wrong size on UPackItemWidget");
static_assert(offsetof(UPackItemWidget, _entryObject) == 0x000490, "Member 'UPackItemWidget::_entryObject' has a wrong offset!");

// Class OutGameModule.StaffRollCellSlot
// 0x0028 (0x0378 - 0x0350)
class UStaffRollCellSlot final : public UWidgetBase
{
public:
	class UTextBlock*                             _textSlot1;                                        // 0x0350(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _textSlot2;                                        // 0x0358(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpacer*                                _textSpacer;                                       // 0x0360(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                           _panelL;                                           // 0x0368(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                           _panelR;                                           // 0x0370(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void BP_SetTextSlot(const class FString& PositionName, const class FString& StaffName, EStaffRollTextType Type, bool IsHideEmptyText);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StaffRollCellSlot">();
	}
	static class UStaffRollCellSlot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStaffRollCellSlot>();
	}
};
static_assert(alignof(UStaffRollCellSlot) == 0x000008, "Wrong alignment on UStaffRollCellSlot");
static_assert(sizeof(UStaffRollCellSlot) == 0x000378, "Wrong size on UStaffRollCellSlot");
static_assert(offsetof(UStaffRollCellSlot, _textSlot1) == 0x000350, "Member 'UStaffRollCellSlot::_textSlot1' has a wrong offset!");
static_assert(offsetof(UStaffRollCellSlot, _textSlot2) == 0x000358, "Member 'UStaffRollCellSlot::_textSlot2' has a wrong offset!");
static_assert(offsetof(UStaffRollCellSlot, _textSpacer) == 0x000360, "Member 'UStaffRollCellSlot::_textSpacer' has a wrong offset!");
static_assert(offsetof(UStaffRollCellSlot, _panelL) == 0x000368, "Member 'UStaffRollCellSlot::_panelL' has a wrong offset!");
static_assert(offsetof(UStaffRollCellSlot, _panelR) == 0x000370, "Member 'UStaffRollCellSlot::_panelR' has a wrong offset!");

// Class OutGameModule.PlayerControllerDevOnlineMenu
// 0x0010 (0x0620 - 0x0610)
class APlayerControllerDevOnlineMenu final : public APlayerControllerGame
{
public:
	int32                                         _sharedState;                                      // 0x0610(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         _stageIndex;                                       // 0x0614(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_618[0x8];                                      // 0x0618(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SendStageIndexToClient(int32 Data);
	void SendStageIndexToServer(int32 Data);
	void SendStateToClient(int32 Data);
	void SendStateToServer(int32 Data);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayerControllerDevOnlineMenu">();
	}
	static class APlayerControllerDevOnlineMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerControllerDevOnlineMenu>();
	}
};
static_assert(alignof(APlayerControllerDevOnlineMenu) == 0x000008, "Wrong alignment on APlayerControllerDevOnlineMenu");
static_assert(sizeof(APlayerControllerDevOnlineMenu) == 0x000620, "Wrong size on APlayerControllerDevOnlineMenu");
static_assert(offsetof(APlayerControllerDevOnlineMenu, _sharedState) == 0x000610, "Member 'APlayerControllerDevOnlineMenu::_sharedState' has a wrong offset!");
static_assert(offsetof(APlayerControllerDevOnlineMenu, _stageIndex) == 0x000614, "Member 'APlayerControllerDevOnlineMenu::_stageIndex' has a wrong offset!");

// Class OutGameModule.PlayerNameAppWidget
// 0x0038 (0x0420 - 0x03E8)
class UPlayerNameAppWidget final : public UAppWidget
{
public:
	class UWidgetGeneralWindowFrame*              _windowFrame;                                      // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _errorPopupWindow;                                 // 0x03F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UConsentWidget*                         _agreeFreeTextInputPopupWindow;                    // 0x03F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bIntroductionType;                                // 0x0400(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bBlackEnable;                                     // 0x0401(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_402[0x6];                                      // 0x0402(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerDatabaseWork*                    _playerDatabaseWork;                               // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameSequenceWork*                      _gameSequenceWork;                                 // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBackendSubsystem*                      _backendSubsystem;                                 // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BP_Cancel();
	void BP_CloseLevel();
	void BP_OnReceivedError();
	void BP_RequestChangeName(const class FString& NewName);
	void OnCancelErrorPopupWindow(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnClosedAgreeFreeTextPopupWindow(bool bAgree);
	void OnClosedErrorPopupWindow();
	void OnClosedPopupWindow();
	void OnDecideWindowErrorPopupWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnFinishFetchDataEvent(int32 RequestId);
	void OnReceivedError();
	void OnReceivedFinish();
	void SetFocusWidget();

	bool BP_IsCheckBlank(const class FString& CheckString) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayerNameAppWidget">();
	}
	static class UPlayerNameAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerNameAppWidget>();
	}
};
static_assert(alignof(UPlayerNameAppWidget) == 0x000008, "Wrong alignment on UPlayerNameAppWidget");
static_assert(sizeof(UPlayerNameAppWidget) == 0x000420, "Wrong size on UPlayerNameAppWidget");
static_assert(offsetof(UPlayerNameAppWidget, _windowFrame) == 0x0003E8, "Member 'UPlayerNameAppWidget::_windowFrame' has a wrong offset!");
static_assert(offsetof(UPlayerNameAppWidget, _errorPopupWindow) == 0x0003F0, "Member 'UPlayerNameAppWidget::_errorPopupWindow' has a wrong offset!");
static_assert(offsetof(UPlayerNameAppWidget, _agreeFreeTextInputPopupWindow) == 0x0003F8, "Member 'UPlayerNameAppWidget::_agreeFreeTextInputPopupWindow' has a wrong offset!");
static_assert(offsetof(UPlayerNameAppWidget, _bIntroductionType) == 0x000400, "Member 'UPlayerNameAppWidget::_bIntroductionType' has a wrong offset!");
static_assert(offsetof(UPlayerNameAppWidget, _bBlackEnable) == 0x000401, "Member 'UPlayerNameAppWidget::_bBlackEnable' has a wrong offset!");
static_assert(offsetof(UPlayerNameAppWidget, _playerDatabaseWork) == 0x000408, "Member 'UPlayerNameAppWidget::_playerDatabaseWork' has a wrong offset!");
static_assert(offsetof(UPlayerNameAppWidget, _gameSequenceWork) == 0x000410, "Member 'UPlayerNameAppWidget::_gameSequenceWork' has a wrong offset!");
static_assert(offsetof(UPlayerNameAppWidget, _backendSubsystem) == 0x000418, "Member 'UPlayerNameAppWidget::_backendSubsystem' has a wrong offset!");

// Class OutGameModule.StaffRollWidget
// 0x00C0 (0x0410 - 0x0350)
class UStaffRollWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x20];                                     // 0x0350(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomListView*                        _scrollList;                                       // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMediaPlayer*                           _staffRollMediaPlayer;                             // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UStaffRollCell*>                 _textCellArray;                                    // 0x0388(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	int32                                         _staffRollIndex;                                   // 0x0398(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_39C[0x14];                                     // 0x039C(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _scrollSpeed;                                      // 0x03B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _scrollMinSpeed;                                   // 0x03B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _scrollMaxSpeed;                                   // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _scrollAccelerationSpeed;                          // 0x03BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _scrollOffset;                                     // 0x03C0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _scrollEndPoint;                                   // 0x03C8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _wheelScrollSpeed;                                 // 0x03CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isRewind;                                         // 0x03D0(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isControllable;                                   // 0x03D1(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3D2[0x2];                                      // 0x03D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _blockControllTimer;                               // 0x03D4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _blockControllTimeLimit;                           // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _IsRandomPlayAnimation;                            // 0x03DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isStopShadowTimer;                                // 0x03DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isShadowWidgetActived;                            // 0x03DE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3DF[0x1];                                      // 0x03DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _shadowActiveTimer;                                // 0x03E0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _shadowActiveTimeLimit;                            // 0x03E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _shadowEntry;                                      // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _shadowOut;                                        // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimaryAssetStaffrollAnimation*        _primaryAssetStaffrollAnimation;                   // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isAccelerate;                                     // 0x0400(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _accelerationTimer;                                // 0x0404(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _acceleration;                                     // 0x0408(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	EStaffRollTextType BP_GetCellTextType();
	class UMediaSource* BP_GetStartAnimation();
	void BP_MoveScroll(float DeltaTime);
	void BP_SetUpStaffRollList();
	bool BP_SetUpStaffRollParam();
	void BP_SetUpTextCell(class UStaffRollCell* Cell);
	void BP_SetUpTextLargeCell(class UStaffRollLargeCell* Cell);
	void FinishStaffRoll();
	bool GetDipNumberLines();
	void MoveScroll(const float DeltaTime);
	void MoveStart();
	void TickDelegate__DelegateSignature(const float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StaffRollWidget">();
	}
	static class UStaffRollWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStaffRollWidget>();
	}
};
static_assert(alignof(UStaffRollWidget) == 0x000008, "Wrong alignment on UStaffRollWidget");
static_assert(sizeof(UStaffRollWidget) == 0x000410, "Wrong size on UStaffRollWidget");
static_assert(offsetof(UStaffRollWidget, _scrollList) == 0x000370, "Member 'UStaffRollWidget::_scrollList' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _staffRollMediaPlayer) == 0x000380, "Member 'UStaffRollWidget::_staffRollMediaPlayer' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _textCellArray) == 0x000388, "Member 'UStaffRollWidget::_textCellArray' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _staffRollIndex) == 0x000398, "Member 'UStaffRollWidget::_staffRollIndex' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _scrollSpeed) == 0x0003B0, "Member 'UStaffRollWidget::_scrollSpeed' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _scrollMinSpeed) == 0x0003B4, "Member 'UStaffRollWidget::_scrollMinSpeed' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _scrollMaxSpeed) == 0x0003B8, "Member 'UStaffRollWidget::_scrollMaxSpeed' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _scrollAccelerationSpeed) == 0x0003BC, "Member 'UStaffRollWidget::_scrollAccelerationSpeed' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _scrollOffset) == 0x0003C0, "Member 'UStaffRollWidget::_scrollOffset' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _scrollEndPoint) == 0x0003C8, "Member 'UStaffRollWidget::_scrollEndPoint' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _wheelScrollSpeed) == 0x0003CC, "Member 'UStaffRollWidget::_wheelScrollSpeed' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _isRewind) == 0x0003D0, "Member 'UStaffRollWidget::_isRewind' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _isControllable) == 0x0003D1, "Member 'UStaffRollWidget::_isControllable' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _blockControllTimer) == 0x0003D4, "Member 'UStaffRollWidget::_blockControllTimer' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _blockControllTimeLimit) == 0x0003D8, "Member 'UStaffRollWidget::_blockControllTimeLimit' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _IsRandomPlayAnimation) == 0x0003DC, "Member 'UStaffRollWidget::_IsRandomPlayAnimation' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _isStopShadowTimer) == 0x0003DD, "Member 'UStaffRollWidget::_isStopShadowTimer' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _isShadowWidgetActived) == 0x0003DE, "Member 'UStaffRollWidget::_isShadowWidgetActived' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _shadowActiveTimer) == 0x0003E0, "Member 'UStaffRollWidget::_shadowActiveTimer' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _shadowActiveTimeLimit) == 0x0003E4, "Member 'UStaffRollWidget::_shadowActiveTimeLimit' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _shadowEntry) == 0x0003E8, "Member 'UStaffRollWidget::_shadowEntry' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _shadowOut) == 0x0003F0, "Member 'UStaffRollWidget::_shadowOut' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _primaryAssetStaffrollAnimation) == 0x0003F8, "Member 'UStaffRollWidget::_primaryAssetStaffrollAnimation' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _isAccelerate) == 0x000400, "Member 'UStaffRollWidget::_isAccelerate' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _accelerationTimer) == 0x000404, "Member 'UStaffRollWidget::_accelerationTimer' has a wrong offset!");
static_assert(offsetof(UStaffRollWidget, _acceleration) == 0x000408, "Member 'UStaffRollWidget::_acceleration' has a wrong offset!");

// Class OutGameModule.PlayMenuBannerListWidget
// 0x0030 (0x0380 - 0x0350)
class UPlayMenuBannerListWidget final : public UWidgetBase
{
public:
	FMulticastInlineDelegateProperty_             _changeLeftFocusDelegate;                          // 0x0350(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             _changeDownFocusDelegate;                          // 0x0360(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UListView*                              _listView;                                         // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayMenuBannerEntryObject*             _selectObject;                                     // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void ChangeFocusDelegate__DelegateSignature();
	void DoCustomWidgetNavigation(EUINavigation UiNavigation);
	void OnAddFocusButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	bool SetFocusTop();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuBannerListWidget">();
	}
	static class UPlayMenuBannerListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuBannerListWidget>();
	}
};
static_assert(alignof(UPlayMenuBannerListWidget) == 0x000008, "Wrong alignment on UPlayMenuBannerListWidget");
static_assert(sizeof(UPlayMenuBannerListWidget) == 0x000380, "Wrong size on UPlayMenuBannerListWidget");
static_assert(offsetof(UPlayMenuBannerListWidget, _changeLeftFocusDelegate) == 0x000350, "Member 'UPlayMenuBannerListWidget::_changeLeftFocusDelegate' has a wrong offset!");
static_assert(offsetof(UPlayMenuBannerListWidget, _changeDownFocusDelegate) == 0x000360, "Member 'UPlayMenuBannerListWidget::_changeDownFocusDelegate' has a wrong offset!");
static_assert(offsetof(UPlayMenuBannerListWidget, _listView) == 0x000370, "Member 'UPlayMenuBannerListWidget::_listView' has a wrong offset!");
static_assert(offsetof(UPlayMenuBannerListWidget, _selectObject) == 0x000378, "Member 'UPlayMenuBannerListWidget::_selectObject' has a wrong offset!");

// Class OutGameModule.PlayMenuBannerWidget
// 0x0028 (0x0658 - 0x0630)
class UPlayMenuBannerWidget final : public UPlatformWidgetButton
{
public:
	uint8                                         Pad_630[0x8];                                      // 0x0630(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 _bannerImage;                                      // 0x0638(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 _gashaLogoImage;                                   // 0x0640(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEventBannerTitleWidget*                _eventBannerTitle;                                 // 0x0648(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayMenuBannerEntryObject*             _entryObject;                                      // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuBannerWidget">();
	}
	static class UPlayMenuBannerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuBannerWidget>();
	}
};
static_assert(alignof(UPlayMenuBannerWidget) == 0x000008, "Wrong alignment on UPlayMenuBannerWidget");
static_assert(sizeof(UPlayMenuBannerWidget) == 0x000658, "Wrong size on UPlayMenuBannerWidget");
static_assert(offsetof(UPlayMenuBannerWidget, _bannerImage) == 0x000638, "Member 'UPlayMenuBannerWidget::_bannerImage' has a wrong offset!");
static_assert(offsetof(UPlayMenuBannerWidget, _gashaLogoImage) == 0x000640, "Member 'UPlayMenuBannerWidget::_gashaLogoImage' has a wrong offset!");
static_assert(offsetof(UPlayMenuBannerWidget, _eventBannerTitle) == 0x000648, "Member 'UPlayMenuBannerWidget::_eventBannerTitle' has a wrong offset!");
static_assert(offsetof(UPlayMenuBannerWidget, _entryObject) == 0x000650, "Member 'UPlayMenuBannerWidget::_entryObject' has a wrong offset!");

// Class OutGameModule.PlayMenuBannerEntryObject
// 0x0028 (0x0058 - 0x0030)
class UPlayMenuBannerEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x28];                                      // 0x0030(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuBannerEntryObject">();
	}
	static class UPlayMenuBannerEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuBannerEntryObject>();
	}
};
static_assert(alignof(UPlayMenuBannerEntryObject) == 0x000008, "Wrong alignment on UPlayMenuBannerEntryObject");
static_assert(sizeof(UPlayMenuBannerEntryObject) == 0x000058, "Wrong size on UPlayMenuBannerEntryObject");

// Class OutGameModule.StarMissionDetailsObject
// 0x0008 (0x00D8 - 0x00D0)
class UStarMissionDetailsObject final : public UMissionDetailsObject
{
public:
	uint8                                         Pad_D0[0x8];                                       // 0x00D0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StarMissionDetailsObject">();
	}
	static class UStarMissionDetailsObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStarMissionDetailsObject>();
	}
};
static_assert(alignof(UStarMissionDetailsObject) == 0x000008, "Wrong alignment on UStarMissionDetailsObject");
static_assert(sizeof(UStarMissionDetailsObject) == 0x0000D8, "Wrong size on UStarMissionDetailsObject");

// Class OutGameModule.PlayMenuBattleStartButtonWidget
// 0x0068 (0x03B8 - 0x0350)
class UPlayMenuBattleStartButtonWidget final : public UWidgetBase
{
public:
	class FText                                   _setNameText;                                      // 0x0350(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          _useButtonIcon;                                    // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          _largeButton;                                      // 0x0369(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36A[0x6];                                      // 0x036A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlatformRichTextBlock*                 _buttonIconText;                                   // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _sizeSwitcher;                                     // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _textSwitcher;                                     // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _markImage;                                        // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _markImageLarge;                                   // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _markEffct;                                        // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _adjustText;                                       // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _adjustLargeText;                                  // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _adjustIconLargeText;                              // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void ChangeMarkImage(float Alpha);
	void SetCheckAnimation(bool Idle);
	void SetDefaultAnimation();
	void SetTargetAnimation();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuBattleStartButtonWidget">();
	}
	static class UPlayMenuBattleStartButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuBattleStartButtonWidget>();
	}
};
static_assert(alignof(UPlayMenuBattleStartButtonWidget) == 0x000008, "Wrong alignment on UPlayMenuBattleStartButtonWidget");
static_assert(sizeof(UPlayMenuBattleStartButtonWidget) == 0x0003B8, "Wrong size on UPlayMenuBattleStartButtonWidget");
static_assert(offsetof(UPlayMenuBattleStartButtonWidget, _setNameText) == 0x000350, "Member 'UPlayMenuBattleStartButtonWidget::_setNameText' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartButtonWidget, _useButtonIcon) == 0x000368, "Member 'UPlayMenuBattleStartButtonWidget::_useButtonIcon' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartButtonWidget, _largeButton) == 0x000369, "Member 'UPlayMenuBattleStartButtonWidget::_largeButton' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartButtonWidget, _buttonIconText) == 0x000370, "Member 'UPlayMenuBattleStartButtonWidget::_buttonIconText' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartButtonWidget, _sizeSwitcher) == 0x000378, "Member 'UPlayMenuBattleStartButtonWidget::_sizeSwitcher' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartButtonWidget, _textSwitcher) == 0x000380, "Member 'UPlayMenuBattleStartButtonWidget::_textSwitcher' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartButtonWidget, _markImage) == 0x000388, "Member 'UPlayMenuBattleStartButtonWidget::_markImage' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartButtonWidget, _markImageLarge) == 0x000390, "Member 'UPlayMenuBattleStartButtonWidget::_markImageLarge' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartButtonWidget, _markEffct) == 0x000398, "Member 'UPlayMenuBattleStartButtonWidget::_markEffct' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartButtonWidget, _adjustText) == 0x0003A0, "Member 'UPlayMenuBattleStartButtonWidget::_adjustText' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartButtonWidget, _adjustLargeText) == 0x0003A8, "Member 'UPlayMenuBattleStartButtonWidget::_adjustLargeText' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartButtonWidget, _adjustIconLargeText) == 0x0003B0, "Member 'UPlayMenuBattleStartButtonWidget::_adjustIconLargeText' has a wrong offset!");

// Class OutGameModule.PlayMenuBattleStartWidget
// 0x0200 (0x0550 - 0x0350)
class UPlayMenuBattleStartWidget final : public UWidgetBase
{
public:
	FMulticastInlineDelegateProperty_             _onBattleStartPressDelegate;                       // 0x0350(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UPlatformWidgetButton*                  _cancelButton;                                     // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetButton*                          _emptyButton;                                      // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _battleStartImage;                                 // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetButton*                          _battleStartButton;                                // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                        _buttonSwitcher;                                   // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayMenuBattleStartButtonWidget*       _memberPlate;                                      // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayMenuBattleStartButtonWidget*       _readyPlate;                                       // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayMenuBattleStartButtonWidget*       _lobbyPlate;                                       // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayMenuBattleStartButtonWidget*       _battleStartPlate;                                 // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                        _focusSwitcher;                                    // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  _gameModeEndPopUpLevel;                            // 0x03B0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelStreamingDynamic*                 _gameModeEndPopUpLevelStreaming;                   // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  _stagePopUpLevel;                                  // 0x03E0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelStreamingDynamic*                 _stagePopUpLevelStreaming;                         // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBattleStartSequenceType                      _animationSequence;                                // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             _onNavigationOutEventDelegate;                     // 0x0418(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FLinearColor                           _grayOutColor;                                     // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_438[0x110];                                    // 0x0438(0x0110)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _battleStartButtonFlag;                            // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _bOpenCharacterLevel;                              // 0x0549(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_54A[0x6];                                      // 0x054A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BattleStartPressDelegate__DelegateSignature();
	void CallCustomMatchMenu();
	void CallPressBattleStart();
	void CallTrainingMenu();
	void CancelButtonTimerFunction();
	void CancelReadyBattleWaitTimerFunction();
	class UWidget* DoCustomNavigationBattleStart(EUINavigation UiNavigation);
	class UWidget* DoCustomNavigationCancelButton(EUINavigation UiNavigation);
	void OnBattleSequenceCancel(EBattleStartSequenceType SequenceType);
	void OnCancelVisualLobbySearch();
	void OnChangeBattleRule();
	void OnChangeBattleSequence(EBattleStartSequenceType Sequence);
	void OnChangedSelectedCharacterEvent(bool UnLocked, bool EnableRental);
	void OnCloseTutorialWindow(ETutorialPopupScene Scene);
	void OnDecideBattleStartEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnLevelHidden();
	void OnNavigationOutEventDelegate__DelegateSignature(EUINavigation UiNavigation);
	void OnPopupGeneralWindowClosed();
	void OnPressBattleStart();
	void OnRemovedFromFocusBattleStart(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnRentalPointUpdatedEvent(int32 Value);
	void OnSquadInfoChanged();
	void OnTeamUpPasswordCreatedEvent();
	void OnTeamUpUpdatedEvent();
	void OnTitleStepInput();
	void OnUpdateTutorial();
	bool PlayBattleSequenceAnimation();
	void PlaySequenceIdleAnimation();
	void SetBattleStartButtonEnable(bool bEnable);
	class UWidget* SetFocuseBattleStartWidget(EUINavigation UiFromOtherNavigation);
	void SetGrayOutBattleStart(bool IsGrayOut);
	void SetGrayOutBattleStartImage(bool IsGrayOut);
	void SetOpenCharacterLevel(bool OpenCharacterLevel);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuBattleStartWidget">();
	}
	static class UPlayMenuBattleStartWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuBattleStartWidget>();
	}
};
static_assert(alignof(UPlayMenuBattleStartWidget) == 0x000008, "Wrong alignment on UPlayMenuBattleStartWidget");
static_assert(sizeof(UPlayMenuBattleStartWidget) == 0x000550, "Wrong size on UPlayMenuBattleStartWidget");
static_assert(offsetof(UPlayMenuBattleStartWidget, _onBattleStartPressDelegate) == 0x000350, "Member 'UPlayMenuBattleStartWidget::_onBattleStartPressDelegate' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartWidget, _cancelButton) == 0x000360, "Member 'UPlayMenuBattleStartWidget::_cancelButton' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartWidget, _emptyButton) == 0x000368, "Member 'UPlayMenuBattleStartWidget::_emptyButton' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartWidget, _battleStartImage) == 0x000370, "Member 'UPlayMenuBattleStartWidget::_battleStartImage' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartWidget, _battleStartButton) == 0x000378, "Member 'UPlayMenuBattleStartWidget::_battleStartButton' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartWidget, _buttonSwitcher) == 0x000380, "Member 'UPlayMenuBattleStartWidget::_buttonSwitcher' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartWidget, _memberPlate) == 0x000388, "Member 'UPlayMenuBattleStartWidget::_memberPlate' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartWidget, _readyPlate) == 0x000390, "Member 'UPlayMenuBattleStartWidget::_readyPlate' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartWidget, _lobbyPlate) == 0x000398, "Member 'UPlayMenuBattleStartWidget::_lobbyPlate' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartWidget, _battleStartPlate) == 0x0003A0, "Member 'UPlayMenuBattleStartWidget::_battleStartPlate' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartWidget, _focusSwitcher) == 0x0003A8, "Member 'UPlayMenuBattleStartWidget::_focusSwitcher' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartWidget, _gameModeEndPopUpLevel) == 0x0003B0, "Member 'UPlayMenuBattleStartWidget::_gameModeEndPopUpLevel' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartWidget, _gameModeEndPopUpLevelStreaming) == 0x0003D8, "Member 'UPlayMenuBattleStartWidget::_gameModeEndPopUpLevelStreaming' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartWidget, _stagePopUpLevel) == 0x0003E0, "Member 'UPlayMenuBattleStartWidget::_stagePopUpLevel' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartWidget, _stagePopUpLevelStreaming) == 0x000408, "Member 'UPlayMenuBattleStartWidget::_stagePopUpLevelStreaming' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartWidget, _animationSequence) == 0x000410, "Member 'UPlayMenuBattleStartWidget::_animationSequence' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartWidget, _onNavigationOutEventDelegate) == 0x000418, "Member 'UPlayMenuBattleStartWidget::_onNavigationOutEventDelegate' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartWidget, _grayOutColor) == 0x000428, "Member 'UPlayMenuBattleStartWidget::_grayOutColor' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartWidget, _battleStartButtonFlag) == 0x000548, "Member 'UPlayMenuBattleStartWidget::_battleStartButtonFlag' has a wrong offset!");
static_assert(offsetof(UPlayMenuBattleStartWidget, _bOpenCharacterLevel) == 0x000549, "Member 'UPlayMenuBattleStartWidget::_bOpenCharacterLevel' has a wrong offset!");

// Class OutGameModule.ShopItemWidget
// 0x0830 (0x0E60 - 0x0630)
class UShopItemWidget final : public UPlatformWidgetButton
{
public:
	uint8                                         Pad_630[0x8];                                      // 0x0630(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UShopItemViewWidget*                    _shopItemViewWidget;                               // 0x0638(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _wantCurrency;                                     // 0x0640(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPriceCoinWidget*                       _shopCoin1;                                        // 0x0648(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPriceCoinWidget*                       _shopCoin2;                                        // 0x0650(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPriceCoinWidget*                       _shopCoin3;                                        // 0x0658(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTimeWidget*                            _remainingTimer;                                   // 0x0660(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _samplePanel;                                      // 0x0668(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizePreviewButtonWidget*          _previewButton;                                    // 0x0670(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_678[0x8];                                      // 0x0678(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UShopItemObject*                        _shopItemObject;                                   // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UShopItemListWidgetBase*                _shopItemListWidget;                               // 0x0688(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   _wantCurrencyTextFormat;                           // 0x0690(0x0018)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                          _bSmallIcon;                                       // 0x06A8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bIndention;                                       // 0x06A9(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_6AA[0x6];                                      // 0x06AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            _bgBrushS;                                         // 0x06B0(0x00D0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FVector2D                              _bgSizeS;                                          // 0x0780(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              _widgetSizeS;                                      // 0x0788(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                            _bgBrushM;                                         // 0x0790(0x00D0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                            _bgNormalBrushM;                                   // 0x0860(0x00D0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                            _bgPremiumBrushM;                                  // 0x0930(0x00D0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FVector2D                              _bgSizeM;                                          // 0x0A00(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              _widgetSizeM;                                      // 0x0A08(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                            _bgBrushL;                                         // 0x0A10(0x00D0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                            _bgNormalBrushL;                                   // 0x0AE0(0x00D0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                            _bgPremiumBrushL;                                  // 0x0BB0(0x00D0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FVector2D                              _bgSizeL;                                          // 0x0C80(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              _widgetSizeL;                                      // 0x0C88(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                            _bgBrushM_PS;                                      // 0x0C90(0x00D0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FVector2D                              _bgSizeM_PS;                                       // 0x0D60(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              _widgetSizeM_PS;                                   // 0x0D68(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                            _bgBrushL_PS;                                      // 0x0D70(0x00D0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FVector2D                              _bgSizeL_PS;                                       // 0x0E40(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              _widgetSizeL_PS;                                   // 0x0E48(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EShopItemViewType                             _previewShopItemViewType;                          // 0x0E50(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E51[0xF];                                      // 0x0E51(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BuyItem(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecidePlaySample(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnSetHiddenCatchCopy();
	void OnSetShowNew();
	void OnSetShowSale(int32 InPercent);
	void PlaySample_Voice();
	void SetBg(const struct FSlateBrush& bgBrush, const struct FVector2D& bgSize, const struct FVector2D& WidgetSize, bool bIconItemFit);
	void SetCurrencyCount(int32 CurrencyCount);
	void SetEventView(bool bEvent);
	void SetPurchased(bool bPurchased);
	void SetPurchaseLimit(int32 Num, int32 Max);
	void SetShopItemName(const class FText& InText);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ShopItemWidget">();
	}
	static class UShopItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopItemWidget>();
	}
};
static_assert(alignof(UShopItemWidget) == 0x000010, "Wrong alignment on UShopItemWidget");
static_assert(sizeof(UShopItemWidget) == 0x000E60, "Wrong size on UShopItemWidget");
static_assert(offsetof(UShopItemWidget, _shopItemViewWidget) == 0x000638, "Member 'UShopItemWidget::_shopItemViewWidget' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _wantCurrency) == 0x000640, "Member 'UShopItemWidget::_wantCurrency' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _shopCoin1) == 0x000648, "Member 'UShopItemWidget::_shopCoin1' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _shopCoin2) == 0x000650, "Member 'UShopItemWidget::_shopCoin2' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _shopCoin3) == 0x000658, "Member 'UShopItemWidget::_shopCoin3' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _remainingTimer) == 0x000660, "Member 'UShopItemWidget::_remainingTimer' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _samplePanel) == 0x000668, "Member 'UShopItemWidget::_samplePanel' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _previewButton) == 0x000670, "Member 'UShopItemWidget::_previewButton' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _shopItemObject) == 0x000680, "Member 'UShopItemWidget::_shopItemObject' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _shopItemListWidget) == 0x000688, "Member 'UShopItemWidget::_shopItemListWidget' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _wantCurrencyTextFormat) == 0x000690, "Member 'UShopItemWidget::_wantCurrencyTextFormat' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _bSmallIcon) == 0x0006A8, "Member 'UShopItemWidget::_bSmallIcon' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _bIndention) == 0x0006A9, "Member 'UShopItemWidget::_bIndention' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _bgBrushS) == 0x0006B0, "Member 'UShopItemWidget::_bgBrushS' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _bgSizeS) == 0x000780, "Member 'UShopItemWidget::_bgSizeS' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _widgetSizeS) == 0x000788, "Member 'UShopItemWidget::_widgetSizeS' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _bgBrushM) == 0x000790, "Member 'UShopItemWidget::_bgBrushM' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _bgNormalBrushM) == 0x000860, "Member 'UShopItemWidget::_bgNormalBrushM' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _bgPremiumBrushM) == 0x000930, "Member 'UShopItemWidget::_bgPremiumBrushM' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _bgSizeM) == 0x000A00, "Member 'UShopItemWidget::_bgSizeM' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _widgetSizeM) == 0x000A08, "Member 'UShopItemWidget::_widgetSizeM' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _bgBrushL) == 0x000A10, "Member 'UShopItemWidget::_bgBrushL' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _bgNormalBrushL) == 0x000AE0, "Member 'UShopItemWidget::_bgNormalBrushL' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _bgPremiumBrushL) == 0x000BB0, "Member 'UShopItemWidget::_bgPremiumBrushL' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _bgSizeL) == 0x000C80, "Member 'UShopItemWidget::_bgSizeL' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _widgetSizeL) == 0x000C88, "Member 'UShopItemWidget::_widgetSizeL' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _bgBrushM_PS) == 0x000C90, "Member 'UShopItemWidget::_bgBrushM_PS' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _bgSizeM_PS) == 0x000D60, "Member 'UShopItemWidget::_bgSizeM_PS' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _widgetSizeM_PS) == 0x000D68, "Member 'UShopItemWidget::_widgetSizeM_PS' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _bgBrushL_PS) == 0x000D70, "Member 'UShopItemWidget::_bgBrushL_PS' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _bgSizeL_PS) == 0x000E40, "Member 'UShopItemWidget::_bgSizeL_PS' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _widgetSizeL_PS) == 0x000E48, "Member 'UShopItemWidget::_widgetSizeL_PS' has a wrong offset!");
static_assert(offsetof(UShopItemWidget, _previewShopItemViewType) == 0x000E50, "Member 'UShopItemWidget::_previewShopItemViewType' has a wrong offset!");

// Class OutGameModule.PlayMenuBelt
// 0x0000 (0x0350 - 0x0350)
class UPlayMenuBelt final : public UWidgetBase
{
public:
	void OnChangeBattleSequence(EBattleStartSequenceType Sequence);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuBelt">();
	}
	static class UPlayMenuBelt* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuBelt>();
	}
};
static_assert(alignof(UPlayMenuBelt) == 0x000008, "Wrong alignment on UPlayMenuBelt");
static_assert(sizeof(UPlayMenuBelt) == 0x000350, "Wrong size on UPlayMenuBelt");

// Class OutGameModule.PlayMenuHamburgerEntryWidget
// 0x0028 (0x0378 - 0x0350)
class UPlayMenuHamburgerEntryWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x8];                                      // 0x0350(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAdjustTextWidget*                      _listText;                                         // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlatformWidgetButton*                  _button;                                           // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnSelectEventDelegate;                             // 0x0368(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void CallSelectEvent(class UUserWidget* Widget);
	void OnSelectEventDelegate__DelegateSignature(class UUserWidget* Widget);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuHamburgerEntryWidget">();
	}
	static class UPlayMenuHamburgerEntryWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuHamburgerEntryWidget>();
	}
};
static_assert(alignof(UPlayMenuHamburgerEntryWidget) == 0x000008, "Wrong alignment on UPlayMenuHamburgerEntryWidget");
static_assert(sizeof(UPlayMenuHamburgerEntryWidget) == 0x000378, "Wrong size on UPlayMenuHamburgerEntryWidget");
static_assert(offsetof(UPlayMenuHamburgerEntryWidget, _listText) == 0x000358, "Member 'UPlayMenuHamburgerEntryWidget::_listText' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerEntryWidget, _button) == 0x000360, "Member 'UPlayMenuHamburgerEntryWidget::_button' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerEntryWidget, OnSelectEventDelegate) == 0x000368, "Member 'UPlayMenuHamburgerEntryWidget::OnSelectEventDelegate' has a wrong offset!");

// Class OutGameModule.PlayMenuHamburgerLargeIconWidget
// 0x0080 (0x0508 - 0x0488)
class UPlayMenuHamburgerLargeIconWidget final : public UWidgetButton
{
public:
	EPlayMenuHamburgerLargeIconType               _playMenuHamburgerLargeIconType;                   // 0x0488(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPlayMenuHamburgerLargeIconType, struct FPlayMenuHamburgerLargeIconInfo> _largeIconList;                                    // 0x0490(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class USoundAtomCue*                          _pressAtomCue;                                     // 0x04E0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundAtomCue*                          _focusAtomCue;                                     // 0x04E8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4F0[0x4];                                      // 0x04F0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	EPlayMenuHamburgerLargeIconType               _debugLargeIconType;                               // 0x04F4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4F5[0x3];                                      // 0x04F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 _iconImage;                                        // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _iconTitleAdjustText;                              // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	bool GetIconFocusable();
	int32 GetIconIndex();
	TSoftObjectPtr<class UWorld> GetLevel();
	void OnDecide();
	void OnDecideWidget(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnPressButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void SetWidgetEnable(bool Enable);
	void SetWidgetEnableEvent(bool Enable);
	void SetWidgetFocus();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuHamburgerLargeIconWidget">();
	}
	static class UPlayMenuHamburgerLargeIconWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuHamburgerLargeIconWidget>();
	}
};
static_assert(alignof(UPlayMenuHamburgerLargeIconWidget) == 0x000008, "Wrong alignment on UPlayMenuHamburgerLargeIconWidget");
static_assert(sizeof(UPlayMenuHamburgerLargeIconWidget) == 0x000508, "Wrong size on UPlayMenuHamburgerLargeIconWidget");
static_assert(offsetof(UPlayMenuHamburgerLargeIconWidget, _playMenuHamburgerLargeIconType) == 0x000488, "Member 'UPlayMenuHamburgerLargeIconWidget::_playMenuHamburgerLargeIconType' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerLargeIconWidget, _largeIconList) == 0x000490, "Member 'UPlayMenuHamburgerLargeIconWidget::_largeIconList' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerLargeIconWidget, _pressAtomCue) == 0x0004E0, "Member 'UPlayMenuHamburgerLargeIconWidget::_pressAtomCue' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerLargeIconWidget, _focusAtomCue) == 0x0004E8, "Member 'UPlayMenuHamburgerLargeIconWidget::_focusAtomCue' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerLargeIconWidget, _debugLargeIconType) == 0x0004F4, "Member 'UPlayMenuHamburgerLargeIconWidget::_debugLargeIconType' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerLargeIconWidget, _iconImage) == 0x0004F8, "Member 'UPlayMenuHamburgerLargeIconWidget::_iconImage' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerLargeIconWidget, _iconTitleAdjustText) == 0x000500, "Member 'UPlayMenuHamburgerLargeIconWidget::_iconTitleAdjustText' has a wrong offset!");

// Class OutGameModule.PlayMenuHamburgerDebugListEntryObject
// 0x0048 (0x0078 - 0x0030)
class UPlayMenuHamburgerDebugListEntryObject final : public UListViewEntryObjectBase
{
public:
	TSoftObjectPtr<class UWorld>                  _level;                                            // 0x0030(0x0028)(BlueprintVisible, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   _nameText;                                         // 0x0058(0x0018)(BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPublic)
	EPlayMenuHamburgerDebugListType               _type;                                             // 0x0070(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuHamburgerDebugListEntryObject">();
	}
	static class UPlayMenuHamburgerDebugListEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuHamburgerDebugListEntryObject>();
	}
};
static_assert(alignof(UPlayMenuHamburgerDebugListEntryObject) == 0x000008, "Wrong alignment on UPlayMenuHamburgerDebugListEntryObject");
static_assert(sizeof(UPlayMenuHamburgerDebugListEntryObject) == 0x000078, "Wrong size on UPlayMenuHamburgerDebugListEntryObject");
static_assert(offsetof(UPlayMenuHamburgerDebugListEntryObject, _level) == 0x000030, "Member 'UPlayMenuHamburgerDebugListEntryObject::_level' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerDebugListEntryObject, _nameText) == 0x000058, "Member 'UPlayMenuHamburgerDebugListEntryObject::_nameText' has a wrong offset!");
static_assert(offsetof(UPlayMenuHamburgerDebugListEntryObject, _type) == 0x000070, "Member 'UPlayMenuHamburgerDebugListEntryObject::_type' has a wrong offset!");

// Class OutGameModule.PlayMenuIconEntryWidget
// 0x00D0 (0x0558 - 0x0488)
class UPlayMenuIconEntryWidget final : public UWidgetButton
{
public:
	class UTextBlock*                             _nameText;                                         // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _countText;                                        // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _iconImage;                                        // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetButton*                          _generalIconButton;                                // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                           _guildNoticePanel;                                 // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   _iconName;                                         // 0x04B0(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UObject*                                _iconImageObject;                                  // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EBattleStartSequenceType, bool>          _grayedOutFlag;                                    // 0x04D0(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	ETutorialStepNo                               _grayedOutTutorialNo;                              // 0x0520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          _pressAtomCue;                                     // 0x0528(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundAtomCue*                          _focusAtomCue;                                     // 0x0530(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundAtomCue*                          _pressUnSelectedAtomCue;                           // 0x0538(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_540[0x8];                                      // 0x0540(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         _atomComp;                                         // 0x0548(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_550[0x8];                                      // 0x0550(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnChangeBattleSequence(EBattleStartSequenceType Sequence);
	void OnGrayedOut(bool IsGrayedOut);
	void OnPressButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnUpdateTutorial();
	void SetIconCount(int32 Count);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuIconEntryWidget">();
	}
	static class UPlayMenuIconEntryWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuIconEntryWidget>();
	}
};
static_assert(alignof(UPlayMenuIconEntryWidget) == 0x000008, "Wrong alignment on UPlayMenuIconEntryWidget");
static_assert(sizeof(UPlayMenuIconEntryWidget) == 0x000558, "Wrong size on UPlayMenuIconEntryWidget");
static_assert(offsetof(UPlayMenuIconEntryWidget, _nameText) == 0x000488, "Member 'UPlayMenuIconEntryWidget::_nameText' has a wrong offset!");
static_assert(offsetof(UPlayMenuIconEntryWidget, _countText) == 0x000490, "Member 'UPlayMenuIconEntryWidget::_countText' has a wrong offset!");
static_assert(offsetof(UPlayMenuIconEntryWidget, _iconImage) == 0x000498, "Member 'UPlayMenuIconEntryWidget::_iconImage' has a wrong offset!");
static_assert(offsetof(UPlayMenuIconEntryWidget, _generalIconButton) == 0x0004A0, "Member 'UPlayMenuIconEntryWidget::_generalIconButton' has a wrong offset!");
static_assert(offsetof(UPlayMenuIconEntryWidget, _guildNoticePanel) == 0x0004A8, "Member 'UPlayMenuIconEntryWidget::_guildNoticePanel' has a wrong offset!");
static_assert(offsetof(UPlayMenuIconEntryWidget, _iconName) == 0x0004B0, "Member 'UPlayMenuIconEntryWidget::_iconName' has a wrong offset!");
static_assert(offsetof(UPlayMenuIconEntryWidget, _iconImageObject) == 0x0004C8, "Member 'UPlayMenuIconEntryWidget::_iconImageObject' has a wrong offset!");
static_assert(offsetof(UPlayMenuIconEntryWidget, _grayedOutFlag) == 0x0004D0, "Member 'UPlayMenuIconEntryWidget::_grayedOutFlag' has a wrong offset!");
static_assert(offsetof(UPlayMenuIconEntryWidget, _grayedOutTutorialNo) == 0x000520, "Member 'UPlayMenuIconEntryWidget::_grayedOutTutorialNo' has a wrong offset!");
static_assert(offsetof(UPlayMenuIconEntryWidget, _pressAtomCue) == 0x000528, "Member 'UPlayMenuIconEntryWidget::_pressAtomCue' has a wrong offset!");
static_assert(offsetof(UPlayMenuIconEntryWidget, _focusAtomCue) == 0x000530, "Member 'UPlayMenuIconEntryWidget::_focusAtomCue' has a wrong offset!");
static_assert(offsetof(UPlayMenuIconEntryWidget, _pressUnSelectedAtomCue) == 0x000538, "Member 'UPlayMenuIconEntryWidget::_pressUnSelectedAtomCue' has a wrong offset!");
static_assert(offsetof(UPlayMenuIconEntryWidget, _atomComp) == 0x000548, "Member 'UPlayMenuIconEntryWidget::_atomComp' has a wrong offset!");

// Class OutGameModule.PlayMenuMessage
// 0x0030 (0x0380 - 0x0350)
class UPlayMenuMessage final : public UWidgetBase
{
public:
	class UWidgetSwitcher*                        _messageSwitcher;                                  // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URichTextBlock*                         _notEnoughTextBlock;                               // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _searchSquadTimerDebugText;                        // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _matchingSquadTimerDebugText;                      // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _sequenceDebugText;                                // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnChangeBattleSequence(EBattleStartSequenceType Sequence);
	void OnChangedSelectedCharacterEvent(bool UnLocked, bool EnableRental);
	void OnRentalPointUpdatedEvent(int32 Value);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuMessage">();
	}
	static class UPlayMenuMessage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuMessage>();
	}
};
static_assert(alignof(UPlayMenuMessage) == 0x000008, "Wrong alignment on UPlayMenuMessage");
static_assert(sizeof(UPlayMenuMessage) == 0x000380, "Wrong size on UPlayMenuMessage");
static_assert(offsetof(UPlayMenuMessage, _messageSwitcher) == 0x000350, "Member 'UPlayMenuMessage::_messageSwitcher' has a wrong offset!");
static_assert(offsetof(UPlayMenuMessage, _notEnoughTextBlock) == 0x000358, "Member 'UPlayMenuMessage::_notEnoughTextBlock' has a wrong offset!");
static_assert(offsetof(UPlayMenuMessage, _searchSquadTimerDebugText) == 0x000360, "Member 'UPlayMenuMessage::_searchSquadTimerDebugText' has a wrong offset!");
static_assert(offsetof(UPlayMenuMessage, _matchingSquadTimerDebugText) == 0x000368, "Member 'UPlayMenuMessage::_matchingSquadTimerDebugText' has a wrong offset!");
static_assert(offsetof(UPlayMenuMessage, _sequenceDebugText) == 0x000370, "Member 'UPlayMenuMessage::_sequenceDebugText' has a wrong offset!");

// Class OutGameModule.PlayMenuMyAD
// 0x0048 (0x0430 - 0x03E8)
class UPlayMenuMyAD final : public UAppWidget
{
public:
	class UPlayMenuMyADButton*                    _playMenuMyADButton;                               // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _imageCanvasPanel;                                 // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPlayMenuMyADDisplay>       _playMenuMyADClass;                                // 0x03F8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                  _profilePopupLevel;                                // 0x0400(0x0028)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelStreamingDynamic*                 _levelStreamingDynamic;                            // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class UWidget* BP_SetButtonFocus(EUINavigation InNavigation);
	void BP_UpdateMyAD();
	void OnChangeBattleSequence(EBattleStartSequenceType Sequence);
	void OnDecideButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnGrayedOut(bool IsGrayedOut);
	void OnNegativeButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnPressButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnProfileLevelHidden();
	void OnReceivedChangeMainMenuAdvertise();
	void OnReceivedLoadFinishedMainMenuAdvertise();
	void OnRemovedFromFocusButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnSubLevelShown();
	void OnUpdateTutorial();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuMyAD">();
	}
	static class UPlayMenuMyAD* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuMyAD>();
	}
};
static_assert(alignof(UPlayMenuMyAD) == 0x000008, "Wrong alignment on UPlayMenuMyAD");
static_assert(sizeof(UPlayMenuMyAD) == 0x000430, "Wrong size on UPlayMenuMyAD");
static_assert(offsetof(UPlayMenuMyAD, _playMenuMyADButton) == 0x0003E8, "Member 'UPlayMenuMyAD::_playMenuMyADButton' has a wrong offset!");
static_assert(offsetof(UPlayMenuMyAD, _imageCanvasPanel) == 0x0003F0, "Member 'UPlayMenuMyAD::_imageCanvasPanel' has a wrong offset!");
static_assert(offsetof(UPlayMenuMyAD, _playMenuMyADClass) == 0x0003F8, "Member 'UPlayMenuMyAD::_playMenuMyADClass' has a wrong offset!");
static_assert(offsetof(UPlayMenuMyAD, _profilePopupLevel) == 0x000400, "Member 'UPlayMenuMyAD::_profilePopupLevel' has a wrong offset!");
static_assert(offsetof(UPlayMenuMyAD, _levelStreamingDynamic) == 0x000428, "Member 'UPlayMenuMyAD::_levelStreamingDynamic' has a wrong offset!");

// Class OutGameModule.PlayMenuMyADButton
// 0x0008 (0x0490 - 0x0488)
class UPlayMenuMyADButton final : public UWidgetButton
{
public:
	class UFocusAnimationWidget*                  _focusAnimationListItem;                           // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuMyADButton">();
	}
	static class UPlayMenuMyADButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuMyADButton>();
	}
};
static_assert(alignof(UPlayMenuMyADButton) == 0x000008, "Wrong alignment on UPlayMenuMyADButton");
static_assert(sizeof(UPlayMenuMyADButton) == 0x000490, "Wrong size on UPlayMenuMyADButton");
static_assert(offsetof(UPlayMenuMyADButton, _focusAnimationListItem) == 0x000488, "Member 'UPlayMenuMyADButton::_focusAnimationListItem' has a wrong offset!");

// Class OutGameModule.PlayMenuPlayerStatusEntryWidget
// 0x0278 (0x05C8 - 0x0350)
class UPlayMenuPlayerStatusEntryWidget final : public UWidgetBase
{
public:
	FMulticastInlineDelegateProperty_             _onNavigationOutButtonEventDelegate;               // 0x0350(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UCanvasPanel*                           _leaderPanel;                                      // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _leaderPanelText;                                  // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                           _duplicatePanel;                                   // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                           _duplicateVariationPanel;                          // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAdjustTextWidget*                      _playerName;                                       // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _noStatus;                                         // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                        _readyStatus;                                      // 0x0390(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetButton*                          _mouseAreaMyStatus;                                // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayMenuPlayerStatusVariationIconWidget* _variationIcon;                                    // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                           _variationPanel;                                   // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAdjustTextWidget*                      _variationNameText;                                // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _characterRoleIcon;                                // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _characterColor;                                   // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                        _selectButtonSwitcher;                             // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                        _duplicatePanelSwitcher;                           // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlatformWidgetButton*                  _selectButtonMyStatus;                             // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlatformWidgetButton*                  _selectButtonOthersStatus;                         // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlatformWidgetButton*                  _selectButtonMemberStatus;                         // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlatformWidgetButton*                  _selectKickButton;                                 // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProfileDisplayRankWidget*              _profileRank;                                      // 0x03F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _playerRankImage;                                  // 0x0400(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _mouseClickImage;                                  // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         _squadMemberNumber;                                // 0x0410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 _memberId;                                         // 0x0418(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EPlayMenuStatusType, struct FPlayMenuStatusTypeParam> _statusTypeMap;                                    // 0x0428(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         _oneButtonfocusAddY;                               // 0x0478(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         _oneButtonEquipVariationOffsetPosY;                // 0x047C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         _oneButtonEquipVariationOffsetSizeY;               // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         _twoButtonfocusAddY;                               // 0x0484(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         _twoButtonEquipVariationOffsetPosY;                // 0x0488(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         _twoButtonEquipVariationOffsetSizeY;               // 0x048C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   _squadLeaderText;                                  // 0x0490(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   _squadMemberText;                                  // 0x04A8(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<EMdAbilityType, class UMaterialInterface*> _abilityTypeMatMap;                                // 0x04C0(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          _myStatus;                                         // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_511[0x2F];                                     // 0x0511(0x002F)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EMdAbilityType, class UMaterialInstanceDynamic*> _abilityTypeMatDynamicMap;                         // 0x0540(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_590[0x28];                                     // 0x0590(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _bUsedebguStatus;                                  // 0x05B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5B9[0x3];                                      // 0x05B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _debugPlayerRankCode;                              // 0x05BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _selectButtonSwitcherIndex;                        // 0x05C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EPlayMenuStatusType                           _debguStatusType;                                  // 0x05C4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EMdAbilityType                                _debguAbilityType;                                 // 0x05C5(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EPlayMenuStatusSequenceType                   _debguStatusSequenceType;                          // 0x05C6(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _bDebugEquipVariation;                             // 0x05C7(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void CallCharacterSelectEvent();
	class UWidget* DoCustomNavigationStatusButton(EUINavigation UiNavigation);
	void OnAddedToFocusButtons(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnAddedToFocusMouseAreaMyStatusButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnAddedToFocusMyStatusButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnCharacterChangeEventDelegate__DelegateSignature();
	void OnDecideMouseAreaMyStatusButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideOthersMemeberButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideSelectButtonMyStatusEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideSelectKickButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideTeamMemberSelect();
	struct FEventReply OnMouseButtonDownMyStatus(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnNavigationOutButtonEventDelegate__DelegateSignature(EUINavigation UiNavigation);
	void OnRemovedFromFocusButtons(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnRemovedFromFocusMyStatusButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnSelectKickMemberButtonEventDelegate__DelegateSignature(const class FString& MemberId);
	void OnSquadNumChanged(int32 SquadNum);
	void PlayAnimationStatusSequence(bool bIdleAnimationOnly);
	void SetActive(bool Flag);
	void SetStatusButtonFocus();
	void UpdatePlayerStatus();
	void UpdateStatus();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuPlayerStatusEntryWidget">();
	}
	static class UPlayMenuPlayerStatusEntryWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuPlayerStatusEntryWidget>();
	}
};
static_assert(alignof(UPlayMenuPlayerStatusEntryWidget) == 0x000008, "Wrong alignment on UPlayMenuPlayerStatusEntryWidget");
static_assert(sizeof(UPlayMenuPlayerStatusEntryWidget) == 0x0005C8, "Wrong size on UPlayMenuPlayerStatusEntryWidget");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _onNavigationOutButtonEventDelegate) == 0x000350, "Member 'UPlayMenuPlayerStatusEntryWidget::_onNavigationOutButtonEventDelegate' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _leaderPanel) == 0x000360, "Member 'UPlayMenuPlayerStatusEntryWidget::_leaderPanel' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _leaderPanelText) == 0x000368, "Member 'UPlayMenuPlayerStatusEntryWidget::_leaderPanelText' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _duplicatePanel) == 0x000370, "Member 'UPlayMenuPlayerStatusEntryWidget::_duplicatePanel' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _duplicateVariationPanel) == 0x000378, "Member 'UPlayMenuPlayerStatusEntryWidget::_duplicateVariationPanel' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _playerName) == 0x000380, "Member 'UPlayMenuPlayerStatusEntryWidget::_playerName' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _noStatus) == 0x000388, "Member 'UPlayMenuPlayerStatusEntryWidget::_noStatus' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _readyStatus) == 0x000390, "Member 'UPlayMenuPlayerStatusEntryWidget::_readyStatus' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _mouseAreaMyStatus) == 0x000398, "Member 'UPlayMenuPlayerStatusEntryWidget::_mouseAreaMyStatus' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _variationIcon) == 0x0003A0, "Member 'UPlayMenuPlayerStatusEntryWidget::_variationIcon' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _variationPanel) == 0x0003A8, "Member 'UPlayMenuPlayerStatusEntryWidget::_variationPanel' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _variationNameText) == 0x0003B0, "Member 'UPlayMenuPlayerStatusEntryWidget::_variationNameText' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _characterRoleIcon) == 0x0003B8, "Member 'UPlayMenuPlayerStatusEntryWidget::_characterRoleIcon' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _characterColor) == 0x0003C0, "Member 'UPlayMenuPlayerStatusEntryWidget::_characterColor' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _selectButtonSwitcher) == 0x0003C8, "Member 'UPlayMenuPlayerStatusEntryWidget::_selectButtonSwitcher' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _duplicatePanelSwitcher) == 0x0003D0, "Member 'UPlayMenuPlayerStatusEntryWidget::_duplicatePanelSwitcher' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _selectButtonMyStatus) == 0x0003D8, "Member 'UPlayMenuPlayerStatusEntryWidget::_selectButtonMyStatus' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _selectButtonOthersStatus) == 0x0003E0, "Member 'UPlayMenuPlayerStatusEntryWidget::_selectButtonOthersStatus' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _selectButtonMemberStatus) == 0x0003E8, "Member 'UPlayMenuPlayerStatusEntryWidget::_selectButtonMemberStatus' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _selectKickButton) == 0x0003F0, "Member 'UPlayMenuPlayerStatusEntryWidget::_selectKickButton' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _profileRank) == 0x0003F8, "Member 'UPlayMenuPlayerStatusEntryWidget::_profileRank' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _playerRankImage) == 0x000400, "Member 'UPlayMenuPlayerStatusEntryWidget::_playerRankImage' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _mouseClickImage) == 0x000408, "Member 'UPlayMenuPlayerStatusEntryWidget::_mouseClickImage' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _squadMemberNumber) == 0x000410, "Member 'UPlayMenuPlayerStatusEntryWidget::_squadMemberNumber' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _memberId) == 0x000418, "Member 'UPlayMenuPlayerStatusEntryWidget::_memberId' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _statusTypeMap) == 0x000428, "Member 'UPlayMenuPlayerStatusEntryWidget::_statusTypeMap' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _oneButtonfocusAddY) == 0x000478, "Member 'UPlayMenuPlayerStatusEntryWidget::_oneButtonfocusAddY' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _oneButtonEquipVariationOffsetPosY) == 0x00047C, "Member 'UPlayMenuPlayerStatusEntryWidget::_oneButtonEquipVariationOffsetPosY' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _oneButtonEquipVariationOffsetSizeY) == 0x000480, "Member 'UPlayMenuPlayerStatusEntryWidget::_oneButtonEquipVariationOffsetSizeY' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _twoButtonfocusAddY) == 0x000484, "Member 'UPlayMenuPlayerStatusEntryWidget::_twoButtonfocusAddY' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _twoButtonEquipVariationOffsetPosY) == 0x000488, "Member 'UPlayMenuPlayerStatusEntryWidget::_twoButtonEquipVariationOffsetPosY' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _twoButtonEquipVariationOffsetSizeY) == 0x00048C, "Member 'UPlayMenuPlayerStatusEntryWidget::_twoButtonEquipVariationOffsetSizeY' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _squadLeaderText) == 0x000490, "Member 'UPlayMenuPlayerStatusEntryWidget::_squadLeaderText' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _squadMemberText) == 0x0004A8, "Member 'UPlayMenuPlayerStatusEntryWidget::_squadMemberText' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _abilityTypeMatMap) == 0x0004C0, "Member 'UPlayMenuPlayerStatusEntryWidget::_abilityTypeMatMap' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _myStatus) == 0x000510, "Member 'UPlayMenuPlayerStatusEntryWidget::_myStatus' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _abilityTypeMatDynamicMap) == 0x000540, "Member 'UPlayMenuPlayerStatusEntryWidget::_abilityTypeMatDynamicMap' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _bUsedebguStatus) == 0x0005B8, "Member 'UPlayMenuPlayerStatusEntryWidget::_bUsedebguStatus' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _debugPlayerRankCode) == 0x0005BC, "Member 'UPlayMenuPlayerStatusEntryWidget::_debugPlayerRankCode' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _selectButtonSwitcherIndex) == 0x0005C0, "Member 'UPlayMenuPlayerStatusEntryWidget::_selectButtonSwitcherIndex' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _debguStatusType) == 0x0005C4, "Member 'UPlayMenuPlayerStatusEntryWidget::_debguStatusType' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _debguAbilityType) == 0x0005C5, "Member 'UPlayMenuPlayerStatusEntryWidget::_debguAbilityType' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _debguStatusSequenceType) == 0x0005C6, "Member 'UPlayMenuPlayerStatusEntryWidget::_debguStatusSequenceType' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusEntryWidget, _bDebugEquipVariation) == 0x0005C7, "Member 'UPlayMenuPlayerStatusEntryWidget::_bDebugEquipVariation' has a wrong offset!");

// Class OutGameModule.PlayMenuPlayerStatusWidget
// 0x00B0 (0x0400 - 0x0350)
class UPlayMenuPlayerStatusWidget final : public UWidgetBase
{
public:
	FMulticastInlineDelegateProperty_             _onOutNavigation;                                  // 0x0350(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             _onOutCenterNavigation;                            // 0x0360(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             _onCharacterSelect;                                // 0x0370(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                        _squadSwitcher;                                    // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayMenuPlayerStatusEntryWidget*       _playerStatus1_1;                                  // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayMenuStatusAddButtonWidget*         _AddPlayerButtonSolo;                              // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayMenuPlayerStatusEntryWidget*       _playerStatusTwoTeamLeader;                        // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayMenuPlayerStatusEntryWidget*       _playerStatusTwoTeamMember;                        // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayMenuStatusAddButtonWidget*         _AddPlayerButtonTwoTeam;                           // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayMenuPlayerStatusEntryWidget*       _playerStatusThreeTeamLeader;                      // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayMenuPlayerStatusEntryWidget*       _playerStatusThreeTeamMemberOne;                   // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayMenuPlayerStatusEntryWidget*       _playerStatusThreeTeamMemberTwo;                   // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayMenuPlayerStatusEntryWidget*       _playerStatusDuoLeft;                              // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayMenuPlayerStatusEntryWidget*       _playerStatusDuoRight;                             // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayMenuPlayerStatusEntryWidget*       _playerStatusSolo;                                 // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _selectMessageWindow;                              // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E8[0x18];                                     // 0x03E8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnChangeBattleRule();
	void OnChangeMaxPlayer(int32 GameRuleMaxPlayer);
	void OnCharacterChangeEvent();
	void OnCharacterSelect__DelegateSignature();
	void OnDecideSelectMessageWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnNavigationLeftEndStatus(EUINavigation UiNavigation);
	void OnNavigationplayerStatusOne(EUINavigation UiNavigation);
	void OnNavigationRightEndStatus(EUINavigation UiNavigation);
	void OnNavigationThreeTeamLeader(EUINavigation UiNavigation);
	void OnNavigationTwoTeamLeader(EUINavigation UiNavigation);
	void OnOutCenterNavigation__DelegateSignature();
	void OnOutNavigation__DelegateSignature(EUINavigation UiNavigation);
	void OnSelectKickMemberButtonEvent(const class FString& MemberId);
	void OnSquadNumChanged(int32 SquadNum);
	void OnTeamUpUpdatedEvent();
	void SetCenterFocus();
	void SetPlayerStateFocus(EUINavigation UiNavigation);
	void UpdateStatus();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuPlayerStatusWidget">();
	}
	static class UPlayMenuPlayerStatusWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuPlayerStatusWidget>();
	}
};
static_assert(alignof(UPlayMenuPlayerStatusWidget) == 0x000008, "Wrong alignment on UPlayMenuPlayerStatusWidget");
static_assert(sizeof(UPlayMenuPlayerStatusWidget) == 0x000400, "Wrong size on UPlayMenuPlayerStatusWidget");
static_assert(offsetof(UPlayMenuPlayerStatusWidget, _onOutNavigation) == 0x000350, "Member 'UPlayMenuPlayerStatusWidget::_onOutNavigation' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusWidget, _onOutCenterNavigation) == 0x000360, "Member 'UPlayMenuPlayerStatusWidget::_onOutCenterNavigation' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusWidget, _onCharacterSelect) == 0x000370, "Member 'UPlayMenuPlayerStatusWidget::_onCharacterSelect' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusWidget, _squadSwitcher) == 0x000380, "Member 'UPlayMenuPlayerStatusWidget::_squadSwitcher' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusWidget, _playerStatus1_1) == 0x000388, "Member 'UPlayMenuPlayerStatusWidget::_playerStatus1_1' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusWidget, _AddPlayerButtonSolo) == 0x000390, "Member 'UPlayMenuPlayerStatusWidget::_AddPlayerButtonSolo' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusWidget, _playerStatusTwoTeamLeader) == 0x000398, "Member 'UPlayMenuPlayerStatusWidget::_playerStatusTwoTeamLeader' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusWidget, _playerStatusTwoTeamMember) == 0x0003A0, "Member 'UPlayMenuPlayerStatusWidget::_playerStatusTwoTeamMember' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusWidget, _AddPlayerButtonTwoTeam) == 0x0003A8, "Member 'UPlayMenuPlayerStatusWidget::_AddPlayerButtonTwoTeam' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusWidget, _playerStatusThreeTeamLeader) == 0x0003B0, "Member 'UPlayMenuPlayerStatusWidget::_playerStatusThreeTeamLeader' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusWidget, _playerStatusThreeTeamMemberOne) == 0x0003B8, "Member 'UPlayMenuPlayerStatusWidget::_playerStatusThreeTeamMemberOne' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusWidget, _playerStatusThreeTeamMemberTwo) == 0x0003C0, "Member 'UPlayMenuPlayerStatusWidget::_playerStatusThreeTeamMemberTwo' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusWidget, _playerStatusDuoLeft) == 0x0003C8, "Member 'UPlayMenuPlayerStatusWidget::_playerStatusDuoLeft' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusWidget, _playerStatusDuoRight) == 0x0003D0, "Member 'UPlayMenuPlayerStatusWidget::_playerStatusDuoRight' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusWidget, _playerStatusSolo) == 0x0003D8, "Member 'UPlayMenuPlayerStatusWidget::_playerStatusSolo' has a wrong offset!");
static_assert(offsetof(UPlayMenuPlayerStatusWidget, _selectMessageWindow) == 0x0003E0, "Member 'UPlayMenuPlayerStatusWidget::_selectMessageWindow' has a wrong offset!");

// Class OutGameModule.PlayMenuRankingResultWidget
// 0x01B0 (0x0500 - 0x0350)
class UPlayMenuRankingResultWidget final : public UWidgetBase
{
public:
	class UWidgetButton*                          _pressButton;                                      // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                        _stepSwitcher;                                     // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _eventBgImage;                                     // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _eventBannerImage;                                 // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _eventScoreText;                                   // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _eventNameText;                                    // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _mvpScoreText;                                     // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _mvpSeasonText;                                    // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _billboardChartScoreText;                          // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _billboardChartSeasonText;                         // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _guidTopScoreText;                                 // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _guidTopSeasonText;                                // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _messageMvpTextBlock;                              // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _messageBillbordTextBlock;                         // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _messageEliteOfficeTextBlock;                      // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _messageGuidTopTextBlock;                          // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _eliteSeasonText;                                  // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _eliteLeagueNameText;                              // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayMenuRankingEliteWidget*            _eliteWidget;                                      // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                        _eliteSwitcher;                                    // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                           _message_EliteOffice;                              // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F8[0x8];                                      // 0x03F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPlayMenuRankingMessageParam>   _messageParams;                                    // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UWidgetButton*                          _emptyButton;                                      // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_418[0xE1];                                     // 0x0418(0x00E1)(Fixing Size After Last Property [ Dumper-7 ])
	EPlayMenuRankingStep                          _debugStep;                                        // 0x04F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          _bUseDebugScore;                                   // 0x04FA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4FB[0x1];                                      // 0x04FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DebugRankingNum;                                   // 0x04FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnClose();
	void OnCloseEliteWidget();
	void OnDecidePressButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnPressButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnPressEmptyButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void PlayMessageVoice();
	void PlayNextVoice();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuRankingResultWidget">();
	}
	static class UPlayMenuRankingResultWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuRankingResultWidget>();
	}
};
static_assert(alignof(UPlayMenuRankingResultWidget) == 0x000008, "Wrong alignment on UPlayMenuRankingResultWidget");
static_assert(sizeof(UPlayMenuRankingResultWidget) == 0x000500, "Wrong size on UPlayMenuRankingResultWidget");
static_assert(offsetof(UPlayMenuRankingResultWidget, _pressButton) == 0x000350, "Member 'UPlayMenuRankingResultWidget::_pressButton' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _stepSwitcher) == 0x000358, "Member 'UPlayMenuRankingResultWidget::_stepSwitcher' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _eventBgImage) == 0x000360, "Member 'UPlayMenuRankingResultWidget::_eventBgImage' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _eventBannerImage) == 0x000368, "Member 'UPlayMenuRankingResultWidget::_eventBannerImage' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _eventScoreText) == 0x000370, "Member 'UPlayMenuRankingResultWidget::_eventScoreText' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _eventNameText) == 0x000378, "Member 'UPlayMenuRankingResultWidget::_eventNameText' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _mvpScoreText) == 0x000380, "Member 'UPlayMenuRankingResultWidget::_mvpScoreText' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _mvpSeasonText) == 0x000388, "Member 'UPlayMenuRankingResultWidget::_mvpSeasonText' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _billboardChartScoreText) == 0x000390, "Member 'UPlayMenuRankingResultWidget::_billboardChartScoreText' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _billboardChartSeasonText) == 0x000398, "Member 'UPlayMenuRankingResultWidget::_billboardChartSeasonText' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _guidTopScoreText) == 0x0003A0, "Member 'UPlayMenuRankingResultWidget::_guidTopScoreText' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _guidTopSeasonText) == 0x0003A8, "Member 'UPlayMenuRankingResultWidget::_guidTopSeasonText' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _messageMvpTextBlock) == 0x0003B0, "Member 'UPlayMenuRankingResultWidget::_messageMvpTextBlock' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _messageBillbordTextBlock) == 0x0003B8, "Member 'UPlayMenuRankingResultWidget::_messageBillbordTextBlock' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _messageEliteOfficeTextBlock) == 0x0003C0, "Member 'UPlayMenuRankingResultWidget::_messageEliteOfficeTextBlock' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _messageGuidTopTextBlock) == 0x0003C8, "Member 'UPlayMenuRankingResultWidget::_messageGuidTopTextBlock' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _eliteSeasonText) == 0x0003D0, "Member 'UPlayMenuRankingResultWidget::_eliteSeasonText' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _eliteLeagueNameText) == 0x0003D8, "Member 'UPlayMenuRankingResultWidget::_eliteLeagueNameText' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _eliteWidget) == 0x0003E0, "Member 'UPlayMenuRankingResultWidget::_eliteWidget' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _eliteSwitcher) == 0x0003E8, "Member 'UPlayMenuRankingResultWidget::_eliteSwitcher' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _message_EliteOffice) == 0x0003F0, "Member 'UPlayMenuRankingResultWidget::_message_EliteOffice' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _messageParams) == 0x000400, "Member 'UPlayMenuRankingResultWidget::_messageParams' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _emptyButton) == 0x000410, "Member 'UPlayMenuRankingResultWidget::_emptyButton' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _debugStep) == 0x0004F9, "Member 'UPlayMenuRankingResultWidget::_debugStep' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, _bUseDebugScore) == 0x0004FA, "Member 'UPlayMenuRankingResultWidget::_bUseDebugScore' has a wrong offset!");
static_assert(offsetof(UPlayMenuRankingResultWidget, DebugRankingNum) == 0x0004FC, "Member 'UPlayMenuRankingResultWidget::DebugRankingNum' has a wrong offset!");

// Class OutGameModule.UseCurrencySelectItemEntryObject
// 0x0030 (0x0060 - 0x0030)
class UUseCurrencySelectItemEntryObject final : public UListViewEntryObjectBase
{
public:
	uint8                                         Pad_30[0x30];                                      // 0x0030(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UseCurrencySelectItemEntryObject">();
	}
	static class UUseCurrencySelectItemEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUseCurrencySelectItemEntryObject>();
	}
};
static_assert(alignof(UUseCurrencySelectItemEntryObject) == 0x000008, "Wrong alignment on UUseCurrencySelectItemEntryObject");
static_assert(sizeof(UUseCurrencySelectItemEntryObject) == 0x000060, "Wrong size on UUseCurrencySelectItemEntryObject");

// Class OutGameModule.PlayMenuSauadIdWidget
// 0x0008 (0x0358 - 0x0350)
class UPlayMenuSauadIdWidget final : public UWidgetBase
{
public:
	class UTextBlock*                             _squadIdText;                                      // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnSquadNumChanged(int32 SquadNum);
	void OnTeamUpUpdatedEvent();
	void UpdateSquadInfo();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuSauadIdWidget">();
	}
	static class UPlayMenuSauadIdWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuSauadIdWidget>();
	}
};
static_assert(alignof(UPlayMenuSauadIdWidget) == 0x000008, "Wrong alignment on UPlayMenuSauadIdWidget");
static_assert(sizeof(UPlayMenuSauadIdWidget) == 0x000358, "Wrong size on UPlayMenuSauadIdWidget");
static_assert(offsetof(UPlayMenuSauadIdWidget, _squadIdText) == 0x000350, "Member 'UPlayMenuSauadIdWidget::_squadIdText' has a wrong offset!");

// Class OutGameModule.PlayMenuShortcutList
// 0x0048 (0x0398 - 0x0350)
class UPlayMenuShortcutList final : public UWidgetBase
{
public:
	class UPlayMenuIconEntryWidget*               _squadButton_IconEntry;                            // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayMenuIconEntryWidget*               _contactNoticeIconEntryWidget;                     // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayMenuIconEntryWidget*               _misstionButton_IconEntry;                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSubMenu*                         _iconSubMenu;                                      // 0x0368(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnSquadDecideButton;                               // 0x0370(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_380[0x18];                                     // 0x0380(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnChangeAvailableReceiveCount(int32 Count);
	void OnChangeBattleSequence(EBattleStartSequenceType Sequence);
	void OnChangeUnreadNoticeCont(int32 Count);
	void OnCloseFinished();
	void OnDecideIconButtonDelegate__DelegateSignature();
	void OnNewNoticeFlg();
	void OnSetNoticeUnreadFlag(bool bUnread);
	void OnSquadButtonDecideDelegate(class UAppWidget* Widget, EWidgetInputType InputType);
	void SetMisstionIconCount(int32 Count);
	void SetupSubMenuTextInfo(const TArray<struct FSubMenuInfo>& SoloSubMenuInfo, const TArray<struct FSubMenuInfo>& LeaderSubMenuInfo, const TArray<struct FSubMenuInfo>& MemberSubMenuInfo);
	void SquadIconFocus();
	void UpdateMisstionIcon();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuShortcutList">();
	}
	static class UPlayMenuShortcutList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuShortcutList>();
	}
};
static_assert(alignof(UPlayMenuShortcutList) == 0x000008, "Wrong alignment on UPlayMenuShortcutList");
static_assert(sizeof(UPlayMenuShortcutList) == 0x000398, "Wrong size on UPlayMenuShortcutList");
static_assert(offsetof(UPlayMenuShortcutList, _squadButton_IconEntry) == 0x000350, "Member 'UPlayMenuShortcutList::_squadButton_IconEntry' has a wrong offset!");
static_assert(offsetof(UPlayMenuShortcutList, _contactNoticeIconEntryWidget) == 0x000358, "Member 'UPlayMenuShortcutList::_contactNoticeIconEntryWidget' has a wrong offset!");
static_assert(offsetof(UPlayMenuShortcutList, _misstionButton_IconEntry) == 0x000360, "Member 'UPlayMenuShortcutList::_misstionButton_IconEntry' has a wrong offset!");
static_assert(offsetof(UPlayMenuShortcutList, _iconSubMenu) == 0x000368, "Member 'UPlayMenuShortcutList::_iconSubMenu' has a wrong offset!");
static_assert(offsetof(UPlayMenuShortcutList, OnSquadDecideButton) == 0x000370, "Member 'UPlayMenuShortcutList::OnSquadDecideButton' has a wrong offset!");

// Class OutGameModule.PlayMenuStatusAddButtonWidget
// 0x0030 (0x0380 - 0x0350)
class UPlayMenuStatusAddButtonWidget final : public UWidgetBase
{
public:
	FMulticastInlineDelegateProperty_             _onNavigationAddButtonEventDelegate;               // 0x0350(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UPlatformWidgetButton*                  _addButton;                                        // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _invitationPanel;                                  // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _mouseAreaButton;                                  // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UWidget* DoCustomNavigationAddButton(EUINavigation UiNavigation);
	void OnAddedToFocusAddButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnAddedToFocusMouseAreaButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnCallInvitationSquad();
	void OnChangeBattleSequence(EBattleStartSequenceType Sequence);
	void OnDecideSelectAddButtonEvent(class UAppWidget* Button, EWidgetInputType InputType);
	void OnLoadCompletedLoadSquadSentInvitation(int32 RequestId);
	void OnNavigationAddButtonEventDelegate__DelegateSignature(EUINavigation UiNavigation);
	void OnReceivedCloseWebApiErrorWindow();
	void OnReceivedWebApiError();
	void OnRemovedFromFocusAddButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void SetUseStandbyVoice(bool bUse);
	void SetVisibleInvitationPanel(int32 Num);
	void UpdateInvitationPanel();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayMenuStatusAddButtonWidget">();
	}
	static class UPlayMenuStatusAddButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMenuStatusAddButtonWidget>();
	}
};
static_assert(alignof(UPlayMenuStatusAddButtonWidget) == 0x000008, "Wrong alignment on UPlayMenuStatusAddButtonWidget");
static_assert(sizeof(UPlayMenuStatusAddButtonWidget) == 0x000380, "Wrong size on UPlayMenuStatusAddButtonWidget");
static_assert(offsetof(UPlayMenuStatusAddButtonWidget, _onNavigationAddButtonEventDelegate) == 0x000350, "Member 'UPlayMenuStatusAddButtonWidget::_onNavigationAddButtonEventDelegate' has a wrong offset!");
static_assert(offsetof(UPlayMenuStatusAddButtonWidget, _addButton) == 0x000360, "Member 'UPlayMenuStatusAddButtonWidget::_addButton' has a wrong offset!");
static_assert(offsetof(UPlayMenuStatusAddButtonWidget, _invitationPanel) == 0x000368, "Member 'UPlayMenuStatusAddButtonWidget::_invitationPanel' has a wrong offset!");
static_assert(offsetof(UPlayMenuStatusAddButtonWidget, _mouseAreaButton) == 0x000370, "Member 'UPlayMenuStatusAddButtonWidget::_mouseAreaButton' has a wrong offset!");

// Class OutGameModule.VideoSettingWidget
// 0x0248 (0x05B8 - 0x0370)
class UVideoSettingWidget final : public UBaseSettingWidget
{
public:
	class USettingButtonSliderWidget*             _brightness;                                       // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonChoicesWidget*            _windowMode;                                       // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonChoicesWidget*            _modeResolution;                                   // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonChoicesWidget*            _maxFPS;                                           // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _vSync;                                            // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _multiThreadedRendering;                           // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _reticle;                                          // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _situation;                                        // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _koLog;                                            // 0x03B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _miniMapVisible;                                   // 0x03B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _squadMember;                                      // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _itemIconSet;                                      // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _communicationIconSet;                             // 0x03D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _overheadIcon;                                     // 0x03D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _playerStatus;                                     // 0x03E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _individualityIcon;                                // 0x03E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _buttonHint;                                       // 0x03F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _damageVisible;                                    // 0x03F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonChoicesWidget*            _damageVisibleType;                                // 0x0400(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _attackDirection;                                  // 0x0408(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _battleAnnounce;                                   // 0x0410(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonChoicesWidget*            _graphicAutoSetting;                               // 0x0418(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonChoicesWidget*            _shadow;                                           // 0x0420(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _antialiasing;                                     // 0x0428(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonChoicesWidget*            _foliageQuality;                                   // 0x0430(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonChoicesWidget*            _effect;                                           // 0x0438(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonChoicesWidget*            _textureQuality;                                   // 0x0440(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _motionBlur;                                       // 0x0448(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _bloom;                                            // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _occlude;                                          // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _shadowPanel;                                      // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _antialiasingPanel;                                // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _effectPanel;                                      // 0x0470(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _motionBlurPanel;                                  // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _windowModePanel;                                  // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _modeResolutionPanel;                              // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _maxFPSPanel;                                      // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _vSyncPanel;                                       // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _multiThreadedRenderingPanel;                      // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _graphicAutoSettingPanel;                          // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _occludePanel;                                     // 0x04B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _bloomPanel;                                       // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _textureQualityPanel;                              // 0x04C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _graphicStartPanel;                                // 0x04C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _graphicEndPanel;                                  // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _defaultEndPanel;                                  // 0x04D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _foliageQualityPanel;                              // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _reticlePanel;                                     // 0x04E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _situationPanel;                                   // 0x04F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _koLogPanel;                                       // 0x04F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _miniMapVisiblePanel;                              // 0x0500(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _squadMemberPanel;                                 // 0x0508(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _itemIconSetPanel;                                 // 0x0510(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _communicationIconSetPanel;                        // 0x0518(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _overheadIconPanel;                                // 0x0520(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _playerStatusPanel;                                // 0x0528(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _individualityIconPanel;                           // 0x0530(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _buttonHintPanel;                                  // 0x0538(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _brightnessImage;                                  // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                             _list;                                             // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _tipsText;                                         // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameOption*                            _gameOption;                                       // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_560[0x58];                                     // 0x0560(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnValueAntialiasing(const ESettingSwitchType Value);
	void OnValueBloom(const ESettingSwitchType Value);
	void OnValueEffect(int32 SelectedIndex);
	void OnValueFoliageQuality(int32 SelectedIndex);
	void OnValueGraphicAutoSetting(int32 SelectedIndex);
	void OnValueMotionBlur(const ESettingSwitchType Value);
	void OnValueOcclude(const ESettingSwitchType Value);
	void OnValueShadow(int32 SelectedIndex);
	void OnValueTextureQuality(int32 SelectedIndex);
	void SetBrightnessValue(float Value);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VideoSettingWidget">();
	}
	static class UVideoSettingWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVideoSettingWidget>();
	}
};
static_assert(alignof(UVideoSettingWidget) == 0x000008, "Wrong alignment on UVideoSettingWidget");
static_assert(sizeof(UVideoSettingWidget) == 0x0005B8, "Wrong size on UVideoSettingWidget");
static_assert(offsetof(UVideoSettingWidget, _brightness) == 0x000370, "Member 'UVideoSettingWidget::_brightness' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _windowMode) == 0x000378, "Member 'UVideoSettingWidget::_windowMode' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _modeResolution) == 0x000380, "Member 'UVideoSettingWidget::_modeResolution' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _maxFPS) == 0x000388, "Member 'UVideoSettingWidget::_maxFPS' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _vSync) == 0x000390, "Member 'UVideoSettingWidget::_vSync' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _multiThreadedRendering) == 0x000398, "Member 'UVideoSettingWidget::_multiThreadedRendering' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _reticle) == 0x0003A0, "Member 'UVideoSettingWidget::_reticle' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _situation) == 0x0003A8, "Member 'UVideoSettingWidget::_situation' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _koLog) == 0x0003B0, "Member 'UVideoSettingWidget::_koLog' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _miniMapVisible) == 0x0003B8, "Member 'UVideoSettingWidget::_miniMapVisible' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _squadMember) == 0x0003C0, "Member 'UVideoSettingWidget::_squadMember' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _itemIconSet) == 0x0003C8, "Member 'UVideoSettingWidget::_itemIconSet' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _communicationIconSet) == 0x0003D0, "Member 'UVideoSettingWidget::_communicationIconSet' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _overheadIcon) == 0x0003D8, "Member 'UVideoSettingWidget::_overheadIcon' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _playerStatus) == 0x0003E0, "Member 'UVideoSettingWidget::_playerStatus' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _individualityIcon) == 0x0003E8, "Member 'UVideoSettingWidget::_individualityIcon' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _buttonHint) == 0x0003F0, "Member 'UVideoSettingWidget::_buttonHint' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _damageVisible) == 0x0003F8, "Member 'UVideoSettingWidget::_damageVisible' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _damageVisibleType) == 0x000400, "Member 'UVideoSettingWidget::_damageVisibleType' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _attackDirection) == 0x000408, "Member 'UVideoSettingWidget::_attackDirection' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _battleAnnounce) == 0x000410, "Member 'UVideoSettingWidget::_battleAnnounce' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _graphicAutoSetting) == 0x000418, "Member 'UVideoSettingWidget::_graphicAutoSetting' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _shadow) == 0x000420, "Member 'UVideoSettingWidget::_shadow' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _antialiasing) == 0x000428, "Member 'UVideoSettingWidget::_antialiasing' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _foliageQuality) == 0x000430, "Member 'UVideoSettingWidget::_foliageQuality' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _effect) == 0x000438, "Member 'UVideoSettingWidget::_effect' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _textureQuality) == 0x000440, "Member 'UVideoSettingWidget::_textureQuality' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _motionBlur) == 0x000448, "Member 'UVideoSettingWidget::_motionBlur' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _bloom) == 0x000450, "Member 'UVideoSettingWidget::_bloom' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _occlude) == 0x000458, "Member 'UVideoSettingWidget::_occlude' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _shadowPanel) == 0x000460, "Member 'UVideoSettingWidget::_shadowPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _antialiasingPanel) == 0x000468, "Member 'UVideoSettingWidget::_antialiasingPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _effectPanel) == 0x000470, "Member 'UVideoSettingWidget::_effectPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _motionBlurPanel) == 0x000478, "Member 'UVideoSettingWidget::_motionBlurPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _windowModePanel) == 0x000480, "Member 'UVideoSettingWidget::_windowModePanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _modeResolutionPanel) == 0x000488, "Member 'UVideoSettingWidget::_modeResolutionPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _maxFPSPanel) == 0x000490, "Member 'UVideoSettingWidget::_maxFPSPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _vSyncPanel) == 0x000498, "Member 'UVideoSettingWidget::_vSyncPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _multiThreadedRenderingPanel) == 0x0004A0, "Member 'UVideoSettingWidget::_multiThreadedRenderingPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _graphicAutoSettingPanel) == 0x0004A8, "Member 'UVideoSettingWidget::_graphicAutoSettingPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _occludePanel) == 0x0004B0, "Member 'UVideoSettingWidget::_occludePanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _bloomPanel) == 0x0004B8, "Member 'UVideoSettingWidget::_bloomPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _textureQualityPanel) == 0x0004C0, "Member 'UVideoSettingWidget::_textureQualityPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _graphicStartPanel) == 0x0004C8, "Member 'UVideoSettingWidget::_graphicStartPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _graphicEndPanel) == 0x0004D0, "Member 'UVideoSettingWidget::_graphicEndPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _defaultEndPanel) == 0x0004D8, "Member 'UVideoSettingWidget::_defaultEndPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _foliageQualityPanel) == 0x0004E0, "Member 'UVideoSettingWidget::_foliageQualityPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _reticlePanel) == 0x0004E8, "Member 'UVideoSettingWidget::_reticlePanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _situationPanel) == 0x0004F0, "Member 'UVideoSettingWidget::_situationPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _koLogPanel) == 0x0004F8, "Member 'UVideoSettingWidget::_koLogPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _miniMapVisiblePanel) == 0x000500, "Member 'UVideoSettingWidget::_miniMapVisiblePanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _squadMemberPanel) == 0x000508, "Member 'UVideoSettingWidget::_squadMemberPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _itemIconSetPanel) == 0x000510, "Member 'UVideoSettingWidget::_itemIconSetPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _communicationIconSetPanel) == 0x000518, "Member 'UVideoSettingWidget::_communicationIconSetPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _overheadIconPanel) == 0x000520, "Member 'UVideoSettingWidget::_overheadIconPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _playerStatusPanel) == 0x000528, "Member 'UVideoSettingWidget::_playerStatusPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _individualityIconPanel) == 0x000530, "Member 'UVideoSettingWidget::_individualityIconPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _buttonHintPanel) == 0x000538, "Member 'UVideoSettingWidget::_buttonHintPanel' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _brightnessImage) == 0x000540, "Member 'UVideoSettingWidget::_brightnessImage' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _list) == 0x000548, "Member 'UVideoSettingWidget::_list' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _tipsText) == 0x000550, "Member 'UVideoSettingWidget::_tipsText' has a wrong offset!");
static_assert(offsetof(UVideoSettingWidget, _gameOption) == 0x000558, "Member 'UVideoSettingWidget::_gameOption' has a wrong offset!");

// Class OutGameModule.PriceCoinWidget
// 0x0018 (0x0418 - 0x0400)
class UPriceCoinWidget final : public UCoinWidget
{
public:
	class UTextBlock*                             _basicNumText;                                     // 0x0400(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _basicPanel;                                       // 0x0408(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_410[0x8];                                      // 0x0410(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PriceCoinWidget">();
	}
	static class UPriceCoinWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPriceCoinWidget>();
	}
};
static_assert(alignof(UPriceCoinWidget) == 0x000008, "Wrong alignment on UPriceCoinWidget");
static_assert(sizeof(UPriceCoinWidget) == 0x000418, "Wrong size on UPriceCoinWidget");
static_assert(offsetof(UPriceCoinWidget, _basicNumText) == 0x000400, "Member 'UPriceCoinWidget::_basicNumText' has a wrong offset!");
static_assert(offsetof(UPriceCoinWidget, _basicPanel) == 0x000408, "Member 'UPriceCoinWidget::_basicPanel' has a wrong offset!");

// Class OutGameModule.ProfileAppWidget
// 0x0028 (0x0378 - 0x0350)
class UProfileAppWidget final : public UWidgetInputControl
{
public:
	class UImage*                                 _backImage;                                        // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTabWidget*                             _tab;                                              // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindowFrame*              _generalWindowFrame;                               // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _focusDummyButton;                                 // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bMySelf;                                          // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AfterFinishSendLikeFetch();
	bool BP_RequestSendLike();
	void BP_UpdateBackImage();
	void OnFinishSendLikeFetchDataEvent(int32 RequestId);
	void OnOpenedGeneralWindow();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProfileAppWidget">();
	}
	static class UProfileAppWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProfileAppWidget>();
	}
};
static_assert(alignof(UProfileAppWidget) == 0x000008, "Wrong alignment on UProfileAppWidget");
static_assert(sizeof(UProfileAppWidget) == 0x000378, "Wrong size on UProfileAppWidget");
static_assert(offsetof(UProfileAppWidget, _backImage) == 0x000350, "Member 'UProfileAppWidget::_backImage' has a wrong offset!");
static_assert(offsetof(UProfileAppWidget, _tab) == 0x000358, "Member 'UProfileAppWidget::_tab' has a wrong offset!");
static_assert(offsetof(UProfileAppWidget, _generalWindowFrame) == 0x000360, "Member 'UProfileAppWidget::_generalWindowFrame' has a wrong offset!");
static_assert(offsetof(UProfileAppWidget, _focusDummyButton) == 0x000368, "Member 'UProfileAppWidget::_focusDummyButton' has a wrong offset!");
static_assert(offsetof(UProfileAppWidget, _bMySelf) == 0x000370, "Member 'UProfileAppWidget::_bMySelf' has a wrong offset!");

// Class OutGameModule.ProfileRankListItemWidget
// 0x0048 (0x0398 - 0x0350)
class UProfileRankListItemWidget final : public UWidgetBase
{
public:
	class UCanvasPanel*                           _youStamp;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTabContentsSwitcher*                   _rankImageSwitcher;                                // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _rankText;                                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProfileDisplayRankWidget*              _profileRank;                                      // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _playerRankImage;                                  // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _playerRankImage_you;                              // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetText*                            _nowRankText;                                      // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetText*                            _maxRankText;                                      // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _rankCode;                                         // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Update();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProfileRankListItemWidget">();
	}
	static class UProfileRankListItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProfileRankListItemWidget>();
	}
};
static_assert(alignof(UProfileRankListItemWidget) == 0x000008, "Wrong alignment on UProfileRankListItemWidget");
static_assert(sizeof(UProfileRankListItemWidget) == 0x000398, "Wrong size on UProfileRankListItemWidget");
static_assert(offsetof(UProfileRankListItemWidget, _youStamp) == 0x000350, "Member 'UProfileRankListItemWidget::_youStamp' has a wrong offset!");
static_assert(offsetof(UProfileRankListItemWidget, _rankImageSwitcher) == 0x000358, "Member 'UProfileRankListItemWidget::_rankImageSwitcher' has a wrong offset!");
static_assert(offsetof(UProfileRankListItemWidget, _rankText) == 0x000360, "Member 'UProfileRankListItemWidget::_rankText' has a wrong offset!");
static_assert(offsetof(UProfileRankListItemWidget, _profileRank) == 0x000368, "Member 'UProfileRankListItemWidget::_profileRank' has a wrong offset!");
static_assert(offsetof(UProfileRankListItemWidget, _playerRankImage) == 0x000370, "Member 'UProfileRankListItemWidget::_playerRankImage' has a wrong offset!");
static_assert(offsetof(UProfileRankListItemWidget, _playerRankImage_you) == 0x000378, "Member 'UProfileRankListItemWidget::_playerRankImage_you' has a wrong offset!");
static_assert(offsetof(UProfileRankListItemWidget, _nowRankText) == 0x000380, "Member 'UProfileRankListItemWidget::_nowRankText' has a wrong offset!");
static_assert(offsetof(UProfileRankListItemWidget, _maxRankText) == 0x000388, "Member 'UProfileRankListItemWidget::_maxRankText' has a wrong offset!");
static_assert(offsetof(UProfileRankListItemWidget, _rankCode) == 0x000390, "Member 'UProfileRankListItemWidget::_rankCode' has a wrong offset!");

// Class OutGameModule.RankingBase
// 0x0050 (0x0438 - 0x03E8)
class URankingBase final : public UAppWidget
{
public:
	TSoftObjectPtr<class UWorld>                  _remunaertionPopupLevel;                           // 0x03E8(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _remunaertionButton;                               // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGeneralPageCarouselWidget*             _carosel;                                          // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNamedSlot*                             _listSlot;                                         // 0x0420(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _aggregatingText;                                  // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetBase*                            _loadingIcon;                                      // 0x0430(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnDecideRemuaertionButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideSendLikeEvent(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankingBase">();
	}
	static class URankingBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankingBase>();
	}
};
static_assert(alignof(URankingBase) == 0x000008, "Wrong alignment on URankingBase");
static_assert(sizeof(URankingBase) == 0x000438, "Wrong size on URankingBase");
static_assert(offsetof(URankingBase, _remunaertionPopupLevel) == 0x0003E8, "Member 'URankingBase::_remunaertionPopupLevel' has a wrong offset!");
static_assert(offsetof(URankingBase, _remunaertionButton) == 0x000410, "Member 'URankingBase::_remunaertionButton' has a wrong offset!");
static_assert(offsetof(URankingBase, _carosel) == 0x000418, "Member 'URankingBase::_carosel' has a wrong offset!");
static_assert(offsetof(URankingBase, _listSlot) == 0x000420, "Member 'URankingBase::_listSlot' has a wrong offset!");
static_assert(offsetof(URankingBase, _aggregatingText) == 0x000428, "Member 'URankingBase::_aggregatingText' has a wrong offset!");
static_assert(offsetof(URankingBase, _loadingIcon) == 0x000430, "Member 'URankingBase::_loadingIcon' has a wrong offset!");

// Class OutGameModule.RankingDetailsBaseWidget
// 0x0000 (0x0350 - 0x0350)
class URankingDetailsBaseWidget final : public UWidgetBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankingDetailsBaseWidget">();
	}
	static class URankingDetailsBaseWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankingDetailsBaseWidget>();
	}
};
static_assert(alignof(URankingDetailsBaseWidget) == 0x000008, "Wrong alignment on URankingDetailsBaseWidget");
static_assert(sizeof(URankingDetailsBaseWidget) == 0x000350, "Wrong size on URankingDetailsBaseWidget");

// Class OutGameModule.RankingDetailsEventEntryObject
// 0x0030 (0x00F0 - 0x00C0)
class URankingDetailsEventEntryObject final : public URankingDetailsEntryObjectBase
{
public:
	uint8                                         Pad_C0[0x30];                                      // 0x00C0(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankingDetailsEventEntryObject">();
	}
	static class URankingDetailsEventEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankingDetailsEventEntryObject>();
	}
};
static_assert(alignof(URankingDetailsEventEntryObject) == 0x000008, "Wrong alignment on URankingDetailsEventEntryObject");
static_assert(sizeof(URankingDetailsEventEntryObject) == 0x0000F0, "Wrong size on URankingDetailsEventEntryObject");

// Class OutGameModule.RankingEventDetails
// 0x0018 (0x04F0 - 0x04D8)
class URankingEventDetails final : public URankingDetailsBase
{
public:
	class UTimeWidget*                            _eventTimer;                                       // 0x04D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _eventName;                                        // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URankingDetailsEventEntryObject*        _rankingEntryObject;                               // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void SetStateEvent(int32 State);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankingEventDetails">();
	}
	static class URankingEventDetails* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankingEventDetails>();
	}
};
static_assert(alignof(URankingEventDetails) == 0x000008, "Wrong alignment on URankingEventDetails");
static_assert(sizeof(URankingEventDetails) == 0x0004F0, "Wrong size on URankingEventDetails");
static_assert(offsetof(URankingEventDetails, _eventTimer) == 0x0004D8, "Member 'URankingEventDetails::_eventTimer' has a wrong offset!");
static_assert(offsetof(URankingEventDetails, _eventName) == 0x0004E0, "Member 'URankingEventDetails::_eventName' has a wrong offset!");
static_assert(offsetof(URankingEventDetails, _rankingEntryObject) == 0x0004E8, "Member 'URankingEventDetails::_rankingEntryObject' has a wrong offset!");

// Class OutGameModule.ShopItemObject
// 0x00F0 (0x0118 - 0x0028)
class UShopItemObject final : public UObject
{
public:
	class UShopItemListWidgetBase*                _shopItemListWidget;                               // 0x0028(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_30[0xE8];                                      // 0x0030(0x00E8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ShopItemObject">();
	}
	static class UShopItemObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopItemObject>();
	}
};
static_assert(alignof(UShopItemObject) == 0x000008, "Wrong alignment on UShopItemObject");
static_assert(sizeof(UShopItemObject) == 0x000118, "Wrong size on UShopItemObject");
static_assert(offsetof(UShopItemObject, _shopItemListWidget) == 0x000028, "Member 'UShopItemObject::_shopItemListWidget' has a wrong offset!");

// Class OutGameModule.RankingLeagueWidget
// 0x0020 (0x0370 - 0x0350)
class URankingLeagueWidget final : public UWidgetBase
{
public:
	class UTextBlock*                             _myRank;                                           // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _borderLinePoint;                                  // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _score;                                            // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        _pointBorderSwitcher;                              // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void SetLeagueBorderText(bool bUp);
	void SetLeagueText(int32 Code);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankingLeagueWidget">();
	}
	static class URankingLeagueWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankingLeagueWidget>();
	}
};
static_assert(alignof(URankingLeagueWidget) == 0x000008, "Wrong alignment on URankingLeagueWidget");
static_assert(sizeof(URankingLeagueWidget) == 0x000370, "Wrong size on URankingLeagueWidget");
static_assert(offsetof(URankingLeagueWidget, _myRank) == 0x000350, "Member 'URankingLeagueWidget::_myRank' has a wrong offset!");
static_assert(offsetof(URankingLeagueWidget, _borderLinePoint) == 0x000358, "Member 'URankingLeagueWidget::_borderLinePoint' has a wrong offset!");
static_assert(offsetof(URankingLeagueWidget, _score) == 0x000360, "Member 'URankingLeagueWidget::_score' has a wrong offset!");
static_assert(offsetof(URankingLeagueWidget, _pointBorderSwitcher) == 0x000368, "Member 'URankingLeagueWidget::_pointBorderSwitcher' has a wrong offset!");

// Class OutGameModule.RankingRemunerationItemListWidget
// 0x0040 (0x0428 - 0x03E8)
class URankingRemunerationItemListWidget final : public UAppWidget
{
public:
	uint8                                         Pad_3E8[0x8];                                      // 0x03E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UUniformGridPanel*                      _gridPanel;                                        // 0x03F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UNamedSlot*                             _templateWidget;                                   // 0x03F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URankingRemunerationScoreWidget*        _remunerationScore;                                // 0x0400(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UWidget*>                        _elementWidgets;                                   // 0x0408(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class URankingRemunerationEntryObject*        _entryObject;                                      // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_420[0x8];                                      // 0x0420(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DoCustomSelectWidgetNavigation(EUINavigation UiNavigation);
	void OnDecideElement(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnPopupItemWindow();
	void OnRemoveFocusItem(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankingRemunerationItemListWidget">();
	}
	static class URankingRemunerationItemListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankingRemunerationItemListWidget>();
	}
};
static_assert(alignof(URankingRemunerationItemListWidget) == 0x000008, "Wrong alignment on URankingRemunerationItemListWidget");
static_assert(sizeof(URankingRemunerationItemListWidget) == 0x000428, "Wrong size on URankingRemunerationItemListWidget");
static_assert(offsetof(URankingRemunerationItemListWidget, _gridPanel) == 0x0003F0, "Member 'URankingRemunerationItemListWidget::_gridPanel' has a wrong offset!");
static_assert(offsetof(URankingRemunerationItemListWidget, _templateWidget) == 0x0003F8, "Member 'URankingRemunerationItemListWidget::_templateWidget' has a wrong offset!");
static_assert(offsetof(URankingRemunerationItemListWidget, _remunerationScore) == 0x000400, "Member 'URankingRemunerationItemListWidget::_remunerationScore' has a wrong offset!");
static_assert(offsetof(URankingRemunerationItemListWidget, _elementWidgets) == 0x000408, "Member 'URankingRemunerationItemListWidget::_elementWidgets' has a wrong offset!");
static_assert(offsetof(URankingRemunerationItemListWidget, _entryObject) == 0x000418, "Member 'URankingRemunerationItemListWidget::_entryObject' has a wrong offset!");

// Class OutGameModule.ShopTabWidget
// 0x0048 (0x0398 - 0x0350)
class UShopTabWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _shopCode;                                         // 0x0360(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UShopHeaderWidget*                      _shopHeader;                                       // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UShopItemListWidgetBase*                _shopItemListWidget;                               // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UShopEventListWidget*                   _shopEventList;                                    // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _loadingIcon;                                      // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _shopCanvasPanel;                                  // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_390[0x8];                                      // 0x0390(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDecideEvent(class UEventItemEntryObject* EventItemEntryObject);
	bool ReturnEventList();

	class UShopItemListWidgetBase* GetShopItemListWidget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ShopTabWidget">();
	}
	static class UShopTabWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopTabWidget>();
	}
};
static_assert(alignof(UShopTabWidget) == 0x000008, "Wrong alignment on UShopTabWidget");
static_assert(sizeof(UShopTabWidget) == 0x000398, "Wrong size on UShopTabWidget");
static_assert(offsetof(UShopTabWidget, _shopCode) == 0x000360, "Member 'UShopTabWidget::_shopCode' has a wrong offset!");
static_assert(offsetof(UShopTabWidget, _shopHeader) == 0x000368, "Member 'UShopTabWidget::_shopHeader' has a wrong offset!");
static_assert(offsetof(UShopTabWidget, _shopItemListWidget) == 0x000370, "Member 'UShopTabWidget::_shopItemListWidget' has a wrong offset!");
static_assert(offsetof(UShopTabWidget, _shopEventList) == 0x000378, "Member 'UShopTabWidget::_shopEventList' has a wrong offset!");
static_assert(offsetof(UShopTabWidget, _loadingIcon) == 0x000380, "Member 'UShopTabWidget::_loadingIcon' has a wrong offset!");
static_assert(offsetof(UShopTabWidget, _shopCanvasPanel) == 0x000388, "Member 'UShopTabWidget::_shopCanvasPanel' has a wrong offset!");

// Class OutGameModule.RankingRemunerationItemWidget
// 0x0028 (0x04B0 - 0x0488)
class URankingRemunerationItemWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemIconWidget*                        _itemIcon;                                         // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_498[0x18];                                     // 0x0498(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankingRemunerationItemWidget">();
	}
	static class URankingRemunerationItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankingRemunerationItemWidget>();
	}
};
static_assert(alignof(URankingRemunerationItemWidget) == 0x000008, "Wrong alignment on URankingRemunerationItemWidget");
static_assert(sizeof(URankingRemunerationItemWidget) == 0x0004B0, "Wrong size on URankingRemunerationItemWidget");
static_assert(offsetof(URankingRemunerationItemWidget, _itemIcon) == 0x000490, "Member 'URankingRemunerationItemWidget::_itemIcon' has a wrong offset!");

// Class OutGameModule.SoundSettingWidget
// 0x0088 (0x03F8 - 0x0370)
class USoundSettingWidget final : public UBaseSettingWidget
{
public:
	class USettingButtonSwitchWidget*             _backgroundSound;                                  // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _voiceChat;                                        // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _voiceLanguage;                                    // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _commentaryVoice;                                  // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSliderWidget*             _masterVolume;                                     // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSliderWidget*             _bgmVolume;                                        // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSliderWidget*             _battleBGMVolume;                                  // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSliderWidget*             _seVolume;                                         // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSliderWidget*             _voiceVolume;                                      // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSliderWidget*             _voiceChatVolume;                                  // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _backgroundSoundPanel;                             // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _voiceLanguagePanel;                               // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                             _list;                                             // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _tipsText;                                         // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_             _onParentalControlPopupDelegate;                   // 0x03E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UGameOption*                            _gameOption;                                       // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnAddedToFocusEndItem(EWidgetInputType InputType, const struct FFocusEvent& InFocusEvent);
	void OnAddedToFocusStartItem(EWidgetInputType InputType, const struct FFocusEvent& InFocusEvent);
	void OnBattleBGMValueChanged(float Value);
	void OnBGMValueChanged(float Value);
	void OnChangeIdleStatusEvent(bool Idle, int32 StateSetting);
	void OnMasterValueChanged(float Value);
	void OnParentalControlPopupDelegate__DelegateSignature();
	void OnSEValueChanged(float Value);
	bool OnVoiceChatIsChangeValue();
	void OnVoiceLanguageChanged(const ESettingSwitchType Value);
	void OnVoiceValueChanged(float Value);
	class UAtomComponent* PlayCheckVoice();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SoundSettingWidget">();
	}
	static class USoundSettingWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USoundSettingWidget>();
	}
};
static_assert(alignof(USoundSettingWidget) == 0x000008, "Wrong alignment on USoundSettingWidget");
static_assert(sizeof(USoundSettingWidget) == 0x0003F8, "Wrong size on USoundSettingWidget");
static_assert(offsetof(USoundSettingWidget, _backgroundSound) == 0x000370, "Member 'USoundSettingWidget::_backgroundSound' has a wrong offset!");
static_assert(offsetof(USoundSettingWidget, _voiceChat) == 0x000378, "Member 'USoundSettingWidget::_voiceChat' has a wrong offset!");
static_assert(offsetof(USoundSettingWidget, _voiceLanguage) == 0x000380, "Member 'USoundSettingWidget::_voiceLanguage' has a wrong offset!");
static_assert(offsetof(USoundSettingWidget, _commentaryVoice) == 0x000388, "Member 'USoundSettingWidget::_commentaryVoice' has a wrong offset!");
static_assert(offsetof(USoundSettingWidget, _masterVolume) == 0x000390, "Member 'USoundSettingWidget::_masterVolume' has a wrong offset!");
static_assert(offsetof(USoundSettingWidget, _bgmVolume) == 0x000398, "Member 'USoundSettingWidget::_bgmVolume' has a wrong offset!");
static_assert(offsetof(USoundSettingWidget, _battleBGMVolume) == 0x0003A0, "Member 'USoundSettingWidget::_battleBGMVolume' has a wrong offset!");
static_assert(offsetof(USoundSettingWidget, _seVolume) == 0x0003A8, "Member 'USoundSettingWidget::_seVolume' has a wrong offset!");
static_assert(offsetof(USoundSettingWidget, _voiceVolume) == 0x0003B0, "Member 'USoundSettingWidget::_voiceVolume' has a wrong offset!");
static_assert(offsetof(USoundSettingWidget, _voiceChatVolume) == 0x0003B8, "Member 'USoundSettingWidget::_voiceChatVolume' has a wrong offset!");
static_assert(offsetof(USoundSettingWidget, _backgroundSoundPanel) == 0x0003C0, "Member 'USoundSettingWidget::_backgroundSoundPanel' has a wrong offset!");
static_assert(offsetof(USoundSettingWidget, _voiceLanguagePanel) == 0x0003C8, "Member 'USoundSettingWidget::_voiceLanguagePanel' has a wrong offset!");
static_assert(offsetof(USoundSettingWidget, _list) == 0x0003D0, "Member 'USoundSettingWidget::_list' has a wrong offset!");
static_assert(offsetof(USoundSettingWidget, _tipsText) == 0x0003D8, "Member 'USoundSettingWidget::_tipsText' has a wrong offset!");
static_assert(offsetof(USoundSettingWidget, _onParentalControlPopupDelegate) == 0x0003E0, "Member 'USoundSettingWidget::_onParentalControlPopupDelegate' has a wrong offset!");
static_assert(offsetof(USoundSettingWidget, _gameOption) == 0x0003F0, "Member 'USoundSettingWidget::_gameOption' has a wrong offset!");

// Class OutGameModule.RankingRemunerationSeasonWidget
// 0x0018 (0x0368 - 0x0350)
class URankingRemunerationSeasonWidget final : public UWidgetBase
{
public:
	class UTextBlock*                             _seasonText;                                       // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             _explanationText;                                  // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTimeWidget*                            _time;                                             // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankingRemunerationSeasonWidget">();
	}
	static class URankingRemunerationSeasonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankingRemunerationSeasonWidget>();
	}
};
static_assert(alignof(URankingRemunerationSeasonWidget) == 0x000008, "Wrong alignment on URankingRemunerationSeasonWidget");
static_assert(sizeof(URankingRemunerationSeasonWidget) == 0x000368, "Wrong size on URankingRemunerationSeasonWidget");
static_assert(offsetof(URankingRemunerationSeasonWidget, _seasonText) == 0x000350, "Member 'URankingRemunerationSeasonWidget::_seasonText' has a wrong offset!");
static_assert(offsetof(URankingRemunerationSeasonWidget, _explanationText) == 0x000358, "Member 'URankingRemunerationSeasonWidget::_explanationText' has a wrong offset!");
static_assert(offsetof(URankingRemunerationSeasonWidget, _time) == 0x000360, "Member 'URankingRemunerationSeasonWidget::_time' has a wrong offset!");

// Class OutGameModule.SquadFindWidget
// 0x0060 (0x03B0 - 0x0350)
class USquadFindWidget final : public UWidgetBase
{
public:
	class UWidgetGeneralWindowFrame*              _baseWindowFrame;                                  // 0x0350(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetGeneralWindow*                   _singleMessageWindow;                              // 0x0358(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetGeneralWindow*                   _selectMessageWindow;                              // 0x0360(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USquadMemberListWidget*                 _squadFindMemberList;                              // 0x0368(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlatformWidgetButton*                  _joinButton;                                       // 0x0370(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetButton*                          _emptyButton;                                      // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   _joinErrorText;                                    // 0x0380(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FString                                 _inputFindNumber;                                  // 0x0398(0x0010)(BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3A8[0x8];                                      // 0x03A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FindSquadRequest(const class FString& Number);
	bool IsRequestedFindSquad();
	void OnAllButtonEnable(bool Enable);
	void OnCancelSelectMessageWindow(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnClosedBaseWindow();
	void OnClosedSingleMessage();
	void OnCloseLevel();
	void OnDecidejoinButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideWindowSelectMessage(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnDecideWindowSingleMessage(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnEnterButtonFocus();
	void OnLoadCompleteEvent(int32 RequestId);
	void OnOpendEvent();
	void OnOpenedBaseWindow();
	void OnTeamUpJoinEvent();
	void UpdateJoinSquadButton(bool Enable);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SquadFindWidget">();
	}
	static class USquadFindWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USquadFindWidget>();
	}
};
static_assert(alignof(USquadFindWidget) == 0x000008, "Wrong alignment on USquadFindWidget");
static_assert(sizeof(USquadFindWidget) == 0x0003B0, "Wrong size on USquadFindWidget");
static_assert(offsetof(USquadFindWidget, _baseWindowFrame) == 0x000350, "Member 'USquadFindWidget::_baseWindowFrame' has a wrong offset!");
static_assert(offsetof(USquadFindWidget, _singleMessageWindow) == 0x000358, "Member 'USquadFindWidget::_singleMessageWindow' has a wrong offset!");
static_assert(offsetof(USquadFindWidget, _selectMessageWindow) == 0x000360, "Member 'USquadFindWidget::_selectMessageWindow' has a wrong offset!");
static_assert(offsetof(USquadFindWidget, _squadFindMemberList) == 0x000368, "Member 'USquadFindWidget::_squadFindMemberList' has a wrong offset!");
static_assert(offsetof(USquadFindWidget, _joinButton) == 0x000370, "Member 'USquadFindWidget::_joinButton' has a wrong offset!");
static_assert(offsetof(USquadFindWidget, _emptyButton) == 0x000378, "Member 'USquadFindWidget::_emptyButton' has a wrong offset!");
static_assert(offsetof(USquadFindWidget, _joinErrorText) == 0x000380, "Member 'USquadFindWidget::_joinErrorText' has a wrong offset!");
static_assert(offsetof(USquadFindWidget, _inputFindNumber) == 0x000398, "Member 'USquadFindWidget::_inputFindNumber' has a wrong offset!");

// Class OutGameModule.RankingTabWidget
// 0x0050 (0x03A0 - 0x0350)
class URankingTabWidget final : public UWidgetBase
{
public:
	class UWidgetSwitcher*                        _swicher;                                          // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTabWidget*                             _tab;                                              // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UReturnButtonWidget*                    _returnButton;                                     // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDetailsRankingContentsBase*            _selectRankingContents;                            // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_370[0x30];                                     // 0x0370(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ChangeTab(int32 NewSelectTab);
	void OnReturnDecideButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void ReturnMainMenu();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankingTabWidget">();
	}
	static class URankingTabWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankingTabWidget>();
	}
};
static_assert(alignof(URankingTabWidget) == 0x000008, "Wrong alignment on URankingTabWidget");
static_assert(sizeof(URankingTabWidget) == 0x0003A0, "Wrong size on URankingTabWidget");
static_assert(offsetof(URankingTabWidget, _swicher) == 0x000350, "Member 'URankingTabWidget::_swicher' has a wrong offset!");
static_assert(offsetof(URankingTabWidget, _tab) == 0x000358, "Member 'URankingTabWidget::_tab' has a wrong offset!");
static_assert(offsetof(URankingTabWidget, _returnButton) == 0x000360, "Member 'URankingTabWidget::_returnButton' has a wrong offset!");
static_assert(offsetof(URankingTabWidget, _selectRankingContents) == 0x000368, "Member 'URankingTabWidget::_selectRankingContents' has a wrong offset!");

// Class OutGameModule.RankMatchRewardWidget
// 0x00A8 (0x0408 - 0x0360)
class URankMatchRewardWidget final : public UProgressFinishDelegateWidget
{
public:
	uint8                                         Pad_360[0x10];                                     // 0x0360(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBox*                           _rpVerticalBox;                                    // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class URPDetailsWidget>           _rpDetailsClass;                                   // 0x0378(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_380[0x20];                                     // 0x0380(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UMultipleDigitsWidget*                  _totalRp;                                          // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralEmptyWindow*              _window;                                           // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPaperFlipbook*                         _rankFB;                                           // 0x03B0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _rank;                                             // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URankProgressBarWidget*                 _rankProgressBar;                                  // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class URankMatchRewardDirectingWidget> _rewardDirectingClass;                             // 0x03C8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URankMatchRewardDirectingWidget*        _directingWidget;                                  // 0x03D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3D8[0x20];                                     // 0x03D8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                _loadingIcon;                                      // 0x03F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_400[0x8];                                      // 0x0400(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CloseWidget();
	void FinishDirecting(class UWidget* Widget);
	void FinishProgressExpBar(class UProgressBarWidget* ProgressBar);
	void FinishTotalRP();
	void OpenWidget();
	void PlayRP(class UWidget* Widget);
	void Setup();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankMatchRewardWidget">();
	}
	static class URankMatchRewardWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankMatchRewardWidget>();
	}
};
static_assert(alignof(URankMatchRewardWidget) == 0x000008, "Wrong alignment on URankMatchRewardWidget");
static_assert(sizeof(URankMatchRewardWidget) == 0x000408, "Wrong size on URankMatchRewardWidget");
static_assert(offsetof(URankMatchRewardWidget, _rpVerticalBox) == 0x000370, "Member 'URankMatchRewardWidget::_rpVerticalBox' has a wrong offset!");
static_assert(offsetof(URankMatchRewardWidget, _rpDetailsClass) == 0x000378, "Member 'URankMatchRewardWidget::_rpDetailsClass' has a wrong offset!");
static_assert(offsetof(URankMatchRewardWidget, _totalRp) == 0x0003A0, "Member 'URankMatchRewardWidget::_totalRp' has a wrong offset!");
static_assert(offsetof(URankMatchRewardWidget, _window) == 0x0003A8, "Member 'URankMatchRewardWidget::_window' has a wrong offset!");
static_assert(offsetof(URankMatchRewardWidget, _rankFB) == 0x0003B0, "Member 'URankMatchRewardWidget::_rankFB' has a wrong offset!");
static_assert(offsetof(URankMatchRewardWidget, _rank) == 0x0003B8, "Member 'URankMatchRewardWidget::_rank' has a wrong offset!");
static_assert(offsetof(URankMatchRewardWidget, _rankProgressBar) == 0x0003C0, "Member 'URankMatchRewardWidget::_rankProgressBar' has a wrong offset!");
static_assert(offsetof(URankMatchRewardWidget, _rewardDirectingClass) == 0x0003C8, "Member 'URankMatchRewardWidget::_rewardDirectingClass' has a wrong offset!");
static_assert(offsetof(URankMatchRewardWidget, _directingWidget) == 0x0003D0, "Member 'URankMatchRewardWidget::_directingWidget' has a wrong offset!");
static_assert(offsetof(URankMatchRewardWidget, _loadingIcon) == 0x0003F8, "Member 'URankMatchRewardWidget::_loadingIcon' has a wrong offset!");

// Class OutGameModule.RankProgressBarWidget
// 0x0060 (0x04E0 - 0x0480)
class URankProgressBarWidget final : public UProgressBarWidget
{
public:
	class UWidget*                                _preProgressMask;                                  // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _progressMask;                                     // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_490[0x8];                                      // 0x0490(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMultipleDigitsWidget*                  _currentExpText;                                   // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMultipleDigitsWidget*                  _maxExpText;                                       // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4A8[0x18];                                     // 0x04A8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                _partitionBar;                                     // 0x04C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _partitionText;                                    // 0x04C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetText*                            _thresholdText;                                    // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4D8[0x8];                                      // 0x04D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnUpdateProgress();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RankProgressBarWidget">();
	}
	static class URankProgressBarWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URankProgressBarWidget>();
	}
};
static_assert(alignof(URankProgressBarWidget) == 0x000010, "Wrong alignment on URankProgressBarWidget");
static_assert(sizeof(URankProgressBarWidget) == 0x0004E0, "Wrong size on URankProgressBarWidget");
static_assert(offsetof(URankProgressBarWidget, _preProgressMask) == 0x000480, "Member 'URankProgressBarWidget::_preProgressMask' has a wrong offset!");
static_assert(offsetof(URankProgressBarWidget, _progressMask) == 0x000488, "Member 'URankProgressBarWidget::_progressMask' has a wrong offset!");
static_assert(offsetof(URankProgressBarWidget, _currentExpText) == 0x000498, "Member 'URankProgressBarWidget::_currentExpText' has a wrong offset!");
static_assert(offsetof(URankProgressBarWidget, _maxExpText) == 0x0004A0, "Member 'URankProgressBarWidget::_maxExpText' has a wrong offset!");
static_assert(offsetof(URankProgressBarWidget, _partitionBar) == 0x0004C0, "Member 'URankProgressBarWidget::_partitionBar' has a wrong offset!");
static_assert(offsetof(URankProgressBarWidget, _partitionText) == 0x0004C8, "Member 'URankProgressBarWidget::_partitionText' has a wrong offset!");
static_assert(offsetof(URankProgressBarWidget, _thresholdText) == 0x0004D0, "Member 'URankProgressBarWidget::_thresholdText' has a wrong offset!");

// Class OutGameModule.RentalIconWidget
// 0x0018 (0x0368 - 0x0350)
class URentalIconWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x8];                                      // 0x0350(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             _num;                                              // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _maxNum;                                           // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnChangedSelectedCharacterEvent(bool UnLocked, bool EnableRental);
	void OnRentalPointUpdatedEvent(int32 Value);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RentalIconWidget">();
	}
	static class URentalIconWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URentalIconWidget>();
	}
};
static_assert(alignof(URentalIconWidget) == 0x000008, "Wrong alignment on URentalIconWidget");
static_assert(sizeof(URentalIconWidget) == 0x000368, "Wrong size on URentalIconWidget");
static_assert(offsetof(URentalIconWidget, _num) == 0x000358, "Member 'URentalIconWidget::_num' has a wrong offset!");
static_assert(offsetof(URentalIconWidget, _maxNum) == 0x000360, "Member 'URentalIconWidget::_maxNum' has a wrong offset!");

// Class OutGameModule.ResultItemDropWidget
// 0x0010 (0x03F8 - 0x03E8)
class UResultItemDropWidget final : public UAppWidget
{
public:
	FMulticastInlineDelegateProperty_             _closeDelegate;                                    // 0x03E8(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)

public:
	void CloseDelegate();
	void FinishProgressDelegate__DelegateSignature(class UWidget* Widget);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ResultItemDropWidget">();
	}
	static class UResultItemDropWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResultItemDropWidget>();
	}
};
static_assert(alignof(UResultItemDropWidget) == 0x000008, "Wrong alignment on UResultItemDropWidget");
static_assert(sizeof(UResultItemDropWidget) == 0x0003F8, "Wrong size on UResultItemDropWidget");
static_assert(offsetof(UResultItemDropWidget, _closeDelegate) == 0x0003E8, "Member 'UResultItemDropWidget::_closeDelegate' has a wrong offset!");

// Class OutGameModule.ResultMissionList
// 0x00A0 (0x03F0 - 0x0350)
class UResultMissionList final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _space;                                            // 0x0360(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _sepSpace;                                         // 0x0364(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<EMdMissionCategory, struct FResultMissionInfo> _missionInfoList;                                  // 0x0368(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UStarMissionDetails>        _starMissionDetailsClass;                          // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UItemMissionDetails>        _itemMissionDetailsClass;                          // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UResultMissionSubtitle>     _subTitleClass;                                    // 0x03C8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                             _list;                                             // 0x03D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _progressMission;                                  // 0x03D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _completeMission;                                  // 0x03E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _missionSwitcher;                                  // 0x03E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnFocusNavigationMissionList(EUINavigation UiNavigation);
	void OnOperationControllerChange();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ResultMissionList">();
	}
	static class UResultMissionList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResultMissionList>();
	}
};
static_assert(alignof(UResultMissionList) == 0x000008, "Wrong alignment on UResultMissionList");
static_assert(sizeof(UResultMissionList) == 0x0003F0, "Wrong size on UResultMissionList");
static_assert(offsetof(UResultMissionList, _space) == 0x000360, "Member 'UResultMissionList::_space' has a wrong offset!");
static_assert(offsetof(UResultMissionList, _sepSpace) == 0x000364, "Member 'UResultMissionList::_sepSpace' has a wrong offset!");
static_assert(offsetof(UResultMissionList, _missionInfoList) == 0x000368, "Member 'UResultMissionList::_missionInfoList' has a wrong offset!");
static_assert(offsetof(UResultMissionList, _starMissionDetailsClass) == 0x0003B8, "Member 'UResultMissionList::_starMissionDetailsClass' has a wrong offset!");
static_assert(offsetof(UResultMissionList, _itemMissionDetailsClass) == 0x0003C0, "Member 'UResultMissionList::_itemMissionDetailsClass' has a wrong offset!");
static_assert(offsetof(UResultMissionList, _subTitleClass) == 0x0003C8, "Member 'UResultMissionList::_subTitleClass' has a wrong offset!");
static_assert(offsetof(UResultMissionList, _list) == 0x0003D0, "Member 'UResultMissionList::_list' has a wrong offset!");
static_assert(offsetof(UResultMissionList, _progressMission) == 0x0003D8, "Member 'UResultMissionList::_progressMission' has a wrong offset!");
static_assert(offsetof(UResultMissionList, _completeMission) == 0x0003E0, "Member 'UResultMissionList::_completeMission' has a wrong offset!");
static_assert(offsetof(UResultMissionList, _missionSwitcher) == 0x0003E8, "Member 'UResultMissionList::_missionSwitcher' has a wrong offset!");

// Class OutGameModule.ResultNextWidget
// 0x0020 (0x0370 - 0x0350)
class UResultNextWidget final : public UWidgetBase
{
public:
	class UWidgetSwitcher*                        _switcher;                                         // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _nextButton;                                       // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _mainmenuButton;                                   // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       Ani_Close;                                         // 0x0368(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnCloseItemGetListWidget();
	void OnPressNextButton(class UAppWidget* Button, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ResultNextWidget">();
	}
	static class UResultNextWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResultNextWidget>();
	}
};
static_assert(alignof(UResultNextWidget) == 0x000008, "Wrong alignment on UResultNextWidget");
static_assert(sizeof(UResultNextWidget) == 0x000370, "Wrong size on UResultNextWidget");
static_assert(offsetof(UResultNextWidget, _switcher) == 0x000350, "Member 'UResultNextWidget::_switcher' has a wrong offset!");
static_assert(offsetof(UResultNextWidget, _nextButton) == 0x000358, "Member 'UResultNextWidget::_nextButton' has a wrong offset!");
static_assert(offsetof(UResultNextWidget, _mainmenuButton) == 0x000360, "Member 'UResultNextWidget::_mainmenuButton' has a wrong offset!");
static_assert(offsetof(UResultNextWidget, Ani_Close) == 0x000368, "Member 'UResultNextWidget::Ani_Close' has a wrong offset!");

// Class OutGameModule.ResultScoreDetailsWidget
// 0x00C0 (0x0570 - 0x04B0)
class UResultScoreDetailsWidget final : public UWidgetButtonDetails
{
public:
	uint8                                         Pad_4B0[0x40];                                     // 0x04B0(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 _scoreDetailsBox;                                  // 0x04F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _scoreTitle;                                       // 0x04F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _score;                                            // 0x0500(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UResultScoreWindow>         _magnificationWindowClass;                         // 0x0508(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UResultScoreWindow>         _flagWindowClass;                                  // 0x0510(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UResultScoreRatioWindow>    _ratioWindowClass;                                 // 0x0518(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UResultScoreWindowBase*                 _popupWindow;                                      // 0x0520(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _animAddItem;                                      // 0x0528(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _aniScroll;                                        // 0x0530(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _aniDefault;                                       // 0x0538(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _canvasPanel;                                      // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _offsetCanvasPanel;                                // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _progress;                                         // 0x0550(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFocusAnimationWidget*                  _focusIcon;                                        // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_560[0x10];                                     // 0x0560(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CloseWindow();
	void FinishDetailAnimationDelegate__DelegateSignature(class UWidgetAnimation* Animation);
	void OnPressDetails(class UAppWidget* Button, EWidgetInputType InputType);
	void OnReleaseDetails(class UAppWidget* Button, EWidgetInputType InputType);
	void Progress();
	void ProgressAnimationDelegate__DelegateSignature(float Progress);
	void ScoreDetailsDelegate__DelegateSignature();

	void AddNextDetails() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ResultScoreDetailsWidget">();
	}
	static class UResultScoreDetailsWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResultScoreDetailsWidget>();
	}
};
static_assert(alignof(UResultScoreDetailsWidget) == 0x000008, "Wrong alignment on UResultScoreDetailsWidget");
static_assert(sizeof(UResultScoreDetailsWidget) == 0x000570, "Wrong size on UResultScoreDetailsWidget");
static_assert(offsetof(UResultScoreDetailsWidget, _scoreDetailsBox) == 0x0004F0, "Member 'UResultScoreDetailsWidget::_scoreDetailsBox' has a wrong offset!");
static_assert(offsetof(UResultScoreDetailsWidget, _scoreTitle) == 0x0004F8, "Member 'UResultScoreDetailsWidget::_scoreTitle' has a wrong offset!");
static_assert(offsetof(UResultScoreDetailsWidget, _score) == 0x000500, "Member 'UResultScoreDetailsWidget::_score' has a wrong offset!");
static_assert(offsetof(UResultScoreDetailsWidget, _magnificationWindowClass) == 0x000508, "Member 'UResultScoreDetailsWidget::_magnificationWindowClass' has a wrong offset!");
static_assert(offsetof(UResultScoreDetailsWidget, _flagWindowClass) == 0x000510, "Member 'UResultScoreDetailsWidget::_flagWindowClass' has a wrong offset!");
static_assert(offsetof(UResultScoreDetailsWidget, _ratioWindowClass) == 0x000518, "Member 'UResultScoreDetailsWidget::_ratioWindowClass' has a wrong offset!");
static_assert(offsetof(UResultScoreDetailsWidget, _popupWindow) == 0x000520, "Member 'UResultScoreDetailsWidget::_popupWindow' has a wrong offset!");
static_assert(offsetof(UResultScoreDetailsWidget, _animAddItem) == 0x000528, "Member 'UResultScoreDetailsWidget::_animAddItem' has a wrong offset!");
static_assert(offsetof(UResultScoreDetailsWidget, _aniScroll) == 0x000530, "Member 'UResultScoreDetailsWidget::_aniScroll' has a wrong offset!");
static_assert(offsetof(UResultScoreDetailsWidget, _aniDefault) == 0x000538, "Member 'UResultScoreDetailsWidget::_aniDefault' has a wrong offset!");
static_assert(offsetof(UResultScoreDetailsWidget, _canvasPanel) == 0x000540, "Member 'UResultScoreDetailsWidget::_canvasPanel' has a wrong offset!");
static_assert(offsetof(UResultScoreDetailsWidget, _offsetCanvasPanel) == 0x000548, "Member 'UResultScoreDetailsWidget::_offsetCanvasPanel' has a wrong offset!");
static_assert(offsetof(UResultScoreDetailsWidget, _progress) == 0x000550, "Member 'UResultScoreDetailsWidget::_progress' has a wrong offset!");
static_assert(offsetof(UResultScoreDetailsWidget, _focusIcon) == 0x000558, "Member 'UResultScoreDetailsWidget::_focusIcon' has a wrong offset!");

// Class OutGameModule.ResultScoreMagnificationWindow
// 0x0010 (0x03F0 - 0x03E0)
class UResultScoreMagnificationWindow final : public UResultScoreWindow
{
public:
	class UTextBlock*                             _magnificationTitle;                               // 0x03E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _magnification;                                    // 0x03E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ResultScoreMagnificationWindow">();
	}
	static class UResultScoreMagnificationWindow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResultScoreMagnificationWindow>();
	}
};
static_assert(alignof(UResultScoreMagnificationWindow) == 0x000008, "Wrong alignment on UResultScoreMagnificationWindow");
static_assert(sizeof(UResultScoreMagnificationWindow) == 0x0003F0, "Wrong size on UResultScoreMagnificationWindow");
static_assert(offsetof(UResultScoreMagnificationWindow, _magnificationTitle) == 0x0003E0, "Member 'UResultScoreMagnificationWindow::_magnificationTitle' has a wrong offset!");
static_assert(offsetof(UResultScoreMagnificationWindow, _magnification) == 0x0003E8, "Member 'UResultScoreMagnificationWindow::_magnification' has a wrong offset!");

// Class OutGameModule.ResultScoreRatioWindow
// 0x0048 (0x0420 - 0x03D8)
class UResultScoreRatioWindow final : public UResultScoreWindowBase
{
public:
	TSubclassOf<class UUserWidget>                _scoreDetailsClass;                                // 0x03D8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FLinearColor>                   _detailsColors;                                    // 0x03E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _baseScoreTitle;                                   // 0x03F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _baseScore;                                        // 0x03F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _ratio;                                            // 0x0400(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _windowCanvasPanel;                                // 0x0408(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _listClipping;                                     // 0x0410(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                             _list;                                             // 0x0418(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ResultScoreRatioWindow">();
	}
	static class UResultScoreRatioWindow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResultScoreRatioWindow>();
	}
};
static_assert(alignof(UResultScoreRatioWindow) == 0x000008, "Wrong alignment on UResultScoreRatioWindow");
static_assert(sizeof(UResultScoreRatioWindow) == 0x000420, "Wrong size on UResultScoreRatioWindow");
static_assert(offsetof(UResultScoreRatioWindow, _scoreDetailsClass) == 0x0003D8, "Member 'UResultScoreRatioWindow::_scoreDetailsClass' has a wrong offset!");
static_assert(offsetof(UResultScoreRatioWindow, _detailsColors) == 0x0003E0, "Member 'UResultScoreRatioWindow::_detailsColors' has a wrong offset!");
static_assert(offsetof(UResultScoreRatioWindow, _baseScoreTitle) == 0x0003F0, "Member 'UResultScoreRatioWindow::_baseScoreTitle' has a wrong offset!");
static_assert(offsetof(UResultScoreRatioWindow, _baseScore) == 0x0003F8, "Member 'UResultScoreRatioWindow::_baseScore' has a wrong offset!");
static_assert(offsetof(UResultScoreRatioWindow, _ratio) == 0x000400, "Member 'UResultScoreRatioWindow::_ratio' has a wrong offset!");
static_assert(offsetof(UResultScoreRatioWindow, _windowCanvasPanel) == 0x000408, "Member 'UResultScoreRatioWindow::_windowCanvasPanel' has a wrong offset!");
static_assert(offsetof(UResultScoreRatioWindow, _listClipping) == 0x000410, "Member 'UResultScoreRatioWindow::_listClipping' has a wrong offset!");
static_assert(offsetof(UResultScoreRatioWindow, _list) == 0x000418, "Member 'UResultScoreRatioWindow::_list' has a wrong offset!");

// Class OutGameModule.ResultTabWidget
// 0x0020 (0x0380 - 0x0360)
class UResultTabWidget final : public UProgressFinishDelegateWidget
{
public:
	class UTextBlock*                             _title;                                            // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _characterPanel;                                   // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UResultScoreWidget*                     _scoreWidget;                                      // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASceneCaptureCreator*                   _sceneCaptureCreator;                              // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void CloseWidget();
	void OnFinishedCaptureSetupDelegate();
	void OnFinishedCharaSetupDelegate();
	void SetupSceneCaptureCreator();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ResultTabWidget">();
	}
	static class UResultTabWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResultTabWidget>();
	}
};
static_assert(alignof(UResultTabWidget) == 0x000008, "Wrong alignment on UResultTabWidget");
static_assert(sizeof(UResultTabWidget) == 0x000380, "Wrong size on UResultTabWidget");
static_assert(offsetof(UResultTabWidget, _title) == 0x000360, "Member 'UResultTabWidget::_title' has a wrong offset!");
static_assert(offsetof(UResultTabWidget, _characterPanel) == 0x000368, "Member 'UResultTabWidget::_characterPanel' has a wrong offset!");
static_assert(offsetof(UResultTabWidget, _scoreWidget) == 0x000370, "Member 'UResultTabWidget::_scoreWidget' has a wrong offset!");
static_assert(offsetof(UResultTabWidget, _sceneCaptureCreator) == 0x000378, "Member 'UResultTabWidget::_sceneCaptureCreator' has a wrong offset!");

// Class OutGameModule.RPWidget
// 0x0010 (0x0360 - 0x0350)
class URPWidget final : public UWidgetBase
{
public:
	class UWidgetText*                            _valueText;                                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RPWidget">();
	}
	static class URPWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URPWidget>();
	}
};
static_assert(alignof(URPWidget) == 0x000008, "Wrong alignment on URPWidget");
static_assert(sizeof(URPWidget) == 0x000360, "Wrong size on URPWidget");
static_assert(offsetof(URPWidget, _valueText) == 0x000350, "Member 'URPWidget::_valueText' has a wrong offset!");

// Class OutGameModule.SceneCaptureCharacterWidget
// 0x0060 (0x04E8 - 0x0488)
class USceneCaptureCharacterWidget final : public UWidgetButton
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneCaptureCharacterLockWidget*       _captureLockPanel;                                 // 0x0490(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _charaImage;                                       // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASceneCaptureCreator*                   _sceneCaptureCreator;                              // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerControllerGame*                  _playerController;                                 // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESceneCaptureTypeId                           _sceneCaptureTypeId;                               // 0x04B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bBindAxisCameraRotation;                          // 0x04B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bBindAxisCharacterShrinkAndExpand;                // 0x04B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bDestructReset;                                   // 0x04B3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4B4[0x4];                                      // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 _uniqueTag;                                        // 0x04B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bLeftMouseButtonFlag;                             // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C9[0x3];                                      // 0x04C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _mouseCameraRotationSpeed;                         // 0x04CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _mouseCameraShrinkAndExpandSpeed;                  // 0x04D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bMouseWheelFlag;                                  // 0x04D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4D5[0x13];                                     // 0x04D5(0x0013)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_SetSceneCaptureCharacterLockWidget(class USceneCaptureCharacterLockWidget* Widget);
	void DelayActivateVisibility();
	struct FEventReply OnKeyDown_Internal(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void OnLockPanelKeyButtonDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void OnLockPanelMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnLockPanelMouseButtonUp_Internal(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonDown_Internal(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonUp_Internal(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnReceivedUpdateWebApiError();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SceneCaptureCharacterWidget">();
	}
	static class USceneCaptureCharacterWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USceneCaptureCharacterWidget>();
	}
};
static_assert(alignof(USceneCaptureCharacterWidget) == 0x000008, "Wrong alignment on USceneCaptureCharacterWidget");
static_assert(sizeof(USceneCaptureCharacterWidget) == 0x0004E8, "Wrong size on USceneCaptureCharacterWidget");
static_assert(offsetof(USceneCaptureCharacterWidget, _captureLockPanel) == 0x000490, "Member 'USceneCaptureCharacterWidget::_captureLockPanel' has a wrong offset!");
static_assert(offsetof(USceneCaptureCharacterWidget, _charaImage) == 0x000498, "Member 'USceneCaptureCharacterWidget::_charaImage' has a wrong offset!");
static_assert(offsetof(USceneCaptureCharacterWidget, _sceneCaptureCreator) == 0x0004A0, "Member 'USceneCaptureCharacterWidget::_sceneCaptureCreator' has a wrong offset!");
static_assert(offsetof(USceneCaptureCharacterWidget, _playerController) == 0x0004A8, "Member 'USceneCaptureCharacterWidget::_playerController' has a wrong offset!");
static_assert(offsetof(USceneCaptureCharacterWidget, _sceneCaptureTypeId) == 0x0004B0, "Member 'USceneCaptureCharacterWidget::_sceneCaptureTypeId' has a wrong offset!");
static_assert(offsetof(USceneCaptureCharacterWidget, _bBindAxisCameraRotation) == 0x0004B1, "Member 'USceneCaptureCharacterWidget::_bBindAxisCameraRotation' has a wrong offset!");
static_assert(offsetof(USceneCaptureCharacterWidget, _bBindAxisCharacterShrinkAndExpand) == 0x0004B2, "Member 'USceneCaptureCharacterWidget::_bBindAxisCharacterShrinkAndExpand' has a wrong offset!");
static_assert(offsetof(USceneCaptureCharacterWidget, _bDestructReset) == 0x0004B3, "Member 'USceneCaptureCharacterWidget::_bDestructReset' has a wrong offset!");
static_assert(offsetof(USceneCaptureCharacterWidget, _uniqueTag) == 0x0004B8, "Member 'USceneCaptureCharacterWidget::_uniqueTag' has a wrong offset!");
static_assert(offsetof(USceneCaptureCharacterWidget, _bLeftMouseButtonFlag) == 0x0004C8, "Member 'USceneCaptureCharacterWidget::_bLeftMouseButtonFlag' has a wrong offset!");
static_assert(offsetof(USceneCaptureCharacterWidget, _mouseCameraRotationSpeed) == 0x0004CC, "Member 'USceneCaptureCharacterWidget::_mouseCameraRotationSpeed' has a wrong offset!");
static_assert(offsetof(USceneCaptureCharacterWidget, _mouseCameraShrinkAndExpandSpeed) == 0x0004D0, "Member 'USceneCaptureCharacterWidget::_mouseCameraShrinkAndExpandSpeed' has a wrong offset!");
static_assert(offsetof(USceneCaptureCharacterWidget, _bMouseWheelFlag) == 0x0004D4, "Member 'USceneCaptureCharacterWidget::_bMouseWheelFlag' has a wrong offset!");

// Class OutGameModule.SceneCaptureCreatorMultiple
// 0x0080 (0x03D0 - 0x0350)
class ASceneCaptureCreatorMultiple final : public ASceneCaptureCreatorBase
{
public:
	TArray<class ACharacterOutGame*>              _sceneCaptureCharacterList;                        // 0x0350(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                         Pad_360[0x10];                                     // 0x0360(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _distortionAdjustOffset;                           // 0x0370(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _distortionAdjustDirectionX;                       // 0x0374(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _distortionAdjustDirectionY;                       // 0x0378(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _characterDistanceVertical;                        // 0x037C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _characterDistanceHorizontal;                      // 0x0380(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _row;                                              // 0x0384(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _column;                                           // 0x0388(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bKeepAway;                                        // 0x038C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_38D[0x3];                                      // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             _springArmTransform;                               // 0x0390(0x0030)(Edit, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C0[0x10];                                     // 0x03C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnSetupMaterialDelegate();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SceneCaptureCreatorMultiple">();
	}
	static class ASceneCaptureCreatorMultiple* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASceneCaptureCreatorMultiple>();
	}
};
static_assert(alignof(ASceneCaptureCreatorMultiple) == 0x000010, "Wrong alignment on ASceneCaptureCreatorMultiple");
static_assert(sizeof(ASceneCaptureCreatorMultiple) == 0x0003D0, "Wrong size on ASceneCaptureCreatorMultiple");
static_assert(offsetof(ASceneCaptureCreatorMultiple, _sceneCaptureCharacterList) == 0x000350, "Member 'ASceneCaptureCreatorMultiple::_sceneCaptureCharacterList' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorMultiple, _distortionAdjustOffset) == 0x000370, "Member 'ASceneCaptureCreatorMultiple::_distortionAdjustOffset' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorMultiple, _distortionAdjustDirectionX) == 0x000374, "Member 'ASceneCaptureCreatorMultiple::_distortionAdjustDirectionX' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorMultiple, _distortionAdjustDirectionY) == 0x000378, "Member 'ASceneCaptureCreatorMultiple::_distortionAdjustDirectionY' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorMultiple, _characterDistanceVertical) == 0x00037C, "Member 'ASceneCaptureCreatorMultiple::_characterDistanceVertical' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorMultiple, _characterDistanceHorizontal) == 0x000380, "Member 'ASceneCaptureCreatorMultiple::_characterDistanceHorizontal' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorMultiple, _row) == 0x000384, "Member 'ASceneCaptureCreatorMultiple::_row' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorMultiple, _column) == 0x000388, "Member 'ASceneCaptureCreatorMultiple::_column' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorMultiple, _bKeepAway) == 0x00038C, "Member 'ASceneCaptureCreatorMultiple::_bKeepAway' has a wrong offset!");
static_assert(offsetof(ASceneCaptureCreatorMultiple, _springArmTransform) == 0x000390, "Member 'ASceneCaptureCreatorMultiple::_springArmTransform' has a wrong offset!");

// Class OutGameModule.ScoreProgressBarWidget
// 0x0040 (0x04F0 - 0x04B0)
class UScoreProgressBarWidget final : public UStepProgressBarWidget
{
public:
	uint8                                         Pad_4B0[0x28];                                     // 0x04B0(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UUserWidget>                _gaugeRankWidget;                                  // 0x04D8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _thresholdCanvasPanel;                             // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4E8[0x8];                                      // 0x04E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Finish(class UProgressBarWidget* ProgressBar);
	void Progress(const float& NowValue, const float& MaxValue);
	void ProgressRankUp__DelegateSignature(const int32& Rank);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ScoreProgressBarWidget">();
	}
	static class UScoreProgressBarWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScoreProgressBarWidget>();
	}
};
static_assert(alignof(UScoreProgressBarWidget) == 0x000010, "Wrong alignment on UScoreProgressBarWidget");
static_assert(sizeof(UScoreProgressBarWidget) == 0x0004F0, "Wrong size on UScoreProgressBarWidget");
static_assert(offsetof(UScoreProgressBarWidget, _gaugeRankWidget) == 0x0004D8, "Member 'UScoreProgressBarWidget::_gaugeRankWidget' has a wrong offset!");
static_assert(offsetof(UScoreProgressBarWidget, _thresholdCanvasPanel) == 0x0004E0, "Member 'UScoreProgressBarWidget::_thresholdCanvasPanel' has a wrong offset!");

// Class OutGameModule.SeasonPassAboutLicense
// 0x0128 (0x0478 - 0x0350)
class USeasonPassAboutLicense final : public UWidgetBase
{
public:
	TArray<class UObject*>                        _freePassObjects;                                  // 0x0350(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UObject*>                        _premiumPassObjects;                               // 0x0360(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _seasonNumber;                                     // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                             _scrollBoxText;                                    // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FItemCode>                      _itemcodeArray;                                    // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FItemcellParam>                 _itemCellParamPremiumArray;                        // 0x0390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FItemcellParam>                 _itemCellParamFreeArray;                           // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B0[0x10];                                     // 0x03B0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemcellParam                         _itemCellParamRepeatedItem;                        // 0x03C0(0x0040)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_400[0x20];                                     // 0x0400(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class USlateWidgetStyleAsset*                 _scrollBarStyleAsset;                              // 0x0420(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_428[0x10];                                     // 0x0428(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   _titleText;                                        // 0x0438(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          _useLanguageSetting;                               // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             _titleTextBlock;                                   // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USeasonPassAboutLicenseListPanel*       _premiumItemListPanel;                             // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USeasonPassAboutLicenseListPanel*       _freeItemListPanel;                                // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_470[0x8];                                      // 0x0470(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_SetUpItem(class USeasonPassEntryBase* base, int32 Code, EItemType Type, class USeasonPassList* Season);
	void BP_SetUpRankCell(class USeasonPassAboutLicenseCell* Cell, const int32 Index_0, class UGridPanel* Panel);
	void BP_SetUpRewardlistText();
	void BP_SetUpSeasonTitle();
	void CreateRankCellWidget(class UGridPanel* Panel);
	float GetScrollSpeedRate(float AnalogValue, float DefaultSpeedRate, float MasSpeedRate, float AddSpeedRate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassAboutLicense">();
	}
	static class USeasonPassAboutLicense* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassAboutLicense>();
	}
};
static_assert(alignof(USeasonPassAboutLicense) == 0x000008, "Wrong alignment on USeasonPassAboutLicense");
static_assert(sizeof(USeasonPassAboutLicense) == 0x000478, "Wrong size on USeasonPassAboutLicense");
static_assert(offsetof(USeasonPassAboutLicense, _freePassObjects) == 0x000350, "Member 'USeasonPassAboutLicense::_freePassObjects' has a wrong offset!");
static_assert(offsetof(USeasonPassAboutLicense, _premiumPassObjects) == 0x000360, "Member 'USeasonPassAboutLicense::_premiumPassObjects' has a wrong offset!");
static_assert(offsetof(USeasonPassAboutLicense, _seasonNumber) == 0x000370, "Member 'USeasonPassAboutLicense::_seasonNumber' has a wrong offset!");
static_assert(offsetof(USeasonPassAboutLicense, _scrollBoxText) == 0x000378, "Member 'USeasonPassAboutLicense::_scrollBoxText' has a wrong offset!");
static_assert(offsetof(USeasonPassAboutLicense, _itemcodeArray) == 0x000380, "Member 'USeasonPassAboutLicense::_itemcodeArray' has a wrong offset!");
static_assert(offsetof(USeasonPassAboutLicense, _itemCellParamPremiumArray) == 0x000390, "Member 'USeasonPassAboutLicense::_itemCellParamPremiumArray' has a wrong offset!");
static_assert(offsetof(USeasonPassAboutLicense, _itemCellParamFreeArray) == 0x0003A0, "Member 'USeasonPassAboutLicense::_itemCellParamFreeArray' has a wrong offset!");
static_assert(offsetof(USeasonPassAboutLicense, _itemCellParamRepeatedItem) == 0x0003C0, "Member 'USeasonPassAboutLicense::_itemCellParamRepeatedItem' has a wrong offset!");
static_assert(offsetof(USeasonPassAboutLicense, _scrollBarStyleAsset) == 0x000420, "Member 'USeasonPassAboutLicense::_scrollBarStyleAsset' has a wrong offset!");
static_assert(offsetof(USeasonPassAboutLicense, _titleText) == 0x000438, "Member 'USeasonPassAboutLicense::_titleText' has a wrong offset!");
static_assert(offsetof(USeasonPassAboutLicense, _useLanguageSetting) == 0x000450, "Member 'USeasonPassAboutLicense::_useLanguageSetting' has a wrong offset!");
static_assert(offsetof(USeasonPassAboutLicense, _titleTextBlock) == 0x000458, "Member 'USeasonPassAboutLicense::_titleTextBlock' has a wrong offset!");
static_assert(offsetof(USeasonPassAboutLicense, _premiumItemListPanel) == 0x000460, "Member 'USeasonPassAboutLicense::_premiumItemListPanel' has a wrong offset!");
static_assert(offsetof(USeasonPassAboutLicense, _freeItemListPanel) == 0x000468, "Member 'USeasonPassAboutLicense::_freeItemListPanel' has a wrong offset!");

// Class OutGameModule.SeasonPassAboutLicenseListPanel
// 0x0030 (0x0180 - 0x0150)
class USeasonPassAboutLicenseListPanel final : public UGridPanel
{
public:
	struct FLinearColor                           _cellColorA;                                       // 0x0150(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           _cellColorB;                                       // 0x0160(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           _cellColorRankCell;                                // 0x0170(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void BP_SetUpBbColor(const struct FLinearColor& Color);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassAboutLicenseListPanel">();
	}
	static class USeasonPassAboutLicenseListPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassAboutLicenseListPanel>();
	}
};
static_assert(alignof(USeasonPassAboutLicenseListPanel) == 0x000008, "Wrong alignment on USeasonPassAboutLicenseListPanel");
static_assert(sizeof(USeasonPassAboutLicenseListPanel) == 0x000180, "Wrong size on USeasonPassAboutLicenseListPanel");
static_assert(offsetof(USeasonPassAboutLicenseListPanel, _cellColorA) == 0x000150, "Member 'USeasonPassAboutLicenseListPanel::_cellColorA' has a wrong offset!");
static_assert(offsetof(USeasonPassAboutLicenseListPanel, _cellColorB) == 0x000160, "Member 'USeasonPassAboutLicenseListPanel::_cellColorB' has a wrong offset!");
static_assert(offsetof(USeasonPassAboutLicenseListPanel, _cellColorRankCell) == 0x000170, "Member 'USeasonPassAboutLicenseListPanel::_cellColorRankCell' has a wrong offset!");

// Class OutGameModule.SeasonPassDayList
// 0x0038 (0x0388 - 0x0350)
class USeasonPassDayList final : public UWidgetBase
{
public:
	int32                                         _itemMax;                                          // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_354[0xC];                                      // 0x0354(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USeasonPassDayEntry*>            _listItem;                                         // 0x0360(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UGridPanel*                             _daysListPanel;                                    // 0x0370(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _dayNumber;                                        // 0x0378(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _back;                                             // 0x0380(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_SetDayText(int32 Day);
	void BP_SetLayout(int32 CombineItem, int32 MaxItem, int32 Page);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassDayList">();
	}
	static class USeasonPassDayList* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassDayList>();
	}
};
static_assert(alignof(USeasonPassDayList) == 0x000008, "Wrong alignment on USeasonPassDayList");
static_assert(sizeof(USeasonPassDayList) == 0x000388, "Wrong size on USeasonPassDayList");
static_assert(offsetof(USeasonPassDayList, _itemMax) == 0x000350, "Member 'USeasonPassDayList::_itemMax' has a wrong offset!");
static_assert(offsetof(USeasonPassDayList, _listItem) == 0x000360, "Member 'USeasonPassDayList::_listItem' has a wrong offset!");
static_assert(offsetof(USeasonPassDayList, _daysListPanel) == 0x000370, "Member 'USeasonPassDayList::_daysListPanel' has a wrong offset!");
static_assert(offsetof(USeasonPassDayList, _dayNumber) == 0x000378, "Member 'USeasonPassDayList::_dayNumber' has a wrong offset!");
static_assert(offsetof(USeasonPassDayList, _back) == 0x000380, "Member 'USeasonPassDayList::_back' has a wrong offset!");

// Class OutGameModule.SeasonPassEntry
// 0x0098 (0x0740 - 0x06A8)
class USeasonPassEntry final : public USeasonPassEntryBase
{
public:
	uint8                                         Pad_6A8[0x8];                                      // 0x06A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomListView*                        _ListViewFreePass;                                 // 0x06B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomListView*                        _ListViewPremium;                                  // 0x06B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_             _rightPress;                                       // 0x06C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_             _leftPress;                                        // 0x06D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_             _upPress;                                          // 0x06E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_             _downPress;                                        // 0x06F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                          _bIsStock;                                         // 0x0700(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_701[0x3];                                      // 0x0701(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _PerLineNum;                                       // 0x0704(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_708[0x8];                                      // 0x0708(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 _grayImage;                                        // 0x0710(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _lockIcon;                                         // 0x0718(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _itemGet;                                          // 0x0720(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClippingWidget*                        _clipping;                                         // 0x0728(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_730[0x10];                                     // 0x0730(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UUserWidget* BP_GetCurretnFocusWidget();
	void BP_SetFocusFunction(bool bIsStock);
	void BP_SetWidgetImage();
	void DownFocus();
	void DownPressEvent__DelegateSignature();
	void LeftPressEvent__DelegateSignature();
	void NextFocus();
	class UWidget* OnCustomWidgetNavigation(EUINavigation UiNavigation);
	void PrevFocus();
	void RightPressEvent__DelegateSignature();
	void UpFocus();
	void UpPressEvent__DelegateSignature();

	int32 GetIndex() const;
	EItemSeasonType GetItemSeasonType() const;
	int32 GetStockIndex() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassEntry">();
	}
	static class USeasonPassEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassEntry>();
	}
};
static_assert(alignof(USeasonPassEntry) == 0x000008, "Wrong alignment on USeasonPassEntry");
static_assert(sizeof(USeasonPassEntry) == 0x000740, "Wrong size on USeasonPassEntry");
static_assert(offsetof(USeasonPassEntry, _ListViewFreePass) == 0x0006B0, "Member 'USeasonPassEntry::_ListViewFreePass' has a wrong offset!");
static_assert(offsetof(USeasonPassEntry, _ListViewPremium) == 0x0006B8, "Member 'USeasonPassEntry::_ListViewPremium' has a wrong offset!");
static_assert(offsetof(USeasonPassEntry, _rightPress) == 0x0006C0, "Member 'USeasonPassEntry::_rightPress' has a wrong offset!");
static_assert(offsetof(USeasonPassEntry, _leftPress) == 0x0006D0, "Member 'USeasonPassEntry::_leftPress' has a wrong offset!");
static_assert(offsetof(USeasonPassEntry, _upPress) == 0x0006E0, "Member 'USeasonPassEntry::_upPress' has a wrong offset!");
static_assert(offsetof(USeasonPassEntry, _downPress) == 0x0006F0, "Member 'USeasonPassEntry::_downPress' has a wrong offset!");
static_assert(offsetof(USeasonPassEntry, _bIsStock) == 0x000700, "Member 'USeasonPassEntry::_bIsStock' has a wrong offset!");
static_assert(offsetof(USeasonPassEntry, _PerLineNum) == 0x000704, "Member 'USeasonPassEntry::_PerLineNum' has a wrong offset!");
static_assert(offsetof(USeasonPassEntry, _grayImage) == 0x000710, "Member 'USeasonPassEntry::_grayImage' has a wrong offset!");
static_assert(offsetof(USeasonPassEntry, _lockIcon) == 0x000718, "Member 'USeasonPassEntry::_lockIcon' has a wrong offset!");
static_assert(offsetof(USeasonPassEntry, _itemGet) == 0x000720, "Member 'USeasonPassEntry::_itemGet' has a wrong offset!");
static_assert(offsetof(USeasonPassEntry, _clipping) == 0x000728, "Member 'USeasonPassEntry::_clipping' has a wrong offset!");

// Class OutGameModule.SeasonPassItemDetail
// 0x0038 (0x03D0 - 0x0398)
class USeasonPassItemDetail final : public UItemDetailsWidget
{
public:
	class UMaterialInstance*                      _charaImageMaterial;                               // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _iconSwitcher;                                     // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _notAvailable;                                     // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _quantity;                                         // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _itemiconCharacter;                                // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bAvailable;                                       // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASceneCaptureCreator*                   _sceneCaptureCreator;                              // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnFinishedCharaSetupDelegate();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassItemDetail">();
	}
	static class USeasonPassItemDetail* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassItemDetail>();
	}
};
static_assert(alignof(USeasonPassItemDetail) == 0x000008, "Wrong alignment on USeasonPassItemDetail");
static_assert(sizeof(USeasonPassItemDetail) == 0x0003D0, "Wrong size on USeasonPassItemDetail");
static_assert(offsetof(USeasonPassItemDetail, _charaImageMaterial) == 0x000398, "Member 'USeasonPassItemDetail::_charaImageMaterial' has a wrong offset!");
static_assert(offsetof(USeasonPassItemDetail, _iconSwitcher) == 0x0003A0, "Member 'USeasonPassItemDetail::_iconSwitcher' has a wrong offset!");
static_assert(offsetof(USeasonPassItemDetail, _notAvailable) == 0x0003A8, "Member 'USeasonPassItemDetail::_notAvailable' has a wrong offset!");
static_assert(offsetof(USeasonPassItemDetail, _quantity) == 0x0003B0, "Member 'USeasonPassItemDetail::_quantity' has a wrong offset!");
static_assert(offsetof(USeasonPassItemDetail, _itemiconCharacter) == 0x0003B8, "Member 'USeasonPassItemDetail::_itemiconCharacter' has a wrong offset!");
static_assert(offsetof(USeasonPassItemDetail, _bAvailable) == 0x0003C0, "Member 'USeasonPassItemDetail::_bAvailable' has a wrong offset!");
static_assert(offsetof(USeasonPassItemDetail, _sceneCaptureCreator) == 0x0003C8, "Member 'USeasonPassItemDetail::_sceneCaptureCreator' has a wrong offset!");

// Class OutGameModule.SeasonPassLicensePurchase
// 0x0048 (0x0398 - 0x0350)
class USeasonPassLicensePurchase final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x38];                                     // 0x0350(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlatformWidgetButton*                  _sctButton;                                        // 0x0388(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _sctPanel;                                         // 0x0390(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	bool BP_CheckSeasonExpired();
	void BP_SetUpPurchaseItem();
	void SetUpButtonFlag(bool buttonActive);
	void SetUpButtonParam();

	int32 BP_GetItemProLicenseExp() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassLicensePurchase">();
	}
	static class USeasonPassLicensePurchase* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassLicensePurchase>();
	}
};
static_assert(alignof(USeasonPassLicensePurchase) == 0x000008, "Wrong alignment on USeasonPassLicensePurchase");
static_assert(sizeof(USeasonPassLicensePurchase) == 0x000398, "Wrong size on USeasonPassLicensePurchase");
static_assert(offsetof(USeasonPassLicensePurchase, _sctButton) == 0x000388, "Member 'USeasonPassLicensePurchase::_sctButton' has a wrong offset!");
static_assert(offsetof(USeasonPassLicensePurchase, _sctPanel) == 0x000390, "Member 'USeasonPassLicensePurchase::_sctPanel' has a wrong offset!");

// Class OutGameModule.SeasonPassList
// 0x0158 (0x04A8 - 0x0350)
class USeasonPassList final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _listEntrySpaceing;                                // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESeasonType                                   _seasonType;                                       // 0x0364(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_365[0x13];                                     // 0x0365(0x0013)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _itemMax;                                          // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _entrySizeY;                                       // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         _seasonPassExpArrayNum;                            // 0x0384(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_388[0x50];                                     // 0x0388(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	class USeasonPassScrollBar*                   _ScrollBar;                                        // 0x03D8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E0[0x8];                                      // 0x03E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetButton*                          _prevCarouselButton;                               // 0x03E8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _nextCarouselButton;                               // 0x03F0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _scrollIndex;                                      // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _scrollPrevIndex;                                  // 0x03FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_400[0x10];                                     // 0x0400(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                _focusItem;                                        // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_             _OnOpenTabEventDispather;                          // 0x0418(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class USeasonPassItemDetail*                  _ItemDetail;                                       // 0x0428(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_430[0x18];                                     // 0x0430(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _currentSeasonRank;                                // 0x0448(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _currentSpecialRank;                               // 0x044C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _itemIndexCount;                                   // 0x0450(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_454[0xC];                                      // 0x0454(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomScrollBox*                       _itemScrollBox;                                    // 0x0460(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _freePanel;                                        // 0x0468(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _premiumPanel;                                     // 0x0470(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _specialPanel;                                     // 0x0478(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USeasonEntry*>                   _entryItems;                                       // 0x0480(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _freeItemSwitcher;                                 // 0x0490(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimaryAssetLicense*                   _primaryAssetlicense;                              // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class USeasonEntry>               _entryClass;                                       // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BP_ButtonPressLeft();
	void BP_ButtonPressRight();
	void BP_CallOpenTabEvent();
	void BP_ChangeScrollDestination(int32 Index_0, EItemSeasonType Type);
	const bool BP_CheckPlayableSound();
	void BP_ClearStockItems();
	void BP_FocusStockButton();
	class UWidget* BP_GetCurretnFocusItem();
	int32 BP_GetItemMax();
	int32 BP_GetPageMax();
	int32 BP_GetScrollPageIndex();
	void BP_InitList(ESeasonType Seasontype);
	void BP_ItemFocusPreviousIndex();
	void BP_ScrollMyRankPage();
	void BP_SetItemDetail();
	void BP_SetItemObject(const struct FDbSeasonPassParam& Param, class UObject* Obj, int32 Index_0, EItemType ItemType);
	void BP_SetItemSpecialObject(const struct FDbSpecialLicenseParam& Param, class UObject* Obj, int32 Index_0, EItemType ItemType);
	void BP_SetPageNumber();
	void BP_SetUpEntryFocusMove(bool IsRight);
	void BP_SetUpIndex(const bool SendNextIndexFlag);
	void BP_SetUpListBGColor(const struct FColor& PurchaseColor, const struct FColor& DefaultColor);
	void BP_SetUpSeasonDataArray();
	void BP_SetUpSeasonPassList();
	void BP_SetUpStockItem();
	void BP_UpdateMouseScrollItem(float CurrentOffset);
	void BP_UpdatePager(int32 Index_0);
	class USeasonEntry* CreateEntryWidget();
	class UPaperSprite* GetSeasonImage(ESeasonImageSize Size);
	void OpenTabDispather__DelegateSignature();
	bool SeasonitemIsEmpty(const struct FDbSeasonPassParam& Param);
	void SetPageNumber();
	void SetUpScrollBox(ESeasonType Type);
	void SetUpScrollBoxList(ESeasonType Seasontype);
	void SetUpSeasonPassList();
	bool SpecialitemIsEmpty(const struct FDbSpecialLicenseParam& Param);
	void UpdateMouseScrollItem(float CurrentOffset);

	int32 GetStockNum() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassList">();
	}
	static class USeasonPassList* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassList>();
	}
};
static_assert(alignof(USeasonPassList) == 0x000008, "Wrong alignment on USeasonPassList");
static_assert(sizeof(USeasonPassList) == 0x0004A8, "Wrong size on USeasonPassList");
static_assert(offsetof(USeasonPassList, _listEntrySpaceing) == 0x000360, "Member 'USeasonPassList::_listEntrySpaceing' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _seasonType) == 0x000364, "Member 'USeasonPassList::_seasonType' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _itemMax) == 0x000378, "Member 'USeasonPassList::_itemMax' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _entrySizeY) == 0x000380, "Member 'USeasonPassList::_entrySizeY' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _seasonPassExpArrayNum) == 0x000384, "Member 'USeasonPassList::_seasonPassExpArrayNum' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _ScrollBar) == 0x0003D8, "Member 'USeasonPassList::_ScrollBar' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _prevCarouselButton) == 0x0003E8, "Member 'USeasonPassList::_prevCarouselButton' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _nextCarouselButton) == 0x0003F0, "Member 'USeasonPassList::_nextCarouselButton' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _scrollIndex) == 0x0003F8, "Member 'USeasonPassList::_scrollIndex' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _scrollPrevIndex) == 0x0003FC, "Member 'USeasonPassList::_scrollPrevIndex' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _focusItem) == 0x000410, "Member 'USeasonPassList::_focusItem' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _OnOpenTabEventDispather) == 0x000418, "Member 'USeasonPassList::_OnOpenTabEventDispather' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _ItemDetail) == 0x000428, "Member 'USeasonPassList::_ItemDetail' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _currentSeasonRank) == 0x000448, "Member 'USeasonPassList::_currentSeasonRank' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _currentSpecialRank) == 0x00044C, "Member 'USeasonPassList::_currentSpecialRank' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _itemIndexCount) == 0x000450, "Member 'USeasonPassList::_itemIndexCount' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _itemScrollBox) == 0x000460, "Member 'USeasonPassList::_itemScrollBox' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _freePanel) == 0x000468, "Member 'USeasonPassList::_freePanel' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _premiumPanel) == 0x000470, "Member 'USeasonPassList::_premiumPanel' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _specialPanel) == 0x000478, "Member 'USeasonPassList::_specialPanel' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _entryItems) == 0x000480, "Member 'USeasonPassList::_entryItems' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _freeItemSwitcher) == 0x000490, "Member 'USeasonPassList::_freeItemSwitcher' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _primaryAssetlicense) == 0x000498, "Member 'USeasonPassList::_primaryAssetlicense' has a wrong offset!");
static_assert(offsetof(USeasonPassList, _entryClass) == 0x0004A0, "Member 'USeasonPassList::_entryClass' has a wrong offset!");

// Class OutGameModule.SeasonPassListObject
// 0x0070 (0x0098 - 0x0028)
class USeasonPassListObject final : public UObject
{
public:
	uint8                                         Pad_28[0x1];                                       // 0x0028(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _bFocus;                                           // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   _testText;                                         // 0x0030(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UCustomListView*                        _freepass;                                         // 0x0048(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomListView*                        _premiumPass;                                      // 0x0050(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _scrollIndex;                                      // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USeasonPassList*                        _parent;                                           // 0x0060(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_68[0x30];                                      // 0x0068(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class FString BP_GetItemCategory();
	int32 BP_GetItemId();
	EItemType BP_GetItemType();
	EMdRarity BP_GetRarity();
	void BP_SetItemCategory(const class FString& Category);
	void BP_SetItemId(int32 ID);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassListObject">();
	}
	static class USeasonPassListObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassListObject>();
	}
};
static_assert(alignof(USeasonPassListObject) == 0x000008, "Wrong alignment on USeasonPassListObject");
static_assert(sizeof(USeasonPassListObject) == 0x000098, "Wrong size on USeasonPassListObject");
static_assert(offsetof(USeasonPassListObject, _bFocus) == 0x000029, "Member 'USeasonPassListObject::_bFocus' has a wrong offset!");
static_assert(offsetof(USeasonPassListObject, _testText) == 0x000030, "Member 'USeasonPassListObject::_testText' has a wrong offset!");
static_assert(offsetof(USeasonPassListObject, _freepass) == 0x000048, "Member 'USeasonPassListObject::_freepass' has a wrong offset!");
static_assert(offsetof(USeasonPassListObject, _premiumPass) == 0x000050, "Member 'USeasonPassListObject::_premiumPass' has a wrong offset!");
static_assert(offsetof(USeasonPassListObject, _scrollIndex) == 0x000058, "Member 'USeasonPassListObject::_scrollIndex' has a wrong offset!");
static_assert(offsetof(USeasonPassListObject, _parent) == 0x000060, "Member 'USeasonPassListObject::_parent' has a wrong offset!");

// Class OutGameModule.SeasonPassRankEntry
// 0x0090 (0x03E0 - 0x0350)
class USeasonPassRankEntry final : public UWidgetBase
{
public:
	float                                         _entrySpacing;                                     // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         _imageSizeX;                                       // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         _imageSizeY;                                       // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           _headerColor;                                      // 0x035C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           _numberColor;                                      // 0x036C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           _ownRankHeaderColor;                               // 0x037C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           _ownRankNumberColor;                               // 0x038C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39C[0x14];                                     // 0x039C(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             _rankNumber;                                       // 0x03B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _entryBack;                                        // 0x03B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _rankCursor;                                       // 0x03C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _rankHeader;                                       // 0x03C8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _loopImage;                                        // 0x03D0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpacer*                                _spacer;                                           // 0x03D8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_SetImageSize(int32 SizeY, int32 CombineItem, float EntrySpacing);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassRankEntry">();
	}
	static class USeasonPassRankEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassRankEntry>();
	}
};
static_assert(alignof(USeasonPassRankEntry) == 0x000008, "Wrong alignment on USeasonPassRankEntry");
static_assert(sizeof(USeasonPassRankEntry) == 0x0003E0, "Wrong size on USeasonPassRankEntry");
static_assert(offsetof(USeasonPassRankEntry, _entrySpacing) == 0x000350, "Member 'USeasonPassRankEntry::_entrySpacing' has a wrong offset!");
static_assert(offsetof(USeasonPassRankEntry, _imageSizeX) == 0x000354, "Member 'USeasonPassRankEntry::_imageSizeX' has a wrong offset!");
static_assert(offsetof(USeasonPassRankEntry, _imageSizeY) == 0x000358, "Member 'USeasonPassRankEntry::_imageSizeY' has a wrong offset!");
static_assert(offsetof(USeasonPassRankEntry, _headerColor) == 0x00035C, "Member 'USeasonPassRankEntry::_headerColor' has a wrong offset!");
static_assert(offsetof(USeasonPassRankEntry, _numberColor) == 0x00036C, "Member 'USeasonPassRankEntry::_numberColor' has a wrong offset!");
static_assert(offsetof(USeasonPassRankEntry, _ownRankHeaderColor) == 0x00037C, "Member 'USeasonPassRankEntry::_ownRankHeaderColor' has a wrong offset!");
static_assert(offsetof(USeasonPassRankEntry, _ownRankNumberColor) == 0x00038C, "Member 'USeasonPassRankEntry::_ownRankNumberColor' has a wrong offset!");
static_assert(offsetof(USeasonPassRankEntry, _rankNumber) == 0x0003B0, "Member 'USeasonPassRankEntry::_rankNumber' has a wrong offset!");
static_assert(offsetof(USeasonPassRankEntry, _entryBack) == 0x0003B8, "Member 'USeasonPassRankEntry::_entryBack' has a wrong offset!");
static_assert(offsetof(USeasonPassRankEntry, _rankCursor) == 0x0003C0, "Member 'USeasonPassRankEntry::_rankCursor' has a wrong offset!");
static_assert(offsetof(USeasonPassRankEntry, _rankHeader) == 0x0003C8, "Member 'USeasonPassRankEntry::_rankHeader' has a wrong offset!");
static_assert(offsetof(USeasonPassRankEntry, _loopImage) == 0x0003D0, "Member 'USeasonPassRankEntry::_loopImage' has a wrong offset!");
static_assert(offsetof(USeasonPassRankEntry, _spacer) == 0x0003D8, "Member 'USeasonPassRankEntry::_spacer' has a wrong offset!");

// Class OutGameModule.SeasonPassScrollBar
// 0x0028 (0x0378 - 0x0350)
class USeasonPassScrollBar final : public UWidgetBase
{
public:
	class UHorizontalBox*                         _pageList;                                         // 0x0350(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UWidgetBase*>                    _pageListItems;                                    // 0x0358(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_368[0x10];                                     // 0x0368(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_CallMainMenuFetchEvent();
	void BP_SetList(class UWidgetBase* Widget);
	void BP_SetListItemSelect(int32 SelectPage);
	void BP_SetUpScrollBar(int32 PageMax);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassScrollBar">();
	}
	static class USeasonPassScrollBar* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassScrollBar>();
	}
};
static_assert(alignof(USeasonPassScrollBar) == 0x000008, "Wrong alignment on USeasonPassScrollBar");
static_assert(sizeof(USeasonPassScrollBar) == 0x000378, "Wrong size on USeasonPassScrollBar");
static_assert(offsetof(USeasonPassScrollBar, _pageList) == 0x000350, "Member 'USeasonPassScrollBar::_pageList' has a wrong offset!");
static_assert(offsetof(USeasonPassScrollBar, _pageListItems) == 0x000358, "Member 'USeasonPassScrollBar::_pageListItems' has a wrong offset!");

// Class OutGameModule.SeasonPassStockEntry
// 0x0018 (0x0368 - 0x0350)
class USeasonPassStockEntry final : public UWidgetBase
{
public:
	class USeasonPassEntry*                       _entry;                                            // 0x0350(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_358[0x10];                                     // 0x0358(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_FocusItem();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassStockEntry">();
	}
	static class USeasonPassStockEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassStockEntry>();
	}
};
static_assert(alignof(USeasonPassStockEntry) == 0x000008, "Wrong alignment on USeasonPassStockEntry");
static_assert(sizeof(USeasonPassStockEntry) == 0x000368, "Wrong size on USeasonPassStockEntry");
static_assert(offsetof(USeasonPassStockEntry, _entry) == 0x000350, "Member 'USeasonPassStockEntry::_entry' has a wrong offset!");

// Class OutGameModule.SeasonPassTitle
// 0x0020 (0x0370 - 0x0350)
class USeasonPassTitle final : public UWidgetBase
{
public:
	class UTimeWidget*                            _seasonPassTimer;                                  // 0x0350(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _seasonTitle;                                      // 0x0358(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_360[0x10];                                     // 0x0360(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_SetTitle();
	void BP_UpdateTime(const struct FTimespan& RemainingTime);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SeasonPassTitle">();
	}
	static class USeasonPassTitle* GetDefaultObj()
	{
		return GetDefaultObjImpl<USeasonPassTitle>();
	}
};
static_assert(alignof(USeasonPassTitle) == 0x000008, "Wrong alignment on USeasonPassTitle");
static_assert(sizeof(USeasonPassTitle) == 0x000370, "Wrong size on USeasonPassTitle");
static_assert(offsetof(USeasonPassTitle, _seasonPassTimer) == 0x000350, "Member 'USeasonPassTitle::_seasonPassTimer' has a wrong offset!");
static_assert(offsetof(USeasonPassTitle, _seasonTitle) == 0x000358, "Member 'USeasonPassTitle::_seasonTitle' has a wrong offset!");

// Class OutGameModule.SettingButtonChoicesWidget
// 0x0100 (0x0588 - 0x0488)
class USettingButtonChoicesWidget final : public UWidgetButton
{
public:
	FMulticastInlineDelegateProperty_             _onValueChangedDelegate;                           // 0x0488(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_498[0x10];                                     // 0x0498(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _bIsPressReaction;                                 // 0x04A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             _tipsTextBlock;                                    // 0x04B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   _tipsText;                                         // 0x04B8(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UAdjustTextWidget*                      _selectedText;                                     // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         _itemSelected;                                     // 0x04D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _itemRadial;                                       // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpacer*                                _itemSpacer;                                       // 0x04E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _bgSwitcher;                                       // 0x04F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusAnimationWidget*                  _focusAnimationListItem;                           // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _leftButton;                                       // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _rightButton;                                      // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateColor                            _selectColor;                                      // 0x0510(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                            _unselectColor;                                    // 0x0538(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_560[0x28];                                     // 0x0560(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 BP_GetIndex();
	class FText BP_GetIndexText();
	void BP_InitParam(const class FText& Categories, const TArray<class FText>& SelectArray, int32 DefaultIndex);
	void BP_SetBG(ESettingButtonBGType bgType);
	void BP_SetSelectIndex(int32 Selectindex);
	void BP_UpdateParam();
	class UWidget* DoNavigation(EUINavigation UiNavigation);
	void OnChoicesAddedToFocusDelegate__DelegateSignature(EWidgetInputType InputType, const struct FFocusEvent& InFocusEvent);
	void OnChoicesValueChangedDelegate__DelegateSignature(int32 SelectedIndex);
	void OnLeftRightDecide(class UAppWidget* Widget, EWidgetInputType InputType);
	void SetCategoriesText(const class FText& Text);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SettingButtonChoicesWidget">();
	}
	static class USettingButtonChoicesWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USettingButtonChoicesWidget>();
	}
};
static_assert(alignof(USettingButtonChoicesWidget) == 0x000008, "Wrong alignment on USettingButtonChoicesWidget");
static_assert(sizeof(USettingButtonChoicesWidget) == 0x000588, "Wrong size on USettingButtonChoicesWidget");
static_assert(offsetof(USettingButtonChoicesWidget, _onValueChangedDelegate) == 0x000488, "Member 'USettingButtonChoicesWidget::_onValueChangedDelegate' has a wrong offset!");
static_assert(offsetof(USettingButtonChoicesWidget, _bIsPressReaction) == 0x0004A8, "Member 'USettingButtonChoicesWidget::_bIsPressReaction' has a wrong offset!");
static_assert(offsetof(USettingButtonChoicesWidget, _tipsTextBlock) == 0x0004B0, "Member 'USettingButtonChoicesWidget::_tipsTextBlock' has a wrong offset!");
static_assert(offsetof(USettingButtonChoicesWidget, _tipsText) == 0x0004B8, "Member 'USettingButtonChoicesWidget::_tipsText' has a wrong offset!");
static_assert(offsetof(USettingButtonChoicesWidget, _selectedText) == 0x0004D0, "Member 'USettingButtonChoicesWidget::_selectedText' has a wrong offset!");
static_assert(offsetof(USettingButtonChoicesWidget, _itemSelected) == 0x0004D8, "Member 'USettingButtonChoicesWidget::_itemSelected' has a wrong offset!");
static_assert(offsetof(USettingButtonChoicesWidget, _itemRadial) == 0x0004E0, "Member 'USettingButtonChoicesWidget::_itemRadial' has a wrong offset!");
static_assert(offsetof(USettingButtonChoicesWidget, _itemSpacer) == 0x0004E8, "Member 'USettingButtonChoicesWidget::_itemSpacer' has a wrong offset!");
static_assert(offsetof(USettingButtonChoicesWidget, _bgSwitcher) == 0x0004F0, "Member 'USettingButtonChoicesWidget::_bgSwitcher' has a wrong offset!");
static_assert(offsetof(USettingButtonChoicesWidget, _focusAnimationListItem) == 0x0004F8, "Member 'USettingButtonChoicesWidget::_focusAnimationListItem' has a wrong offset!");
static_assert(offsetof(USettingButtonChoicesWidget, _leftButton) == 0x000500, "Member 'USettingButtonChoicesWidget::_leftButton' has a wrong offset!");
static_assert(offsetof(USettingButtonChoicesWidget, _rightButton) == 0x000508, "Member 'USettingButtonChoicesWidget::_rightButton' has a wrong offset!");
static_assert(offsetof(USettingButtonChoicesWidget, _selectColor) == 0x000510, "Member 'USettingButtonChoicesWidget::_selectColor' has a wrong offset!");
static_assert(offsetof(USettingButtonChoicesWidget, _unselectColor) == 0x000538, "Member 'USettingButtonChoicesWidget::_unselectColor' has a wrong offset!");

// Class OutGameModule.SettingButtonKeyWidget
// 0x0060 (0x04E8 - 0x0488)
class USettingButtonKeyWidget final : public UWidgetButton
{
public:
	EKeyConfigurableCommand                       _command;                                          // 0x0488(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   _key;                                              // 0x0490(0x0018)(Edit, BlueprintVisible, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EKeyConfigCommandListType                     _keyType;                                          // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   _derivedText;                                      // 0x04B0(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	EKeyConfigurableCommand                       _dummyCommand;                                     // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlatformRichTextBlock*                 _buttonImage;                                      // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _derivedTextBlock;                                 // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _commandName;                                      // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_SetCommand(const EKeyConfigurableCommand NextCommand);
	void BP_SetKey(const struct FKey& Key);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SettingButtonKeyWidget">();
	}
	static class USettingButtonKeyWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USettingButtonKeyWidget>();
	}
};
static_assert(alignof(USettingButtonKeyWidget) == 0x000008, "Wrong alignment on USettingButtonKeyWidget");
static_assert(sizeof(USettingButtonKeyWidget) == 0x0004E8, "Wrong size on USettingButtonKeyWidget");
static_assert(offsetof(USettingButtonKeyWidget, _command) == 0x000488, "Member 'USettingButtonKeyWidget::_command' has a wrong offset!");
static_assert(offsetof(USettingButtonKeyWidget, _key) == 0x000490, "Member 'USettingButtonKeyWidget::_key' has a wrong offset!");
static_assert(offsetof(USettingButtonKeyWidget, _keyType) == 0x0004A8, "Member 'USettingButtonKeyWidget::_keyType' has a wrong offset!");
static_assert(offsetof(USettingButtonKeyWidget, _derivedText) == 0x0004B0, "Member 'USettingButtonKeyWidget::_derivedText' has a wrong offset!");
static_assert(offsetof(USettingButtonKeyWidget, _dummyCommand) == 0x0004C8, "Member 'USettingButtonKeyWidget::_dummyCommand' has a wrong offset!");
static_assert(offsetof(USettingButtonKeyWidget, _buttonImage) == 0x0004D0, "Member 'USettingButtonKeyWidget::_buttonImage' has a wrong offset!");
static_assert(offsetof(USettingButtonKeyWidget, _derivedTextBlock) == 0x0004D8, "Member 'USettingButtonKeyWidget::_derivedTextBlock' has a wrong offset!");
static_assert(offsetof(USettingButtonKeyWidget, _commandName) == 0x0004E0, "Member 'USettingButtonKeyWidget::_commandName' has a wrong offset!");

// Class OutGameModule.SettingButtonSwitchWidget
// 0x00A8 (0x0530 - 0x0488)
class USettingButtonSwitchWidget final : public UWidgetButton
{
public:
	FMulticastInlineDelegateProperty_             _onValueChangedDelegate;                           // 0x0488(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_498[0x20];                                     // 0x0498(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          _focusSeAtomCue;                                   // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          _bIsPressReaction;                                 // 0x04C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             _tipsTextBlock;                                    // 0x04C8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   _tipsText;                                         // 0x04D0(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UTextBlock*                             _leftText;                                         // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _rightText;                                        // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _leftSelect;                                       // 0x04F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _rightSelect;                                      // 0x0500(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _leftButton;                                       // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _rightButton;                                      // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _bgSwitcher;                                       // 0x0518(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusAnimationWidget*                  _focusAnimationListItem;                           // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_528[0x8];                                      // 0x0528(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	ESettingSwitchType BP_GetValue();
	void BP_InitParam(const class FText& Categories, const class FText& LeftText, const class FText& RightText, ESettingSwitchType DefaultValue);
	bool BP_IsChangeValue();
	void BP_SetBG(ESettingButtonBGType bgType);
	void BP_SetValue(ESettingSwitchType Value);
	void BP_UpdateParam();
	class UWidget* DoNavigation(EUINavigation UiNavigation);
	void OnLefRightButtonDecide(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnSwitchAddedToFocusDelegate__DelegateSignature(EWidgetInputType InputType, const struct FFocusEvent& InFocusEvent);
	bool OnSwitchIsChangeValueDelegate__DelegateSignature();
	void OnSwitchValueChangedDelegate__DelegateSignature(const ESettingSwitchType Value);
	void SetCategoriesText(const class FText& Text);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SettingButtonSwitchWidget">();
	}
	static class USettingButtonSwitchWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USettingButtonSwitchWidget>();
	}
};
static_assert(alignof(USettingButtonSwitchWidget) == 0x000008, "Wrong alignment on USettingButtonSwitchWidget");
static_assert(sizeof(USettingButtonSwitchWidget) == 0x000530, "Wrong size on USettingButtonSwitchWidget");
static_assert(offsetof(USettingButtonSwitchWidget, _onValueChangedDelegate) == 0x000488, "Member 'USettingButtonSwitchWidget::_onValueChangedDelegate' has a wrong offset!");
static_assert(offsetof(USettingButtonSwitchWidget, _focusSeAtomCue) == 0x0004B8, "Member 'USettingButtonSwitchWidget::_focusSeAtomCue' has a wrong offset!");
static_assert(offsetof(USettingButtonSwitchWidget, _bIsPressReaction) == 0x0004C0, "Member 'USettingButtonSwitchWidget::_bIsPressReaction' has a wrong offset!");
static_assert(offsetof(USettingButtonSwitchWidget, _tipsTextBlock) == 0x0004C8, "Member 'USettingButtonSwitchWidget::_tipsTextBlock' has a wrong offset!");
static_assert(offsetof(USettingButtonSwitchWidget, _tipsText) == 0x0004D0, "Member 'USettingButtonSwitchWidget::_tipsText' has a wrong offset!");
static_assert(offsetof(USettingButtonSwitchWidget, _leftText) == 0x0004E8, "Member 'USettingButtonSwitchWidget::_leftText' has a wrong offset!");
static_assert(offsetof(USettingButtonSwitchWidget, _rightText) == 0x0004F0, "Member 'USettingButtonSwitchWidget::_rightText' has a wrong offset!");
static_assert(offsetof(USettingButtonSwitchWidget, _leftSelect) == 0x0004F8, "Member 'USettingButtonSwitchWidget::_leftSelect' has a wrong offset!");
static_assert(offsetof(USettingButtonSwitchWidget, _rightSelect) == 0x000500, "Member 'USettingButtonSwitchWidget::_rightSelect' has a wrong offset!");
static_assert(offsetof(USettingButtonSwitchWidget, _leftButton) == 0x000508, "Member 'USettingButtonSwitchWidget::_leftButton' has a wrong offset!");
static_assert(offsetof(USettingButtonSwitchWidget, _rightButton) == 0x000510, "Member 'USettingButtonSwitchWidget::_rightButton' has a wrong offset!");
static_assert(offsetof(USettingButtonSwitchWidget, _bgSwitcher) == 0x000518, "Member 'USettingButtonSwitchWidget::_bgSwitcher' has a wrong offset!");
static_assert(offsetof(USettingButtonSwitchWidget, _focusAnimationListItem) == 0x000520, "Member 'USettingButtonSwitchWidget::_focusAnimationListItem' has a wrong offset!");

// Class OutGameModule.ShopEventListWidget
// 0x0020 (0x0370 - 0x0350)
class UShopEventListWidget final : public UWidgetBase
{
public:
	class UEventItemListWidget*                   _eventItemListWidget;                              // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnDecideEventDelegate;                             // 0x0360(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void BP_OnSelectTab();
	void BP_OnUnSelectTab();
	void OnDecideEvent(class UEventItemEntryObject* EventItemEntryObject);
	void OnDecideEventDelegate__DelegateSignature(class UEventItemEntryObject* EventItemEntryObject);
	void OnShowNoneText(bool bShowNoneText);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ShopEventListWidget">();
	}
	static class UShopEventListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopEventListWidget>();
	}
};
static_assert(alignof(UShopEventListWidget) == 0x000008, "Wrong alignment on UShopEventListWidget");
static_assert(sizeof(UShopEventListWidget) == 0x000370, "Wrong size on UShopEventListWidget");
static_assert(offsetof(UShopEventListWidget, _eventItemListWidget) == 0x000350, "Member 'UShopEventListWidget::_eventItemListWidget' has a wrong offset!");
static_assert(offsetof(UShopEventListWidget, OnDecideEventDelegate) == 0x000360, "Member 'UShopEventListWidget::OnDecideEventDelegate' has a wrong offset!");

// Class OutGameModule.ShopItemIconWidget
// 0x0038 (0x0388 - 0x0350)
class UShopItemIconWidget final : public UWidgetBase
{
public:
	class UItemIconImage*                         _ItemIconImage;                                    // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconVoiceWidget*                   _itemIconVoice;                                    // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconAppealWidget*                  _itemIconAppeal;                                   // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMyADDisplayWidget*                     _itemIconMyAD;                                     // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _quantityTextBlock;                                // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _quantityPanel;                                    // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bSmallIcon;                                       // 0x0380(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnSetShowMyAdLabel(bool bShow);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ShopItemIconWidget">();
	}
	static class UShopItemIconWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopItemIconWidget>();
	}
};
static_assert(alignof(UShopItemIconWidget) == 0x000008, "Wrong alignment on UShopItemIconWidget");
static_assert(sizeof(UShopItemIconWidget) == 0x000388, "Wrong size on UShopItemIconWidget");
static_assert(offsetof(UShopItemIconWidget, _ItemIconImage) == 0x000350, "Member 'UShopItemIconWidget::_ItemIconImage' has a wrong offset!");
static_assert(offsetof(UShopItemIconWidget, _itemIconVoice) == 0x000358, "Member 'UShopItemIconWidget::_itemIconVoice' has a wrong offset!");
static_assert(offsetof(UShopItemIconWidget, _itemIconAppeal) == 0x000360, "Member 'UShopItemIconWidget::_itemIconAppeal' has a wrong offset!");
static_assert(offsetof(UShopItemIconWidget, _itemIconMyAD) == 0x000368, "Member 'UShopItemIconWidget::_itemIconMyAD' has a wrong offset!");
static_assert(offsetof(UShopItemIconWidget, _quantityTextBlock) == 0x000370, "Member 'UShopItemIconWidget::_quantityTextBlock' has a wrong offset!");
static_assert(offsetof(UShopItemIconWidget, _quantityPanel) == 0x000378, "Member 'UShopItemIconWidget::_quantityPanel' has a wrong offset!");
static_assert(offsetof(UShopItemIconWidget, _bSmallIcon) == 0x000380, "Member 'UShopItemIconWidget::_bSmallIcon' has a wrong offset!");

// Class OutGameModule.ShopItemListPanelWidget
// 0x0040 (0x0520 - 0x04E0)
class UShopItemListPanelWidget final : public UShopItemListWidgetBase
{
public:
	class UPanelWidget*                           _panelWidget;                                      // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UShopItemWidget*>                _shopItemWidgetList;                               // 0x04E8(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4F8[0x1C];                                     // 0x04F8(0x001C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _oneItemSize;                                      // 0x0514(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USoundAtomCue*                          _focusAtomCue;                                     // 0x0518(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void ChangeOffset(float Offset);
	void NextFocus();
	class UWidget* OnCustomWidgetShopNavigation(EUINavigation UiNavigation);
	void PrevFocus();
	void SetScrollBar(float Offset);
	void SetScrollSize(float Size);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ShopItemListPanelWidget">();
	}
	static class UShopItemListPanelWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopItemListPanelWidget>();
	}
};
static_assert(alignof(UShopItemListPanelWidget) == 0x000008, "Wrong alignment on UShopItemListPanelWidget");
static_assert(sizeof(UShopItemListPanelWidget) == 0x000520, "Wrong size on UShopItemListPanelWidget");
static_assert(offsetof(UShopItemListPanelWidget, _panelWidget) == 0x0004E0, "Member 'UShopItemListPanelWidget::_panelWidget' has a wrong offset!");
static_assert(offsetof(UShopItemListPanelWidget, _shopItemWidgetList) == 0x0004E8, "Member 'UShopItemListPanelWidget::_shopItemWidgetList' has a wrong offset!");
static_assert(offsetof(UShopItemListPanelWidget, _oneItemSize) == 0x000514, "Member 'UShopItemListPanelWidget::_oneItemSize' has a wrong offset!");
static_assert(offsetof(UShopItemListPanelWidget, _focusAtomCue) == 0x000518, "Member 'UShopItemListPanelWidget::_focusAtomCue' has a wrong offset!");

// Class OutGameModule.ShopItemViewWidget
// 0x0038 (0x0388 - 0x0350)
class UShopItemViewWidget final : public UWidgetBase
{
public:
	class UCanvasPanel*                           _shopItemIconCanvas;                               // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UShopItemIconWidget*>            _shopItemIconArray;                                // 0x0358(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UDataTable*                             _shopItemPackLayoutTable;                          // 0x0368(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _previewShopCount;                                 // 0x0370(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             _previewTexture;                                   // 0x0378(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _previewQuantity;                                  // 0x0380(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnSetBgTexture(const struct FSlateBrush& bgSlateBrush, bool bShow);
	void PreviewUpdateItem();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ShopItemViewWidget">();
	}
	static class UShopItemViewWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopItemViewWidget>();
	}
};
static_assert(alignof(UShopItemViewWidget) == 0x000008, "Wrong alignment on UShopItemViewWidget");
static_assert(sizeof(UShopItemViewWidget) == 0x000388, "Wrong size on UShopItemViewWidget");
static_assert(offsetof(UShopItemViewWidget, _shopItemIconCanvas) == 0x000350, "Member 'UShopItemViewWidget::_shopItemIconCanvas' has a wrong offset!");
static_assert(offsetof(UShopItemViewWidget, _shopItemIconArray) == 0x000358, "Member 'UShopItemViewWidget::_shopItemIconArray' has a wrong offset!");
static_assert(offsetof(UShopItemViewWidget, _shopItemPackLayoutTable) == 0x000368, "Member 'UShopItemViewWidget::_shopItemPackLayoutTable' has a wrong offset!");
static_assert(offsetof(UShopItemViewWidget, _previewShopCount) == 0x000370, "Member 'UShopItemViewWidget::_previewShopCount' has a wrong offset!");
static_assert(offsetof(UShopItemViewWidget, _previewTexture) == 0x000378, "Member 'UShopItemViewWidget::_previewTexture' has a wrong offset!");
static_assert(offsetof(UShopItemViewWidget, _previewQuantity) == 0x000380, "Member 'UShopItemViewWidget::_previewQuantity' has a wrong offset!");

// Class OutGameModule.ShopPickupWidget
// 0x0040 (0x0390 - 0x0350)
class UShopPickupWidget final : public UWidgetBase
{
public:
	class UShopItemViewWidget*                    _shopItemViewWidget;                               // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _changeTimeMax;                                    // 0x0358(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   _nonePickupText;                                   // 0x0360(0x0018)(Edit, NativeAccessSpecifierPrivate)
	TArray<class UShopItemObject*>                _shopItemObjectList;                               // 0x0378(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_388[0x8];                                      // 0x0388(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetShopItemName(const class FText& InText);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ShopPickupWidget">();
	}
	static class UShopPickupWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopPickupWidget>();
	}
};
static_assert(alignof(UShopPickupWidget) == 0x000008, "Wrong alignment on UShopPickupWidget");
static_assert(sizeof(UShopPickupWidget) == 0x000390, "Wrong size on UShopPickupWidget");
static_assert(offsetof(UShopPickupWidget, _shopItemViewWidget) == 0x000350, "Member 'UShopPickupWidget::_shopItemViewWidget' has a wrong offset!");
static_assert(offsetof(UShopPickupWidget, _changeTimeMax) == 0x000358, "Member 'UShopPickupWidget::_changeTimeMax' has a wrong offset!");
static_assert(offsetof(UShopPickupWidget, _nonePickupText) == 0x000360, "Member 'UShopPickupWidget::_nonePickupText' has a wrong offset!");
static_assert(offsetof(UShopPickupWidget, _shopItemObjectList) == 0x000378, "Member 'UShopPickupWidget::_shopItemObjectList' has a wrong offset!");

// Class OutGameModule.ShopTopWidget
// 0x0058 (0x03A8 - 0x0350)
class UShopTopWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UShopTabWidget*>                 _shopTabWidgetList;                                // 0x0360(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	bool                                          _bPrevirePsView;                                   // 0x0370(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _bPsView;                                          // 0x0371(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_372[0x2];                                      // 0x0372(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                _shopMargin;                                       // 0x0374(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMargin                                _shopMargin_Ps;                                    // 0x0384(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	float                                         _shopCanvasHeight;                                 // 0x0394(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _shopCanvasHeight_Ps;                              // 0x0398(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanel*                           _shopCanvasPanel;                                  // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	EShopContentsType BP_GetStartTab();
	void EndPurchase();
	void InitTabList(class UWidgetSwitcher* TabContentsSwitcher);
	void OnClosePopup();
	void OnEndPurchase();
	void OnLoadComplete(int32 RequestId);
	void OnSetIncTaxMessageSwitch(const class FText& ItemName);
	void OnShowOpenPurchaseCompleteWindow(const class FText& ItemName);
	void OnShowOpenPurchaseErrorWindow();
	void OnStartPurchase();
	void ShowJpOnlyButton(bool bShow);
	void ShowOpenPurchaseCompleteWindow(const class FText& ItemName);
	void ShowOpenPurchaseErrorWindow();
	void StartPurchase();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ShopTopWidget">();
	}
	static class UShopTopWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopTopWidget>();
	}
};
static_assert(alignof(UShopTopWidget) == 0x000008, "Wrong alignment on UShopTopWidget");
static_assert(sizeof(UShopTopWidget) == 0x0003A8, "Wrong size on UShopTopWidget");
static_assert(offsetof(UShopTopWidget, _shopTabWidgetList) == 0x000360, "Member 'UShopTopWidget::_shopTabWidgetList' has a wrong offset!");
static_assert(offsetof(UShopTopWidget, _bPrevirePsView) == 0x000370, "Member 'UShopTopWidget::_bPrevirePsView' has a wrong offset!");
static_assert(offsetof(UShopTopWidget, _bPsView) == 0x000371, "Member 'UShopTopWidget::_bPsView' has a wrong offset!");
static_assert(offsetof(UShopTopWidget, _shopMargin) == 0x000374, "Member 'UShopTopWidget::_shopMargin' has a wrong offset!");
static_assert(offsetof(UShopTopWidget, _shopMargin_Ps) == 0x000384, "Member 'UShopTopWidget::_shopMargin_Ps' has a wrong offset!");
static_assert(offsetof(UShopTopWidget, _shopCanvasHeight) == 0x000394, "Member 'UShopTopWidget::_shopCanvasHeight' has a wrong offset!");
static_assert(offsetof(UShopTopWidget, _shopCanvasHeight_Ps) == 0x000398, "Member 'UShopTopWidget::_shopCanvasHeight_Ps' has a wrong offset!");
static_assert(offsetof(UShopTopWidget, _shopCanvasPanel) == 0x0003A0, "Member 'UShopTopWidget::_shopCanvasPanel' has a wrong offset!");

// Class OutGameModule.SortTextWidget
// 0x0020 (0x0370 - 0x0350)
class USortTextWidget final : public UWidgetBase
{
public:
	struct FLinearColor                           _textColor;                                        // 0x0350(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USortPopupWidget*                       _sortPopupWidget;                                  // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDecideSort();
	void SetSortPopup(class USortPopupWidget* SortPopupWidget, int32 SortIndex);
	void SetSortText(const class FText& SortText);
	void SetTextColor(const struct FLinearColor& TextColor);
	void SetTextCount(int32 Num, int32 Max);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SortTextWidget">();
	}
	static class USortTextWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USortTextWidget>();
	}
};
static_assert(alignof(USortTextWidget) == 0x000008, "Wrong alignment on USortTextWidget");
static_assert(sizeof(USortTextWidget) == 0x000370, "Wrong size on USortTextWidget");
static_assert(offsetof(USortTextWidget, _textColor) == 0x000350, "Member 'USortTextWidget::_textColor' has a wrong offset!");
static_assert(offsetof(USortTextWidget, _sortPopupWidget) == 0x000360, "Member 'USortTextWidget::_sortPopupWidget' has a wrong offset!");

// Class OutGameModule.SpaceAdjustmentList
// 0x0018 (0x0368 - 0x0350)
class USpaceAdjustmentList final : public UWidgetBase
{
public:
	EOrientation                                  _orientation;                                      // 0x0350(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _space;                                            // 0x0354(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                             _scrollBox;                                        // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_360[0x8];                                      // 0x0360(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAddedToFocusEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void SetButtonFocus(const int32 Idx);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpaceAdjustmentList">();
	}
	static class USpaceAdjustmentList* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpaceAdjustmentList>();
	}
};
static_assert(alignof(USpaceAdjustmentList) == 0x000008, "Wrong alignment on USpaceAdjustmentList");
static_assert(sizeof(USpaceAdjustmentList) == 0x000368, "Wrong size on USpaceAdjustmentList");
static_assert(offsetof(USpaceAdjustmentList, _orientation) == 0x000350, "Member 'USpaceAdjustmentList::_orientation' has a wrong offset!");
static_assert(offsetof(USpaceAdjustmentList, _space) == 0x000354, "Member 'USpaceAdjustmentList::_space' has a wrong offset!");
static_assert(offsetof(USpaceAdjustmentList, _scrollBox) == 0x000358, "Member 'USpaceAdjustmentList::_scrollBox' has a wrong offset!");

// Class OutGameModule.SpecialLicenseRewardWidget
// 0x0080 (0x0410 - 0x0390)
class USpecialLicenseRewardWidget final : public UBattleRewardWidgetBase
{
public:
	class UWidgetLocalizeLayout*                  _rankText;                                         // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMultipleDigitsWidget*                  _currentExpText;                                   // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMultipleDigitsWidget*                  _maxExpText;                                       // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UResultRewardAddValueWidget*            _addExp;                                           // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDeltaProgressBarWidget*                _expProgressBar;                                   // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconWidget*                        _itemIcon;                                         // 0x03B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C0[0x38];                                     // 0x03C0(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBox*                         _bonus1;                                           // 0x03F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         _bonus2;                                           // 0x0400(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       _aniExp;                                           // 0x0408(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void FinishProgressSpecialLicense(class UProgressBarWidget* ProgressBar);
	void LevelUpSpecialLicense(const int32 LevelCount);
	void NextSequence();
	void ProgressSpecialLicense(const float& NowValue, const float& MaxValue);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialLicenseRewardWidget">();
	}
	static class USpecialLicenseRewardWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecialLicenseRewardWidget>();
	}
};
static_assert(alignof(USpecialLicenseRewardWidget) == 0x000008, "Wrong alignment on USpecialLicenseRewardWidget");
static_assert(sizeof(USpecialLicenseRewardWidget) == 0x000410, "Wrong size on USpecialLicenseRewardWidget");
static_assert(offsetof(USpecialLicenseRewardWidget, _rankText) == 0x000390, "Member 'USpecialLicenseRewardWidget::_rankText' has a wrong offset!");
static_assert(offsetof(USpecialLicenseRewardWidget, _currentExpText) == 0x000398, "Member 'USpecialLicenseRewardWidget::_currentExpText' has a wrong offset!");
static_assert(offsetof(USpecialLicenseRewardWidget, _maxExpText) == 0x0003A0, "Member 'USpecialLicenseRewardWidget::_maxExpText' has a wrong offset!");
static_assert(offsetof(USpecialLicenseRewardWidget, _addExp) == 0x0003A8, "Member 'USpecialLicenseRewardWidget::_addExp' has a wrong offset!");
static_assert(offsetof(USpecialLicenseRewardWidget, _expProgressBar) == 0x0003B0, "Member 'USpecialLicenseRewardWidget::_expProgressBar' has a wrong offset!");
static_assert(offsetof(USpecialLicenseRewardWidget, _itemIcon) == 0x0003B8, "Member 'USpecialLicenseRewardWidget::_itemIcon' has a wrong offset!");
static_assert(offsetof(USpecialLicenseRewardWidget, _bonus1) == 0x0003F8, "Member 'USpecialLicenseRewardWidget::_bonus1' has a wrong offset!");
static_assert(offsetof(USpecialLicenseRewardWidget, _bonus2) == 0x000400, "Member 'USpecialLicenseRewardWidget::_bonus2' has a wrong offset!");
static_assert(offsetof(USpecialLicenseRewardWidget, _aniExp) == 0x000408, "Member 'USpecialLicenseRewardWidget::_aniExp' has a wrong offset!");

// Class OutGameModule.SquadCreateWidget
// 0x0018 (0x0368 - 0x0350)
class USquadCreateWidget final : public UWidgetBase
{
public:
	class UWidgetGeneralWindow*                   _selectMessageWindow;                              // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetGeneralWindow*                   _requestFinishedWindow;                            // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_360[0x8];                                      // 0x0360(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnClosedWindow();
	void OnClosedWindowRequestFinished();
	void OnCloseLevel();
	void OnDecideWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnOpenedWindowRequestFinished();
	void OnPressWindowRequestFinished(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnTeamUpCreatedEvent();
	void OnTeamUpUpdatedEvent();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SquadCreateWidget">();
	}
	static class USquadCreateWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USquadCreateWidget>();
	}
};
static_assert(alignof(USquadCreateWidget) == 0x000008, "Wrong alignment on USquadCreateWidget");
static_assert(sizeof(USquadCreateWidget) == 0x000368, "Wrong size on USquadCreateWidget");
static_assert(offsetof(USquadCreateWidget, _selectMessageWindow) == 0x000350, "Member 'USquadCreateWidget::_selectMessageWindow' has a wrong offset!");
static_assert(offsetof(USquadCreateWidget, _requestFinishedWindow) == 0x000358, "Member 'USquadCreateWidget::_requestFinishedWindow' has a wrong offset!");

// Class OutGameModule.SquadFriendListViewEntryObject
// 0x0008 (0x0088 - 0x0080)
class USquadFriendListViewEntryObject final : public UFriendListViewEntryObject
{
public:
	int32                                         _tab;                                              // 0x0080(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SquadFriendListViewEntryObject">();
	}
	static class USquadFriendListViewEntryObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<USquadFriendListViewEntryObject>();
	}
};
static_assert(alignof(USquadFriendListViewEntryObject) == 0x000008, "Wrong alignment on USquadFriendListViewEntryObject");
static_assert(sizeof(USquadFriendListViewEntryObject) == 0x000088, "Wrong size on USquadFriendListViewEntryObject");
static_assert(offsetof(USquadFriendListViewEntryObject, _tab) == 0x000080, "Member 'USquadFriendListViewEntryObject::_tab' has a wrong offset!");

// Class OutGameModule.SquadLeaveWidget
// 0x0120 (0x0470 - 0x0350)
class USquadLeaveWidget final : public UWidgetBase
{
public:
	class UWidgetGeneralWindow*                   _selectMessageWindow;                              // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetGeneralWindow*                   _selectMemberMessageWindow;                        // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetGeneralWindow*                   _requestFinishedWindow;                            // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   _leaderMessageText;                                // 0x0368(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FGeneralWindowText                     _leaderLeftText;                                   // 0x0380(0x0028)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FGeneralWindowText                     _leaderRightText;                                  // 0x03A8(0x0028)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                   _leaderLeaveMessageText;                           // 0x03D0(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                   _memberMessageText;                                // 0x03E8(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FGeneralWindowText                     _memberLeftText;                                   // 0x0400(0x0028)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FGeneralWindowText                     _memberRightText;                                  // 0x0428(0x0028)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                   _memberLeaveMessageText;                           // 0x0450(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_468[0x8];                                      // 0x0468(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnClosedWindow();
	void OnClosedWindowRequestFinished();
	void OnCloseLevel();
	void OnDecideWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnDecideWindowRequestFinished(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnSquadInfoChanged();
	void OnSquadNumChanged(int32 SquadNum);
	void OnTeamUpLeaveEvent();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SquadLeaveWidget">();
	}
	static class USquadLeaveWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USquadLeaveWidget>();
	}
};
static_assert(alignof(USquadLeaveWidget) == 0x000008, "Wrong alignment on USquadLeaveWidget");
static_assert(sizeof(USquadLeaveWidget) == 0x000470, "Wrong size on USquadLeaveWidget");
static_assert(offsetof(USquadLeaveWidget, _selectMessageWindow) == 0x000350, "Member 'USquadLeaveWidget::_selectMessageWindow' has a wrong offset!");
static_assert(offsetof(USquadLeaveWidget, _selectMemberMessageWindow) == 0x000358, "Member 'USquadLeaveWidget::_selectMemberMessageWindow' has a wrong offset!");
static_assert(offsetof(USquadLeaveWidget, _requestFinishedWindow) == 0x000360, "Member 'USquadLeaveWidget::_requestFinishedWindow' has a wrong offset!");
static_assert(offsetof(USquadLeaveWidget, _leaderMessageText) == 0x000368, "Member 'USquadLeaveWidget::_leaderMessageText' has a wrong offset!");
static_assert(offsetof(USquadLeaveWidget, _leaderLeftText) == 0x000380, "Member 'USquadLeaveWidget::_leaderLeftText' has a wrong offset!");
static_assert(offsetof(USquadLeaveWidget, _leaderRightText) == 0x0003A8, "Member 'USquadLeaveWidget::_leaderRightText' has a wrong offset!");
static_assert(offsetof(USquadLeaveWidget, _leaderLeaveMessageText) == 0x0003D0, "Member 'USquadLeaveWidget::_leaderLeaveMessageText' has a wrong offset!");
static_assert(offsetof(USquadLeaveWidget, _memberMessageText) == 0x0003E8, "Member 'USquadLeaveWidget::_memberMessageText' has a wrong offset!");
static_assert(offsetof(USquadLeaveWidget, _memberLeftText) == 0x000400, "Member 'USquadLeaveWidget::_memberLeftText' has a wrong offset!");
static_assert(offsetof(USquadLeaveWidget, _memberRightText) == 0x000428, "Member 'USquadLeaveWidget::_memberRightText' has a wrong offset!");
static_assert(offsetof(USquadLeaveWidget, _memberLeaveMessageText) == 0x000450, "Member 'USquadLeaveWidget::_memberLeaveMessageText' has a wrong offset!");

// Class OutGameModule.SquadMemberInvitationList
// 0x0140 (0x0490 - 0x0350)
class USquadMemberInvitationList final : public UWidgetBase
{
public:
	FMulticastInlineDelegateProperty_             OnDecideSelectButton;                              // 0x0350(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnSendSquadInvite;                                 // 0x0360(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnCancelSendSquadInvite;                           // 0x0370(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnLeftInputNavigation;                             // 0x0380(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnInputFilterButtonFind;                           // 0x0390(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnErrorTextBox;                                    // 0x03A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UWidgetButton*                          _squeezingButtonFind;                              // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTabWidget*                             _wbpTab;                                           // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFriendListHasWidget*                   _friendListWidget;                                 // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFriendListHasWidget*                   _friendAddFriendPlayedListWidget;                  // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFriendListHasWidget*                   _friendAddFriendGuildMemberListWidget;             // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFriendListHasWidget*                   _friendAddFriendPlatformListWidget;                // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<int32, class UFriendListHasWidget*>      _friendListMap;                                    // 0x03E0(0x0050)(ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UFriendListHasWidget*                   _initialSelectionTabWidget;                        // 0x0430(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<ESquadMemberInvitationStatus, struct FSquadMemberInvitationData> _subMenuTextLists;                                 // 0x0438(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	ESquadMemberInvitationStatus                  _invitationStatus;                                 // 0x0488(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnChangedFilterCategory();
	class UWidget* DoCustomNavigationFromFilter();
	class UWidget* DoCustomNavigationFromManager();
	void OnCancelSendSquadInvite__DelegateSignature(const class FString& InvitationId);
	void OnChangedFilterCategory();
	void OnDecideButtonWidget(class UAppWidget* Button, EWidgetInputType InputType);
	void OnDecideSelectButton__DelegateSignature(ESquadMemberInvitationStatus SquadMemberInvitationStatus);
	void OnErrorTextBox__DelegateSignature();
	void OnInputFilterButtonFind__DelegateSignature();
	void OnLeftInputNavigation__DelegateSignature();
	void OnRequesetFriendList(EFriendListType FriendType, EFriendStatus FriendStatus);
	void OnSendSquadInvite__DelegateSignature(const class FString& CosmosId);
	void OnSetupTabWidgetEvent();
	void OnSubMenuDecide(int32 Index_0);
	void OnSwitchTabWidgetEvent(int32 NewSelectTab);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SquadMemberInvitationList">();
	}
	static class USquadMemberInvitationList* GetDefaultObj()
	{
		return GetDefaultObjImpl<USquadMemberInvitationList>();
	}
};
static_assert(alignof(USquadMemberInvitationList) == 0x000008, "Wrong alignment on USquadMemberInvitationList");
static_assert(sizeof(USquadMemberInvitationList) == 0x000490, "Wrong size on USquadMemberInvitationList");
static_assert(offsetof(USquadMemberInvitationList, OnDecideSelectButton) == 0x000350, "Member 'USquadMemberInvitationList::OnDecideSelectButton' has a wrong offset!");
static_assert(offsetof(USquadMemberInvitationList, OnSendSquadInvite) == 0x000360, "Member 'USquadMemberInvitationList::OnSendSquadInvite' has a wrong offset!");
static_assert(offsetof(USquadMemberInvitationList, OnCancelSendSquadInvite) == 0x000370, "Member 'USquadMemberInvitationList::OnCancelSendSquadInvite' has a wrong offset!");
static_assert(offsetof(USquadMemberInvitationList, OnLeftInputNavigation) == 0x000380, "Member 'USquadMemberInvitationList::OnLeftInputNavigation' has a wrong offset!");
static_assert(offsetof(USquadMemberInvitationList, OnInputFilterButtonFind) == 0x000390, "Member 'USquadMemberInvitationList::OnInputFilterButtonFind' has a wrong offset!");
static_assert(offsetof(USquadMemberInvitationList, OnErrorTextBox) == 0x0003A0, "Member 'USquadMemberInvitationList::OnErrorTextBox' has a wrong offset!");
static_assert(offsetof(USquadMemberInvitationList, _squeezingButtonFind) == 0x0003B0, "Member 'USquadMemberInvitationList::_squeezingButtonFind' has a wrong offset!");
static_assert(offsetof(USquadMemberInvitationList, _wbpTab) == 0x0003B8, "Member 'USquadMemberInvitationList::_wbpTab' has a wrong offset!");
static_assert(offsetof(USquadMemberInvitationList, _friendListWidget) == 0x0003C0, "Member 'USquadMemberInvitationList::_friendListWidget' has a wrong offset!");
static_assert(offsetof(USquadMemberInvitationList, _friendAddFriendPlayedListWidget) == 0x0003C8, "Member 'USquadMemberInvitationList::_friendAddFriendPlayedListWidget' has a wrong offset!");
static_assert(offsetof(USquadMemberInvitationList, _friendAddFriendGuildMemberListWidget) == 0x0003D0, "Member 'USquadMemberInvitationList::_friendAddFriendGuildMemberListWidget' has a wrong offset!");
static_assert(offsetof(USquadMemberInvitationList, _friendAddFriendPlatformListWidget) == 0x0003D8, "Member 'USquadMemberInvitationList::_friendAddFriendPlatformListWidget' has a wrong offset!");
static_assert(offsetof(USquadMemberInvitationList, _friendListMap) == 0x0003E0, "Member 'USquadMemberInvitationList::_friendListMap' has a wrong offset!");
static_assert(offsetof(USquadMemberInvitationList, _initialSelectionTabWidget) == 0x000430, "Member 'USquadMemberInvitationList::_initialSelectionTabWidget' has a wrong offset!");
static_assert(offsetof(USquadMemberInvitationList, _subMenuTextLists) == 0x000438, "Member 'USquadMemberInvitationList::_subMenuTextLists' has a wrong offset!");
static_assert(offsetof(USquadMemberInvitationList, _invitationStatus) == 0x000488, "Member 'USquadMemberInvitationList::_invitationStatus' has a wrong offset!");

// Class OutGameModule.SquadMessageWidget
// 0x0008 (0x0358 - 0x0350)
class USquadMessageWidget final : public UWidgetBase
{
public:
	class UWidgetGeneralWindow*                   _widgetGeneralWindow;                              // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SquadMessageWidget">();
	}
	static class USquadMessageWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USquadMessageWidget>();
	}
};
static_assert(alignof(USquadMessageWidget) == 0x000008, "Wrong alignment on USquadMessageWidget");
static_assert(sizeof(USquadMessageWidget) == 0x000358, "Wrong size on USquadMessageWidget");
static_assert(offsetof(USquadMessageWidget, _widgetGeneralWindow) == 0x000350, "Member 'USquadMessageWidget::_widgetGeneralWindow' has a wrong offset!");

// Class OutGameModule.SquadWidget
// 0x0070 (0x03C0 - 0x0350)
class USquadWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x8];                                      // 0x0350(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USquadMemberInvitationList*             _squadMemberInvitationList;                        // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFriendSubMenuAppWidget*                _filter;                                           // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetGeneralWindowFrame*              _popupWindow;                                      // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetGeneralWindow*                   _selectMessageWindow;                              // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetGeneralWindow*                   _cancelMessageWindow;                              // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetGeneralWindow*                   _blockMessageWindow;                               // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 _cosmosId;                                         // 0x0388(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 _invitationId;                                     // 0x0398(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          _requestSquadInvitation;                           // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          _bDisplaySubLevel;                                 // 0x03A9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3AA[0x16];                                     // 0x03AA(0x0016)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CloseLevel();
	void CustomMatchInvitation(const class FString& UserId);
	void OnBlockListDecideWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnFadeOutEvent();
	void OnNativeFadeOut();
	void OnReceivedDecideFilter();
	void OnReceivedDecideFilterButton();
	void OnReceivedRequestFriendListCustom(EFriendListType FriendType, EFriendStatus FriendStatus);
	void OnSquadCancelRequestDecideWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnSquadRequestDecideWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnTeamUpCreatedEvent();
	void OnTeamUpUpdatedEvent();
	void OnUpdateCompleteEvent(int32 RequestId);
	void SetFocusSquadMemberInvitationList();
	void SquadInvitation(const class FString& UserId);
	void SquadInvitationTimerFunction();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SquadWidget">();
	}
	static class USquadWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USquadWidget>();
	}
};
static_assert(alignof(USquadWidget) == 0x000008, "Wrong alignment on USquadWidget");
static_assert(sizeof(USquadWidget) == 0x0003C0, "Wrong size on USquadWidget");
static_assert(offsetof(USquadWidget, _squadMemberInvitationList) == 0x000358, "Member 'USquadWidget::_squadMemberInvitationList' has a wrong offset!");
static_assert(offsetof(USquadWidget, _filter) == 0x000360, "Member 'USquadWidget::_filter' has a wrong offset!");
static_assert(offsetof(USquadWidget, _popupWindow) == 0x000368, "Member 'USquadWidget::_popupWindow' has a wrong offset!");
static_assert(offsetof(USquadWidget, _selectMessageWindow) == 0x000370, "Member 'USquadWidget::_selectMessageWindow' has a wrong offset!");
static_assert(offsetof(USquadWidget, _cancelMessageWindow) == 0x000378, "Member 'USquadWidget::_cancelMessageWindow' has a wrong offset!");
static_assert(offsetof(USquadWidget, _blockMessageWindow) == 0x000380, "Member 'USquadWidget::_blockMessageWindow' has a wrong offset!");
static_assert(offsetof(USquadWidget, _cosmosId) == 0x000388, "Member 'USquadWidget::_cosmosId' has a wrong offset!");
static_assert(offsetof(USquadWidget, _invitationId) == 0x000398, "Member 'USquadWidget::_invitationId' has a wrong offset!");
static_assert(offsetof(USquadWidget, _requestSquadInvitation) == 0x0003A8, "Member 'USquadWidget::_requestSquadInvitation' has a wrong offset!");
static_assert(offsetof(USquadWidget, _bDisplaySubLevel) == 0x0003A9, "Member 'USquadWidget::_bDisplaySubLevel' has a wrong offset!");

// Class OutGameModule.StaffRollCell
// 0x00F8 (0x0448 - 0x0350)
class UStaffRollCell : public UWidgetBase
{
public:
	class UStaffRollCellSlot*                     _textCellSlotL;                                    // 0x0350(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaffRollCellSlot*                     _textCellSlotR;                                    // 0x0358(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpacer*                                _slotSpacer;                                       // 0x0360(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpacer*                                _slotLargeSpacer;                                  // 0x0368(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpacer*                                _slotMiddleSpacer;                                 // 0x0370(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpacer*                                _slotSmallSpacer;                                  // 0x0378(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_380[0x8];                                      // 0x0380(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanel*                           _largePanelL;                                      // 0x0388(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _largePanelR;                                      // 0x0390(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _middlePanelL;                                     // 0x0398(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _middlePanelR;                                     // 0x03A0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _smallPanelL;                                      // 0x03A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _smallPanelR;                                      // 0x03B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _scrollSpeedValue;                                 // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isRewind;                                         // 0x03BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3BD[0x3];                                      // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _index;                                            // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetSwitcher*                        _cellSwitcher;                                     // 0x03C8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         _textCellDefault;                                  // 0x03D0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         _textCellLarge;                                    // 0x03D8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         _textCellMiddle;                                   // 0x03E0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         _textCellSmall;                                    // 0x03E8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaffRollCellSlot*                     _textCellDefaultSingle;                            // 0x03F0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _imageCell;                                        // 0x03F8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _textlargeSlotL;                                   // 0x0400(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _textlargeSlotR;                                   // 0x0408(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _textMiddleSlotL;                                  // 0x0410(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _textMiddleSlotR;                                  // 0x0418(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _textSmallSlotL;                                   // 0x0420(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _textSmallSlotR;                                   // 0x0428(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _imageSlotL;                                       // 0x0430(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _imageSlotR;                                       // 0x0438(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimaryAssetStaffrollLogo*             _primaryAssetGashaImage;                           // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	EStaffRollTextType BP_GetTextType();
	void BP_SetUpTextCell(class UStaffRollObject* Obj);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StaffRollCell">();
	}
	static class UStaffRollCell* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStaffRollCell>();
	}
};
static_assert(alignof(UStaffRollCell) == 0x000008, "Wrong alignment on UStaffRollCell");
static_assert(sizeof(UStaffRollCell) == 0x000448, "Wrong size on UStaffRollCell");
static_assert(offsetof(UStaffRollCell, _textCellSlotL) == 0x000350, "Member 'UStaffRollCell::_textCellSlotL' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _textCellSlotR) == 0x000358, "Member 'UStaffRollCell::_textCellSlotR' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _slotSpacer) == 0x000360, "Member 'UStaffRollCell::_slotSpacer' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _slotLargeSpacer) == 0x000368, "Member 'UStaffRollCell::_slotLargeSpacer' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _slotMiddleSpacer) == 0x000370, "Member 'UStaffRollCell::_slotMiddleSpacer' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _slotSmallSpacer) == 0x000378, "Member 'UStaffRollCell::_slotSmallSpacer' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _largePanelL) == 0x000388, "Member 'UStaffRollCell::_largePanelL' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _largePanelR) == 0x000390, "Member 'UStaffRollCell::_largePanelR' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _middlePanelL) == 0x000398, "Member 'UStaffRollCell::_middlePanelL' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _middlePanelR) == 0x0003A0, "Member 'UStaffRollCell::_middlePanelR' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _smallPanelL) == 0x0003A8, "Member 'UStaffRollCell::_smallPanelL' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _smallPanelR) == 0x0003B0, "Member 'UStaffRollCell::_smallPanelR' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _scrollSpeedValue) == 0x0003B8, "Member 'UStaffRollCell::_scrollSpeedValue' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _isRewind) == 0x0003BC, "Member 'UStaffRollCell::_isRewind' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _index) == 0x0003C0, "Member 'UStaffRollCell::_index' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _cellSwitcher) == 0x0003C8, "Member 'UStaffRollCell::_cellSwitcher' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _textCellDefault) == 0x0003D0, "Member 'UStaffRollCell::_textCellDefault' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _textCellLarge) == 0x0003D8, "Member 'UStaffRollCell::_textCellLarge' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _textCellMiddle) == 0x0003E0, "Member 'UStaffRollCell::_textCellMiddle' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _textCellSmall) == 0x0003E8, "Member 'UStaffRollCell::_textCellSmall' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _textCellDefaultSingle) == 0x0003F0, "Member 'UStaffRollCell::_textCellDefaultSingle' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _imageCell) == 0x0003F8, "Member 'UStaffRollCell::_imageCell' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _textlargeSlotL) == 0x000400, "Member 'UStaffRollCell::_textlargeSlotL' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _textlargeSlotR) == 0x000408, "Member 'UStaffRollCell::_textlargeSlotR' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _textMiddleSlotL) == 0x000410, "Member 'UStaffRollCell::_textMiddleSlotL' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _textMiddleSlotR) == 0x000418, "Member 'UStaffRollCell::_textMiddleSlotR' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _textSmallSlotL) == 0x000420, "Member 'UStaffRollCell::_textSmallSlotL' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _textSmallSlotR) == 0x000428, "Member 'UStaffRollCell::_textSmallSlotR' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _imageSlotL) == 0x000430, "Member 'UStaffRollCell::_imageSlotL' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _imageSlotR) == 0x000438, "Member 'UStaffRollCell::_imageSlotR' has a wrong offset!");
static_assert(offsetof(UStaffRollCell, _primaryAssetGashaImage) == 0x000440, "Member 'UStaffRollCell::_primaryAssetGashaImage' has a wrong offset!");

// Class OutGameModule.StaffRollLargeCell
// 0x0010 (0x0458 - 0x0448)
class UStaffRollLargeCell final : public UStaffRollCell
{
public:
	class UTextBlock*                             _cellSlot1;                                        // 0x0448(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             _cellSlot2;                                        // 0x0450(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StaffRollLargeCell">();
	}
	static class UStaffRollLargeCell* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStaffRollLargeCell>();
	}
};
static_assert(alignof(UStaffRollLargeCell) == 0x000008, "Wrong alignment on UStaffRollLargeCell");
static_assert(sizeof(UStaffRollLargeCell) == 0x000458, "Wrong size on UStaffRollLargeCell");
static_assert(offsetof(UStaffRollLargeCell, _cellSlot1) == 0x000448, "Member 'UStaffRollLargeCell::_cellSlot1' has a wrong offset!");
static_assert(offsetof(UStaffRollLargeCell, _cellSlot2) == 0x000450, "Member 'UStaffRollLargeCell::_cellSlot2' has a wrong offset!");

// Class OutGameModule.StaffRollObject
// 0x0020 (0x0048 - 0x0028)
class UStaffRollObject final : public UObject
{
public:
	int32                                         _debugNumber;                                      // 0x0028(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x1C];                                      // 0x002C(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StaffRollObject">();
	}
	static class UStaffRollObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStaffRollObject>();
	}
};
static_assert(alignof(UStaffRollObject) == 0x000008, "Wrong alignment on UStaffRollObject");
static_assert(sizeof(UStaffRollObject) == 0x000048, "Wrong size on UStaffRollObject");
static_assert(offsetof(UStaffRollObject, _debugNumber) == 0x000028, "Member 'UStaffRollObject::_debugNumber' has a wrong offset!");

// Class OutGameModule.StaffRollSubsystem
// 0x0010 (0x0040 - 0x0030)
class UStaffRollSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimaryAssetStaffrollAnimation*        _primaryAssetStaffrollAnimation;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class UMaterial* GetMovieMaterial();
	class UTexture* GetMovieTexture();
	void PrimaryAssetSetUp();
	void SetUpRandomIndex();

	int32 GetPlayIndex() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StaffRollSubsystem">();
	}
	static class UStaffRollSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStaffRollSubsystem>();
	}
};
static_assert(alignof(UStaffRollSubsystem) == 0x000008, "Wrong alignment on UStaffRollSubsystem");
static_assert(sizeof(UStaffRollSubsystem) == 0x000040, "Wrong size on UStaffRollSubsystem");
static_assert(offsetof(UStaffRollSubsystem, _primaryAssetStaffrollAnimation) == 0x000038, "Member 'UStaffRollSubsystem::_primaryAssetStaffrollAnimation' has a wrong offset!");

// Class OutGameModule.StarDetails
// 0x0040 (0x0550 - 0x0510)
class UStarDetails final : public UMissionListItem
{
public:
	class UImage*                                 _grayPanel;                                        // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMissionStarWidgetBase*                 _star;                                             // 0x0518(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconImage*                         _item;                                             // 0x0520(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemIconWidget*                        _itemIcon;                                         // 0x0528(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                _stamp;                                            // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_538[0x18];                                     // 0x0538(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FinishAddStar();
	void OnDecideButton(class UAppWidget* Widget, const struct FKey& Key, const EWidgetInputType InputType);
	void OpenDetailsWindow();

	struct FItemGetListItemParam GetItemParam() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StarDetails">();
	}
	static class UStarDetails* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStarDetails>();
	}
};
static_assert(alignof(UStarDetails) == 0x000008, "Wrong alignment on UStarDetails");
static_assert(sizeof(UStarDetails) == 0x000550, "Wrong size on UStarDetails");
static_assert(offsetof(UStarDetails, _grayPanel) == 0x000510, "Member 'UStarDetails::_grayPanel' has a wrong offset!");
static_assert(offsetof(UStarDetails, _star) == 0x000518, "Member 'UStarDetails::_star' has a wrong offset!");
static_assert(offsetof(UStarDetails, _item) == 0x000520, "Member 'UStarDetails::_item' has a wrong offset!");
static_assert(offsetof(UStarDetails, _itemIcon) == 0x000528, "Member 'UStarDetails::_itemIcon' has a wrong offset!");
static_assert(offsetof(UStarDetails, _stamp) == 0x000530, "Member 'UStarDetails::_stamp' has a wrong offset!");

// Class OutGameModule.StarDetailsObject
// 0x0088 (0x00B0 - 0x0028)
class UStarDetailsObject final : public UObject
{
public:
	uint8                                         Pad_28[0x88];                                      // 0x0028(0x0088)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StarDetailsObject">();
	}
	static class UStarDetailsObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStarDetailsObject>();
	}
};
static_assert(alignof(UStarDetailsObject) == 0x000008, "Wrong alignment on UStarDetailsObject");
static_assert(sizeof(UStarDetailsObject) == 0x0000B0, "Wrong size on UStarDetailsObject");

// Class OutGameModule.StarMissionDetails
// 0x0030 (0x0618 - 0x05E8)
class UStarMissionDetails final : public UMissionDetails
{
public:
	class UImage*                                 _layerBG;                                          // 0x05E8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _magnificationText;                                // 0x05F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMissionStarCountWidget*                _starCount;                                        // 0x05F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   _magnificationTextFormat;                          // 0x0600(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StarMissionDetails">();
	}
	static class UStarMissionDetails* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStarMissionDetails>();
	}
};
static_assert(alignof(UStarMissionDetails) == 0x000008, "Wrong alignment on UStarMissionDetails");
static_assert(sizeof(UStarMissionDetails) == 0x000618, "Wrong size on UStarMissionDetails");
static_assert(offsetof(UStarMissionDetails, _layerBG) == 0x0005E8, "Member 'UStarMissionDetails::_layerBG' has a wrong offset!");
static_assert(offsetof(UStarMissionDetails, _magnificationText) == 0x0005F0, "Member 'UStarMissionDetails::_magnificationText' has a wrong offset!");
static_assert(offsetof(UStarMissionDetails, _starCount) == 0x0005F8, "Member 'UStarMissionDetails::_starCount' has a wrong offset!");
static_assert(offsetof(UStarMissionDetails, _magnificationTextFormat) == 0x000600, "Member 'UStarMissionDetails::_magnificationTextFormat' has a wrong offset!");

// Class OutGameModule.TabContentsInterface
// 0x0000 (0x0028 - 0x0028)
class ITabContentsInterface final : public IInterface
{
public:
	void BP_OnSelect();
	void BP_OnUnSelect();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TabContentsInterface">();
	}
	static class ITabContentsInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<ITabContentsInterface>();
	}
};
static_assert(alignof(ITabContentsInterface) == 0x000008, "Wrong alignment on ITabContentsInterface");
static_assert(sizeof(ITabContentsInterface) == 0x000028, "Wrong size on ITabContentsInterface");

// Class OutGameModule.TabContentsSwitcher
// 0x0008 (0x0140 - 0x0138)
class UTabContentsSwitcher final : public UWidgetSwitcher
{
public:
	uint8                                         Pad_138[0x8];                                      // 0x0138(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TabContentsSwitcher">();
	}
	static class UTabContentsSwitcher* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTabContentsSwitcher>();
	}
};
static_assert(alignof(UTabContentsSwitcher) == 0x000008, "Wrong alignment on UTabContentsSwitcher");
static_assert(sizeof(UTabContentsSwitcher) == 0x000140, "Wrong size on UTabContentsSwitcher");

// Class OutGameModule.TabHeaderWidget
// 0x00B0 (0x0400 - 0x0350)
class UTabHeaderWidget final : public UWidgetBase
{
public:
	struct FSlateColor                            _selectColor;                                      // 0x0350(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                            _unselectColor;                                    // 0x0378(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _tabImageCanvasPanel;                              // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetText*                            _tabName;                                          // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B0[0x18];                                     // 0x03B0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetButton*                          _tabButton;                                        // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _leftIcon;                                         // 0x03D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 _rightIcon;                                        // 0x03D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                _leftIconSpacer;                                   // 0x03E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                _rightIconSpacer;                                  // 0x03E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                _leftSpacer;                                       // 0x03F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                _rightSpacer;                                      // 0x03F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void SetupTabName();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TabHeaderWidget">();
	}
	static class UTabHeaderWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTabHeaderWidget>();
	}
};
static_assert(alignof(UTabHeaderWidget) == 0x000008, "Wrong alignment on UTabHeaderWidget");
static_assert(sizeof(UTabHeaderWidget) == 0x000400, "Wrong size on UTabHeaderWidget");
static_assert(offsetof(UTabHeaderWidget, _selectColor) == 0x000350, "Member 'UTabHeaderWidget::_selectColor' has a wrong offset!");
static_assert(offsetof(UTabHeaderWidget, _unselectColor) == 0x000378, "Member 'UTabHeaderWidget::_unselectColor' has a wrong offset!");
static_assert(offsetof(UTabHeaderWidget, _tabImageCanvasPanel) == 0x0003A0, "Member 'UTabHeaderWidget::_tabImageCanvasPanel' has a wrong offset!");
static_assert(offsetof(UTabHeaderWidget, _tabName) == 0x0003A8, "Member 'UTabHeaderWidget::_tabName' has a wrong offset!");
static_assert(offsetof(UTabHeaderWidget, _tabButton) == 0x0003C8, "Member 'UTabHeaderWidget::_tabButton' has a wrong offset!");
static_assert(offsetof(UTabHeaderWidget, _leftIcon) == 0x0003D0, "Member 'UTabHeaderWidget::_leftIcon' has a wrong offset!");
static_assert(offsetof(UTabHeaderWidget, _rightIcon) == 0x0003D8, "Member 'UTabHeaderWidget::_rightIcon' has a wrong offset!");
static_assert(offsetof(UTabHeaderWidget, _leftIconSpacer) == 0x0003E0, "Member 'UTabHeaderWidget::_leftIconSpacer' has a wrong offset!");
static_assert(offsetof(UTabHeaderWidget, _rightIconSpacer) == 0x0003E8, "Member 'UTabHeaderWidget::_rightIconSpacer' has a wrong offset!");
static_assert(offsetof(UTabHeaderWidget, _leftSpacer) == 0x0003F0, "Member 'UTabHeaderWidget::_leftSpacer' has a wrong offset!");
static_assert(offsetof(UTabHeaderWidget, _rightSpacer) == 0x0003F8, "Member 'UTabHeaderWidget::_rightSpacer' has a wrong offset!");

// Class OutGameModule.TemporaryManageOutGameState
// 0x0000 (0x0030 - 0x0030)
class UTemporaryManageOutGameState final : public UWorldSubsystem
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TemporaryManageOutGameState">();
	}
	static class UTemporaryManageOutGameState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTemporaryManageOutGameState>();
	}
};
static_assert(alignof(UTemporaryManageOutGameState) == 0x000008, "Wrong alignment on UTemporaryManageOutGameState");
static_assert(sizeof(UTemporaryManageOutGameState) == 0x000030, "Wrong size on UTemporaryManageOutGameState");

// Class OutGameModule.TenKey
// 0x00A0 (0x03F0 - 0x0350)
class UTenKey final : public UWidgetBase
{
public:
	FMulticastInlineDelegateProperty_             _decideIdDelegate;                                 // 0x0350(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FString                                 _inputNumber;                                      // 0x0360(0x0010)(BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isRequest;                                        // 0x0370(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _idLengthMax;                                      // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _tenKeyButton1;                                    // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _tenKeyButton2;                                    // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _tenKeyButton3;                                    // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _tenKeyButton4;                                    // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _tenKeyButton5;                                    // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _tenKeyButton6;                                    // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _tenKeyButton7;                                    // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _tenKeyButton8;                                    // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _tenKeyButton9;                                    // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _tenKeyButton0;                                    // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _tenKeyButtonBack;                                 // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _tenKeyButtonDecide;                               // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _inputNumberText;                                  // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UWidgetButton*>                  _keyWidgetList;                                    // 0x03E0(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	void AllClearNumber();
	void BP_BackInput();
	void BP_DecideInput();
	void BP_UpdateButtonEnable();
	void DecideIdDelegate__DelegateSignature(const class FString& Number);
	void FocusButtonNumber(int32 Number);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TenKey">();
	}
	static class UTenKey* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTenKey>();
	}
};
static_assert(alignof(UTenKey) == 0x000008, "Wrong alignment on UTenKey");
static_assert(sizeof(UTenKey) == 0x0003F0, "Wrong size on UTenKey");
static_assert(offsetof(UTenKey, _decideIdDelegate) == 0x000350, "Member 'UTenKey::_decideIdDelegate' has a wrong offset!");
static_assert(offsetof(UTenKey, _inputNumber) == 0x000360, "Member 'UTenKey::_inputNumber' has a wrong offset!");
static_assert(offsetof(UTenKey, _isRequest) == 0x000370, "Member 'UTenKey::_isRequest' has a wrong offset!");
static_assert(offsetof(UTenKey, _idLengthMax) == 0x000374, "Member 'UTenKey::_idLengthMax' has a wrong offset!");
static_assert(offsetof(UTenKey, _tenKeyButton1) == 0x000378, "Member 'UTenKey::_tenKeyButton1' has a wrong offset!");
static_assert(offsetof(UTenKey, _tenKeyButton2) == 0x000380, "Member 'UTenKey::_tenKeyButton2' has a wrong offset!");
static_assert(offsetof(UTenKey, _tenKeyButton3) == 0x000388, "Member 'UTenKey::_tenKeyButton3' has a wrong offset!");
static_assert(offsetof(UTenKey, _tenKeyButton4) == 0x000390, "Member 'UTenKey::_tenKeyButton4' has a wrong offset!");
static_assert(offsetof(UTenKey, _tenKeyButton5) == 0x000398, "Member 'UTenKey::_tenKeyButton5' has a wrong offset!");
static_assert(offsetof(UTenKey, _tenKeyButton6) == 0x0003A0, "Member 'UTenKey::_tenKeyButton6' has a wrong offset!");
static_assert(offsetof(UTenKey, _tenKeyButton7) == 0x0003A8, "Member 'UTenKey::_tenKeyButton7' has a wrong offset!");
static_assert(offsetof(UTenKey, _tenKeyButton8) == 0x0003B0, "Member 'UTenKey::_tenKeyButton8' has a wrong offset!");
static_assert(offsetof(UTenKey, _tenKeyButton9) == 0x0003B8, "Member 'UTenKey::_tenKeyButton9' has a wrong offset!");
static_assert(offsetof(UTenKey, _tenKeyButton0) == 0x0003C0, "Member 'UTenKey::_tenKeyButton0' has a wrong offset!");
static_assert(offsetof(UTenKey, _tenKeyButtonBack) == 0x0003C8, "Member 'UTenKey::_tenKeyButtonBack' has a wrong offset!");
static_assert(offsetof(UTenKey, _tenKeyButtonDecide) == 0x0003D0, "Member 'UTenKey::_tenKeyButtonDecide' has a wrong offset!");
static_assert(offsetof(UTenKey, _inputNumberText) == 0x0003D8, "Member 'UTenKey::_inputNumberText' has a wrong offset!");
static_assert(offsetof(UTenKey, _keyWidgetList) == 0x0003E0, "Member 'UTenKey::_keyWidgetList' has a wrong offset!");

// Class OutGameModule.TermsOfServiceBaseWidget
// 0x00A8 (0x03F8 - 0x0350)
class UTermsOfServiceBaseWidget final : public UWidgetBase
{
public:
	class UScrollBox*                             _scrollBox;                                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   _titleText;                                        // 0x0358(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          _useLanguageSetting;                               // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UWorld>                  _titleLevel;                                       // 0x0378(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetGeneralEmptyWindow*              _emptyWindow;                                      // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _agreeButton;                                      // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _closeButton;                                      // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _disagreeButton;                                   // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _selectionSwitcher;                                // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           _languagePanel;                                    // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _titleTextBlock;                                   // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdjustTextWidget*                      _titleAdjustText;                                  // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USlateWidgetStyleAsset*                 _scrollBarStyleAsset;                              // 0x03E0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3E8[0x10];                                     // 0x03E8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class FName GetCurrentLanguageName();
	class UPrimaryAssetLanguageImage* GetLanguageImageAsset(ELanguageType Type);
	float GetScrollSpeedRate(float AnalogValue, float DefaultSpeedRate, float MasSpeedRate, float AddSpeedRate);
	bool IsOpenSubLevel();
	void OnDebugDecideButtonEvent();
	void OnDecideButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void SetSelectionSwitcher(int32 Index_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TermsOfServiceBaseWidget">();
	}
	static class UTermsOfServiceBaseWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTermsOfServiceBaseWidget>();
	}
};
static_assert(alignof(UTermsOfServiceBaseWidget) == 0x000008, "Wrong alignment on UTermsOfServiceBaseWidget");
static_assert(sizeof(UTermsOfServiceBaseWidget) == 0x0003F8, "Wrong size on UTermsOfServiceBaseWidget");
static_assert(offsetof(UTermsOfServiceBaseWidget, _scrollBox) == 0x000350, "Member 'UTermsOfServiceBaseWidget::_scrollBox' has a wrong offset!");
static_assert(offsetof(UTermsOfServiceBaseWidget, _titleText) == 0x000358, "Member 'UTermsOfServiceBaseWidget::_titleText' has a wrong offset!");
static_assert(offsetof(UTermsOfServiceBaseWidget, _useLanguageSetting) == 0x000370, "Member 'UTermsOfServiceBaseWidget::_useLanguageSetting' has a wrong offset!");
static_assert(offsetof(UTermsOfServiceBaseWidget, _titleLevel) == 0x000378, "Member 'UTermsOfServiceBaseWidget::_titleLevel' has a wrong offset!");
static_assert(offsetof(UTermsOfServiceBaseWidget, _emptyWindow) == 0x0003A0, "Member 'UTermsOfServiceBaseWidget::_emptyWindow' has a wrong offset!");
static_assert(offsetof(UTermsOfServiceBaseWidget, _agreeButton) == 0x0003A8, "Member 'UTermsOfServiceBaseWidget::_agreeButton' has a wrong offset!");
static_assert(offsetof(UTermsOfServiceBaseWidget, _closeButton) == 0x0003B0, "Member 'UTermsOfServiceBaseWidget::_closeButton' has a wrong offset!");
static_assert(offsetof(UTermsOfServiceBaseWidget, _disagreeButton) == 0x0003B8, "Member 'UTermsOfServiceBaseWidget::_disagreeButton' has a wrong offset!");
static_assert(offsetof(UTermsOfServiceBaseWidget, _selectionSwitcher) == 0x0003C0, "Member 'UTermsOfServiceBaseWidget::_selectionSwitcher' has a wrong offset!");
static_assert(offsetof(UTermsOfServiceBaseWidget, _languagePanel) == 0x0003C8, "Member 'UTermsOfServiceBaseWidget::_languagePanel' has a wrong offset!");
static_assert(offsetof(UTermsOfServiceBaseWidget, _titleTextBlock) == 0x0003D0, "Member 'UTermsOfServiceBaseWidget::_titleTextBlock' has a wrong offset!");
static_assert(offsetof(UTermsOfServiceBaseWidget, _titleAdjustText) == 0x0003D8, "Member 'UTermsOfServiceBaseWidget::_titleAdjustText' has a wrong offset!");
static_assert(offsetof(UTermsOfServiceBaseWidget, _scrollBarStyleAsset) == 0x0003E0, "Member 'UTermsOfServiceBaseWidget::_scrollBarStyleAsset' has a wrong offset!");

// Class OutGameModule.TileViewScroll
// 0x0008 (0x0390 - 0x0388)
class UTileViewScroll final : public UTileView
{
public:
	uint8                                         Pad_388[0x8];                                      // 0x0388(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TileViewScroll">();
	}
	static class UTileViewScroll* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTileViewScroll>();
	}
};
static_assert(alignof(UTileViewScroll) == 0x000008, "Wrong alignment on UTileViewScroll");
static_assert(sizeof(UTileViewScroll) == 0x000390, "Wrong size on UTileViewScroll");

// Class OutGameModule.TileViewScrollBarWidget
// 0x0010 (0x0360 - 0x0350)
class UTileViewScrollBarWidget final : public UWidgetBase
{
public:
	class UTileViewScroll*                        _tileView;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetScrollBar*                       _ScrollBar;                                        // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void UpdateScroll(float Num1, float Num2);
	void UpdateWindow();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TileViewScrollBarWidget">();
	}
	static class UTileViewScrollBarWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTileViewScrollBarWidget>();
	}
};
static_assert(alignof(UTileViewScrollBarWidget) == 0x000008, "Wrong alignment on UTileViewScrollBarWidget");
static_assert(sizeof(UTileViewScrollBarWidget) == 0x000360, "Wrong size on UTileViewScrollBarWidget");
static_assert(offsetof(UTileViewScrollBarWidget, _tileView) == 0x000350, "Member 'UTileViewScrollBarWidget::_tileView' has a wrong offset!");
static_assert(offsetof(UTileViewScrollBarWidget, _ScrollBar) == 0x000358, "Member 'UTileViewScrollBarWidget::_ScrollBar' has a wrong offset!");

// Class OutGameModule.TitleInitSettingWidget
// 0x0048 (0x0398 - 0x0350)
class UTitleInitSettingWidget final : public UWidgetBase
{
public:
	class UWidgetGeneralWindow*                   _selectMessageWindow;                              // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _sequenceSwitcher;                                 // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSliderWidget*             _brightness;                                       // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSwitchWidget*             _voiceChat;                                        // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettingButtonSliderWidget*             _debugMasterVolume;                                // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindowFrame*              _brightnessSettingWindow;                          // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _selectVoicechatWindow;                            // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _cautionVoicechatWindow;                           // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_390[0x8];                                      // 0x0390(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	ETitleInitSettingNextLevel GetNextLevel();
	void OnBrightnessSettingWindowClosed();
	void OnBrightnessSettingWindowDecideWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnCautionVoicechatWindowClosed();
	void OnCautionVoicechatWindowDecideWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnClosedWindow();
	void OnCloseLevel();
	void OnDebugAutoPlayWindowOpened();
	void OnDecidePressButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnMasterValueChanged(float Value);
	void OnNativeFadeIn();
	void OnNativeFadeOut();
	void OnSelectVoicechatWindowClosed();
	void OnSelectVoicechatWindowDecideWindow(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void SetBrightnessValue(float Value);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TitleInitSettingWidget">();
	}
	static class UTitleInitSettingWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTitleInitSettingWidget>();
	}
};
static_assert(alignof(UTitleInitSettingWidget) == 0x000008, "Wrong alignment on UTitleInitSettingWidget");
static_assert(sizeof(UTitleInitSettingWidget) == 0x000398, "Wrong size on UTitleInitSettingWidget");
static_assert(offsetof(UTitleInitSettingWidget, _selectMessageWindow) == 0x000350, "Member 'UTitleInitSettingWidget::_selectMessageWindow' has a wrong offset!");
static_assert(offsetof(UTitleInitSettingWidget, _sequenceSwitcher) == 0x000358, "Member 'UTitleInitSettingWidget::_sequenceSwitcher' has a wrong offset!");
static_assert(offsetof(UTitleInitSettingWidget, _brightness) == 0x000360, "Member 'UTitleInitSettingWidget::_brightness' has a wrong offset!");
static_assert(offsetof(UTitleInitSettingWidget, _voiceChat) == 0x000368, "Member 'UTitleInitSettingWidget::_voiceChat' has a wrong offset!");
static_assert(offsetof(UTitleInitSettingWidget, _debugMasterVolume) == 0x000370, "Member 'UTitleInitSettingWidget::_debugMasterVolume' has a wrong offset!");
static_assert(offsetof(UTitleInitSettingWidget, _brightnessSettingWindow) == 0x000378, "Member 'UTitleInitSettingWidget::_brightnessSettingWindow' has a wrong offset!");
static_assert(offsetof(UTitleInitSettingWidget, _selectVoicechatWindow) == 0x000380, "Member 'UTitleInitSettingWidget::_selectVoicechatWindow' has a wrong offset!");
static_assert(offsetof(UTitleInitSettingWidget, _cautionVoicechatWindow) == 0x000388, "Member 'UTitleInitSettingWidget::_cautionVoicechatWindow' has a wrong offset!");

// Class OutGameModule.TitleWidget
// 0x0170 (0x04C0 - 0x0350)
class UTitleWidget : public UWidgetBase
{
public:
	struct FTimerHandle                           _titleVoiceHandle;                                 // 0x0350(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UWorld>                  _termsOfServiceMap;                                // 0x0360(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  _loginBonusMap;                                    // 0x0388(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  _mainMenuMap;                                      // 0x03B0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                        _sequenceSwitcher;                                 // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetButton*                          _pressButton;                                      // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULoadingTitleWidget*                    _loadingTitle;                                     // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _menuButton;                                       // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetGeneralWindow*                   _popupWindowWidget;                                // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetLocalizeLayout*                  _titleButton;                                      // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _logoLightningLoop;                                // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _logoLightningIn;                                  // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _logoLightningLoopEn;                              // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 _logoLightningInEn;                                // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        _logoLightningSwitcher;                            // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                             _titleCallCharacterId;                             // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_438[0x58];                                     // 0x0438(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   _loadingArrangementText;                           // 0x0490(0x0018)(Edit, NativeAccessSpecifierPrivate)
	class FText                                   _loadingDownloadText;                              // 0x04A8(0x0018)(Edit, NativeAccessSpecifierPrivate)

public:
	void CallPressStart();
	void OnAddedToFocusPressButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnClosedPopup();
	void OnDecidePopup(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);
	void OnDecidePressButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnDecideSettingButtonEvent(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnErrorWindowClosedNotReloadTitle();
	void OnLoginFinished(bool LoginCompleted);
	void OnNativeFadeIn();
	void OnNativeFadeOut();
	void OnOPRUserPrivilege();
	void OnPlayableCheckFadeOut();
	void OnPlayTitleCall();
	void OnRemovedFromFocusPressButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnTitleStepInput();
	void OnWaitForLoginEvent();
	void SetFocusPressButton();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TitleWidget">();
	}
	static class UTitleWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTitleWidget>();
	}
};
static_assert(alignof(UTitleWidget) == 0x000008, "Wrong alignment on UTitleWidget");
static_assert(sizeof(UTitleWidget) == 0x0004C0, "Wrong size on UTitleWidget");
static_assert(offsetof(UTitleWidget, _titleVoiceHandle) == 0x000350, "Member 'UTitleWidget::_titleVoiceHandle' has a wrong offset!");
static_assert(offsetof(UTitleWidget, _termsOfServiceMap) == 0x000360, "Member 'UTitleWidget::_termsOfServiceMap' has a wrong offset!");
static_assert(offsetof(UTitleWidget, _loginBonusMap) == 0x000388, "Member 'UTitleWidget::_loginBonusMap' has a wrong offset!");
static_assert(offsetof(UTitleWidget, _mainMenuMap) == 0x0003B0, "Member 'UTitleWidget::_mainMenuMap' has a wrong offset!");
static_assert(offsetof(UTitleWidget, _sequenceSwitcher) == 0x0003D8, "Member 'UTitleWidget::_sequenceSwitcher' has a wrong offset!");
static_assert(offsetof(UTitleWidget, _pressButton) == 0x0003E0, "Member 'UTitleWidget::_pressButton' has a wrong offset!");
static_assert(offsetof(UTitleWidget, _loadingTitle) == 0x0003E8, "Member 'UTitleWidget::_loadingTitle' has a wrong offset!");
static_assert(offsetof(UTitleWidget, _menuButton) == 0x0003F0, "Member 'UTitleWidget::_menuButton' has a wrong offset!");
static_assert(offsetof(UTitleWidget, _popupWindowWidget) == 0x0003F8, "Member 'UTitleWidget::_popupWindowWidget' has a wrong offset!");
static_assert(offsetof(UTitleWidget, _titleButton) == 0x000400, "Member 'UTitleWidget::_titleButton' has a wrong offset!");
static_assert(offsetof(UTitleWidget, _logoLightningLoop) == 0x000408, "Member 'UTitleWidget::_logoLightningLoop' has a wrong offset!");
static_assert(offsetof(UTitleWidget, _logoLightningIn) == 0x000410, "Member 'UTitleWidget::_logoLightningIn' has a wrong offset!");
static_assert(offsetof(UTitleWidget, _logoLightningLoopEn) == 0x000418, "Member 'UTitleWidget::_logoLightningLoopEn' has a wrong offset!");
static_assert(offsetof(UTitleWidget, _logoLightningInEn) == 0x000420, "Member 'UTitleWidget::_logoLightningInEn' has a wrong offset!");
static_assert(offsetof(UTitleWidget, _logoLightningSwitcher) == 0x000428, "Member 'UTitleWidget::_logoLightningSwitcher' has a wrong offset!");
static_assert(offsetof(UTitleWidget, _titleCallCharacterId) == 0x000430, "Member 'UTitleWidget::_titleCallCharacterId' has a wrong offset!");
static_assert(offsetof(UTitleWidget, _loadingArrangementText) == 0x000490, "Member 'UTitleWidget::_loadingArrangementText' has a wrong offset!");
static_assert(offsetof(UTitleWidget, _loadingDownloadText) == 0x0004A8, "Member 'UTitleWidget::_loadingDownloadText' has a wrong offset!");

// Class OutGameModule.TrainingCarouselWidget
// 0x0048 (0x0678 - 0x0630)
class UTrainingCarouselWidget final : public UPlatformWidgetButton
{
public:
	bool                                          _bAvatarCharacter;                                 // 0x0630(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_631[0x7];                                      // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   _categoryText;                                     // 0x0638(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<class FText>                           _messageList;                                      // 0x0650(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          _bLoop;                                            // 0x0660(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_661[0x7];                                      // 0x0661(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnChangeIndexDelegate;                             // 0x0668(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void OnAvatarCharacter(bool bAvatarCharacter);
	void OnAvatarQuirk(const class FText& Message);
	void OnChangedIndexDelegate__DelegateSignature(int32 Index_0);
	void OnSetCategoryName(const class FText& CategoryText);
	void OnSetMessage(const class FText& Message);
	void SetAvatarCharacter(bool bAvatarCharacter);
	void SetChangeIndex(bool bNext);
	void SetIndex(int32 Index_0);

	bool GetAvatarCharacter() const;
	int32 GetIndex() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TrainingCarouselWidget">();
	}
	static class UTrainingCarouselWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrainingCarouselWidget>();
	}
};
static_assert(alignof(UTrainingCarouselWidget) == 0x000008, "Wrong alignment on UTrainingCarouselWidget");
static_assert(sizeof(UTrainingCarouselWidget) == 0x000678, "Wrong size on UTrainingCarouselWidget");
static_assert(offsetof(UTrainingCarouselWidget, _bAvatarCharacter) == 0x000630, "Member 'UTrainingCarouselWidget::_bAvatarCharacter' has a wrong offset!");
static_assert(offsetof(UTrainingCarouselWidget, _categoryText) == 0x000638, "Member 'UTrainingCarouselWidget::_categoryText' has a wrong offset!");
static_assert(offsetof(UTrainingCarouselWidget, _messageList) == 0x000650, "Member 'UTrainingCarouselWidget::_messageList' has a wrong offset!");
static_assert(offsetof(UTrainingCarouselWidget, _bLoop) == 0x000660, "Member 'UTrainingCarouselWidget::_bLoop' has a wrong offset!");
static_assert(offsetof(UTrainingCarouselWidget, OnChangeIndexDelegate) == 0x000668, "Member 'UTrainingCarouselWidget::OnChangeIndexDelegate' has a wrong offset!");

// Class OutGameModule.TrainingCharacterWidget
// 0x00D0 (0x0420 - 0x0350)
class UTrainingCharacterWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x18];                                     // 0x0350(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlatformWidgetButton*                  _characterChangeButton;                            // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharacterSelectCharaButtonWidget*      _characterChangeIcon;                              // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTrainingCarouselWidget*                _aiActionChoices;                                  // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTrainingCarouselWidget*                _technique1LevelChoices;                           // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTrainingCarouselWidget*                _technique2LevelChoices;                           // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTrainingCarouselWidget*                _technique3LevelChoices;                           // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bIsCPUFlag;                                       // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_399[0x3];                                      // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _cpuIndex;                                         // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   _characterChangeText;                              // 0x03A0(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                   _characterMenuText;                                // 0x03B8(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_3D0[0x50];                                     // 0x03D0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnSetCharacterName(const class FText& CharacterName);
	void SetAiActionButton(bool bEnable);
	void SetAiActionIndex(int32 AiActionIndex);
	void SetCharacterData();
	void SetCharacterId(ECharacterId CharacterId, int32 SkillVariationCode);
	void SetEnableCharacterChangeButton(bool bEnable);
	void SetTechniqueEnableButton(bool bEnable);
	void SetUniqueLevel(int32 Technique1Level, int32 Technique2Level, int32 Technique3Level);
	void UpdateChangeCharacter();

	void GetAiActionIndex(int32* AiActionIndex) const;
	void GetCharacterID(ECharacterId* CharacterId, int32* SkillVariationCode) const;
	int32 GetHaveSkillVariation() const;
	void GetUniqueLevel(int32* Technique1Level, int32* Technique2Level, int32* Technique3Level) const;
	bool IsChange() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TrainingCharacterWidget">();
	}
	static class UTrainingCharacterWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrainingCharacterWidget>();
	}
};
static_assert(alignof(UTrainingCharacterWidget) == 0x000008, "Wrong alignment on UTrainingCharacterWidget");
static_assert(sizeof(UTrainingCharacterWidget) == 0x000420, "Wrong size on UTrainingCharacterWidget");
static_assert(offsetof(UTrainingCharacterWidget, _characterChangeButton) == 0x000368, "Member 'UTrainingCharacterWidget::_characterChangeButton' has a wrong offset!");
static_assert(offsetof(UTrainingCharacterWidget, _characterChangeIcon) == 0x000370, "Member 'UTrainingCharacterWidget::_characterChangeIcon' has a wrong offset!");
static_assert(offsetof(UTrainingCharacterWidget, _aiActionChoices) == 0x000378, "Member 'UTrainingCharacterWidget::_aiActionChoices' has a wrong offset!");
static_assert(offsetof(UTrainingCharacterWidget, _technique1LevelChoices) == 0x000380, "Member 'UTrainingCharacterWidget::_technique1LevelChoices' has a wrong offset!");
static_assert(offsetof(UTrainingCharacterWidget, _technique2LevelChoices) == 0x000388, "Member 'UTrainingCharacterWidget::_technique2LevelChoices' has a wrong offset!");
static_assert(offsetof(UTrainingCharacterWidget, _technique3LevelChoices) == 0x000390, "Member 'UTrainingCharacterWidget::_technique3LevelChoices' has a wrong offset!");
static_assert(offsetof(UTrainingCharacterWidget, _bIsCPUFlag) == 0x000398, "Member 'UTrainingCharacterWidget::_bIsCPUFlag' has a wrong offset!");
static_assert(offsetof(UTrainingCharacterWidget, _cpuIndex) == 0x00039C, "Member 'UTrainingCharacterWidget::_cpuIndex' has a wrong offset!");
static_assert(offsetof(UTrainingCharacterWidget, _characterChangeText) == 0x0003A0, "Member 'UTrainingCharacterWidget::_characterChangeText' has a wrong offset!");
static_assert(offsetof(UTrainingCharacterWidget, _characterMenuText) == 0x0003B8, "Member 'UTrainingCharacterWidget::_characterMenuText' has a wrong offset!");

// Class OutGameModule.TutorialIconWidget
// 0x0018 (0x04A0 - 0x0488)
class UTutorialIconWidget final : public UWidgetButton
{
public:
	ETutorialPopupScene                           _popupScene;                                       // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bChackBattleStartSequence;                         // 0x0489(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_48A[0x6];                                      // 0x048A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 _iconImage;                                        // 0x0490(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_498[0x8];                                      // 0x0498(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPressButton(class UAppWidget* Widget, EWidgetInputType InputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TutorialIconWidget">();
	}
	static class UTutorialIconWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialIconWidget>();
	}
};
static_assert(alignof(UTutorialIconWidget) == 0x000008, "Wrong alignment on UTutorialIconWidget");
static_assert(sizeof(UTutorialIconWidget) == 0x0004A0, "Wrong size on UTutorialIconWidget");
static_assert(offsetof(UTutorialIconWidget, _popupScene) == 0x000488, "Member 'UTutorialIconWidget::_popupScene' has a wrong offset!");
static_assert(offsetof(UTutorialIconWidget, bChackBattleStartSequence) == 0x000489, "Member 'UTutorialIconWidget::bChackBattleStartSequence' has a wrong offset!");
static_assert(offsetof(UTutorialIconWidget, _iconImage) == 0x000490, "Member 'UTutorialIconWidget::_iconImage' has a wrong offset!");

// Class OutGameModule.UniformWidthHorizontalBox
// 0x0010 (0x0360 - 0x0350)
class UUniformWidthHorizontalBox final : public UWidgetBase
{
public:
	uint8                                         _max;                                              // 0x0350(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _width;                                            // 0x0354(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         _horizontalBox;                                    // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UniformWidthHorizontalBox">();
	}
	static class UUniformWidthHorizontalBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUniformWidthHorizontalBox>();
	}
};
static_assert(alignof(UUniformWidthHorizontalBox) == 0x000008, "Wrong alignment on UUniformWidthHorizontalBox");
static_assert(sizeof(UUniformWidthHorizontalBox) == 0x000360, "Wrong size on UUniformWidthHorizontalBox");
static_assert(offsetof(UUniformWidthHorizontalBox, _max) == 0x000350, "Member 'UUniformWidthHorizontalBox::_max' has a wrong offset!");
static_assert(offsetof(UUniformWidthHorizontalBox, _width) == 0x000354, "Member 'UUniformWidthHorizontalBox::_width' has a wrong offset!");
static_assert(offsetof(UUniformWidthHorizontalBox, _horizontalBox) == 0x000358, "Member 'UUniformWidthHorizontalBox::_horizontalBox' has a wrong offset!");

// Class OutGameModule.UniformWidthTextHorizontalBox
// 0x0098 (0x03E8 - 0x0350)
class UUniformWidthTextHorizontalBox final : public UWidgetBase
{
public:
	EHorizontalAlignment                          _horizontalAlignment;                              // 0x0350(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 _text;                                             // 0x0358(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _fontColor;                                        // 0x0368(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateFontInfo                         _font;                                             // 0x0378(0x0058)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EUniformWidthType                             _uniformWidthType;                                 // 0x03D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3D1[0x3];                                      // 0x03D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _max;                                              // 0x03D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScaleBox*                              _scaleBox;                                         // 0x03D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E0[0x8];                                      // 0x03E0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UniformWidthTextHorizontalBox">();
	}
	static class UUniformWidthTextHorizontalBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUniformWidthTextHorizontalBox>();
	}
};
static_assert(alignof(UUniformWidthTextHorizontalBox) == 0x000008, "Wrong alignment on UUniformWidthTextHorizontalBox");
static_assert(sizeof(UUniformWidthTextHorizontalBox) == 0x0003E8, "Wrong size on UUniformWidthTextHorizontalBox");
static_assert(offsetof(UUniformWidthTextHorizontalBox, _horizontalAlignment) == 0x000350, "Member 'UUniformWidthTextHorizontalBox::_horizontalAlignment' has a wrong offset!");
static_assert(offsetof(UUniformWidthTextHorizontalBox, _text) == 0x000358, "Member 'UUniformWidthTextHorizontalBox::_text' has a wrong offset!");
static_assert(offsetof(UUniformWidthTextHorizontalBox, _fontColor) == 0x000368, "Member 'UUniformWidthTextHorizontalBox::_fontColor' has a wrong offset!");
static_assert(offsetof(UUniformWidthTextHorizontalBox, _font) == 0x000378, "Member 'UUniformWidthTextHorizontalBox::_font' has a wrong offset!");
static_assert(offsetof(UUniformWidthTextHorizontalBox, _uniformWidthType) == 0x0003D0, "Member 'UUniformWidthTextHorizontalBox::_uniformWidthType' has a wrong offset!");
static_assert(offsetof(UUniformWidthTextHorizontalBox, _max) == 0x0003D4, "Member 'UUniformWidthTextHorizontalBox::_max' has a wrong offset!");
static_assert(offsetof(UUniformWidthTextHorizontalBox, _scaleBox) == 0x0003D8, "Member 'UUniformWidthTextHorizontalBox::_scaleBox' has a wrong offset!");

// Class OutGameModule.UseCurrencySelectItemWidget
// 0x0058 (0x03A8 - 0x0350)
class UUseCurrencySelectItemWidget final : public UWidgetBase
{
public:
	uint8                                         Pad_350[0x8];                                      // 0x0350(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class URichTextBlock*                         _prevImageText;                                    // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _prevNumText;                                      // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         _nextImageText;                                    // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _nextNumText;                                      // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _notEnoughText;                                    // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _windowButton;                                     // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                         _buttonImageText;                                  // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _buttonText;                                       // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTileView*                              _parent;                                           // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUseCurrencySelectItemEntryObject*      _listItem;                                         // 0x03A0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class UWidget* DoTileViewnWidgetNavigation(EUINavigation UiNavigation);
	void OnDecideButton(class UAppWidget* Widget, EWidgetInputType InputType);
	void OnFadeOutEnd();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UseCurrencySelectItemWidget">();
	}
	static class UUseCurrencySelectItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUseCurrencySelectItemWidget>();
	}
};
static_assert(alignof(UUseCurrencySelectItemWidget) == 0x000008, "Wrong alignment on UUseCurrencySelectItemWidget");
static_assert(sizeof(UUseCurrencySelectItemWidget) == 0x0003A8, "Wrong size on UUseCurrencySelectItemWidget");
static_assert(offsetof(UUseCurrencySelectItemWidget, _prevImageText) == 0x000358, "Member 'UUseCurrencySelectItemWidget::_prevImageText' has a wrong offset!");
static_assert(offsetof(UUseCurrencySelectItemWidget, _prevNumText) == 0x000360, "Member 'UUseCurrencySelectItemWidget::_prevNumText' has a wrong offset!");
static_assert(offsetof(UUseCurrencySelectItemWidget, _nextImageText) == 0x000368, "Member 'UUseCurrencySelectItemWidget::_nextImageText' has a wrong offset!");
static_assert(offsetof(UUseCurrencySelectItemWidget, _nextNumText) == 0x000370, "Member 'UUseCurrencySelectItemWidget::_nextNumText' has a wrong offset!");
static_assert(offsetof(UUseCurrencySelectItemWidget, _notEnoughText) == 0x000378, "Member 'UUseCurrencySelectItemWidget::_notEnoughText' has a wrong offset!");
static_assert(offsetof(UUseCurrencySelectItemWidget, _windowButton) == 0x000380, "Member 'UUseCurrencySelectItemWidget::_windowButton' has a wrong offset!");
static_assert(offsetof(UUseCurrencySelectItemWidget, _buttonImageText) == 0x000388, "Member 'UUseCurrencySelectItemWidget::_buttonImageText' has a wrong offset!");
static_assert(offsetof(UUseCurrencySelectItemWidget, _buttonText) == 0x000390, "Member 'UUseCurrencySelectItemWidget::_buttonText' has a wrong offset!");
static_assert(offsetof(UUseCurrencySelectItemWidget, _parent) == 0x000398, "Member 'UUseCurrencySelectItemWidget::_parent' has a wrong offset!");
static_assert(offsetof(UUseCurrencySelectItemWidget, _listItem) == 0x0003A0, "Member 'UUseCurrencySelectItemWidget::_listItem' has a wrong offset!");

// Class OutGameModule.UseCurrencySelectWidget
// 0x0020 (0x0370 - 0x0350)
class UUseCurrencySelectWidget final : public UWidgetBase
{
public:
	class UWidgetGeneralEmptyWindow*              _selectWindow;                                     // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTileView*                              _tileView;                                         // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _backButton;                                       // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlatformWidgetButton*                  _tokushoButton;                                    // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class UWidget* DoBackButtonWidgetNavigation(EUINavigation UiNavigation);
	class UWidget* DoTokushoButtonWidgetNavigation(EUINavigation UiNavigation);
	void OnFocusCancelButton();
	void OnOpenedSelectWindow();
	void OnTokushoButton();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UseCurrencySelectWidget">();
	}
	static class UUseCurrencySelectWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUseCurrencySelectWidget>();
	}
};
static_assert(alignof(UUseCurrencySelectWidget) == 0x000008, "Wrong alignment on UUseCurrencySelectWidget");
static_assert(sizeof(UUseCurrencySelectWidget) == 0x000370, "Wrong size on UUseCurrencySelectWidget");
static_assert(offsetof(UUseCurrencySelectWidget, _selectWindow) == 0x000350, "Member 'UUseCurrencySelectWidget::_selectWindow' has a wrong offset!");
static_assert(offsetof(UUseCurrencySelectWidget, _tileView) == 0x000358, "Member 'UUseCurrencySelectWidget::_tileView' has a wrong offset!");
static_assert(offsetof(UUseCurrencySelectWidget, _backButton) == 0x000360, "Member 'UUseCurrencySelectWidget::_backButton' has a wrong offset!");
static_assert(offsetof(UUseCurrencySelectWidget, _tokushoButton) == 0x000368, "Member 'UUseCurrencySelectWidget::_tokushoButton' has a wrong offset!");

// Class OutGameModule.VersionWindowWidget
// 0x0040 (0x0390 - 0x0350)
class UVersionWindowWidget : public UWidgetBase
{
public:
	class UWidgetGeneralWindowFrame*              _generalWindowFrame;                               // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _applicationVersionText;                           // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _serverVersionText;                                // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _masterVersionText;                                // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             _inquiryCodeText;                                  // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   _defaultText;                                      // 0x0378(0x0018)(Edit, NativeAccessSpecifierPrivate)

public:
	class FText GetApplicationVersionText();
	class FText GetInquiryCodeText();
	class FText GetMasterVersionText();
	class FText GetServerVersionText();
	void OnClose();
	void OnCloseGeneralWindowFrame();
	void OnDecideGeneralWindowFrame(class UAppWidget* Widget, EWidgetInputType InputType, bool LeftButton);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VersionWindowWidget">();
	}
	static class UVersionWindowWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVersionWindowWidget>();
	}
};
static_assert(alignof(UVersionWindowWidget) == 0x000008, "Wrong alignment on UVersionWindowWidget");
static_assert(sizeof(UVersionWindowWidget) == 0x000390, "Wrong size on UVersionWindowWidget");
static_assert(offsetof(UVersionWindowWidget, _generalWindowFrame) == 0x000350, "Member 'UVersionWindowWidget::_generalWindowFrame' has a wrong offset!");
static_assert(offsetof(UVersionWindowWidget, _applicationVersionText) == 0x000358, "Member 'UVersionWindowWidget::_applicationVersionText' has a wrong offset!");
static_assert(offsetof(UVersionWindowWidget, _serverVersionText) == 0x000360, "Member 'UVersionWindowWidget::_serverVersionText' has a wrong offset!");
static_assert(offsetof(UVersionWindowWidget, _masterVersionText) == 0x000368, "Member 'UVersionWindowWidget::_masterVersionText' has a wrong offset!");
static_assert(offsetof(UVersionWindowWidget, _inquiryCodeText) == 0x000370, "Member 'UVersionWindowWidget::_inquiryCodeText' has a wrong offset!");
static_assert(offsetof(UVersionWindowWidget, _defaultText) == 0x000378, "Member 'UVersionWindowWidget::_defaultText' has a wrong offset!");

// Class OutGameModule.WidgetGeneralTabWindow
// 0x0028 (0x05C0 - 0x0598)
class UWidgetGeneralTabWindow final : public UWidgetGeneralWindow
{
public:
	TArray<struct FTabInfo>                       _tabs;                                             // 0x0598(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UWidgetSwitcher*>                _tabContents;                                      // 0x05A8(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UTabWidget*                             _tabWidget;                                        // 0x05B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WidgetGeneralTabWindow">();
	}
	static class UWidgetGeneralTabWindow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidgetGeneralTabWindow>();
	}
};
static_assert(alignof(UWidgetGeneralTabWindow) == 0x000008, "Wrong alignment on UWidgetGeneralTabWindow");
static_assert(sizeof(UWidgetGeneralTabWindow) == 0x0005C0, "Wrong size on UWidgetGeneralTabWindow");
static_assert(offsetof(UWidgetGeneralTabWindow, _tabs) == 0x000598, "Member 'UWidgetGeneralTabWindow::_tabs' has a wrong offset!");
static_assert(offsetof(UWidgetGeneralTabWindow, _tabContents) == 0x0005A8, "Member 'UWidgetGeneralTabWindow::_tabContents' has a wrong offset!");
static_assert(offsetof(UWidgetGeneralTabWindow, _tabWidget) == 0x0005B8, "Member 'UWidgetGeneralTabWindow::_tabWidget' has a wrong offset!");

}

