#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GeneralWindowFrame

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UIFramework_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_GeneralWindowFrame.WBP_GeneralWindowFrame_C
// 0x0098 (0x0648 - 0x05B0)
class UWBP_GeneralWindowFrame_C final : public UWidgetGeneralWindowFrame
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Ani_out;                                           // 0x05B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Ani_Idle;                                          // 0x05C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Ani_in;                                            // 0x05C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BlockBG;                                           // 0x05D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Black;                                       // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_155;                                   // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USoundAtomCue*                          OneButtonPressOverride;                            // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          LeftButtonPressOverride;                           // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          RightButtonPressOverride;                          // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          RightButtonFocusOverride;                          // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          RightButtonShortcutOverride;                       // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          RightButtonNegativeOverride;                       // 0x0610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          LeftButtonFocusOverride;                           // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          LeftButtonShortcutOverride;                        // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          LeftButtonNegativeOverride;                        // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          OneButtonFocusOverride;                            // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          OneButtonShortcutOverride;                         // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          OneButtonNegativeOverride;                         // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_GeneralWindowFrame(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void OnClose();
	void OnOpen();
	struct FEventReply On_BlockBG_MouseButtonDown_0(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void PreConstructSE();
	void SetOverridePressAtomCue(class USoundAtomCue* OverrideAtomCue, class UWidgetButton* Button);
	void SetOverrideFocusAtomCue(class USoundAtomCue* OverrideAtomCue, class UWidgetButton* Button);
	void SetOverrideShortcutAtomCue(class USoundAtomCue* OverrideAtomCue, class UWidgetButton* Button);
	void SetOverrideNegativeAtomCue(class USoundAtomCue* OverrideAtomCue, class UWidgetButton* Button);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_GeneralWindowFrame_C">();
	}
	static class UWBP_GeneralWindowFrame_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_GeneralWindowFrame_C>();
	}
};
static_assert(alignof(UWBP_GeneralWindowFrame_C) == 0x000008, "Wrong alignment on UWBP_GeneralWindowFrame_C");
static_assert(sizeof(UWBP_GeneralWindowFrame_C) == 0x000648, "Wrong size on UWBP_GeneralWindowFrame_C");
static_assert(offsetof(UWBP_GeneralWindowFrame_C, UberGraphFrame) == 0x0005B0, "Member 'UWBP_GeneralWindowFrame_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_GeneralWindowFrame_C, Ani_out) == 0x0005B8, "Member 'UWBP_GeneralWindowFrame_C::Ani_out' has a wrong offset!");
static_assert(offsetof(UWBP_GeneralWindowFrame_C, Ani_Idle) == 0x0005C0, "Member 'UWBP_GeneralWindowFrame_C::Ani_Idle' has a wrong offset!");
static_assert(offsetof(UWBP_GeneralWindowFrame_C, Ani_in) == 0x0005C8, "Member 'UWBP_GeneralWindowFrame_C::Ani_in' has a wrong offset!");
static_assert(offsetof(UWBP_GeneralWindowFrame_C, BlockBG) == 0x0005D0, "Member 'UWBP_GeneralWindowFrame_C::BlockBG' has a wrong offset!");
static_assert(offsetof(UWBP_GeneralWindowFrame_C, Image_Black) == 0x0005D8, "Member 'UWBP_GeneralWindowFrame_C::Image_Black' has a wrong offset!");
static_assert(offsetof(UWBP_GeneralWindowFrame_C, VerticalBox_155) == 0x0005E0, "Member 'UWBP_GeneralWindowFrame_C::VerticalBox_155' has a wrong offset!");
static_assert(offsetof(UWBP_GeneralWindowFrame_C, OneButtonPressOverride) == 0x0005E8, "Member 'UWBP_GeneralWindowFrame_C::OneButtonPressOverride' has a wrong offset!");
static_assert(offsetof(UWBP_GeneralWindowFrame_C, LeftButtonPressOverride) == 0x0005F0, "Member 'UWBP_GeneralWindowFrame_C::LeftButtonPressOverride' has a wrong offset!");
static_assert(offsetof(UWBP_GeneralWindowFrame_C, RightButtonPressOverride) == 0x0005F8, "Member 'UWBP_GeneralWindowFrame_C::RightButtonPressOverride' has a wrong offset!");
static_assert(offsetof(UWBP_GeneralWindowFrame_C, RightButtonFocusOverride) == 0x000600, "Member 'UWBP_GeneralWindowFrame_C::RightButtonFocusOverride' has a wrong offset!");
static_assert(offsetof(UWBP_GeneralWindowFrame_C, RightButtonShortcutOverride) == 0x000608, "Member 'UWBP_GeneralWindowFrame_C::RightButtonShortcutOverride' has a wrong offset!");
static_assert(offsetof(UWBP_GeneralWindowFrame_C, RightButtonNegativeOverride) == 0x000610, "Member 'UWBP_GeneralWindowFrame_C::RightButtonNegativeOverride' has a wrong offset!");
static_assert(offsetof(UWBP_GeneralWindowFrame_C, LeftButtonFocusOverride) == 0x000618, "Member 'UWBP_GeneralWindowFrame_C::LeftButtonFocusOverride' has a wrong offset!");
static_assert(offsetof(UWBP_GeneralWindowFrame_C, LeftButtonShortcutOverride) == 0x000620, "Member 'UWBP_GeneralWindowFrame_C::LeftButtonShortcutOverride' has a wrong offset!");
static_assert(offsetof(UWBP_GeneralWindowFrame_C, LeftButtonNegativeOverride) == 0x000628, "Member 'UWBP_GeneralWindowFrame_C::LeftButtonNegativeOverride' has a wrong offset!");
static_assert(offsetof(UWBP_GeneralWindowFrame_C, OneButtonFocusOverride) == 0x000630, "Member 'UWBP_GeneralWindowFrame_C::OneButtonFocusOverride' has a wrong offset!");
static_assert(offsetof(UWBP_GeneralWindowFrame_C, OneButtonShortcutOverride) == 0x000638, "Member 'UWBP_GeneralWindowFrame_C::OneButtonShortcutOverride' has a wrong offset!");
static_assert(offsetof(UWBP_GeneralWindowFrame_C, OneButtonNegativeOverride) == 0x000640, "Member 'UWBP_GeneralWindowFrame_C::OneButtonNegativeOverride' has a wrong offset!");

}

