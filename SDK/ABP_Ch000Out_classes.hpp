#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Ch000Out

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "GameModule_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Ch000Out.ABP_Ch000Out_C
// 0x0C30 (0x1090 - 0x0460)
class UABP_Ch000Out_C final : public UAnimInstanceGame
{
public:
	uint8                                         Pad_458[0x8];                                      // 0x0458(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0468(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x0498(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x04E0(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0560(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x05A8(0x00C0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0668(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x06E8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0768(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x07E8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0868(0x0080)()
	struct FAnimNode_MultiWayBlend                AnimGraphNode_MultiWayBlend;                       // 0x08E8(0x0050)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0938(0x00C0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x09F8(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0A78(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0AC0(0x0080)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0B40(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0C98(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0CC0(0x0028)()
	uint8                                         Pad_CE8[0x8];                                      // 0x0CE8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt_1;                            // 0x0CF0(0x01B0)()
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt;                              // 0x0EA0(0x01B0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1050(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1070(0x0020)()

public:
	void ExecuteUbergraph_ABP_Ch000Out(int32 EntryPoint);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Ch000Out_C">();
	}
	static class UABP_Ch000Out_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Ch000Out_C>();
	}
};
static_assert(alignof(UABP_Ch000Out_C) == 0x000010, "Wrong alignment on UABP_Ch000Out_C");
static_assert(sizeof(UABP_Ch000Out_C) == 0x001090, "Wrong size on UABP_Ch000Out_C");
static_assert(offsetof(UABP_Ch000Out_C, UberGraphFrame) == 0x000460, "Member 'UABP_Ch000Out_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_Root) == 0x000468, "Member 'UABP_Ch000Out_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_Slot_2) == 0x000498, "Member 'UABP_Ch000Out_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_SequencePlayer_7) == 0x0004E0, "Member 'UABP_Ch000Out_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_Slot_1) == 0x000560, "Member 'UABP_Ch000Out_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0005A8, "Member 'UABP_Ch000Out_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_SequencePlayer_6) == 0x000668, "Member 'UABP_Ch000Out_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_SequencePlayer_5) == 0x0006E8, "Member 'UABP_Ch000Out_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_SequencePlayer_4) == 0x000768, "Member 'UABP_Ch000Out_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_SequencePlayer_3) == 0x0007E8, "Member 'UABP_Ch000Out_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_SequencePlayer_2) == 0x000868, "Member 'UABP_Ch000Out_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_MultiWayBlend) == 0x0008E8, "Member 'UABP_Ch000Out_C::AnimGraphNode_MultiWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_LayeredBoneBlend) == 0x000938, "Member 'UABP_Ch000Out_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_SequencePlayer_1) == 0x0009F8, "Member 'UABP_Ch000Out_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_Slot) == 0x000A78, "Member 'UABP_Ch000Out_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_SequencePlayer) == 0x000AC0, "Member 'UABP_Ch000Out_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_SaveCachedPose) == 0x000B40, "Member 'UABP_Ch000Out_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_UseCachedPose_1) == 0x000C98, "Member 'UABP_Ch000Out_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_UseCachedPose) == 0x000CC0, "Member 'UABP_Ch000Out_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_LookAt_1) == 0x000CF0, "Member 'UABP_Ch000Out_C::AnimGraphNode_LookAt_1' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_LookAt) == 0x000EA0, "Member 'UABP_Ch000Out_C::AnimGraphNode_LookAt' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_ComponentToLocalSpace) == 0x001050, "Member 'UABP_Ch000Out_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Ch000Out_C, AnimGraphNode_LocalToComponentSpace) == 0x001070, "Member 'UABP_Ch000Out_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");

}

