#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_FocusAnimationListItem

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "UIFramework_structs.hpp"


namespace SDK::Params
{

// Function WBP_FocusAnimationListItem.WBP_FocusAnimationListItem_C.ExecuteUbergraph_WBP_FocusAnimationListItem
// 0x0060 (0x0060 - 0x0000)
struct WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UAppWidget* Widget, EWidgetInputType InputType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 K2Node_CustomEvent__focusTop;                      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 K2Node_CustomEvent__focusWhite;                    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_CustomEvent_visibility;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAppWidget*                             K2Node_CustomEvent_Widget;                         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWidgetInputType                              K2Node_CustomEvent_inputType;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAppWidget*                             K2Node_DynamicCast_AsApp_Widget;                   // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem) == 0x000008, "Wrong alignment on WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem");
static_assert(sizeof(WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem) == 0x000060, "Wrong size on WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem");
static_assert(offsetof(WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem, EntryPoint) == 0x000000, "Member 'WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem, Temp_bool_IsClosed_Variable) == 0x000018, "Member 'WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem, K2Node_CustomEvent__focusTop) == 0x000020, "Member 'WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem::K2Node_CustomEvent__focusTop' has a wrong offset!");
static_assert(offsetof(WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem, CallFunc_HasAnyUserFocus_ReturnValue) == 0x000028, "Member 'WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem::CallFunc_HasAnyUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem, K2Node_CustomEvent__focusWhite) == 0x000030, "Member 'WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem::K2Node_CustomEvent__focusWhite' has a wrong offset!");
static_assert(offsetof(WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem, K2Node_CustomEvent_visibility) == 0x000038, "Member 'WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem::K2Node_CustomEvent_visibility' has a wrong offset!");
static_assert(offsetof(WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem, K2Node_CustomEvent_Widget) == 0x000040, "Member 'WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem::K2Node_CustomEvent_Widget' has a wrong offset!");
static_assert(offsetof(WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem, K2Node_CustomEvent_inputType) == 0x000048, "Member 'WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem::K2Node_CustomEvent_inputType' has a wrong offset!");
static_assert(offsetof(WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem, K2Node_DynamicCast_AsApp_Widget) == 0x000050, "Member 'WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem::K2Node_DynamicCast_AsApp_Widget' has a wrong offset!");
static_assert(offsetof(WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_FocusAnimationListItem_C_ExecuteUbergraph_WBP_FocusAnimationListItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_FocusAnimationListItem.WBP_FocusAnimationListItem_C.OnRemovedFromFocusDelegate
// 0x0010 (0x0010 - 0x0000)
struct WBP_FocusAnimationListItem_C_OnRemovedFromFocusDelegate final
{
public:
	class UAppWidget*                             Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWidgetInputType                              InputType;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FocusAnimationListItem_C_OnRemovedFromFocusDelegate) == 0x000008, "Wrong alignment on WBP_FocusAnimationListItem_C_OnRemovedFromFocusDelegate");
static_assert(sizeof(WBP_FocusAnimationListItem_C_OnRemovedFromFocusDelegate) == 0x000010, "Wrong size on WBP_FocusAnimationListItem_C_OnRemovedFromFocusDelegate");
static_assert(offsetof(WBP_FocusAnimationListItem_C_OnRemovedFromFocusDelegate, Widget) == 0x000000, "Member 'WBP_FocusAnimationListItem_C_OnRemovedFromFocusDelegate::Widget' has a wrong offset!");
static_assert(offsetof(WBP_FocusAnimationListItem_C_OnRemovedFromFocusDelegate, InputType) == 0x000008, "Member 'WBP_FocusAnimationListItem_C_OnRemovedFromFocusDelegate::InputType' has a wrong offset!");

// Function WBP_FocusAnimationListItem.WBP_FocusAnimationListItem_C.UpdateFocusWhite
// 0x0010 (0x0010 - 0x0000)
struct WBP_FocusAnimationListItem_C_UpdateFocusWhite final
{
public:
	class UImage*                                 _focusWhite_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Visibility_0;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FocusAnimationListItem_C_UpdateFocusWhite) == 0x000008, "Wrong alignment on WBP_FocusAnimationListItem_C_UpdateFocusWhite");
static_assert(sizeof(WBP_FocusAnimationListItem_C_UpdateFocusWhite) == 0x000010, "Wrong size on WBP_FocusAnimationListItem_C_UpdateFocusWhite");
static_assert(offsetof(WBP_FocusAnimationListItem_C_UpdateFocusWhite, _focusWhite_0) == 0x000000, "Member 'WBP_FocusAnimationListItem_C_UpdateFocusWhite::_focusWhite_0' has a wrong offset!");
static_assert(offsetof(WBP_FocusAnimationListItem_C_UpdateFocusWhite, Visibility_0) == 0x000008, "Member 'WBP_FocusAnimationListItem_C_UpdateFocusWhite::Visibility_0' has a wrong offset!");

// Function WBP_FocusAnimationListItem.WBP_FocusAnimationListItem_C.UpdateFocusTop
// 0x0008 (0x0008 - 0x0000)
struct WBP_FocusAnimationListItem_C_UpdateFocusTop final
{
public:
	class UImage*                                 _focusTop_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FocusAnimationListItem_C_UpdateFocusTop) == 0x000008, "Wrong alignment on WBP_FocusAnimationListItem_C_UpdateFocusTop");
static_assert(sizeof(WBP_FocusAnimationListItem_C_UpdateFocusTop) == 0x000008, "Wrong size on WBP_FocusAnimationListItem_C_UpdateFocusTop");
static_assert(offsetof(WBP_FocusAnimationListItem_C_UpdateFocusTop, _focusTop_0) == 0x000000, "Member 'WBP_FocusAnimationListItem_C_UpdateFocusTop::_focusTop_0' has a wrong offset!");

// Function WBP_FocusAnimationListItem.WBP_FocusAnimationListItem_C.SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_0
// 0x0008 (0x0008 - 0x0000)
struct WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_0 final
{
public:
	class UImage*                                 _focusTop_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_0) == 0x000008, "Wrong alignment on WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_0");
static_assert(sizeof(WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_0) == 0x000008, "Wrong size on WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_0");
static_assert(offsetof(WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_0, _focusTop_0) == 0x000000, "Member 'WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_0::_focusTop_0' has a wrong offset!");

// Function WBP_FocusAnimationListItem.WBP_FocusAnimationListItem_C.SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_1
// 0x0008 (0x0008 - 0x0000)
struct WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_1 final
{
public:
	class UImage*                                 _focusTop_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_1) == 0x000008, "Wrong alignment on WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_1");
static_assert(sizeof(WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_1) == 0x000008, "Wrong size on WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_1");
static_assert(offsetof(WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_1, _focusTop_0) == 0x000000, "Member 'WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_1::_focusTop_0' has a wrong offset!");

// Function WBP_FocusAnimationListItem.WBP_FocusAnimationListItem_C.SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_2
// 0x0008 (0x0008 - 0x0000)
struct WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_2 final
{
public:
	class UImage*                                 _focusTop_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_2) == 0x000008, "Wrong alignment on WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_2");
static_assert(sizeof(WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_2) == 0x000008, "Wrong size on WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_2");
static_assert(offsetof(WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_2, _focusTop_0) == 0x000000, "Member 'WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_2::_focusTop_0' has a wrong offset!");

// Function WBP_FocusAnimationListItem.WBP_FocusAnimationListItem_C.SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_3
// 0x0008 (0x0008 - 0x0000)
struct WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_3 final
{
public:
	class UImage*                                 _focusWhite_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_3) == 0x000008, "Wrong alignment on WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_3");
static_assert(sizeof(WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_3) == 0x000008, "Wrong size on WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_3");
static_assert(offsetof(WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_3, _focusWhite_0) == 0x000000, "Member 'WBP_FocusAnimationListItem_C_SequenceEvent__ENTRYPOINTWBP_FocusAnimationListItem_3::_focusWhite_0' has a wrong offset!");

}

